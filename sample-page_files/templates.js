this["JST"] = this["JST"] || {};

this["JST"]["admin/customerrps/customer/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div style="text-align: center;"><h3>Customer Details</h3></div>\n<div id="customer">\n    <ul class="arrows">\n        <li><strong>Name</strong>: ' +
__e( name );
 if (accountingReference) { ;
__p += ' (<strong>' +
__e( accountingReference ) +
'</strong>) ';
 } ;
__p += '</li>\n        <li><strong>Contact Person</strong>: ' +
__e( contactName ) +
'</li>\n        <li><strong>Address</strong>: ';
 if (primaryBillingAddress) { ;
__p +=
__e( primaryBillingAddress.displayLabel );
 } else { ;
__p += ' None ';
 } ;
__p += ' </li>\n        <li><strong>Contact</strong>: ';
 if (primaryNumber) { ;
__p +=
__e( primaryNumber.parsedNumber );
 } else { ;
__p += ' None ';
 } ;
__p += ' </li>\n        <li><strong>Email</strong>: ';
 if (primaryEmail) { ;
__p +=
__e( primaryEmail.emailAddress );
 } else { ;
__p += ' None ';
 } ;
__p += '</li>\n    </ul>\n</div>\n<div style="text-align: center;"><h3>Associated Rate Plans</h3></div>\n<div id="ratePlanList">\n\n</div>\n<!--\n<div style="text-align: center;"><h3>All Rate Plans</h3></div>\n<div id="ratePlan">\n    Historic Rate Plan\n</div>\n-->\n';

}
return __p
};

this["JST"]["admin/customerrps/customerlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- customerFilter Class Name is used in View.js to filter active customers only -->\n<input type="text" class="span12 customerFilter" id="filter" placeholder="Search customers"/>\n<ul id="customers-list" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/customerrps/customerlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p +=
__e( name );
 if (accountingReference) { ;
__p += ' (<strong>' +
__e( accountingReference ) +
'</strong>) ';
 } ;
__p += '</li>\n';

}
return __p
};

this["JST"]["admin/customerrps/customerrateplan/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<li>\n    ' +
__e( customer.name ) +
'\n    (<strong>Start Date:</strong> ' +
__e( activeStartDate ? activeStartDate : 'N/A' ) +
' - <strong>End Date:</strong> ' +
__e( activeEndDate ? activeEndDate : 'N/A' ) +
')\n    ';
 if(ratePlan.override === true) {;
__p += '\n    (Rate Plan overrides cannot be cleared)\n    ';
 } else {;
__p += '\n    <span id="controls">\n        <a class="clearCustomer" href="javascript:void(0);" title="Delete"><i class="icon icon-trash"></i></a>\n        <a class="editRatePlan" href="javascript:void(0);" title="Edit"><i class="icon icon-pencil"></i></a>\n    </span>\n    ';
 } ;
__p += '\n</li>\n';

}
return __p
};

this["JST"]["admin/customerrps/customerrateplanlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!--List of customers go here-->\n<ul id="rateplans">\n</ul>\n';

}
return __p
};

this["JST"]["admin/customerrps/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span3">\n        <div id="rate-plan-control">\n        </div>\n    </div>\n\n    <div class="span6">\n        <div id="details-panel">\n            <div style="text-align: center;"><h3>Select a Customer or Rate Plan</h3></div>\n        </div>\n    </div>\n\n    <div class="span3">\n        <div id="customer-control">\n        </div>\n    </div>\n\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["admin/customerrps/rateplan/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div style="text-align: center;"><h3>Rate Plan Details</h3></div>\n<div id="ratePlan">\n    <ul class="arrows">\n        <li><strong>Name</strong>: ' +
__e( name ) +
' ';
 if (defaultRatePlan) { ;
__p += ' (<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span><strong>DEFAULT RATE PLAN</strong>) ';
 } ;
__p += '</li>\n        <li><strong>Contact</strong>: ' +
__e( description ) +
'</li>\n        <li><strong>Created By</strong>: ' +
__e( createdBy ) +
' (' +
__e( createdDate ) +
')</li>\n        <li><strong>Modified By</strong>: ' +
__e( lastModifiedBy ) +
' (' +
__e( lastModifiedDate ) +
')</li>\n    </ul>\n    <div class="accordion-group">\n        <div class="accordion-heading">\n            <a class="accordion-toggle" data-toggle="collapse" data-target="#rateplanSummary">\n                Rate Plan Summary\n            </a>\n        </div>\n        <div id="rateplanSummary" class="accordion-body collapse">\n            <div class="accordion-inner rateplan-summary">\n            </div>\n        </div>\n    </div>\n</div>\n\n</div>\n<div style="text-align: center;">\n    <h3>Rate Plan in Use By</h3>\n    <div>Customers not shown for Default Rate Plan(s)</div>\n</div>\n<div id="customerList">\n\n</div>\n<div class="pagination">\n    <ul>\n        <li class="previous_c"><a href="#">Prev</a></li>\n        <li class="next_c"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/customerrps/rateplancustomer/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<li>\n    ' +
__e( ratePlan.name ) +
'\n    (<strong>Start Date:</strong> ' +
__e( activeStartDate ? activeStartDate : 'N/A' ) +
' - <strong>End Date:</strong> ' +
__e( activeEndDate ? activeEndDate : 'N/A' ) +
')\n    ';
 if(ratePlan.override === true) {;
__p += '\n    (Rate Plan overrides cannot be cleared)\n    ';
 } else {;
__p += '\n    <span id="controls">\n        <a class="clearRatePlan" href="javascript:void(0);" title="Delete"><i class="icon icon-trash"></i></a>\n        <a class="editRatePlan" href="javascript:void(0);" title="Edit"><i class="icon icon-pencil"></i></a>\n    </span>\n    ';
 } ;
__p += '\n</li>\n';

}
return __p
};

this["JST"]["admin/customerrps/rateplancustomerlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!--List of customers go here-->\n<ul id="customers">\n</ul>\n';

}
return __p
};

this["JST"]["admin/customerrps/rateplanlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12" type="text" id="filter" placeholder="Search rate plans" />\n<ul id="rate-plans" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/customerrps/rateplanlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (defaultRatePlan) { ;
__p += '<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span>';
 } ;
__p +=
__e( name ) +
' (' +
__e( description ) +
')\n';

}
return __p
};

this["JST"]["admin/customerrzs/customer/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div style="text-align: center;"><h3>Customer Details</h3></div>\n<div id="customer">\n    <ul class="arrows">\n        <li><strong>Name</strong>: ' +
__e( name );
 if (accountingReference) { ;
__p += ' (<strong>' +
__e( accountingReference ) +
'</strong>) ';
 } ;
__p += '</li>\n        <li><strong>Contact Person</strong>: ' +
__e( contactName ) +
'</li>\n        <li><strong>Address</strong>: ';
 if (primaryBillingAddress) { ;
__p +=
__e( primaryBillingAddress.displayLabel );
 } else { ;
__p += ' None ';
 } ;
__p += ' </li>\n        <li><strong>Contact</strong>: ';
 if (primaryNumber) { ;
__p +=
__e( primaryNumber.parsedNumber );
 } else { ;
__p += ' None ';
 } ;
__p += ' </li>\n        <li><strong>Email</strong>: ';
 if (primaryEmail) { ;
__p +=
__e( primaryEmail.emailAddress );
 } else { ;
__p += ' None ';
 } ;
__p += '</li>\n    </ul>\n</div>\n<div style="text-align: center;"><h3>Applicable Rate Zone</h3></div>\n<div id="currentRateZone">\n\n</div>\n<!--\n<div style="text-align: center;"><h3>All Rate Zones</h3></div>\n<div id="rateZone">\n    Historic Rate Zones\n</div>\n-->\n';

}
return __p
};

this["JST"]["admin/customerrzs/customerlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- customerFilter Class Name is used in View.js to filter active customers only -->\n<input type="text" class="customerFilter" id="filter" placeholder="Search customers"/>\n<ul id="customers" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/customerrzs/customerlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p +=
__e( name );
 if (accountingReference) { ;
__p += ' (<strong>' +
__e( accountingReference ) +
'</strong>) ';
 } ;
__p += '</li>\n';

}
return __p
};

this["JST"]["admin/customerrzs/customerratezone/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<li><!-- ' +
__e( id ) +
' -->' +
__e( customer.name );
 if (customer.accountingReference) { ;
__p += ' (<strong>' +
__e( customer.accountingReference ) +
'</strong>) ';
 } ;
__p += '<a class="clearCustomer" href="javascript:void(0);" title="Use Default"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Clear (Use Default)</a></li>\n';

}
return __p
};

this["JST"]["admin/customerrzs/customerratezonelist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!--List of customers go here-->\n<ul id="customers">\n</ul>\n';

}
return __p
};

this["JST"]["admin/customerrzs/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span3">\n        <h3>Rate Zone Groupings</h3>\n        <div id="rate-zone-control">\n        </div>\n    </div>\n\n    <div class="span6">\n        <div id="details-panel">\n            <div style="text-align: center;"><h3>Select a Rate Zone or a Customer</h3></div>\n        </div>\n    </div>\n\n    <div class="span3">\n        <h3>Customers</h3>\n        <div id="customer-control">\n        </div>\n    </div>\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["admin/customerrzs/ratezonecustomer/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="rateZone">\n    ';
 if (!rateZoneGroup.defaultGroup) { ;
__p += '\n    <div style="text-align: center; margin-bottom: 15px;">\n        <a id="clearRateZone" href="javascript:void(0);" title="Use Default"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Clear Rate Zone (Use Default Rate Zone)</a>\n    </div>\n    ';
 } ;
__p += '\n\n    <ul class="arrows">\n        <li><strong>Name</strong>: ' +
__e( rateZoneGroup.name ) +
' ';
 if (rateZoneGroup.defaultGroup) { ;
__p += ' (<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span><strong>DEFAULT RATE ZONE</strong>) ';
 } ;
__p += '</li>\n        <li><strong>Description</strong>: ' +
__e( rateZoneGroup.description ) +
'</li>\n        <li><strong>Created By</strong>: ' +
__e( rateZoneGroup.createdBy ) +
' (' +
__e( rateZoneGroup.createdDate ) +
')</li>\n        <li><strong>Modified By</strong>: ' +
__e( rateZoneGroup.lastModifiedBy ) +
' (' +
__e( rateZoneGroup.lastModifiedDate ) +
')</li>\n    </ul>\n    <h4>Rate Zone Summary</h4>\n    <dl>\n        ';
 _.each(rateZoneGroup.zones, function(zone) { ;
__p += '\n\n            <dt>' +
__e( zone.name ) +
'</dt>\n            <dd>\n                ' +
__e( zone.description ) +
'\n                <ul class="arrows">\n\n                    ';
 _.each(zone.segments, function(segment) { ;
__p += '\n                    <li><strong>Day: </strong>\n\n                        ';
 if (segment.date) { ;
__p += '\n                        ' +
__e( segment.date ) +
'\n                        ';
 } else { ;
__p += '\n                        ' +
__e( getStatusAttributeById(App.dict.day, segment['day.id'], 'name') + "(s)" ) +
'\n                        ';
 } ;
__p += '\n\n                        - <strong>Time: </strong>\n\n                        ';
 if (segment.allDay) { ;
__p += '\n                        All Day\n                        ';
 } else { ;
__p += '\n                        ' +
__e( segment.startHour + ":" + segment.startMinute + " to " + segment.endHour + ":" + segment.endMinute ) +
'\n                        ';
 } ;
__p += '\n\n                    </li>\n                    ';
 }); ;
__p += '\n\n                    ';
 if (zone.segments && zone.segments.length === 0) { ;
__p += '<li>There are no segments defined.</li>';
 } ;
__p += '\n\n                </ul>\n            </dd>\n        ';
 }); ;
__p += '\n    </dl>\n</div>\n';

}
return __p
};

this["JST"]["admin/customerrzs/ratezonegroup/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div style="text-align: center;"><h3>Rate Zone Details</h3></div>\n<div id="rateZone">\n    <ul class="arrows">\n        <li><strong>Name</strong>: ' +
__e( name ) +
' ';
 if (defaultGroup) { ;
__p += ' (<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span><strong>DEFAULT RATE ZONE</strong>) ';
 } ;
__p += '</li>\n        <li><strong>Description</strong>: ' +
__e( description ) +
'</li>\n        <li><strong>Created By</strong>: ' +
__e( createdBy ) +
' (' +
__e( createdDate ) +
')</li>\n        <li><strong>Modified By</strong>: ' +
__e( lastModifiedBy ) +
' (' +
__e( lastModifiedDate ) +
')</li>\n    </ul>\n    <h4>Rate Zone Summary</h4>\n    <dl>\n        ';
 _.each(zones, function(zone) { ;
__p += '\n\n            <dt>' +
__e( zone.name ) +
'</dt>\n            <dd>\n                ' +
__e( zone.description ) +
'\n                <ul class="arrows">\n\n            ';
 _.each(zone.segments, function(segment) { ;
__p += '\n                <li><strong>Day: </strong>\n\n                    ';
 if (segment.date) { ;
__p += '\n                        ' +
__e( segment.date ) +
'\n                    ';
 } else { ;
__p += '\n                        ' +
__e( getStatusAttributeById(App.dict.day, segment['day.id'], 'name') + "(s)" ) +
'\n                    ';
 } ;
__p += '\n\n                    - <strong>Time: </strong>\n\n                    ';
 if (segment.allDay) { ;
__p += '\n                        All Day\n                    ';
 } else { ;
__p += '\n                    ' +
__e( segment.startHour + ":" + segment.startMinute + " to " + segment.endHour + ":" + segment.endMinute ) +
'\n                    ';
 } ;
__p += '\n\n                </li>\n            ';
 }); ;
__p += '\n\n                ';
 if (zone.segments && zone.segments.length === 0) { ;
__p += '<li>There are no segments defined.</li>';
 } ;
__p += '\n\n                </ul>\n            </dd>\n        ';
 }); ;
__p += '\n    </dl>\n</div>\n<div style="text-align: center;">\n    <h3>Rate Zone in Use By</h3>\n    <div>Customers not shown for Default Rate Zone Group(s)</div>\n</div>\n<div id="customerList">\n\n</div>\n<div class="pagination">\n    <ul>\n        <li class="previous_c"><a href="#">Prev</a></li>\n        <li class="next_c"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/customerrzs/ratezonegrouplist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12" type="text" id="filter" placeholder="Search rate zone groups" />\n<ul id="rate-zones" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/customerrzs/ratezonegrouplistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (defaultGroup) { ;
__p += '<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span>';
 } ;
__p +=
__e( name ) +
' (' +
__e( description ) +
')\n';

}
return __p
};

this["JST"]["admin/interpreterrps/interpreter/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div style="text-align: center;"><h3>Interpreter Details</h3></div>\n<div id="interpreter">\n    <ul class="arrows">\n        <li><strong>Name</strong>: ' +
__e( displayName ) +
'</li>\n        <li><strong>Address</strong>: ';
 if (primaryAddress) { ;
__p +=
__e( primaryAddress.displayLabel );
 } else { ;
__p += ' None ';
 } ;
__p += ' </li>\n        <li><strong>Contact</strong>: ';
 if (primaryNumber) { ;
__p +=
__e( primaryNumber.parsedNumber );
 } else { ;
__p += ' None ';
 } ;
__p += ' </li>\n        <li><strong>Email</strong>: ';
 if (primaryEmail) { ;
__p +=
__e( primaryEmail.emailAddress );
 } else { ;
__p += ' None ';
 } ;
__p += '</li>\n    </ul>\n</div>\n<div style="text-align: center;"><h3>Associated Rate Plans</h3></div>\n<div id="ratePlanList">\n\n</div>\n<!--\n<div style="text-align: center;"><h3>All Rate Plans</h3></div>\n<div id="ratePlan">\n    Historic Rate Plan\n</div>\n-->\n';

}
return __p
};

this["JST"]["admin/interpreterrps/interpreterlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- contactFilter Class Name is used in View.js to filter active contacts only -->\n<input type="text" class="span12 contactFilter" id="filter" placeholder="Search interpreters" />\n<ul id="interpreters-list" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/interpreterrps/interpreterlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( displayName ) +
'\n';

}
return __p
};

this["JST"]["admin/interpreterrps/interpreterrateplan/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<li>\n    ' +
__e( contact.displayName ) +
'\n    (<strong>Start Date:</strong> ' +
__e( activeStartDate ? activeStartDate : 'N/A' ) +
' - <strong>End Date:</strong> ' +
__e( activeEndDate ? activeEndDate : 'N/A' ) +
')\n    ';
 if(ratePlan.override === true) {;
__p += '\n    (Rate Plan overrides cannot be cleared)\n    ';
 } else {;
__p += '\n    <span id="controls">\n        <a class="clearContact" href="javascript:void(0);" title="Delete"><i class="icon icon-trash"></i></a>\n        <a class="editRatePlan" href="javascript:void(0);" title="Edit"><i class="icon icon-pencil"></i></a>\n    </span>\n    ';
 } ;
__p += '\n</li>\n';

}
return __p
};

this["JST"]["admin/interpreterrps/interpreterrateplanlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!--List of customers go here-->\n<ul id="rateplans">\n</ul>\n';

}
return __p
};

this["JST"]["admin/interpreterrps/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span3">\n        <h3>Rate Plans</h3>\n        <div id="rate-plan-control">\n        </div>\n    </div>\n\n    <div class="span6">\n        <div id="details-panel">\n            <div style="text-align: center;"><h3>Select a Rate Plan or Interpreter</h3></div>\n        </div>\n    </div>\n\n    <div class="span3">\n        <h3>Interpreters</h3>\n        <div id="interpreter-control">\n        </div>\n    </div>\n\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["admin/interpreterrps/rateplan/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div style="text-align: center;"><h3>Rate Plan Details</h3></div>\n<div id="ratePlan">\n    <ul class="arrows">\n        <li><strong>Name</strong>: ' +
__e( name ) +
' ';
 if (defaultRatePlan) { ;
__p += ' (<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span><strong>DEFAULT RATE PLAN</strong>) ';
 } ;
__p += '</li>\n        <li><strong>Description</strong>: ' +
__e( description ) +
'</li>\n        <li><strong>Created By</strong>: ' +
__e( createdBy ) +
' (' +
__e( createdDate ) +
')</li>\n        <li><strong>Modified By</strong>: ' +
__e( lastModifiedBy ) +
' (' +
__e( lastModifiedDate ) +
')</li>\n    </ul>\n    <div class="accordion-group">\n        <div class="accordion-heading">\n            <a class="accordion-toggle" data-toggle="collapse" data-target="#rateplanSummary">\n                Rate Plan Summary\n            </a>\n        </div>\n        <div id="rateplanSummary" class="accordion-body collapse">\n            <div class="accordion-inner rateplan-summary">\n            </div>\n        </div>\n    </div>\n</div>\n<div style="text-align: center;">\n    <h3>Rate Plan in Use By</h3>\n    <div>Interpreters not shown for Default Rate Plan(s)</div>\n</div>\n<div id="interpreterList">\n\n</div>\n<div class="pagination">\n    <ul>\n        <li class="previous2"><a href="#">Prev</a></li>\n        <li class="next2"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/interpreterrps/rateplaninterpreter/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<li>\n    ' +
__e( ratePlan.name ) +
'\n    (<strong>Start Date:</strong> ' +
__e( activeStartDate ? activeStartDate : 'N/A' ) +
' - <strong>End Date:</strong> ' +
__e( activeEndDate ? activeEndDate : 'N/A' ) +
')\n    ';
 if(ratePlan.override === true) {;
__p += '\n    (Rate Plan overrides cannot be cleared)\n    ';
 } else {;
__p += '\n    <span id="controls">\n        <a class="clearRatePlan" href="javascript:void(0);" title="Delete"><i class="icon icon-trash"></i></a>\n        <a class="editRatePlan" href="javascript:void(0);" title="Edit"><i class="icon icon-pencil"></i></a>\n    </span>\n    ';
 } ;
__p += '\n</li>';

}
return __p
};

this["JST"]["admin/interpreterrps/rateplaninterpreterlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!--List of interpreters go here-->\n<ul id="interpreters" class="arrows">\n</ul>\n';

}
return __p
};

this["JST"]["admin/interpreterrps/rateplanlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12" type="text" id="filter" placeholder="Search rate plans"/>\n<ul id="rate-plans" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/interpreterrps/rateplanlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (defaultRatePlan) { ;
__p += '<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span>';
 } ;
__p +=
__e( name ) +
' (' +
__e( description ) +
')\n';

}
return __p
};

this["JST"]["admin/interpreterrzs/interpreter/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div style="text-align: center;"><h3>Interpreter Details</h3></div>\n<div id="interpreter">\n    <ul class="arrows">\n        <li><strong>Name</strong>: ' +
__e( displayName ) +
'</li>\n        <li><strong>Address</strong>: ';
 if (primaryAddress) { ;
__p +=
__e( primaryAddress.displayLabel );
 } else { ;
__p += ' None ';
 } ;
__p += ' </li>\n        <li><strong>Contact</strong>: ';
 if (primaryNumber) { ;
__p +=
__e( primaryNumber.parsedNumber );
 } else { ;
__p += ' None ';
 } ;
__p += ' </li>\n        <li><strong>Email</strong>: ';
 if (primaryEmail) { ;
__p +=
__e( primaryEmail.emailAddress );
 } else { ;
__p += ' None ';
 } ;
__p += '</li>\n    </ul>\n</div>\n<div style="text-align: center;"><h3>Applicable Rate Zone</h3></div>\n<div id="currentRateZone">\n\n</div>\n';

}
return __p
};

this["JST"]["admin/interpreterrzs/interpreterlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- contactFilter Class Name is used in View.js to filter active contacts only -->\n<input type="text" class="span12 contactFilter" id="filter" placeholder="Search interpreters" />\n<ul id="interpreters-list" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/interpreterrzs/interpreterlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( displayName ) +
'\n';

}
return __p
};

this["JST"]["admin/interpreterrzs/interpreterratezone/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<li><!-- ' +
__e( id ) +
' -->' +
__e( contact.displayName ) +
'<a class="clearContact" href="javascript:void(0);" title="Use Default"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Clear (Use Default)</a></li>\n';

}
return __p
};

this["JST"]["admin/interpreterrzs/interpreterratezonelist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!--List of interpreters go here-->\n<ul id="interpreters">\n</ul>\n';

}
return __p
};

this["JST"]["admin/interpreterrzs/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span3">\n        <h3>Rate Zone Groupings</h3>\n        <div id="rate-zone-control">\n        </div>\n    </div>\n\n    <div class="span6">\n            <div id="details-panel">\n                <div style="text-align: center;"><h3>Select a Rate Zone or an Interpreter</h3></div>\n            </div>\n        </div>\n\n    <div class="span3">\n        <h3>Interpreters</h3>\n        <div id="interpreter-control">\n        </div>\n    </div>\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["admin/interpreterrzs/ratezonegroup/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div style="text-align: center;"><h3>Rate Zone Details</h3></div>\n<div id="rateZone">\n    <ul class="arrows">\n        <li><strong>Name</strong>: ' +
__e( name ) +
' ';
 if (defaultGroup) { ;
__p += ' (<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span><strong>DEFAULT RATE ZONE</strong>) ';
 } ;
__p += '</li>\n        <li><strong>Description</strong>: ' +
__e( description ) +
'</li>\n        <li><strong>Created By</strong>: ' +
__e( createdBy ) +
' (' +
__e( createdDate ) +
')</li>\n        <li><strong>Modified By</strong>: ' +
__e( lastModifiedBy ) +
' (' +
__e( lastModifiedDate ) +
')</li>\n    </ul>\n    <h4>Rate Zone Summary</h4>\n    <dl>\n        ';
 _.each(zones, function(zone) { ;
__p += '\n\n        <dt>' +
__e( zone.name ) +
'</dt>\n        <dd>\n            ' +
__e( zone.description ) +
'\n            <ul class="arrows">\n\n                ';
 _.each(zone.segments, function(segment) { ;
__p += '\n                <li><strong>Day: </strong>\n\n                    ';
 if (segment.date) { ;
__p += '\n                    ' +
__e( segment.date ) +
'\n                    ';
 } else { ;
__p += '\n                    ' +
__e( getStatusAttributeById(App.dict.day, segment['day.id'], 'name') + "(s)" ) +
'\n                    ';
 } ;
__p += '\n\n                    - <strong>Time: </strong>\n\n                    ';
 if (segment.allDay) { ;
__p += '\n                    All Day\n                    ';
 } else { ;
__p += '\n                    ' +
__e( segment.startHour + ":" + segment.startMinute + " to " + segment.endHour + ":" + segment.endMinute ) +
'\n                    ';
 } ;
__p += '\n\n                </li>\n                ';
 }); ;
__p += '\n\n                ';
 if (zone.segments && zone.segments.length === 0) { ;
__p += '<li>There are no segments defined.</li>';
 } ;
__p += '\n\n            </ul>\n        </dd>\n        ';
 }); ;
__p += '\n    </dl>\n</div>\n<div style="text-align: center;">\n    <h3>Rate Zone in Use By</h3>\n    <div>Interpreters not shown for Default Rate Zone Group(s)</div>\n</div>\n<div id="interpreterList">\n\n</div>\n<div class="pagination">\n    <ul>\n        <li class="previous_i"><a href="#">Prev</a></li>\n        <li class="next_i"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/interpreterrzs/ratezonegrouplist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12" type="text" id="filter" placeholder="Search rate zone groups" />\n<ul id="rate-zones" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/interpreterrzs/ratezonegrouplistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (defaultGroup) { ;
__p += '<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span>';
 } ;
__p +=
__e( name ) +
' (' +
__e( description ) +
')\n';

}
return __p
};

this["JST"]["admin/interpreterrzs/ratezoneinterpreter/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="rateZone">\n    ';
 if (!rateZoneGroup.defaultGroup) { ;
__p += '\n    <div style="text-align: center; margin-bottom: 15px;">\n        <a id="clearRateZone" href="javascript:void(0);" title="Use Default"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Clear Rate Plan (Use Default Rate Plan)</a>\n    </div>\n    ';
 } ;
__p += '\n\n    <ul class="arrows">\n        <li><strong>Name</strong>: ' +
__e( rateZoneGroup.name ) +
' ';
 if (rateZoneGroup.defaultGroup) { ;
__p += ' (<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span><strong>DEFAULT RATE ZONE</strong>) ';
 } ;
__p += '</li>\n        <li><strong>Description</strong>: ' +
__e( rateZoneGroup.description ) +
'</li>\n        <li><strong>Created By</strong>: ' +
__e( rateZoneGroup.createdBy ) +
' (' +
__e( rateZoneGroup.createdDate ) +
')</li>\n        <li><strong>Modified By</strong>: ' +
__e( rateZoneGroup.lastModifiedBy ) +
' (' +
__e( rateZoneGroup.lastModifiedDate ) +
')</li>\n    </ul>\n    <h4>Rate Zone Summary</h4>\n    <dl>\n        ';
 _.each(rateZoneGroup.zones, function(zone) { ;
__p += '\n\n        <dt>' +
__e( zone.name ) +
'</dt>\n        <dd>\n            ' +
__e( zone.description ) +
'\n            <ul class="arrows">\n\n                ';
 _.each(zone.segments, function(segment) { ;
__p += '\n                <li><strong>Day: </strong>\n\n                    ';
 if (segment.date) { ;
__p += '\n                    ' +
__e( segment.date ) +
'\n                    ';
 } else { ;
__p += '\n                    ' +
__e( getStatusAttributeById(App.dict.day, segment['day.id'], 'name') + "(s)" ) +
'\n                    ';
 } ;
__p += '\n\n                    - <strong>Time: </strong>\n\n                    ';
 if (segment.allDay) { ;
__p += '\n                    All Day\n                    ';
 } else { ;
__p += '\n                    ' +
__e( segment.startHour + ":" + segment.startMinute + " to " + segment.endHour + ":" + segment.endMinute ) +
'\n                    ';
 } ;
__p += '\n\n                </li>\n                ';
 }); ;
__p += '\n\n                ';
 if (zone.segments && zone.segments.length === 0) { ;
__p += '<li>There are no segments defined.</li>';
 } ;
__p += '\n\n            </ul>\n        </dd>\n        ';
 }); ;
__p += '\n    </dl>\n</div>\n';

}
return __p
};

this["JST"]["admin/rateplan/deduction/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="form-inline">\n        <!-- id(' +
__e( id ) +
') -->\n        ';
 if (obj.id) { ;
__p += '\n        <div class="control-group">\n            <span class="label label-success" title="' +
__e( obj.description ) +
'">Info</span>\n        </div>\n        ';
 } ;
__p += '\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label required" for="name">Name</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the name to give this deduction" data-original-title="Name">?</a>\n                <div class="controls">\n                    <input type="text" id="name" name="name" class="span12" value="' +
__e( obj.name ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n        <div class="span2">\n            <div class="span12 control-group">\n                <label class="control-label required" for="chargeType.id">Deduction Type</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select how the deduction is to be applied." data-original-title="Deduction Type">?</a>\n                <div class="controls">\n                    <select name="chargeType.id" id="chargeType.id" class="span12">\n                        ' +
((__t = ( selectOptions(App.dict.chargeType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label required" for="chargeRate">Deduction Rate</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the appropriate rate based upon the deduction type." data-original-title="Deduction Rate">?</a>\n                <div class="controls">\n                    <input type="text" id="chargeRate" class="span12" name="chargeRate" value="' +
__e( obj.chargeRate ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label required" for="aggregate">Aggregate</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether the deduction should only appear in aggregate." data-original-title="Aggregate">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="aggregate" name="aggregate" value="' +
__e( obj.aggregate ) +
'" ';
 if (obj.aggregate) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Aggregate"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n        <div class="span1">\n            <div class="control-group">\n                <div class="controls">\n                    <div>\n                        <label for="applyToInPerson" title="In Person">\n                            <input type="checkbox" id="applyToInPerson" name="applyToInPerson" value="' +
__e( obj.applyToInPerson ) +
'" ';
 if (obj.applyToInPerson) { ;
__p += ' checked ';
 } ;
__p += '/><span class="person"></span>\n                            <a href="javascript:void(0);"  tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the service to which this deduction should apply." data-original-title="Apply To">?</a>\n                        </label>\n                    </div>\n                    <div>\n                        <label for="applyToPhone" title="Phone">\n                            <input type="checkbox" id="applyToPhone" name="applyToPhone" value="' +
__e( obj.applyToPhone ) +
'" ';
 if (obj.applyToPhone) { ;
__p += ' checked ';
 } ;
__p += '/><span class="phone"></span>\n                        </label>\n                        <div>\n                        </div>\n                        <label for="applyToVideo" title="Video">\n                            <input type="checkbox" id="applyToVideo" name="applyToVideo" value="' +
__e( obj.applyToVideo ) +
'" ';
 if (obj.applyToVideo) { ;
__p += ' checked ';
 } ;
__p += '/><span class="video">&nbsp;</span>\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="span1">\n            <div class="control-group">\n                <label class="control-label" for="applyOnce">Apply Once?</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether to apply this fee only once." data-original-title="Apply Once">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="applyOnce" name="applyOnce" value="' +
__e( obj.applyOnce ) +
'" ';
 if (obj.applyOnce) { ;
__p += ' checked ';
 } ;
__p += '/>\n                </div>\n            </div>\n        </div>\n        <div class="span1">\n            <div class="control-group">\n                <label class="control-label" for="applyOnceAnnually">Apply Once Annually?</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Used in conjunction with the Apply Once flag and whether to apply this fee only once annually (calendar year)." data-original-title="Apply Once">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="applyOnceAnnually" name="applyOnceAnnually" value="' +
__e( obj.applyOnceAnnually ) +
'" ';
 if (obj.applyOnceAnnually) { ;
__p += ' checked ';
 } ;
__p += '/>\n                </div>\n            </div>\n        </div>\n        <div class="control-group">\n            <label>&nbsp;</label>\n            <a id="deleteDeduction" href="javascript:void(0);" title="Delete Deduction"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n        </div>\n\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["admin/rateplan/fee/modal"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Edit Fee Configuration</h3>\n</div>\n\n<div class="modal-body">\n\n    <!-- fee settings row -->\n    <h4>Fee Settings</h4>\n    <div class="row-fluid">\n        <!-- id(' +
__e( id ) +
') -->\n        ';
 if (obj.id) { ;
__p += '\n        <div class="span1">\n            <span class="label label-success" title="' +
__e( obj.description ) +
'">Info</span>\n        </div>\n        ';
 } ;
__p += '\n\n\n        ';
 if (obj["feeType.id"] == App.dict.feeType.custom.id || obj["feeType.id"] == App.dict.feeType.misc.id) { ;
__p += '\n\n        <!-- start (custom fee or miscellaneous fee) -->\n            <div class="span2">\n                <div class="control-group">\n                    <label class="control-label required" for="name">Name</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the name to give this fee" data-original-title="Name">?</a>\n                    <div class="controls">\n                        <input type="text" id="name" name="name" class="span12 input-medium" value="' +
__e( obj.name ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <!-- show custom fee drop down -->\n            ';
 if (obj["feeType.id"] == App.dict.feeType.custom.id) { ;
__p += '\n            <div class="span2">\n                <div class="span12 control-group">\n                    <label class="control-label required" for="customizedFeeTemplate">Custom Fee Template</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the customized fee template." data-original-title="Customized Fee Template">?</a>\n                    <div class="controls">\n                        <select name="customizedFeeTemplate.id" id="customizedFeeTemplate" class="span12">\n                            ' +
((__t = ( selectOptions(App.dict.customizedFeeTemplate, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n            ';
 } ;
__p += '\n\n            <div class="span2">\n                <div class="span12 control-group">\n                    <label class="control-label required" for="chargeType.id">Fee Type</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select how the fee is to be applied." data-original-title="Deduction Type">?</a>\n                    <div class="controls">\n                        <select name="chargeType.id" id="chargeType.id" class="span12">\n                            ' +
((__t = ( selectOptions(App.dict.chargeType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="span2">\n                <div class="control-group">\n                    <label class="control-label required" for="chargeRate">Fee Rate</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the appropriate rate based upon the fee type.<dl><dt>Flat Fee</dt><dd>The amount of the flat fee</dd><dt>% Total</dt><dd>The percentage of the total to apply as a decimal. A number between 0 and 1, where 1 is 100%</dd><dt>Per Hour</dt><dd>The amount per hour to apply for each hour</dd><dt>Flat Hour(s)</dt><dd>The number of hours to apply</dd><dt>Use Rate</dt><dd>The hourly rate to apply, replacing the hourly rates or the rate zone to use to determine the rate</dd><dt>Minimum Dur.</dt><dd>Apply the minimum duration. The fee rate is ignored. Only applicable to cancellation fees.</dd></dl>" data-original-title="Fee Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="chargeRate" class="span12" name="chargeRate" value="' +
__e( obj.chargeRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n        <!-- end (custom fee or miscellaneous fee) -->\n\n        ';
 } else { ;
__p += '\n\n        <!-- start (rush fee or cancel fee) -->\n            <div class="span2">\n                <div class="span12 control-group">\n                    <label class="control-label required" for="chargeType.id">Fee Type</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select how the fee is to be applied." data-original-title="Fee Type">?</a>\n                    <div class="controls">\n                        <select name="chargeType.id" class="span12" id="chargeType.id">\n                            ' +
((__t = ( selectOptions(App.dict.chargeType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="span2">\n                <div class="control-group">\n                    <label class="control-label required" for="chargeRate">Fee Rate</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the appropriate rate based upon the fee type.<dl><dt>Flat Fee</dt><dd>The amount of the flat fee</dd><dt>% Total</dt><dd>The percentage of the total to apply as a decimal. A number between 0 and 1, where 1 is 100%</dd><dt>Per Hour</dt><dd>The amount per hour to apply for each hour</dd><dt>Flat Hour(s)</dt><dd>The number of hours to apply</dd><dt>Use Rate</dt><dd>The hourly rate to apply, replacing the hourly rates or the rate zone to use to determine the rate</dd><dt>Minimum Dur.</dt><dd>Apply the minimum duration. The fee rate is ignored. Only applicable to cancellation fees.</dd></dl>" data-original-title="Fee Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="chargeRate" class="span12" name="chargeRate" value="' +
__e( obj.chargeRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="span2">\n                <div class="control-group">\n                    <label class="control-label required" for="period">Period</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of hours from the scheduled start date for cancellation fees and booking date for rush fees within which this fee will be applied. Decimal entry such as 1.5 means 1 hour and 30 minutes." data-original-title="Effective Period">?</a>\n                    <div class="controls">\n                        <input type="text" id="period"  class="span12" name="period" value="' +
__e( obj.period ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n            <div class="span2">\n                <div class="span12 control-group">\n                    <label class="control-label required" for="periodRule.id">Period Rule</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select how the effective period is calculated." data-original-title="Effective Period Rule">?</a>\n                    <div class="controls">\n                        <select name="periodRule.id"  class="span12" id="periodRule.id">\n                            ' +
((__t = ( selectOptions(App.dict.periodRule, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n            <div class="span1">\n                <div class="control-group">\n                    <label class="control-label required" for="precedence">Precedence</label>\n                    <a href="javascript:void(0);"  tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="For multiple fees, specify the priority order in which they should be applied." data-original-title="Precedence">?</a>\n                    <div class="controls">\n                        <input type="text" class="span12" id="precedence" name="precedence" value="' +
__e( obj.precedence ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n        <!-- end (rush fee or cancel fee) -->\n        ';
 } ;
__p += '\n\n        <div class="span2">\n            <label class="control-label" for="applyToRateZone.id">Only Apply in Zone</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the rate zone if this fee only applies within a certain rate zone. For example a rush fee that only applies during nights and weekends" data-original-title="Applies within Rate Zone">?</a>\n            <div class="controls">\n                <select name="applyToRateZone.id"  class="span12" id="applyToRateZone.id">\n                    ' +
((__t = ( selectOptions(App.dict.rateZoneType, {noSelection: {id: '', name: '[Choose a Zone]'}}) )) == null ? '' : __t) +
'\n                </select>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n    </div> <!-- / fee settings row -->\n\n\n    ';
 if (obj['chargeType.id'] && obj['chargeType.id'] == App.dict.chargeType['rate'].id) { ;
__p += '\n    <!-- use rate settings row -->\n    <h4>Use Rate Settings</h4>\n    <div class="row-fluid">\n        <div class="span2 control-group">\n            <label class="control-label required" for="rateZone.id">Rate Zone</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the zone to use if this fee applies." data-original-title="Rate Zone">?</a>\n            <div class="controls">\n                <select name="rateZone.id"  class="span12" id="rateZone.id">\n                    ' +
((__t = ( selectOptions(App.dict.rateZoneType, {noSelection: {id: '', name: '[Choose a Zone]'}}) )) == null ? '' : __t) +
'\n                </select>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label" for="rateZoneCliff">Cliff (Mins)</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number in minutes that this fee applies. After the cliff the next zone will be applied. Leave blank if the same zone is in effect for the entire duration." data-original-title="Rate Zone Cliff">?</a>\n                <div class="controls">\n                    <input type="text" id="rateZoneCliff"  class="span12" name="rateZoneCliff" value="' +
__e( obj.rateZoneCliff ) +
'"/>\n                </div>\n            </div>\n        </div>\n\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label" for="excludeStandard">Exc. Std.</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Exclude the standard rate zone when applying this fee." data-original-title="Exclude Standard Rate Zone">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="excludeStandard" name="excludeStandard" value="' +
__e( obj.excludeStandard ) +
'" ';
 if (obj.excludeStandard) { ;
__p += ' checked ';
 } ;
__p += '/>\n                </div>\n            </div>\n        </div>\n    </div> <!-- / use rate settings row -->\n    ';
 } ;
__p += '\n\n\n    ';
 if (obj["feeType.id"] == App.dict.feeType.custom.id) { ;
__p += '\n    <!-- custom fee settings row -->\n    <h4>Custom Fee Settings</h4>\n    <div class="row-fluid">\n\n        <div class="span2">\n            <div class="control-group param1" style="display: none">\n                <label class="control-label required" for="parameter1">Parameter 1</label>\n                <div class="controls">\n                    <input type="text" id="parameter1" class="span12" name="parameter1" value="' +
__e( obj.parameter1 ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n        <div class="span2">\n            <div class="control-group param2" style="display: none" >\n                <label class="control-label required" for="parameter2">Parameter 2</label>\n                <div class="controls">\n                    <input type="text" id="parameter2" class="span12" name="parameter2" value="' +
__e( obj.parameter2 ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n        <div class="span2">\n            <div class="control-group param3" style="display: none">\n                <label class="control-label required" for="parameter3">Parameter 3</label>\n                <div class="controls">\n                    <input type="text" id="parameter3" class="span12" name="parameter3" value="' +
__e( obj.parameter3 ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n        <div class="span2">\n            <div class="control-group param4" style="display: none">\n                <label class="control-label required" for="parameter4">Parameter 4</label>\n                <div class="controls">\n                    <input type="text" id="parameter4" class="span12" name="parameter4" value="' +
__e( obj.parameter4 ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n        <div class="span2">\n            <div class="control-group param5" style="display: none">\n                <label class="control-label required" for="parameter5">Parameter 5</label>\n                <div class="controls">\n                    <input type="text" id="parameter5" class="span12" name="parameter5" value="' +
__e( obj.parameter5 ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n        <div class="span1">\n            <div class="control-group param6" style="display: none">\n                <label class="control-label required" for="parameter6">Parameter 6</label>\n                <div class="controls">\n                    <input type="text" id="parameter6" class="span12" name="parameter6" value="' +
__e( obj.parameter6 ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n        <div class="span1">\n            <div class="control-group param7" style="display: none">\n                <label class="control-label required" for="parameter7">Parameter 7</label>\n                <div class="controls">\n                    <input type="text" id="parameter7" class="span12" name="parameter7" value="' +
__e( obj.parameter7 ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n    </div> <!-- / custom fee settings row -->\n    ';
 } ;
__p += '\n\n\n    <!-- other common settings row -->\n    <h4>General Settings</h4>\n    <div class="row-fluid">\n\n        <!--\n        <div class="control-group">\n            <label class="control-label" for="applyToStandardRate">Use Std.</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Always use the standard rate in rate calculation. Otherwise use the applicable rate." data-original-title="Use Standard Rate">?</a>\n            <div class="controls">\n                <input type="checkbox" id="applyToStandardRate" name="applyToStandardRate" value="' +
__e( obj.applyToStandardRate ) +
'" ';
 if (obj.applyToStandardRate) { ;
__p += ' checked ';
 } ;
__p += '/>\n            </div>\n        </div>\n        -->\n\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label required" for="aggregate">Aggregate</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether the fee should only appear in aggregate." data-original-title="Aggregate">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="aggregate" name="aggregate" value="' +
__e( obj.aggregate ) +
'" ';
 if (obj.aggregate) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Aggregate"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n        ';
 if (obj.serviceTier !== true) { ;
__p += '\n        <div class="span2">\n            <div class="control-group">\n                <div class="controls">\n                    <div>\n                        <label for="applyToInPerson" title="In Person">\n                            <input type="checkbox" id="applyToInPerson" name="applyToInPerson" value="' +
__e( obj.applyToInPerson ) +
'" ';
 if (obj.applyToInPerson) { ;
__p += ' checked ';
 } ;
__p += '/><span class="person"></span>\n                            <a href="javascript:void(0);"  tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the service to which this fee should apply." data-original-title="Apply To">?</a>\n                        </label>\n                    </div>\n                    <div>\n                        <label for="applyToPhone" title="Phone">\n                            <input type="checkbox" id="applyToPhone" name="applyToPhone" value="' +
__e( obj.applyToPhone ) +
'" ';
 if (obj.applyToPhone) { ;
__p += ' checked ';
 } ;
__p += '/><span class="phone"></span>\n                        </label>\n                        <div>\n                        </div>\n                        <label for="applyToVideo" title="Video">\n                            <input type="checkbox" id="applyToVideo" name="applyToVideo" value="' +
__e( obj.applyToVideo ) +
'" ';
 if (obj.applyToVideo) { ;
__p += ' checked ';
 } ;
__p += '/><span class="video">&nbsp;</span>\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n        ';
 } ;
__p += '\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label" for="combineWithLineItem">Combine?</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Combine this fee with the associated line item. To be used only with cancellation fees that are 100% cost of line item." data-original-title="Combine">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="combineWithLineItem" name="combineWithLineItem" value="' +
__e( obj.combineWithLineItem ) +
'" ';
 if (obj.combineWithLineItem) { ;
__p += ' checked ';
 } ;
__p += '/>\n                </div>\n            </div>\n        </div>\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label" for="applyOnce">Apply Once?</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether to apply this fee only once." data-original-title="Apply Once">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="applyOnce" name="applyOnce" value="' +
__e( obj.applyOnce ) +
'" ';
 if (obj.applyOnce) { ;
__p += ' checked ';
 } ;
__p += '/>\n                </div>\n            </div>\n        </div>\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label" for="applyOnceAnnually">Apply Once Annually?</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Used in conjunction with the Apply Once flag and whether to apply this fee only once annually (calendar year)." data-original-title="Apply Once">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="applyOnceAnnually" name="applyOnceAnnually" value="' +
__e( obj.applyOnceAnnually ) +
'" ';
 if (obj.applyOnceAnnually) { ;
__p += ' checked ';
 } ;
__p += '/>\n                </div>\n            </div>\n        </div>\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label" for="skipCancelled">Skip When Cancelled?</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Skip the is fee when the job is cancelled and billable i.e. do not apply this fee" data-original-title="Skip When Cancelled">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="skipCancelled" name="skipCancelled" value="' +
__e( obj.skipCancelled ) +
'" ';
 if (obj.skipCancelled) { ;
__p += ' checked ';
 } ;
__p += '/>\n                </div>\n            </div>\n        </div>\n    </div>\n    <!-- / other common settings row -->\n\n</div>\n\n<div class="modal-footer">\n    <a href="#" class="btn cmd-widget-delete">Delete Fee</a>\n    <a href="#" class="btn btn-primary cmd-widget-close">Save & Close</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n\n';

}
return __p
};

this["JST"]["admin/rateplan/fee/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="row-fluid">\n        <!-- id(' +
__e( id ) +
') -->\n        ';
 if (obj.id) { ;
__p += '\n        <div class="span1">\n            <span class="label label-success" title="' +
__e( obj.description ) +
'">Info</span>\n        </div>\n        ';
 } ;
__p += '\n\n\n        ';
 if (obj["feeType.id"] == App.dict.feeType.custom.id || obj["feeType.id"] == App.dict.feeType.misc.id) { ;
__p += '\n\n            <!-- start (custom fee or miscellaneous fee) -->\n            <div class="span2">\n                <div class="control-group">\n                    <label class="control-label required" for="name">Name</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the name to give this fee" data-original-title="Name">?</a>\n                    <div class="controls">\n                        <input type="text" id="name" name="name" class="span12 input-medium" value="' +
__e( obj.name ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <!-- show custom fee drop down -->\n            ';
 if (obj["feeType.id"] == App.dict.feeType.custom.id) { ;
__p += '\n            <div class="span2">\n                <div class="span12 control-group">\n                    <label class="control-label required" for="customizedFeeTemplate">Custom Fee Template</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the customized fee template." data-original-title="Customized Fee Template">?</a>\n                    <div class="controls">\n                        <select name="customizedFeeTemplate.id" id="customizedFeeTemplate" class="span12">\n                            ' +
((__t = ( selectOptions(App.dict.customizedFeeTemplate, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n            ';
 } ;
__p += '\n\n            <div class="span2">\n                <div class="span12 control-group">\n                    <label class="control-label required" for="chargeType.id">Fee Type</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select how the fee is to be applied." data-original-title="Deduction Type">?</a>\n                    <div class="controls">\n                        <select name="chargeType.id" id="chargeType.id" class="span12">\n                            ' +
((__t = ( selectOptions(App.dict.chargeType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="span2">\n                <div class="control-group">\n                    <label class="control-label required" for="chargeRate">Fee Rate</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the appropriate rate based upon the fee type.<dl><dt>Flat Fee</dt><dd>The amount of the flat fee</dd><dt>% Total</dt><dd>The percentage of the total to apply as a decimal. A number between 0 and 1, where 1 is 100%</dd><dt>Per Hour</dt><dd>The amount per hour to apply for each hour</dd><dt>Flat Hour(s)</dt><dd>The number of hours to apply</dd><dt>Use Rate</dt><dd>The hourly rate to apply, replacing the hourly rates or the rate zone to use to determine the rate</dd><dt>Minimum Dur.</dt><dd>Apply the minimum duration. The fee rate is ignored. Only applicable to cancellation fees.</dd></dl>" data-original-title="Fee Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="chargeRate" class="span12" name="chargeRate" value="' +
__e( obj.chargeRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n        <!-- end (custom fee or miscellaneous fee) -->\n\n        ';
 } else { ;
__p += '\n\n            <!-- start (rush fee or cancel fee) -->\n            <div class="span2">\n                <div class="span12 control-group">\n                    <label class="control-label required" for="chargeType.id">Fee Type</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select how the fee is to be applied." data-original-title="Fee Type">?</a>\n                    <div class="controls">\n                        <select name="chargeType.id" class="span12" id="chargeType.id">\n                            ' +
((__t = ( selectOptions(App.dict.chargeType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="span2">\n                <div class="control-group">\n                    <label class="control-label required" for="chargeRate">Fee Rate</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the appropriate rate based upon the fee type.<dl><dt>Flat Fee</dt><dd>The amount of the flat fee</dd><dt>% Total</dt><dd>The percentage of the total to apply as a decimal. A number between 0 and 1, where 1 is 100%</dd><dt>Per Hour</dt><dd>The amount per hour to apply for each hour</dd><dt>Flat Hour(s)</dt><dd>The number of hours to apply</dd><dt>Use Rate</dt><dd>The hourly rate to apply, replacing the hourly rates or the rate zone to use to determine the rate</dd><dt>Minimum Dur.</dt><dd>Apply the minimum duration. The fee rate is ignored. Only applicable to cancellation fees.</dd></dl>" data-original-title="Fee Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="chargeRate" class="span12" name="chargeRate" value="' +
__e( obj.chargeRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="span2">\n                <div class="control-group">\n                    <label class="control-label required" for="period">Period</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of hours from the scheduled start date for cancellation fees and booking date for rush fees within which this fee will be applied. Decimal entry such as 1.5 means 1 hour and 30 minutes." data-original-title="Effective Period">?</a>\n                    <div class="controls">\n                        <input type="text" id="period"  class="span12" name="period" value="' +
__e( obj.period ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n            <div class="span2">\n                <div class="span12 control-group">\n                    <label class="control-label required" for="periodRule.id">Period Rule</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select how the effective period is calculated." data-original-title="Effective Period Rule">?</a>\n                    <div class="controls">\n                        <select name="periodRule.id"  class="span12" id="periodRule.id">\n                            ' +
((__t = ( selectOptions(App.dict.periodRule, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n            <div class="span2">\n                <div class="control-group">\n                    <label class="control-label required" for="precedence">Precedence</label>\n                    <a href="javascript:void(0);"  tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="For multiple fees, specify the priority order in which they should be applied." data-original-title="Precedence">?</a>\n                    <div class="controls">\n                        <input type="text" class="span12" id="precedence" name="precedence" value="' +
__e( obj.precedence ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n        <!-- end (rush fee or cancel fee) -->\n        ';
 } ;
__p += '\n\n        <div class="control-group span1">\n            <label>&nbsp;</label>\n            <a class="editFee" href="javascript:void(0);" title="Edit. See more configuration options."><i class="icon icon-pencil"></i></a>\n        </div>\n\n        <div class="control-group span1">\n            <label>&nbsp;</label>\n            <a id="deleteFee" href="javascript:void(0);" title="Delete Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n        </div>\n\n    </div> <!-- / fee settings row -->\n\n\n</div>\n';

}
return __p
};

this["JST"]["admin/rateplan/language/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="form-inline">\n<!-- language (' +
__e( obj.id ) +
') -->\n<div class="control-group">\n    <label class="control-label required" for="language-select">Language </label>\n    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Start typing the language and select it from the list. Click on the \'-\' to delete this language." data-original-title="Language">?</a>\n    <div class="controls">\n        <input id="language-select" name="language-select" class="language" type="text" value="' +
__e( obj.label ) +
'"/>\n        <p class="help-block">Required field</p>\n    </div>\n</div>\n\n<!-- iso code -->\n<div class="control-group">\n    <label class="control-label" for="iso639">ISO</label>\n    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="ISO 639 Code." data-original-title="ISO 639">?</a>\n    <div class="controls">\n        <a id="iso" href="javascript:void(0);">' +
__e( obj.iso639_3Tag ) +
'</a>\n    </div>\n</div>\n\n<div class="control-group">\n    <a href="javascript:void(0);" id="deleteLanguage" class="pull-right"><i class="icon icon-minus-sign"></i>Remove</a>\n</div>\n</div>\n';

}
return __p
};

this["JST"]["admin/rateplan/languagetier/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- id(' +
__e( obj.id ) +
') -->\n';
 if (obj.baseTier) { ;
__p += '\n<div class="row-fluid">\n    <div class="control-group span4">\n        <h4>Base Rate Tier (All Languages)</h4>\n        <p>Applicable to all languages not defined in additional language tiers</p>\n    </div>\n    <div class="control-group span4">\n        <label class="control-label" for="name"><strong>Accounts Classification</strong></label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Give this language tier an accounting classification. This will be used to classify the tier within third party accounting software." data-original-title="Language Tier Name">?</a>\n        <div class="controls">\n            <input type="text" id="accountsClassification" name="accountsClassification" class="input-block-level" value="' +
__e( obj.accountsClassification ) +
'"/>\n        </div>\n    </div>\n</div>\n\n';
 } else { ;
__p += '\n\n<div class="row-fluid">\n    <div class="control-group span4">\n        <label class="control-label required" for="name">Name</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Give this language tier a descriptive name. This will be used on reports and invoices." data-original-title="Language Tier Name">?</a>\n        <div class="controls">\n            <input type="text" id="name" name="name" class="input-block-level" value="' +
__e( obj.name ) +
'" placeholder="Name for this tier to appear on reports"/>\n            <p class="help-block">Required field</p>\n        </div>\n    </div>\n    <div class="span4">\n        <label>&nbsp;</label>\n        <a id="deleteLanguageTier" href="javascript:void(0);" title="Delete Language Tier"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete Language Tier</a>\n    </div>\n    <div class="control-group span4">\n        <label class="control-label" for="name"><strong>Accounts Classification</strong></label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Give this language tier an accounting classification. This will be used to classify the tier within third party accounting software." data-original-title="Language Tier Name">?</a>\n        <div class="controls">\n            <input type="text" id="accountsClassification" name="accountsClassification" class="input-block-level" value="' +
__e( obj.accountsClassification ) +
'"/>\n        </div>\n    </div>\n</div>\n\n<div class="accordion-group">\n    <div class="accordion-heading">\n        <a class="accordion-toggle" data-toggle="collapse" data-target="#languageTier-' +
__e( obj.id ) +
'-languages">\n            Languages: ' +
__e( obj.name ? obj.name : "<New Language Tier>" ) +
'\n        </a>\n    </div>\n    <div id="languageTier-' +
__e( obj.id ) +
'-languages" class="accordion-body collapse ' +
__e( !obj.id ? "in" : "" ) +
'">\n        <div class="accordion-inner">\n            <div id="languages">\n\n            </div>\n\n            <div class="clear" style="margin-bottom: 25px;">\n                <a id="addLanguage" href="javascript:void(0);" title="Add Language"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Language</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n';
 } ;
__p += '\n\n<hr/>\n\n<h4>Mileage</h4>\n<div class="row-fluid">\n    <div class="control-group">\n        <label class="control-label" for="mileageOverride">Mileage Override</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Override mileage. Save the rate plan after checking this to show / hide the mileage." data-original-title="Mileage Override">?</span></a>\n        <div class="controls">\n            <input type="checkbox" id="mileageOverride" name="mileageOverride" value="' +
__e( obj.mileageOverride ) +
'" ';
 if (obj.mileageOverride) { ;
__p += ' checked ';
 } ;
__p += ' />\n        </div>\n    </div>\n</div>\n\n';
 if (obj.mileageOverride) { ;
__p += '\n<div class="row-fluid">\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label required" for="mileage">Mileage</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the amount in decimals .e.g 0.55 for each mile traveled, if applicable.." data-original-title="Mileage">?</a>\n            <div class="controls">\n                <input type="text" id="mileage" name="mileage" class="span12 input-block-level" value="' +
__e( obj.mileage ) +
'"/>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n    </div>\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label required" for="mileageThreshold">Threshold</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of miles travelled before mileage is applied." data-original-title="Mileage Threshold">?</a>\n            <div class="controls">\n                <input type="text" id="mileageThreshold" name="mileageThreshold" class="span12 input-block-level" value="' +
__e( obj.mileageThreshold ) +
'"/>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n    </div>\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="payMileageInFull">Pay in Full?</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="When checked, will calculate mileage fully excluding threshold value" data-original-title="Pay in Full?">?</span></a>\n            <div class="controls">\n                <input type="checkbox" id="payMileageInFull" name="payMileageInFull" value="' +
__e( obj.payMileageInFull ) +
'" ';
 if (obj.payMileageInFull) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </div>\n        </div>\n    </div>\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="minMileage">Min Mileage</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum monetary mileage amount that will be paid." data-original-title="Minimum Mileage">?</a>\n            <div class="controls">\n                <input type="text" id="minMileage" name="minMileage" class="span12 input-block-level" value="' +
__e( obj.minMileage ) +
'"/>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n    </div>\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="maxMileage">Max Mileage</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the maximum monetary mileage amount that will be paid." data-original-title="Maximum Mileage">?</a>\n            <div class="controls">\n                <input type="text" id="maxMileage" name="maxMileage" class="span12 input-block-level" value="' +
__e( obj.maxMileage ) +
'"/>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n    </div>\n\n</div> <!-- / mileage -->\n\n';
 } ;
__p += '\n\n<h4>Split Minimum Duration</h4>\n<div class="row-fluid">\n    <div class="control-group">\n        <label class="control-label" for="splitMinimumDuration">Split Minimum Duration?</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Split minimum duration into tiers to allow for tiered calculation. Save the rate plan after checking this to show / hide the splits." data-original-title="Split Minimum Duration">?</span></a>\n        <div class="controls">\n            <input type="checkbox" id="splitMinimumDuration" name="splitMinimumDuration" value="' +
__e( obj.splitMinimumDuration ) +
'" ';
 if (obj.splitMinimumDuration) { ;
__p += ' checked ';
 } ;
__p += ' />\n        </div>\n    </div>\n</div>\n\n<h4>Billing Increments</h4>\n<div class="row-fluid">\n    <div class="control-group">\n        <label class="control-label" for="billingIncrementOverride">Billing Increments Override</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Override billing increments. Save the rate plan after checking this to show / hide the billing increments." data-original-title="Billing Increments Override">?</span></a>\n        <div class="controls">\n            <input type="checkbox" id="billingIncrementOverride" name="billingIncrementOverride" value="' +
__e( obj.billingIncrementOverride ) +
'" ';
 if (obj.billingIncrementOverride) { ;
__p += ' checked ';
 } ;
__p += ' />\n        </div>\n    </div>\n</div>\n';
 if (obj.billingIncrementOverride) { ;
__p += '\n    <div class="row-fluid">\n        <div class="span2">\n            <h5>In Person</h5>\n            <div class="control-group">\n                <label class="control-label required" for="unitIncInPerson">Billing Units (minutes)</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of minutes for each billing unit." data-original-title="Billing Units">?</a>\n                <div class="controls">\n                    <input type="text" id="unitIncInPerson" name="unitIncInPerson" class="input-block-level" value="' +
__e( obj.unitIncInPerson ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n        ';
 if (App.config.company.config.phoneEnabled) { ;
__p += '\n        <div class="span2">\n            <h5>Phone</h5>\n            <div class="control-group">\n                <label class="control-label required" for="unitIncPhone">Billing Units (minutes)</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of minutes for each billing unit." data-original-title="Billing Units">?</a>\n                <div class="controls">\n                    <input type="text" id="unitIncPhone" name="unitIncPhone" class="input-block-level" value="' +
__e( obj.unitIncPhone ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n        ';
 } ;
__p += '\n\n        ';
 if (App.config.company.config.videoEnabled) { ;
__p += '\n        <div class="span2">\n            <h5>Video</h5>\n            <div class="control-group">\n                <label class="control-label required" for="unitIncVideo">Billing Units (minutes)</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of minutes for each billing unit." data-original-title="Billing Units">?</a>\n                <div class="controls">\n                    <input type="text" id="unitIncVideo" name="unitIncVideo" class="input-block-level" value="' +
__e( obj.unitIncVideo ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n        ';
 } ;
__p += '\n    </div>\n';
 } ;
__p += ' <!-- / increments -->\n\n<hr/>\n\n<h4>Services - ' +
__e( obj.baseTier ? "Base Tier" : "Language Tier: " + (obj.name ? obj.name : "<New Language Tier>") ) +
'</h4>\n<div class="accordion" id="services">\n\n</div>\n\n<div class="clear" style="margin-bottom: 25px;">\n    <a id="addLTService" href="javascript:void(0);" title="Add Service"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Service Rates</a>\n    <input type="checkbox" id="showLegacyRates" name="showLegacyRates" value="' +
__e( obj.showLegacyRates ) +
'" ';
 if (obj.showLegacyRates) { ;
__p += ' checked ';
 } ;
__p += ' /> Show Legacy Rates\n</div>\n\n';
 if (obj.showLegacyRates) { ;
__p += '\n';
 var spanWidth = (App.config.company.config.phoneEnabled && App.config.company.config.videoEnabled) ? 4 : ((App.config.company.config.phoneEnabled || App.config.company.config.videoEnabled) ? 6 : 12); ;
__p += '\n<div class="row-fluid">\n    <div class="span' +
__e(spanWidth) +
'">\n        <h3>Rates (In Person)</h3>\n        <div class="row-fluid">\n            <!-- standard -->\n            <div class="span4">\n                <h4>Standard</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Standard Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonStandardBaseRate" class="input-block-level" name="inPersonStandardBaseRate" value="' +
__e( obj.inPersonStandardBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursInPersonStandard" class="input-block-level" name="minHoursInPersonStandard" value="' +
__e( obj.minHoursInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group split-duration-min">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursInPersonStandard" class="input-block-level" name="tieredMinHoursInPersonStandard" value="' +
__e( obj.tieredMinHoursInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonStandard" class="input-block-level" name="inPersonStandard" value="' +
__e( obj.inPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonStandardOvernight" class="input-block-level" name="inPersonStandardOvernight" value="' +
__e( obj.inPersonStandardOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonStandardNight" class="input-block-level" name="inPersonStandardNight" value="' +
__e( obj.inPersonStandardNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsInPersonStandard" class="input-block-level" name="cliffMinsInPersonStandard" value="' +
__e( obj.cliffMinsInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateInPersonStandard" class="input-block-level" name="cliffRateInPersonStandard" value="' +
__e( obj.cliffRateInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelInPersonStandard" class="input-block-level" name="travelInPersonStandard" value="' +
__e( obj.travelInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughInPersonStandard" class="input-block-level" name="passThroughInPersonStandard" value="' +
__e( obj.passThroughInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / standard -->\n            <!-- premium -->\n            <div class="span4">\n                <h4>Premium</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Premium Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPremiumBaseRate" class="input-block-level" name="inPersonPremiumBaseRate" value="' +
__e( obj.inPersonPremiumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursInPersonPremium" class="input-block-level" name="minHoursInPersonPremium" value="' +
__e( obj.minHoursInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group split-duration-min">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursInPersonPremium" class="input-block-level" name="tieredMinHoursInPersonPremium" value="' +
__e( obj.tieredMinHoursInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPremium" class="input-block-level" name="inPersonPremium" value="' +
__e( obj.inPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Premium Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPremiumOvernight" class="input-block-level" name="inPersonPremiumOvernight" value="' +
__e( obj.inPersonPremiumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Premium Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPremiumNight" class="input-block-level" name="inPersonPremiumNight" value="' +
__e( obj.inPersonPremiumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsInPersonPremium" class="input-block-level" name="cliffMinsInPersonPremium" value="' +
__e( obj.cliffMinsInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateInPersonPremium" class="input-block-level" name="cliffRateInPersonPremium" value="' +
__e( obj.cliffRateInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelInPersonPremium" class="input-block-level" name="travelInPersonPremium" value="' +
__e( obj.travelInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughInPersonPremium" class="input-block-level" name="passThroughInPersonPremium" value="' +
__e( obj.passThroughInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- premium -->\n            <!-- platinum -->\n            <div class="span4">\n                <h4>Platinum</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Platinum Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPlatinumBaseRate" class="input-block-level" name="inPersonPlatinumBaseRate" value="' +
__e( obj.inPersonPlatinumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursInPersonPlatinum" class="input-block-level" name="minHoursInPersonPlatinum" value="' +
__e( obj.minHoursInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group split-duration-min">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursInPersonPlatinum" class="input-block-level" name="tieredMinHoursInPersonPlatinum" value="' +
__e( obj.tieredMinHoursInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPlatinum" class="input-block-level" name="inPersonPlatinum" value="' +
__e( obj.inPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Platinum Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPlatinumOvernight" class="input-block-level" name="inPersonPlatinumOvernight" value="' +
__e( obj.inPersonPlatinumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Platinum Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPlatinumNight" class="input-block-level" name="inPersonPlatinumNight" value="' +
__e( obj.inPersonPlatinumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsInPersonPlatinum" class="input-block-level" name="cliffMinsInPersonPlatinum" value="' +
__e( obj.cliffMinsInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateInPersonPlatinum" class="input-block-level" name="cliffRateInPersonPlatinum" value="' +
__e( obj.cliffRateInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelInPersonPlatinum" class="input-block-level" name="travelInPersonPlatinum" value="' +
__e( obj.travelInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughInPersonPlatinum" class="input-block-level" name="passThroughInPersonPlatinum" value="' +
__e( obj.passThroughInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / platinum -->\n        </div> <!-- row (in person base rates) -->\n    </div> <!-- / in person base rates -->\n    ';
 if (App.config.company.config.phoneEnabled) { ;
__p += '\n    <div class="span' +
__e(spanWidth) +
'">\n        <h3>Rates (Telephone)</h3>\n        <div class="row-fluid">\n            <!-- standard -->\n            <div class="span4">\n                <h4>Standard</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Standard Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phoneStandardBaseRate" class="input-block-level" name="phoneStandardBaseRate" value="' +
__e( obj.phoneStandardBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursPhoneStandard" class="input-block-level" name="minHoursPhoneStandard" value="' +
__e( obj.minHoursPhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group split-duration-min">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursPhoneStandard" class="input-block-level" name="tieredMinHoursPhoneStandard" value="' +
__e( obj.tieredMinHoursPhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phoneStandard" class="input-block-level" name="phoneStandard" value="' +
__e( obj.phoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="phoneStandardOvernight" class="input-block-level" name="phoneStandardOvernight" value="' +
__e( obj.phoneStandardOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="phoneStandardNight" class="input-block-level" name="phoneStandardNight" value="' +
__e( obj.phoneStandardNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsPhoneStandard" class="input-block-level" name="cliffMinsPhoneStandard" value="' +
__e( obj.cliffMinsPhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRatePhoneStandard" class="input-block-level" name="cliffRatePhoneStandard" value="' +
__e( obj.cliffRatePhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelPhoneStandard" class="input-block-level" name="travelPhoneStandard" value="' +
__e( obj.travelPhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughPhoneStandard" class="input-block-level" name="passThroughPhoneStandard" value="' +
__e( obj.passThroughPhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / standard -->\n            <!-- premium -->\n            <div class="span4">\n                <h4>Premium</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Premium Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePremiumBaseRate" class="input-block-level" name="phonePremiumBaseRate" value="' +
__e( obj.phonePremiumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursPhonePremium" class="input-block-level" name="minHoursPhonePremium" value="' +
__e( obj.minHoursPhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group split-duration-min">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursPhonePremium" class="input-block-level" name="tieredMinHoursPhonePremium" value="' +
__e( obj.tieredMinHoursPhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePremium" class="input-block-level" name="phonePremium" value="' +
__e( obj.phonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePremiumOvernight" class="input-block-level" name="phonePremiumOvernight" value="' +
__e( obj.phonePremiumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePremiumNight" class="input-block-level" name="phonePremiumNight" value="' +
__e( obj.phonePremiumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsPhonePremium" class="input-block-level" name="cliffMinsPhonePremium" value="' +
__e( obj.cliffMinsPhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRatePhonePremium" class="input-block-level" name="cliffRatePhonePremium" value="' +
__e( obj.cliffRatePhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelPhonePremium" class="input-block-level" name="travelPhonePremium" value="' +
__e( obj.travelPhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughPhonePremium" class="input-block-level" name="passThroughPhonePremium" value="' +
__e( obj.passThroughPhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- premium -->\n            <!-- platinum -->\n            <div class="span4">\n                <h4>Platinum</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Platinum Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePlatinumBaseRate" class="input-block-level" name="phonePlatinumBaseRate" value="' +
__e( obj.phonePlatinumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursPhonePlatinum" class="input-block-level" name="minHoursPhonePlatinum" value="' +
__e( obj.minHoursPhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group split-duration-min">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursPhonePlatinum" class="input-block-level" name="tieredMinHoursPhonePlatinum" value="' +
__e( obj.tieredMinHoursPhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePlatinum" class="input-block-level" name="phonePlatinum" value="' +
__e( obj.phonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePlatinumOvernight" class="input-block-level" name="phonePlatinumOvernight" value="' +
__e( obj.phonePlatinumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePlatinumNight" class="input-block-level" name="phonePlatinumNight" value="' +
__e( obj.phonePlatinumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsPhonePlatinum" class="input-block-level" name="cliffMinsPhonePlatinum" value="' +
__e( obj.cliffMinsPhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRatePhonePlatinum" class="input-block-level" name="cliffRatePhonePlatinum" value="' +
__e( obj.cliffRatePhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelPhonePlatinum" class="input-block-level" name="travelPhonePlatinum" value="' +
__e( obj.travelPhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughPhonePlatinum" class="input-block-level" name="passThroughPhonePlatinum" value="' +
__e( obj.passThroughPhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / platinum -->\n        </div> <!-- / row (telephone base rates) -->\n    </div> <!-- (telephone base rates) -->\n    ';
 } ;
__p += '\n    ';
 if (App.config.company.config.videoEnabled) { ;
__p += '\n    <div class="span' +
__e(spanWidth) +
'">\n        <h3>Rates (Video)</h3>\n        <div class="row-fluid">\n            <!-- standard -->\n            <div class="span4">\n                <h4>Standard</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Standard Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoStandardBaseRate" class="input-block-level" name="videoStandardBaseRate" value="' +
__e( obj.videoStandardBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursVideoStandard" class="input-block-level" name="minHoursVideoStandard" value="' +
__e( obj.minHoursVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group split-duration-min">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursVideoStandard" class="input-block-level" name="tieredMinHoursVideoStandard" value="' +
__e( obj.tieredMinHoursVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoStandard" class="input-block-level" name="videoStandard" value="' +
__e( obj.videoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoStandardOvernight" class="input-block-level" name="videoStandardOvernight" value="' +
__e( obj.videoStandardOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoStandardNight" class="input-block-level" name="videoStandardNight" value="' +
__e( obj.videoStandardNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsVideoStandard" class="input-block-level" name="cliffMinsVideoStandard" value="' +
__e( obj.cliffMinsVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateVideoStandard" class="input-block-level" name="cliffRateVideoStandard" value="' +
__e( obj.cliffRateVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelVideoStandard" class="input-block-level" name="travelVideoStandard" value="' +
__e( obj.travelVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughVideoStandard" class="input-block-level" name="passThroughVideoStandard" value="' +
__e( obj.passThroughVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / standard -->\n            <!-- premium -->\n            <div class="span4">\n                <h4>Premium</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Premium Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPremiumBaseRate" class="input-block-level" name="videoPremiumBaseRate" value="' +
__e( obj.videoPremiumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursVideoPremium" class="input-block-level" name="minHoursVideoPremium" value="' +
__e( obj.minHoursVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group split-duration-min">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursVideoPremium" class="input-block-level" name="tieredMinHoursVideoPremium" value="' +
__e( obj.tieredMinHoursVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPremium" class="input-block-level" name="videoPremium" value="' +
__e( obj.videoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPremiumOvernight" class="input-block-level" name="videoPremiumOvernight" value="' +
__e( obj.videoPremiumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPremiumNight" class="input-block-level" name="videoPremiumNight" value="' +
__e( obj.videoPremiumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsVideoPremium" class="input-block-level" name="cliffMinsVideoPremium" value="' +
__e( obj.cliffMinsVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateVideoPremium" class="input-block-level" name="cliffRateVideoPremium" value="' +
__e( obj.cliffRateVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelVideoPremium" class="input-block-level" name="travelVideoPremium" value="' +
__e( obj.travelVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughVideoPremium" class="input-block-level" name="passThroughVideoPremium" value="' +
__e( obj.passThroughVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- premium -->\n            <!-- platinum -->\n            <div class="span4">\n                <h4>Platinum</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Platinum Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPlatinumBaseRate" class="input-block-level" name="videoPlatinumBaseRate" value="' +
__e( obj.videoPlatinumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursVideoPlatinum" class="input-block-level" name="minHoursVideoPlatinum" value="' +
__e( obj.minHoursVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group split-duration-min">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursVideoPlatinum" class="input-block-level" name="tieredMinHoursVideoPlatinum" value="' +
__e( obj.tieredMinHoursVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPlatinum" class="input-block-level" name="videoPlatinum" value="' +
__e( obj.videoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPlatinumOvernight" class="input-block-level" name="videoPlatinumOvernight" value="' +
__e( obj.videoPlatinumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPlatinumNight" class="input-block-level" name="videoPlatinumNight" value="' +
__e( obj.videoPlatinumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsVideoPlatinum" class="input-block-level" name="cliffMinsVideoPlatinum" value="' +
__e( obj.cliffMinsVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateVideoPlatinum" class="input-block-level" name="cliffRateVideoPlatinum" value="' +
__e( obj.cliffRateVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelVideoPlatinum" class="input-block-level" name="travelVideoPlatinum" value="' +
__e( obj.travelVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughVideoPlatinum" class="input-block-level" name="passThroughVideoPlatinum" value="' +
__e( obj.passThroughVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / platinum -->\n        </div> <!-- / row (video base rates) -->\n    </div> <!-- (video base rates) -->\n    ';
 } ;
__p += '\n</div> <!-- / tier rates -->\n';
 } ;
__p += '\n\n<hr/>\n\n<h4>Qualification Rates</h4>\n<div class="accordion" id="premiums">\n\n\n</div>\n\n<div class="clear" style="margin-bottom: 25px;">\n    <a id="addPremium" href="javascript:void(0);" title="Add Premium"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Qualification Rates</a>\n</div>\n\n<hr/>\n\n';
 if (obj.baseTier) { ;
__p += '\n    <h4>Base Tier Fees</h4>\n';
 } else { ;
__p += '\n    <h4>Language Tier Fees: ' +
__e( obj.name ? obj.name : "<New Language Tier>" ) +
'</h4>\n';
 } ;
__p += '\n\n<h5>Cancellation Fees</h5>\n<div id="ltCancellationFees">\n\n</div> <!-- / cancellation fees -->\n\n<div class="clear" style="margin-bottom: 25px;">\n    <a id="addLTCancellationFee" href="javascript:void(0);" title="Add Cancellation Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Cancellation Fee</a>\n</div>\n\n<h5>Rush Fees</h5>\n<div id="ltRushFees">\n\n\n</div>\n\n<div class="clear" style="margin-bottom: 25px;">\n    <a id="addLTRushFee" href="javascript:void(0);" title="Add Rush Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Rush Fee</a>\n</div>\n\n\n<h5>Miscellaneous Fees</h5>\n<div id="ltMiscellaneousFees">\n\n</div> <!-- / misellaneous fees -->\n\n<div class="clear" style="margin-bottom: 25px;">\n    <a id="addLTMiscellaneousFee" href="javascript:void(0);" title="Add Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Miscellaneous Fee</a>\n    <a id="addLTCustomFee" href="javascript:void(0);" title="Add Custom Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Custom Fee</a>\n</div>\n\n\n<div class="clear" style="margin-bottom: 25px;">\n    <a id="duplicateLanguageTier" href="javascript:void(0);" title="Duplicate Language Tier"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-newwin"></span>Duplicate Language Tier</a>\n</div>\n\n<hr/>\n';

}
return __p
};

this["JST"]["admin/rateplan/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="span3">\n\n        <h3>Rate Plans</h3>\n        <div id="rate-plan-control" class="compact">\n\n        </div>\n\n    </div>\n\n    <!-- content area -->\n    <div class="span9">\n\n        <div id="edit-panel">\n\n        </div>\n\n    </div> <!-- / content -->\n</div> <!-- / main display area -->\n';

}
return __p
};

this["JST"]["admin/rateplan/miscellaneousfee/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="form-inline">\n        <!-- id(' +
__e( id ) +
') -->\n        ';
 if (obj.id) { ;
__p += '\n        <div class="control-group">\n            <span class="label label-success" title="' +
__e( description ) +
'">Info</span>\n        </div>\n        ';
 } ;
__p += '\n\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label required" for="name">Name</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the name to give this fee" data-original-title="Name">?</a>\n                <div class="controls">\n                    <input type="text" id="name" name="name" class="span12" value="' +
__e( obj.name ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label required" for="chargeType.id">Fee Type</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select how the fee is to be applied." data-original-title="Deduction Type">?</a>\n                <div class="controls">\n                    <select name="chargeType.id" id="chargeType.id" class="span12">\n                        ' +
((__t = ( selectOptions(App.dict.chargeType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label required" for="chargeRate">Fee Rate</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the appropriate rate based upon the fee type." data-original-title="Deduction Rate">?</a>\n                <div class="controls">\n                    <input type="text" id="chargeRate" class="span12" name="chargeRate" value="' +
__e( obj.chargeRate ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n        <div class="span2">\n            <div class="control-group">\n                <label class="control-label required" for="aggregate">Aggregate</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether the fee should only appear in aggregate." data-original-title="Aggregate">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="aggregate" name="aggregate" value="' +
__e( obj.aggregate ) +
'" ';
 if (obj.aggregate) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Aggregate"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n        <div class="span2">\n            <div class="control-group">\n                <div class="controls">\n                    <div>\n                        <label for="applyToInPerson" title="In Person">\n                            <input type="checkbox" id="applyToInPerson" name="applyToInPerson" value="' +
__e( obj.applyToInPerson ) +
'" ';
 if (obj.applyToInPerson) { ;
__p += ' checked ';
 } ;
__p += '/><span class="person"></span>\n                            <a href="javascript:void(0);"  tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the service to which this fee should apply." data-original-title="Apply To">?</a>\n                        </label>\n                    </div>\n                    <div>\n                        <label for="applyToPhone" title="Phone">\n                            <input type="checkbox" id="applyToPhone" name="applyToPhone" value="' +
__e( obj.applyToPhone ) +
'" ';
 if (obj.applyToPhone) { ;
__p += ' checked ';
 } ;
__p += '/><span class="phone"></span>\n                        </label>\n                        <div>\n                        </div>\n                        <label for="applyToVideo" title="Video">\n                            <input type="checkbox" id="applyToVideo" name="applyToVideo" value="' +
__e( obj.applyToVideo ) +
'" ';
 if (obj.applyToVideo) { ;
__p += ' checked ';
 } ;
__p += '/><span class="video">&nbsp;</span>\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="span1">\n            <div class="control-group">\n                <label class="control-label" for="applyOnce">Apply Once?</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether to apply this fee only once." data-original-title="Apply Once">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="applyOnce" name="applyOnce" value="' +
__e( obj.applyOnce ) +
'" ';
 if (obj.applyOnce) { ;
__p += ' checked ';
 } ;
__p += '/>\n                </div>\n            </div>\n        </div>\n\n        <div class="control-group">\n            <label>&nbsp;</label>\n            <a id="deleteFee" href="javascript:void(0);" title="Delete Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["admin/rateplan/premium/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 obj.uniqueDisplayIdentifier = _.uniqueId("premiumTier-") ;
__p += '\n<div class="accordion-group">\n    <div class="accordion-heading">\n        <a class="accordion-toggle" data-toggle="collapse" data-target="#' +
__e( obj.uniqueDisplayIdentifier ) +
'">\n        Qualification: ' +
__e( obj["criteria.name"] ? obj["criteria.name"] : "<New Qualification Rates>" ) +
'\n        ';
 console.log(obj) ;
__p += '\n        </a>\n    </div>\n    <div id="' +
__e( obj.uniqueDisplayIdentifier ) +
'" class="accordion-body collapse ' +
__e( !obj.id ? "in" : "" ) +
'">\n        <div class="accordion-inner">\n\n            <!-- id(' +
__e( obj.id ) +
') -->\n            <div class="row-fluid">\n                <div class="control-group span4">\n                    <label class="control-label required" for="">Criteria / Qualification Rates</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the criteria." data-original-title="Criteria">?</a>\n                    <div class="controls">\n                        <select name="criteria.id" id="criteria.id">\n                            ' +
((__t = ( selectOptions(_.sortBy(App.dict.bookingCriteria, function(obj) { return obj.name }), {noSelection: {id: '', name: '[Choose a Criteria]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n\n                <div class="span4">\n                    <label>&nbsp;</label>\n                    <a id="deletePremium" href="javascript:void(0);" title="Delete Premium"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete Qualification Rates</a>\n                </div>\n\n                <div class="span4">\n                    <label class="control-label" for="name"><strong>Accounts Classification</strong></label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Give this language tier an accounting classification. This will be used to classify the tier within third party accounting software." data-original-title="Language Tier Name">?</a>\n                    <div class="controls">\n                        <input type="text" id="accountsClassification" name="accountsClassification" class="input-block-level" value="' +
__e( obj.accountsClassification ) +
'"/>\n                    </div>\n                </div>\n\n            </div>\n\n            <hr/>\n\n            <h4>Mileage</h4>\n            <div class="row-fluid">\n                <div class="control-group">\n                    <label class="control-label" for="mileageOverride">Mileage Override</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Override mileage. Save the rate plan after checking this to show / hide the mileage." data-original-title="Mileage Override">?</span></a>\n                    <div class="controls">\n                        <input type="checkbox" id="mileageOverride" name="mileageOverride" value="' +
__e( obj.mileageOverride ) +
'" ';
 if (obj.mileageOverride) { ;
__p += ' checked ';
 } ;
__p += ' />\n                    </div>\n                </div>\n            </div>\n\n            ';
 if (obj.mileageOverride) { ;
__p += '\n            <div class="row-fluid">\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label required" for="mileage">Mileage</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the amount in decimals .e.g 0.55 for each mile traveled, if applicable.." data-original-title="Mileage">?</a>\n                        <div class="controls">\n                            <input type="text" id="mileage" name="mileage" class="span12 input-block-level" value="' +
__e( obj.mileage ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label required" for="mileageThreshold">Threshold</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of miles travelled before mileage is applied." data-original-title="Mileage Threshold">?</a>\n                        <div class="controls">\n                            <input type="text" id="mileageThreshold" name="mileageThreshold" class="span12 input-block-level" value="' +
__e( obj.mileageThreshold ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label" for="payMileageInFull">Pay in Full?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="When checked, will calculate mileage fully excluding threshold value" data-original-title="Pay in Full?">?</span></a>\n                        <div class="controls">\n                            <input type="checkbox" id="payMileageInFull" name="payMileageInFull" value="' +
__e( obj.payMileageInFull ) +
'" ';
 if (obj.payMileageInFull) { ;
__p += ' checked ';
 } ;
__p += ' />\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label" for="minMileage">Min Mileage</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum monetary mileage amount that will be paid." data-original-title="Minimum Mileage">?</a>\n                        <div class="controls">\n                            <input type="text" id="minMileage" name="minMileage" class="span12 input-block-level" value="' +
__e( obj.minMileage ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label" for="maxMileage">Max Mileage</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the maximum monetary mileage amount that will be paid." data-original-title="Maximum Mileage">?</a>\n                        <div class="controls">\n                            <input type="text" id="maxMileage" name="maxMileage" class="span12 input-block-level" value="' +
__e( obj.maxMileage ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n\n            </div> <!-- / mileage -->\n\n            ';
 } ;
__p += '\n\n            <h4>Split Minimum Duration</h4>\n            <div class="row-fluid">\n                <div class="control-group">\n                    <label class="control-label" for="splitMinimumDuration">Split Minimum Duration?</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Split minimum duration into tiers to allow for tiered calculation. Save the rate plan after checking this to show / hide the splits." data-original-title="Split Minimum Duration">?</span></a>\n                    <div class="controls">\n                        <input type="checkbox" id="splitMinimumDuration" name="splitMinimumDuration" value="' +
__e( obj.splitMinimumDuration ) +
'" ';
 if (obj.splitMinimumDuration) { ;
__p += ' checked ';
 } ;
__p += ' />\n                    </div>\n                </div>\n            </div>\n\n            <h4>Billing Increments</h4>\n            <div class="row-fluid">\n                <div class="control-group">\n                    <label class="control-label" for="billingIncrementOverride">Billing Increments Override</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Override billing increments. Save the rate plan after checking this to show / hide the billing increments." data-original-title="Billing Increments Override">?</span></a>\n                    <div class="controls">\n                        <input type="checkbox" id="billingIncrementOverride" name="billingIncrementOverride" value="' +
__e( obj.billingIncrementOverride ) +
'" ';
 if (obj.billingIncrementOverride) { ;
__p += ' checked ';
 } ;
__p += ' />\n                    </div>\n                </div>\n            </div>\n            ';
 if (obj.billingIncrementOverride) { ;
__p += '\n            <div class="row-fluid">\n                <div class="span2">\n                    <h5>In Person</h5>\n                    <div class="control-group">\n                        <label class="control-label required" for="unitIncInPerson">Billing Units (minutes)</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of minutes for each billing unit." data-original-title="Billing Units">?</a>\n                        <div class="controls">\n                            <input type="text" id="unitIncInPerson" name="unitIncInPerson" class="input-block-level" value="' +
__e( obj.unitIncInPerson ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n\n                ';
 if (App.config.company.config.phoneEnabled) { ;
__p += '\n                <div class="span2">\n                    <h5>Phone</h5>\n                    <div class="control-group">\n                        <label class="control-label required" for="unitIncPhone">Billing Units (minutes)</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of minutes for each billing unit." data-original-title="Billing Units">?</a>\n                        <div class="controls">\n                            <input type="text" id="unitIncPhone" name="unitIncPhone" class="input-block-level" value="' +
__e( obj.unitIncPhone ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n\n                ';
 if (App.config.company.config.videoEnabled) { ;
__p += '\n                <div class="span2">\n                    <h5>Video</h5>\n                    <div class="control-group">\n                        <label class="control-label required" for="unitIncVideo">Billing Units (minutes)</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of minutes for each billing unit." data-original-title="Billing Units">?</a>\n                        <div class="controls">\n                            <input type="text" id="unitIncVideo" name="unitIncVideo" class="input-block-level" value="' +
__e( obj.unitIncVideo ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div>\n            ';
 } ;
__p += ' <!-- / increments -->\n\n            <hr/>\n\n            <h4>Qualificaton Services: ' +
__e( obj["criteria.name"] ? obj["criteria.name"] : "<New Qualification Rates>" ) +
'</h4>\n            <div class="accordion" id="premServices">\n\n            </div>\n\n            <div class="clear" style="margin-bottom: 25px;">\n                <a id="addPremService" href="javascript:void(0);" title="Add Service"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Service Rates</a>\n                <input type="checkbox" id="showLegacyRates" name="showLegacyRates" value="' +
__e( obj.showLegacyRates ) +
'" ';
 if (obj.showLegacyRates) { ;
__p += ' checked ';
 } ;
__p += ' /> Show Legacy Rates\n            </div>\n\n\n            ';
 if (obj.showLegacyRates) { ;
__p += '\n            ';
 var spanWidth = (App.config.company.config.phoneEnabled && App.config.company.config.videoEnabled) ? 4 : ((App.config.company.config.phoneEnabled || App.config.company.config.videoEnabled) ? 6 : 12); ;
__p += '\n            <div class="row-fluid">\n            <div class="span' +
__e(spanWidth) +
'">\n            <h3>Rates (In Person)</h3>\n            <div class="row-fluid">\n            <!-- standard -->\n            <div class="span4">\n                <h4>Standard</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Standard Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonStandardBaseRate" class="input-block-level" name="inPersonStandardBaseRate" value="' +
__e( obj.inPersonStandardBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursInPersonStandard" class="input-block-level" name="minHoursInPersonStandard" value="' +
__e( obj.minHoursInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursInPersonStandard" class="input-block-level" name="tieredMinHoursInPersonStandard" value="' +
__e( obj.tieredMinHoursInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonStandard" class="input-block-level" name="inPersonStandard" value="' +
__e( obj.inPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonStandardOvernight" class="input-block-level" name="inPersonStandardOvernight" value="' +
__e( obj.inPersonStandardOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonStandardNight" class="input-block-level" name="inPersonStandardNight" value="' +
__e( obj.inPersonStandardNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsInPersonStandard" class="input-block-level" name="cliffMinsInPersonStandard" value="' +
__e( obj.cliffMinsInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateInPersonStandard" class="input-block-level" name="cliffRateInPersonStandard" value="' +
__e( obj.cliffRateInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelInPersonStandard" class="input-block-level" name="travelInPersonStandard" value="' +
__e( obj.travelInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughInPersonStandard" class="input-block-level" name="passThroughInPersonStandard" value="' +
__e( obj.passThroughInPersonStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / standard -->\n            <!-- premium -->\n            <div class="span4">\n                <h4>Premium</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Premium Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPremiumBaseRate" class="input-block-level" name="inPersonPremiumBaseRate" value="' +
__e( obj.inPersonPremiumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursInPersonPremium" class="input-block-level" name="minHoursInPersonPremium" value="' +
__e( obj.minHoursInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursInPersonPremium" class="input-block-level" name="tieredMinHoursInPersonPremium" value="' +
__e( obj.tieredMinHoursInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPremium" class="input-block-level" name="inPersonPremium" value="' +
__e( obj.inPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Premium Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPremiumOvernight" class="input-block-level" name="inPersonPremiumOvernight" value="' +
__e( obj.inPersonPremiumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Premium Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPremiumNight" class="input-block-level" name="inPersonPremiumNight" value="' +
__e( obj.inPersonPremiumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsInPersonPremium" class="input-block-level" name="cliffMinsInPersonPremium" value="' +
__e( obj.cliffMinsInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateInPersonPremium" class="input-block-level" name="cliffRateInPersonPremium" value="' +
__e( obj.cliffRateInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelInPersonPremium" class="input-block-level" name="travelInPersonPremium" value="' +
__e( obj.travelInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughInPersonPremium" class="input-block-level" name="passThroughInPersonPremium" value="' +
__e( obj.passThroughInPersonPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- premium -->\n            <!-- platinum -->\n            <div class="span4">\n                <h4>Platinum</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Platinum Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPlatinumBaseRate" class="input-block-level" name="inPersonPlatinumBaseRate" value="' +
__e( obj.inPersonPlatinumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursInPersonPlatinum" class="input-block-level" name="minHoursInPersonPlatinum" value="' +
__e( obj.minHoursInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursInPersonPlatinum" class="input-block-level" name="tieredMinHoursInPersonPlatinum" value="' +
__e( obj.tieredMinHoursInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPlatinum" class="input-block-level" name="inPersonPlatinum" value="' +
__e( obj.inPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Platinum Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPlatinumOvernight" class="input-block-level" name="inPersonPlatinumOvernight" value="' +
__e( obj.inPersonPlatinumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Platinum Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="inPersonPlatinumNight" class="input-block-level" name="inPersonPlatinumNight" value="' +
__e( obj.inPersonPlatinumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsInPersonPlatinum" class="input-block-level" name="cliffMinsInPersonPlatinum" value="' +
__e( obj.cliffMinsInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateInPersonPlatinum" class="input-block-level" name="cliffRateInPersonPlatinum" value="' +
__e( obj.cliffRateInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelInPersonPlatinum" class="input-block-level" name="travelInPersonPlatinum" value="' +
__e( obj.travelInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughInPersonPlatinum" class="input-block-level" name="passThroughInPersonPlatinum" value="' +
__e( obj.passThroughInPersonPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / platinum -->\n            </div> <!-- row (in person base rates) -->\n            </div> <!-- / in person base rates -->\n            ';
 if (App.config.company.config.phoneEnabled) { ;
__p += '\n            <div class="span' +
__e(spanWidth) +
'">\n            <h3>Rates (Telephone)</h3>\n            <div class="row-fluid">\n            <!-- standard -->\n            <div class="span4">\n                <h4>Standard</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Standard Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phoneStandardBaseRate" class="input-block-level" name="phoneStandardBaseRate" value="' +
__e( obj.phoneStandardBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursPhoneStandard" class="input-block-level" name="minHoursPhoneStandard" value="' +
__e( obj.minHoursPhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursPhoneStandard" class="input-block-level" name="tieredMinHoursPhoneStandard" value="' +
__e( obj.tieredMinHoursPhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phoneStandard" class="input-block-level" name="phoneStandard" value="' +
__e( obj.phoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="phoneStandardOvernight" class="input-block-level" name="phoneStandardOvernight" value="' +
__e( obj.phoneStandardOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="phoneStandardNight" class="input-block-level" name="phoneStandardNight" value="' +
__e( obj.phoneStandardNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsPhoneStandard" class="input-block-level" name="cliffMinsPhoneStandard" value="' +
__e( obj.cliffMinsPhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRatePhoneStandard" class="input-block-level" name="cliffRatePhoneStandard" value="' +
__e( obj.cliffRatePhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelPhoneStandard" class="input-block-level" name="travelPhoneStandard" value="' +
__e( obj.travelPhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughPhoneStandard" class="input-block-level" name="passThroughPhoneStandard" value="' +
__e( obj.passThroughPhoneStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / standard -->\n            <!-- premium -->\n            <div class="span4">\n                <h4>Premium</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Premium Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePremiumBaseRate" class="input-block-level" name="phonePremiumBaseRate" value="' +
__e( obj.phonePremiumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursPhonePremium" class="input-block-level" name="minHoursPhonePremium" value="' +
__e( obj.minHoursPhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursPhonePremium" class="input-block-level" name="tieredMinHoursPhonePremium" value="' +
__e( obj.tieredMinHoursPhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePremium" class="input-block-level" name="phonePremium" value="' +
__e( obj.phonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePremiumOvernight" class="input-block-level" name="phonePremiumOvernight" value="' +
__e( obj.phonePremiumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePremiumNight" class="input-block-level" name="phonePremiumNight" value="' +
__e( obj.phonePremiumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsPhonePremium" class="input-block-level" name="cliffMinsPhonePremium" value="' +
__e( obj.cliffMinsPhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRatePhonePremium" class="input-block-level" name="cliffRatePhonePremium" value="' +
__e( obj.cliffRatePhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelPhonePremium" class="input-block-level" name="travelPhonePremium" value="' +
__e( obj.travelPhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughPhonePremium" class="input-block-level" name="passThroughPhonePremium" value="' +
__e( obj.passThroughPhonePremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- premium -->\n            <!-- platinum -->\n            <div class="span4">\n                <h4>Platinum</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Platinum Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePlatinumBaseRate" class="input-block-level" name="phonePlatinumBaseRate" value="' +
__e( obj.phonePlatinumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursPhonePlatinum" class="input-block-level" name="minHoursPhonePlatinum" value="' +
__e( obj.minHoursPhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursPhonePlatinum" class="input-block-level" name="tieredMinHoursPhonePlatinum" value="' +
__e( obj.tieredMinHoursPhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePlatinum" class="input-block-level" name="phonePlatinum" value="' +
__e( obj.phonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePlatinumOvernight" class="input-block-level" name="phonePlatinumOvernight" value="' +
__e( obj.phonePlatinumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="phonePlatinumNight" class="input-block-level" name="phonePlatinumNight" value="' +
__e( obj.phonePlatinumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsPhonePlatinum" class="input-block-level" name="cliffMinsPhonePlatinum" value="' +
__e( obj.cliffMinsPhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRatePhonePlatinum" class="input-block-level" name="cliffRatePhonePlatinum" value="' +
__e( obj.cliffRatePhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelPhonePlatinum" class="input-block-level" name="travelPhonePlatinum" value="' +
__e( obj.travelPhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughPhonePlatinum" class="input-block-level" name="passThroughPhonePlatinum" value="' +
__e( obj.passThroughPhonePlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / platinum -->\n            </div> <!-- / row (telephone base rates) -->\n            </div> <!-- (telephone base rates) -->\n            ';
 } ;
__p += '\n            ';
 if (App.config.company.config.videoEnabled) { ;
__p += '\n            <div class="span' +
__e(spanWidth) +
'">\n            <h3>Rates (Video)</h3>\n            <div class="row-fluid">\n            <!-- standard -->\n            <div class="span4">\n                <h4>Standard</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Standard Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoStandardBaseRate" class="input-block-level" name="videoStandardBaseRate" value="' +
__e( obj.videoStandardBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursVideoStandard" class="input-block-level" name="minHoursVideoStandard" value="' +
__e( obj.minHoursVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursVideoStandard" class="input-block-level" name="tieredMinHoursVideoStandard" value="' +
__e( obj.tieredMinHoursVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoStandard" class="input-block-level" name="videoStandard" value="' +
__e( obj.videoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoStandardOvernight" class="input-block-level" name="videoStandardOvernight" value="' +
__e( obj.videoStandardOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoStandardNight" class="input-block-level" name="videoStandardNight" value="' +
__e( obj.videoStandardNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsVideoStandard" class="input-block-level" name="cliffMinsVideoStandard" value="' +
__e( obj.cliffMinsVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateVideoStandard" class="input-block-level" name="cliffRateVideoStandard" value="' +
__e( obj.cliffRateVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelVideoStandard" class="input-block-level" name="travelVideoStandard" value="' +
__e( obj.travelVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughVideoStandard" class="input-block-level" name="passThroughVideoStandard" value="' +
__e( obj.passThroughVideoStandard ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / standard -->\n            <!-- premium -->\n            <div class="span4">\n                <h4>Premium</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Premium Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPremiumBaseRate" class="input-block-level" name="videoPremiumBaseRate" value="' +
__e( obj.videoPremiumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursVideoPremium" class="input-block-level" name="minHoursVideoPremium" value="' +
__e( obj.minHoursVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursVideoPremium" class="input-block-level" name="tieredMinHoursVideoPremium" value="' +
__e( obj.tieredMinHoursVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPremium" class="input-block-level" name="videoPremium" value="' +
__e( obj.videoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPremiumOvernight" class="input-block-level" name="videoPremiumOvernight" value="' +
__e( obj.videoPremiumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPremiumNight" class="input-block-level" name="videoPremiumNight" value="' +
__e( obj.videoPremiumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsVideoPremium" class="input-block-level" name="cliffMinsVideoPremium" value="' +
__e( obj.cliffMinsVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateVideoPremium" class="input-block-level" name="cliffRateVideoPremium" value="' +
__e( obj.cliffRateVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelVideoPremium" class="input-block-level" name="travelVideoPremium" value="' +
__e( obj.travelVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughVideoPremium" class="input-block-level" name="passThroughVideoPremium" value="' +
__e( obj.passThroughVideoPremium ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- premium -->\n            <!-- platinum -->\n            <div class="span4">\n                <h4>Platinum</h4>\n                ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Platinum Base Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPlatinumBaseRate" class="input-block-level" name="videoPlatinumBaseRate" value="' +
__e( obj.videoPlatinumBaseRate ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Min Duration (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="minHoursVideoPlatinum" class="input-block-level" name="minHoursVideoPlatinum" value="' +
__e( obj.minHoursVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="tieredMinHoursVideoPlatinum" class="input-block-level" name="tieredMinHoursVideoPlatinum" value="' +
__e( obj.tieredMinHoursVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPlatinum" class="input-block-level" name="videoPlatinum" value="' +
__e( obj.videoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 if (enableOvernightNight) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Overnight)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPlatinumOvernight" class="input-block-level" name="videoPlatinumOvernight" value="' +
__e( obj.videoPlatinumOvernight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (Night)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                    <div class="controls">\n                        <input type="text" id="videoPlatinumNight" class="input-block-level" name="videoPlatinumNight" value="' +
__e( obj.videoPlatinumNight ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (enableCliffs) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Cliff (minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffMinsVideoPlatinum" class="input-block-level" name="cliffMinsVideoPlatinum" value="' +
__e( obj.cliffMinsVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label required" for="">Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="cliffRateVideoPlatinum" class="input-block-level" name="cliffRateVideoPlatinum" value="' +
__e( obj.cliffRateVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.enableTravel) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Travel Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="travelVideoPlatinum" class="input-block-level" name="travelVideoPlatinum" value="' +
__e( obj.travelVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                ';
 if (passThroughRatesEnabled) { ;
__p += '\n                <div class="control-group">\n                    <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                    <div class="controls">\n                        <input type="text" id="passThroughVideoPlatinum" class="input-block-level" name="passThroughVideoPlatinum" value="' +
__e( obj.passThroughVideoPlatinum ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div> <!-- / platinum -->\n            </div> <!-- / row (video base rates) -->\n            </div> <!-- (video base rates) -->\n            ';
 } ;
__p += '\n            </div> <!-- / tier rates -->\n            ';
 } ;
__p += '\n\n            <hr/>\n\n            <h4>Qualification Fees: ' +
__e( obj["criteria.name"] ? obj["criteria.name"] : "<New Qualification Rates>" ) +
'</h4>\n            <h5>Qualification Cancellation Fees ' +
__e( obj["criteria.name"] ? obj["criteria.name"] : "<New Qualification Rates>" ) +
'</h5>\n            <div id="premCancellationFees">\n\n            </div> <!-- / cancellation fees -->\n\n            <div class="clear" style="margin-bottom: 25px;">\n                <a id="addPremCancellationFee" href="javascript:void(0);" title="Add Cancellation Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Cancellation Fee</a>\n            </div>\n\n            <h5>Qualification Rush Fees ' +
__e( obj["criteria.name"] ? obj["criteria.name"] : "<New Qualification Rates>" ) +
'</h5>\n            <div id="premRushFees">\n\n\n            </div>\n\n            <div class="clear" style="margin-bottom: 25px;">\n                <a id="addPremRushFee" href="javascript:void(0);" title="Add Rush Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Rush Fee</a>\n            </div>\n\n\n            <h5>Qualification Miscellaneous Fees: ' +
__e( obj["criteria.name"] ? obj["criteria.name"] : "<New Qualification Rates>" ) +
'</h5>\n            <div id="premMiscellaneousFees">\n\n            </div> <!-- / misellaneous fees -->\n\n            <div class="clear" style="margin-bottom: 25px;">\n                <a id="addPremMiscellaneousFee" href="javascript:void(0);" title="Add Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Miscellaneous Fee</a>\n                <a id="addPremCustomFee" href="javascript:void(0);" title="Add Custom Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Custom Fee</a>\n            </div>\n\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["admin/rateplan/rateplan/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#general" data-toggle="tab">General - ' +
__e( name ? name : "<New RatePlan>" ) +
'</a></li>\n    <li><a href="#base-rates" data-toggle="tab">Base Rates</a></li>\n    <li><a href="#language-tiers" data-toggle="tab">Language Tiers</a></li>\n    <li><a href="#incidentals" data-toggle="tab">Incidentals</a></li>\n    <li><a href="#volume-pricing" data-toggle="tab">Volume Pricing</a></li>\n    <li><a href="#custom" data-toggle="tab">Custom</a></li>\n    <!--<li><a href="#customers" data-toggle="tab">Customers</a></li>\n        <li><a href="#interpreters" data-toggle="tab">Interpreters</a></li>-->\n    <li><a href="#history" data-toggle="tab">Audit History</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n    <div class="tab-pane active" id="general">\n\n        <div id="ratePlan">\n            <!-- id(' +
__e( id ) +
') -->\n            <h4>General' +
__e( name ? name : "<New RatePlan>" ) +
'</h4>\n            <div>\n                <div class="row-fluid">\n                    <!-- left column -->\n                    <div class="span6">\n                        <div class="control-group">\n                            <label class="control-label required" for="name">Name</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter a relevant name for the rate plan." data-original-title="Rate Plan Name">?</a>\n                            <div class="controls">\n                                <input id="name" name="name" type="text" class="span12 input-block-level" value="' +
__e( name ) +
'" placeholder="Rate Plan Name"/>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n\n                        <div class="control-group">\n                            <label class="control-label required" for="type.id">Rate Plan Type</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select to whom this rate plan is applicable to." data-original-title="Rate Plan Type">?</a>\n                            <div class="controls">\n                                <select name="type.id" id="type.id" class="span12 input-block-level">\n                                    ' +
((__t = ( selectOptions(App.dict.ratePlanType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n\n                        <div class="control-group">\n                            <label class="control-label" for="defaultRatePlan">Default?</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Is this the default rate plan, to be applied when no rate plan is directly associated with an interpreter or customer.<p>You must have at least one default rate plan for interpreters and customers." data-original-title="Default Rate Plan">?</span></a>\n                            <div class="controls">\n                                <input type="checkbox" id="defaultRatePlan" name="defaultRatePlan" value="' +
__e( obj.defaultRatePlan ) +
'" ';
 if (obj.defaultRatePlan) { ;
__p += ' checked ';
 } ;
__p += ' />\n                            </div>\n                        </div>\n                        <div class="control-group">\n                            <label class="control-label" for="active">Active?</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Is this rate plan active? <p>Default rate plans have to be active always." data-original-title="Rate Plan Active">?</span></a>\n                            <div class="controls">\n                                <input type="checkbox" id="active" name="active" value="' +
__e( obj.active ) +
'" ';
 if (obj.active) { ;
__p += ' checked ';
 } ;
__p += ' />\n                            </div>\n                        </div>\n                    </div> <!-- / left column -->\n\n                    <!-- right column -->\n                    <div class="span6">\n                        <div class="control-group">\n                            <label class="control-label required" for="description">Description</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter a relevant description for the rate plan.<p>This description will appear in the quotation information sent to customers and interpreters." data-original-title="Rate Plan Description">?</a>\n                            <div class="controls">\n                                <textarea style="width: 100%; height: 100px; margin-top: 2px;" class="input-block-level" id="description" name="description">' +
__e( obj.description ) +
'</textarea>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n\n                        <h4>Applicable Regions</h4>\n                        <div class="control-group">\n                            <label class="control-label" for="regionalDefault">Regional Default?</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Is this the default rate plan for across all regions." data-original-title="Regional Default?">?</span></a>\n                            <div class="controls">\n                                <input type="checkbox" id="regionalDefault" name="regionalDefault" value="' +
__e( obj.regionalDefault ) +
'" ';
 if (obj.regionalDefault) { ;
__p += ' checked ';
 } ;
__p += ' />\n                            </div>\n                        </div>\n                        <div id="regions">\n\n                        </div> <!-- / regions -->\n                        <div class="clear" style="margin-bottom: 25px;">\n                            <a id="addRegion" href="javascript:void(0);" title="Add Region"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Region</a>\n                        </div>\n\n                    </div> <!-- / right column -->\n\n                </div> <!-- / rate plan name etc -->\n\n                <hr/>\n\n                <h4>Mileage</h4>\n                <div class="row-fluid">\n                    <div class="span2">\n                        <div class="control-group">\n                            <label class="control-label" for="automaticMileage">Finance Mileage Automatically?</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Add automatic mileage when financing" data-original-title="Automatic Mileage?">?</span></a>\n                            <div class="controls">\n                                <input type="checkbox" id="automaticMileage" name="automaticMileage" value="' +
__e( obj.automaticMileage ) +
'" ';
 if (obj.automaticMileage) { ;
__p += ' checked ';
 } ;
__p += ' />\n                            </div>\n                        </div>\n                    </div>\n                    <div class="span2">\n                        <div class="control-group">\n                            <label class="control-label required" for="mileage">Mileage</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the amount in decimals .e.g 0.55 for each mile traveled, if applicable.." data-original-title="Mileage">?</a>\n                            <div class="controls">\n                                <input type="text" id="mileage" name="mileage" class="span12 input-block-level" value="' +
__e( obj.mileage ) +
'"/>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="span2">\n                        <div class="control-group">\n                            <label class="control-label required" for="mileageThreshold">Mileage Threshold</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of miles travelled before mileage is applied." data-original-title="Mileage Threshold">?</a>\n                            <div class="controls">\n                                <input type="text" id="mileageThreshold" name="mileageThreshold" class="span12 input-block-level" value="' +
__e( obj.mileageThreshold ) +
'"/>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="span2">\n                        <div class="control-group">\n                            <label class="control-label" for="payMileageInFull">Pay in Full?</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="When checked, will calculate mileage fully excluding threshold value" data-original-title="Pay in Full?">?</span></a>\n                            <div class="controls">\n                                <input type="checkbox" id="payMileageInFull" name="payMileageInFull" value="' +
__e( obj.payMileageInFull ) +
'" ';
 if (obj.payMileageInFull) { ;
__p += ' checked ';
 } ;
__p += ' />\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="span2">\n                        <div class="control-group">\n                            <label class="control-label" for="minMileage">Min Mileage</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum monetary mileage amount that will be paid." data-original-title="Minimum Mileage">?</a>\n                            <div class="controls">\n                                <input type="text" id="minMileage" name="minMileage" class="span12 input-block-level" value="' +
__e( obj.minMileage ) +
'"/>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="span2">\n                        <div class="control-group">\n                            <label class="control-label" for="maxMileage">Max Mileage</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the maximum monetary mileage amount that will be paid." data-original-title="Maximum Mileage">?</a>\n                            <div class="controls">\n                                <input type="text" id="maxMileage" name="maxMileage" class="span12 input-block-level" value="' +
__e( obj.maxMileage ) +
'"/>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- / mileage -->\n\n                <hr/>\n\n                <h4>Rate Plan Options</h4>\n                <div class="row-fluid">\n                    <div class="control-group span3">\n                        <label class="control-label" for="splitCharges">Split Charges?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="If service spans multiple rate zones, split charges into different rate zones. Otherwise entire service is charged at rate for initial rate zone." data-original-title="Split Charges">?</span></a>\n                        <div class="controls">\n                            <input type="checkbox" id="splitCharges" name="splitCharges" value="' +
__e( obj.splitCharges ) +
'" ';
 if (obj.splitCharges) { ;
__p += ' checked ';
 } ;
__p += ' />\n                        </div>\n                    </div>\n\n                    <div class="control-group span3">\n                        <label class="control-label" for="enableCliffs">Enable Cliffs?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Allows different charges to be applied after a specific duration. Save the rate plan after checking this to show / hide the cliffs." data-original-title="Enable Cliffs">?</span></a>\n                        <div class="controls">\n                            <input type="checkbox" id="enableCliffs" name="enableCliffs" value="' +
__e( obj.enableCliffs ) +
'" ';
 if (obj.enableCliffs) { ;
__p += ' checked ';
 } ;
__p += ' />\n                        </div>\n                    </div>\n\n                    <div class="control-group span3">\n                        <label class="control-label" for="billActuals">Bill Actuals?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether to bill actuals versus scheduled time, where actuals is less than the scheduled time." data-original-title="Bill Actuals?">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="billActuals" name="billActuals" ';
 if (obj.billActuals) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( obj.billActuals ) +
'"/>\n                        </div>\n                    </div>\n\n                    <div class="control-group span3">\n                        <label class="control-label" for="billFromArrivalTime">Bill From Arrival Time?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether to bill from arrival time to the actual end time versus scheduled time." data-original-title="Bill From Arrival Time?">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="billFromArrivalTime" name="billFromArrivalTime" ';
 if (obj.billFromArrivalTime) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( obj.billFromArrivalTime ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="row-fluid">\n                    <div class="control-group span3">\n                        <label class="control-label" for="billMinimumCancellation">Bill Minimum Cancellation?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether to bill minimum cancellation versus scheduled time.<br/><br/>Company wide setting can be configured under company configuration page." data-original-title="Bill Minimum Cancellation?">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="billMinimumCancellation" name="billMinimumCancellation" ';
 if (obj.billMinimumCancellation) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( obj.billMinimumCancellation ) +
'"/>\n                        </div>\n                    </div>\n\n                    <div class="control-group span3">\n                        <label class="control-label" for="useInterpreterRates">Use Interpreter Rates?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to indicate whether the interpreter rates are to be directly billed to the customer, rather than the customer rates specified on this rate plan. Checking this will use the interpreter rates for the assigned interpreter. All other fees will be picked up from this customer rate plan." data-original-title="Use Interpreter Rates">?</span></a>\n                        <div class="controls">\n                            <input type="checkbox" id="useInterpreterRates" name="useInterpreterRates" value="' +
__e( obj.useInterpreterRates ) +
'" ';
 if (obj.useInterpreterRates) { ;
__p += ' checked ';
 } ;
__p += ' />\n                        </div>\n                    </div>\n\n                    <div class="control-group span3">\n                        <label class="control-label" for="useCustomerAccountsClassification">Use Customer Accounts Classification?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to indicate whether the customer Accounts Classification are to be used for the interpreter. Checking this will use the customer Accounts Classification on the customer rate plan for the payable item." data-original-title="Use Customer Classification">?</span></a>\n                        <div class="controls">\n                            <input type="checkbox" id="useCustomerAccountsClassification" name="useCustomerAccountsClassification" value="' +
__e( obj.useCustomerAccountsClassification ) +
'" ';
 if (obj.useCustomerAccountsClassification) { ;
__p += ' checked ';
 } ;
__p += ' />\n                        </div>\n                    </div>\n\n                    <div class="control-group span3">\n                        <label class="control-label" for="enableVolumePricing">Enable Volume Pricing?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enables volume pricing to be applied for this rate plan. These are configured under the Volume Pricing section." data-original-title="Enable Volume Pricing">?</span></a>\n                        <div class="controls">\n                            <input type="checkbox" id="enableVolumePricing" name="enableVolumePricing" value="' +
__e( obj.enableVolumePricing ) +
'" ';
 if (obj.enableVolumePricing) { ;
__p += ' checked ';
 } ;
__p += ' />\n                        </div>\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div class="control-group span3">\n                        <label class="control-label" for="roundNearestNeighbor">Round Nearest Neighbor?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether to round billing increments to the nearest neighbor i.e. up or down depending on the number of minutes into the subsequent increment." data-original-title="Round to Nearest Neighbor?">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="roundNearestNeighbor" name="roundNearestNeighbor" ';
 if (roundNearestNeighbor) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( roundNearestNeighbor ) +
'"/>\n                        </div>\n                    </div>\n\n                    ';
 if (App.config.company.config.overnightNightZonesEnabled) { ;
__p += '\n                    <div class="control-group span3">\n                        <label class="control-label" for="enableOvernightNight">Overnight / Night Enabled</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Allow overnight / night rates on thie rate plan" data-original-title="Overnight / Night Enabled">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="enableOvernightNight" name="enableOvernightNight" value="' +
__e( obj.enableOvernightNight ) +
'" ';
 if (obj.enableOvernightNight) { ;
__p += ' checked ';
 } ;
__p += '/>\n                        </div>\n                    </div>\n                    ';
 } ;
__p += '\n\n                </div>\n                <h5>Pass Through Settings</h5>\n                <div class="row-fluid">\n                    <div class="control-group span2">\n                        <label class="control-label" for="passThroughRatesEnabled">Pass Through Rates Enabled?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether pass through rates are enabled. These are rates that are defined on this rate plan and passed to / from the customer / interpreter as required." data-original-title="Pass Through Rates Enabled?">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="passThroughRatesEnabled" name="passThroughRatesEnabled" ';
 if (passThroughRatesEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( passThroughRatesEnabled ) +
'"/>\n                        </div>\n                    </div>\n                    <div class="control-group span2">\n                        <label class="control-label" for="usePassThroughRateZone">Use Pass Through Rate Zone?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether to pick up opposite rate zone" data-original-title="Use Pass Through Rate Zone?">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="usePassThroughRateZone" name="usePassThroughRateZone" ';
 if (usePassThroughRateZone) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( usePassThroughRateZone ) +
'"/>\n                        </div>\n                    </div>\n                    <div class="control-group span2">\n                        <label class="control-label" for="passThroughIncidentalsEnabled">Pass Through Incidentals Enabled?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether pass through incidentals are enabled. These are incidentals that are defined on this rate plan and passed to / from the customer / interpreter as required." data-original-title="Pass Through Incidentals Enabled?">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="passThroughIncidentalsEnabled" name="passThroughIncidentalsEnabled" ';
 if (passThroughIncidentalsEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( passThroughIncidentalsEnabled ) +
'"/>\n                        </div>\n                    </div>\n                    <div class="control-group span2">\n                        <label class="control-label" for="passThroughMinimumDurationsEnabled">Pass Through Minimum Durations Enabled?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether pass through minimum durations are enabled. When set the minimum durations from the other rate plan (interpreter / customer) are used in place of the minimum durations on this rate plan." data-original-title="Pass Through Minimum Durations Enabled?">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="passThroughMinimumDurationsEnabled" name="passThroughMinimumDurationsEnabled" ';
 if (passThroughMinimumDurationsEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( passThroughMinimumDurationsEnabled ) +
'"/>\n                        </div>\n                    </div>\n                    <div class="control-group span2">\n                        <label class="control-label" for="passThroughBillingIncrementsEnabled">Pass Through Billing Increments Enabled?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether pass through billing increments are enabled. When set the minimum durations from the other rate plan (interpreter / customer) are used in place of the billing increments on this rate plan." data-original-title="Pass Through Billing Increments Enabled?">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="passThroughBillingIncrementsEnabled" name="passThroughBillingIncrementsEnabled" ';
 if (passThroughBillingIncrementsEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( passThroughBillingIncrementsEnabled ) +
'"/>\n                        </div>\n                    </div>\n                    <div class="control-group span2">\n                        <label class="control-label" for="passThroughCliffMinutesEnabled">Pass Through Cliff Minutes Enabled?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether pass through cliff minutes is enabled. When set the cliff minutes from the other rate plan (interpreter / customer) are used in place of the cliff minutes on this rate plan." data-original-title="Pass Through Cliff Minutes Enabled?">?</a>\n                        <div class="controls">\n                            <input type="checkbox" id="passThroughCliffMinutesEnabled" name="passThroughCliffMinutesEnabled" ';
 if (passThroughCliffMinutesEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( passThroughCliffMinutesEnabled ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n\n                <hr/>\n\n                <h4>Billing Increments</h4>\n                <div class="row-fluid">\n                    <div class="span2">\n                        <h5>In Person</h5>\n                        <div class="control-group">\n                            <label class="control-label required" for="unitIncInPerson">Billing Units (minutes)</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of minutes for each billing unit." data-original-title="Billing Units">?</a>\n                            <div class="controls">\n                                <input type="text" id="unitIncInPerson" name="unitIncInPerson" class="span12 input-block-level" value="' +
__e( obj.unitIncInPerson ) +
'"/>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    ';
 if (App.config.company.config.phoneEnabled) { ;
__p += '\n                    <div class="span2">\n                        <h5>Phone</h5>\n                        <div class="control-group">\n                            <label class="control-label required" for="unitIncPhone">Billing Units (minutes)</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of minutes for each billing unit." data-original-title="Billing Units">?</a>\n                            <div class="controls">\n                                <input type="text" id="unitIncPhone" name="unitIncPhone" class="span12 input-block-level" value="' +
__e( obj.unitIncPhone ) +
'"/>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n                    </div>\n                    ';
 } ;
__p += '\n\n                    ';
 if (App.config.company.config.videoEnabled) { ;
__p += '\n                    <div class="span2">\n                        <h5>Video</h5>\n                        <div class="control-group">\n                            <label class="control-label required" for="unitIncVideo">Billing Units (minutes)</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of minutes for each billing unit." data-original-title="Billing Units">?</a>\n                            <div class="controls">\n                                <input type="text" id="unitIncVideo" name="unitIncVideo" class="span12 input-block-level" value="' +
__e( obj.unitIncVideo ) +
'"/>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n                    </div>\n                    ';
 } ;
__p += '\n\n                    <div class="span2">\n                        <h5>Prorate?</h5>\n                        <div class="control-group">\n                            <label class="control-label" for="prorateUnitIncrements">Prorate Billing Increments?</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Should the billing increments be prorated when they cross between zones e.g. 10 minutes in standard zone one and 5 minutes in premium zone for a 15 minute increment." data-original-title="Prorate Unit Increments">?</a>\n                            <div class="controls">\n                                <input type="checkbox" id="prorateUnitIncrements" name="prorateUnitIncrements" value="' +
__e( obj.prorateUnitIncrements ) +
'" ';
 if (obj.prorateUnitIncrements) { ;
__p += ' checked ';
 } ;
__p += ' />\n                            </div>\n                        </div>\n                    </div>\n\n                </div> <!-- / increments -->\n\n                <hr/>\n\n                <h4>Billing Hours</h4>\n                <div class="row-fluid">\n                    <div class="span6">\n                        <div class="control-group">\n                            <label class="control-label" for="billHoursUsing.id">Bill Hours Using</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Choose the default rule for billing hours in travel time and flat hours on rate plans. Default is to \'Use Average\'" data-original-title="Bill Hours Using">?</a>\n                            <div class="controls">\n                                <select name="billHoursUsing.id" class="input-block-level">\n                                    ' +
((__t = ( selectOptions(App.dict.billHoursUsing, {noSelection: {id: '', name: '[Choose a Rule]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="span6">\n                        <div class="control-group">\n                            <label class="control-label" for="billHoursFlatRate">Bill Hours Flat Rate </label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Flat rate to use if bill hours using flat rate is selected." data-original-title="Bill Hours Flat Rate">?</a>\n                            <div class="controls">\n                                <input id="billHoursFlatRate" name="billHoursFlatRate" class="input-block-level" type="text" value="' +
__e( obj.billHoursFlatRate ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n                </div> <!-- / Bill hours using -->\n\n                <hr/>\n\n                <h4>Fees</h4>\n\n                <h5>Cancellation Fees</h5>\n                <div id="cancellationFees">\n\n                </div> <!-- / cancellation fees -->\n\n                <div class="clear" style="margin-bottom: 25px;">\n                    <a id="addCancellationFee" href="javascript:void(0);" title="Add Cancellation Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Cancellation Fee</a>\n                </div>\n\n                <h5>Deductions</h5>\n                <div id="deductions">\n\n                </div> <!-- / deductions -->\n\n                <div class="clear" style="margin-bottom: 25px;">\n                    <a id="addDeduction" href="javascript:void(0);" title="Add Deduction"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Deduction</a>\n                </div>\n\n                <h5>Miscellaneous Fees</h5>\n                <div id="miscellaneousFees">\n\n                </div> <!-- / misellaneous fees -->\n\n                <div class="clear" style="margin-bottom: 25px;">\n                    <a id="addMiscellaneousFee" href="javascript:void(0);" title="Add Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Miscellaneous Fee</a>\n                    <a id="addCustomFee" href="javascript:void(0);" title="Add Custom Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Custom Fee</a>\n                </div>\n\n            </div>\n\n        </div>\n\n    </div> <!-- / general -->\n\n    <div class="tab-pane" id="base-rates">\n\n        <h4>Base Rate Tier: All Other Languages</h4>\n        <div>\n            <div id="baseLanguageTier">\n\n            </div> <!-- / base tier -->\n\n        </div>\n\n    </div> <!-- / #base-rates -->\n\n    <div class="tab-pane" id="language-tiers">\n\n        <h4>Language Tiers</h4>\n        <div>\n            <div id="languageTiers">\n\n            </div> <!-- / language tiers -->\n\n            <div class="clear" style="margin-bottom: 25px;">\n                <a id="addLanguageTier" href="javascript:void(0);" title="Add Language Tier"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Language Tier</a>\n            </div>\n\n        </div>\n\n    </div> <!-- / language-tier -->\n\n    <div class="tab-pane" id="incidentals">\n\n        <h4>Incidentals</h4>\n        <div>\n            ';
 if (obj.id) { ;
__p += '\n            <p>Explicitly configure the incidentals for this rate plan. Any incidental not configured here will be picked up\n                from the company wide configuration.</p>\n\n            <div id="payableItemTypes">\n\n            </div> <!-- / services configuration -->\n\n            ';
 } else { ;
__p += '\n            <p>Please save the rate plan before configuring incidentals.</p>\n            ';
 } ;
__p += '\n\n        </div>\n\n    </div> <!-- / incidentals -->\n\n    <div class="tab-pane" id="volume-pricing">\n\n        <h4>Volume Pricing</h4>\n        <div>\n            ';
 if (obj.id) { ;
__p += '\n            <p>Configure volume pricing in the table below.</p>\n\n            <div id="volumePriceTiers">\n\n            </div> <!-- / volume pricing -->\n\n            ';
 } else { ;
__p += '\n            <p>Please save the rate plan before configuring volume pricing.</p>\n            ';
 } ;
__p += '\n\n        </div>\n\n    </div> <!-- / volume-pricing -->\n\n    <div class="tab-pane" id="custom">\n\n        <h4>Custom</h4>\n        <div>\n            <p>Please contact your system administrator to review your needs for a custom Rate Plan.</p>\n            <div><textarea readonly>Custom script</textarea></div>\n        </div>\n\n\n    </div> <!-- / custom -->\n\n    <div class="tab-pane" id="customers">\n\n        <h4>Customers</h4>\n        <!-- placeholder for customers assigned -->\n\n    </div> <!-- / customers -->\n    <div class="tab-pane" id="interpreters">\n\n        <h4>Interpreters</h4>\n        <!-- placeholder for interpreters assigned -->\n\n    </div> <!-- / files -->\n    <div class="tab-pane" id="history">\n\n        <h4>Audit History</h4>\n        <div id="audit">\n\n        </div>\n\n    </div> <!-- / history -->\n</div> <!-- / tabs -->\n\n<div id="ratePlan-controls" style="padding-top: 15px;">\n    <button id="save" name="save" value="Save" class="btn btn-primary">Save</button>\n    <button id="new" name="new" value="Add New" class="btn btn-success">New</button>\n    <button id="duplicate" name="duplicate" value="Duplicate" class="btn btn-success">Duplicate</button>\n</div>\n\n';

}
return __p
};

this["JST"]["admin/rateplan/rateplanlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12" type="text" id="filter" placeholder="Search rate plans"/>\n<div id="filter-controls">\n    <div class="row-fluid">\n        <button name="typeFilter" class="span4 btn active" value="">All Plans</button>\n        <button name="typeFilter" class="span4 btn" value="customer">Customer</button>\n        <button name="typeFilter" class="span4 btn" value="interpreter">Interpreter</button>\n        <label>\n            Active rate plans <input type="checkbox" id="filterActive" name="filterActive" checked/>\n        </label>\n    </div>\n</div>\n<ul id="rate-plans" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/rateplan/rateplanlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (defaultRatePlan) { ;
__p += '<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span>';
 } ;
__p +=
__e( obj.name + " (" + obj.description + ")" ) +
'\n';

}
return __p
};

this["JST"]["admin/rateplan/region/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<!-- region (' +
__e( obj.id ) +
') -->\n<div class="control-group">\n    <label class="control-label required" for="id">Region </label>\n    <a href="javascript:void(0);" class="pull-right deleteRegion"><i class="icon icon-minus-sign"></i>Delete</a>\n    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Select the region where this rate plan applies." data-original-title="Region">?</a>\n    <div class="controls">\n        <select class="span12" name="id">\n            ' +
((__t = ( selectOptions(_.filter(App.dict.regions, function(r) { return r.isBilling }), {noSelection: {id: '', name: '[Choose a Region]'}}) )) == null ? '' : __t) +
'\n        </select>\n        <p class="help-block">Required field</p>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["admin/rateplan/service/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 obj.uniqueDisplayIdentifier = _.uniqueId("serviceTier-") ;
__p += '\n<!-- service tier(' +
__e( obj.id ) +
' -->\n<div class="accordion-group">\n    <div class="accordion-heading">\n        <a class="accordion-toggle" data-toggle="collapse" data-target="#' +
__e( obj.uniqueDisplayIdentifier ) +
'">\n            Service: ' +
__e( obj["service.name"] ? obj["service.name"] : "<New Service Rates>" ) +
'\n        </a>\n    </div>\n    <div id="' +
__e( obj.uniqueDisplayIdentifier ) +
'" class="accordion-body collapse ' +
__e( !obj.id ? "in" : "" ) +
'">\n        <div class="accordion-inner">\n\n            <!-- id(' +
__e( obj.id ) +
') -->\n            <div class="row-fluid">\n                <div class="control-group span4">\n                    <label class="control-label required" for="service.id">Service Rates</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the service." data-original-title="Service">?</a>\n                    <div class="controls">\n                        <select id="service.id" name="service.id" class="input-block-level">\n                            ' +
((__t = ( selectOptions(App.dict.bookingMode, {selected: obj.service ? obj.service.id : "", noSelection: {id: '', name: '[Choose a Service]'}, sidx: "name", sord: "asc"}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n\n                <div class="span4">\n                    <label>&nbsp;</label>\n                    <a id="deleteService" href="javascript:void(0);" title="Delete Service"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete Service Rates</a>\n                </div>\n\n                <div class="span4">\n                    <label class="control-label" for="accountsClassification"><strong>Accounts Classification</strong></label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Give this service tier an accounting classification. This will be used to classify the tier within third party accounting software." data-original-title="Service Tier Classification">?</a>\n                    <div class="controls">\n                        <input type="text" id="accountsClassification" name="accountsClassification" class="input-block-level" value="' +
__e( obj.accountsClassification ) +
'"/>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Mileage</h4>\n            <div class="row-fluid">\n                <div class="control-group">\n                    <label class="control-label" for="mileageOverride">Mileage Override</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Override mileage. Save the rate plan after checking this to show / hide the mileage." data-original-title="Mileage Override">?</span></a>\n                    <div class="controls">\n                        <input type="checkbox" id="mileageOverride" name="mileageOverride" value="' +
__e( obj.mileageOverride ) +
'" ';
 if (obj.mileageOverride) { ;
__p += ' checked ';
 } ;
__p += ' />\n                    </div>\n                </div>\n            </div>\n\n            ';
 if (obj.mileageOverride) { ;
__p += '\n            <div class="row-fluid">\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label required" for="mileage">Mileage</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the amount in decimals .e.g 0.55 for each mile traveled, if applicable.." data-original-title="Mileage">?</a>\n                        <div class="controls">\n                            <input type="text" id="mileage" name="mileage" class="span12 input-block-level" value="' +
__e( obj.mileage ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label required" for="mileageThreshold">Threshold</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of miles travelled before mileage is applied." data-original-title="Mileage Threshold">?</a>\n                        <div class="controls">\n                            <input type="text" id="mileageThreshold" name="mileageThreshold" class="span12 input-block-level" value="' +
__e( obj.mileageThreshold ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label" for="payMileageInFull">Pay in Full?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="When checked, will calculate mileage fully excluding threshold value" data-original-title="Pay in Full?">?</span></a>\n                        <div class="controls">\n                            <input type="checkbox" id="payMileageInFull" name="payMileageInFull" value="' +
__e( obj.payMileageInFull ) +
'" ';
 if (obj.payMileageInFull) { ;
__p += ' checked ';
 } ;
__p += ' />\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label" for="minMileage">Min Mileage</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum monetary mileage amount that will be paid." data-original-title="Minimum Mileage">?</a>\n                        <div class="controls">\n                            <input type="text" id="minMileage" name="minMileage" class="span12 input-block-level" value="' +
__e( obj.minMileage ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label" for="maxMileage">Max Mileage</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the maximum monetary mileage amount that will be paid." data-original-title="Maximum Mileage">?</a>\n                        <div class="controls">\n                            <input type="text" id="maxMileage" name="maxMileage" class="span12 input-block-level" value="' +
__e( obj.maxMileage ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n\n            </div> <!-- / mileage -->\n\n            ';
 } ;
__p += '\n\n            <h4>Split Minimum Duration</h4>\n            <div class="row-fluid">\n                <div class="span12">\n                    <div class="control-group">\n                        <label class="control-label" for="splitMinimumDuration">Split Minimum Duration?</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Split minimum duration into tiers to allow for tiered calculation. Save the rate plan after checking this to show / hide the splits." data-original-title="Split Minimum Duration">?</span></a>\n                        <div class="controls">\n                            <input type="checkbox" id="splitMinimumDuration" name="splitMinimumDuration" value="' +
__e( obj.splitMinimumDuration ) +
'" ';
 if (obj.splitMinimumDuration) { ;
__p += ' checked ';
 } ;
__p += ' />\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Billing Increments</h4>\n            <div class="row-fluid">\n                <div class="span12">\n                    <div class="control-group">\n                        <label class="control-label" for="billingIncrementOverride">Billing Increments Override</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Override billing increments. Save the rate plan after checking this to show / hide the billing increments." data-original-title="Billing Increments Override">?</span></a>\n                        <div class="controls">\n                        <input type="checkbox" id="billingIncrementOverride" name="billingIncrementOverride" value="' +
__e( obj.billingIncrementOverride ) +
'" ';
 if (obj.billingIncrementOverride) { ;
__p += ' checked ';
 } ;
__p += ' />\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ';
 if (obj.billingIncrementOverride) { ;
__p += '\n            <div class="row-fluid">\n                <div class="span4">\n                    <div class="control-group">\n                        <label class="control-label required" for="unitInc">Billing Units (minutes)</label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the number of minutes for each billing unit." data-original-title="Billing Units">?</a>\n                        <div class="controls">\n                            <input type="text" id="unitInc" name="unitInc" class="input-block-level" value="' +
__e( obj.unitInc ) +
'"/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ';
 } ;
__p += ' <!-- / increments -->\n\n\n            <!--';
 var spanWidth = (App.config.company.config.phoneEnabled && App.config.company.config.videoEnabled) ? 4 : ((App.config.company.config.phoneEnabled || App.config.company.config.videoEnabled) ? 6 : 12); ;
__p += '-->\n            ';
 var spanWidth = 12 ;
__p += '\n            <div class="row-fluid">\n                <div class="span' +
__e(spanWidth) +
'">\n                    <h3>Rates</h3>\n                    <div class="row-fluid">\n                        <!-- standard -->\n                        <div class="span4">\n                            <h4>Standard</h4>\n                            ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Standard Base Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="standardBaseRate" class="input-block-level" name="standardBaseRate" value="' +
__e( obj.standardBaseRate ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Min Duration (minutes)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                                <div class="controls">\n                                    <input type="text" id="minHoursStandard" class="input-block-level" name="minHoursStandard" value="' +
__e( obj.minHoursStandard ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                                <div class="controls">\n                                    <input type="text" id="tieredMinHoursStandard" class="input-block-level" name="tieredMinHoursStandard" value="' +
__e( obj.tieredMinHoursStandard ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="standard" class="input-block-level" name="standard" value="' +
__e( obj.standard ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 if (enableOvernightNight) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (Overnight)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Standard Rate Overnight">?</a>\n                                <div class="controls">\n                                    <input type="text" id="standardOvernight" class="input-block-level" name="standardOvernight" value="' +
__e( obj.standardOvernight ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (Night)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Standard Rate Night">?</a>\n                                <div class="controls">\n                                    <input type="text" id="standardNight" class="input-block-level" name="standardNight" value="' +
__e( obj.standardNight ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            ';
 if (enableCliffs) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Cliff (minutes)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                                <div class="controls">\n                                    <input type="text" id="cliffMinsStandard" class="input-block-level" name="cliffMinsStandard" value="' +
__e( obj.cliffMinsStandard ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="cliffRateStandard" class="input-block-level" name="cliffRateStandard" value="' +
__e( obj.cliffRateStandard ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            ';
 if (obj.enableTravel) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Travel Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="travelStandard" class="input-block-level" name="travelStandard" value="' +
__e( obj.travelStandard ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            ';
 if (passThroughRatesEnabled) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="passThroughStandard" class="input-block-level" name="passThroughStandard" value="' +
__e( obj.passThroughStandard ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                        </div> <!-- / standard -->\n                        <!-- premium -->\n                        <div class="span4">\n                            <h4>Premium</h4>\n                            ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Premium Base Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="premiumBaseRate" class="input-block-level" name="premiumBaseRate" value="' +
__e( obj.premiumBaseRate ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Min Duration (minutes)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                                <div class="controls">\n                                    <input type="text" id="minHoursPremium" class="input-block-level" name="minHoursPremium" value="' +
__e( obj.minHoursPremium ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                                <div class="controls">\n                                    <input type="text" id="tieredMinHoursPremium" class="input-block-level" name="tieredMinHoursPremium" value="' +
__e( obj.tieredMinHoursPremium ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Standard Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="premium" class="input-block-level" name="premium" value="' +
__e( obj.premium ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 if (enableOvernightNight) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (Overnight)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Premium Rate Overnight">?</a>\n                                <div class="controls">\n                                    <input type="text" id="premiumOvernight" class="input-block-level" name="premiumOvernight" value="' +
__e( obj.premiumOvernight ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (Night)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Premium Rate Night">?</a>\n                                <div class="controls">\n                                    <input type="text" id="premiumNight" class="input-block-level" name="premiumNight" value="' +
__e( obj.premiumNight ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            ';
 if (enableCliffs) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Cliff (minutes)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                                <div class="controls">\n                                    <input type="text" id="cliffMinsPremium" class="input-block-level" name="cliffMinsPremium" value="' +
__e( obj.cliffMinsPremium ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="cliffRatePremium" class="input-block-level" name="cliffRatePremium" value="' +
__e( obj.cliffRatePremium ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            ';
 if (obj.enableTravel) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Travel Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="travelPremium" class="input-block-level" name="travelPremium" value="' +
__e( obj.travelPremium ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            ';
 if (passThroughRatesEnabled) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Premium Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="passThroughPremium" class="input-block-level" name="passThroughPremium" value="' +
__e( obj.passThroughPremium ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                        </div> <!-- premium -->\n                        <!-- platinum -->\n                        <div class="span4">\n                            <h4>Platinum</h4>\n                            ';
 if (App.config.company.config.baseRatesEnabled) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Base Rate (for min. dur.)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the base rate for the minimum duration." data-original-title="Platinum Base Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="platinumBaseRate" class="input-block-level" name="platinumBaseRate" value="' +
__e( obj.platinumBaseRate ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Min Duration (minutes)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the minimum duration." data-original-title="Minimum Duration">?</a>\n                                <div class="controls">\n                                    <input type="text" id="minHoursPlatinum" class="input-block-level" name="minHoursPlatinum" value="' +
__e( obj.minHoursPlatinum ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 if (obj.splitMinimumDuration) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Tier Min Dur (minutes)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the tiered minimum duration." data-original-title="Tiered Minimum Duration">?</a>\n                                <div class="controls">\n                                    <input type="text" id="tieredMinHoursPlatinum" class="input-block-level" name="tieredMinHoursPlatinum" value="' +
__e( obj.tieredMinHoursPlatinum ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="platinum" class="input-block-level" name="platinum" value="' +
__e( obj.platinum ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 if (enableOvernightNight) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (Overnight)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for overnight per hour." data-original-title="Platinum Rate Overnight">?</a>\n                                <div class="controls">\n                                    <input type="text" id="platinumOvernight" class="input-block-level" name="platinumOvernight" value="' +
__e( obj.platinumOvernight ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (Night)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate for night per hour." data-original-title="Platinum Rate Night">?</a>\n                                <div class="controls">\n                                    <input type="text" id="platinumNight" class="input-block-level" name="platinumNight" value="' +
__e( obj.platinumNight ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            ';
 if (enableCliffs) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Cliff (minutes)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the duration in minutes for the cliff." data-original-title="Cliff Duration">?</a>\n                                <div class="controls">\n                                    <input type="text" id="cliffMinsPlatinum" class="input-block-level" name="cliffMinsPlatinum" value="' +
__e( obj.cliffMinsPlatinum ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            <div class="control-group">\n                                <label class="control-label required" for="">Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour to be applied after the cliff." data-original-title="Cliff Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="cliffRatePlatinum" class="input-block-level" name="cliffRatePlatinum" value="' +
__e( obj.cliffRatePlatinum ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            ';
 if (obj.enableTravel) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Travel Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="travelPlatinum" class="input-block-level" name="travelPlatinum" value="' +
__e( obj.travelPlatinum ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                            ';
 if (passThroughRatesEnabled) { ;
__p += '\n                            <div class="control-group">\n                                <label class="control-label required" for="">Pass Through Rate (per hour)</label>\n                                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter the rate per hour." data-original-title="Platinum Rate">?</a>\n                                <div class="controls">\n                                    <input type="text" id="passThroughPlatinum" class="input-block-level" name="passThroughPlatinum" value="' +
__e( obj.passThroughPlatinum ) +
'"/>\n                                    <p class="help-block">Required field</p>\n                                </div>\n                            </div>\n                            ';
 } ;
__p += '\n                        </div> <!-- / platinum -->\n                    </div> <!-- row (in person base rates) -->\n                </div> <!-- / in person base rates -->\n            </div> <!-- / tier rates -->\n\n            <h3>Service Fees</h3>\n            <h4>Service Cancellation Fees</h4>\n            <div id="serviceCancellationFees">\n\n            </div> <!-- / cancellation fees -->\n\n            <div class="clear" style="margin-bottom: 25px;">\n                <a id="addServiceCancellationFee" href="javascript:void(0);" title="Add Cancellation Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Cancellation Fee</a>\n            </div>\n\n            <h4>Service Rush Fees</h4>\n            <div id="serviceRushFees">\n\n\n            </div>\n\n            <div class="clear" style="margin-bottom: 25px;">\n                <a id="addServiceRushFee" href="javascript:void(0);" title="Add Rush Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Rush Fee</a>\n            </div>\n\n\n            <h4>Service Miscellaneous Fees</h4>\n            <div id="serviceMiscellaneousFees">\n\n            </div> <!-- / misellaneous fees -->\n\n            <div class="clear" style="margin-bottom: 25px;">\n                <a id="addServiceMiscellaneousFee" href="javascript:void(0);" title="Add Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Miscellaneous Fee</a>\n                <a id="addServiceCustomFee" href="javascript:void(0);" title="Add Custom Fee"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Custom Fee</a>\n            </div>\n\n        </div>\n    </div>\n</div>\n\n\n';

}
return __p
};

this["JST"]["admin/rateplan/volumepricing/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span12">\n        <button class="btn btn-primary addVolumePriceTierCmd">Add Price Tier</button>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <div class="span-12 list-container">\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["admin/ratezone/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="span3">\n        <h3>Rate Zone Groupings</h3>\n        <div id="rate-zone-control">\n        </div>\n    </div> <!-- / #sidebar -->\n\n    <!-- content area -->\n    <div class="span9">\n\n        <!-- nav tabs -->\n        <ul class="nav nav-tabs">\n            <li class="active"><a href="#general" data-toggle="tab">Configuration</a></li>\n            <!--<li><a href="#customers" data-toggle="tab">Customers</a></li>\n          <li><a href="#interpreters" data-toggle="tab">Interpreters</a></li>-->\n            <li><a href="#history" data-toggle="tab">Audit History</a></li>\n        </ul>\n        <!-- / nav tabs -->\n\n        <!-- tabs -->\n        <div class="tab-content">\n            <div class="tab-pane active" id="general">\n\n                <div id="edit-panel">\n\n                    <div id="controls" class="" style="padding-top: 15px;">\n                        <button id="new" class="btn btn-success" name="new" value="Add New">New Rate Zone</button>\n                    </div>\n\n                </div> <!-- / edit-panel -->\n\n            </div> <!-- / general -->\n            <div class="tab-pane" id="customers">\n\n                <h4>Customers</h4>\n\n            </div> <!-- / customers -->\n            <div class="tab-pane" id="files">\n\n                <h4>Interpreters</h4>\n\n            </div> <!-- / interpreters -->\n            <div class="tab-pane" id="history">\n\n                <h4>Audit History</h4>\n                <div id="audit">\n\n                </div>\n\n            </div> <!-- / history -->\n        </div> <!-- / tabs -->\n    </div> <!-- / content -->\n</div> <!-- / main display area -->\n';

}
return __p
};

this["JST"]["admin/ratezone/ratezone/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h3>' +
__e( name ) +
' (' +
__e( getStatusAttributeById(App.dict.rateZoneType, obj["type.id"], "name") ) +
')</h3>\n<input type="hidden" name="id" value="' +
__e( id ) +
'">\n<div style="margin-bottom: 15px;">' +
__e( description ) +
'</div>\n\n<div class="row-fluid">\n    <div class="control-group span6">\n        <label class="control-label" for="includeHolidays">Include Holidays</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether holidays should be included in this rate tier. By default holidays included in final tier." data-original-title="Include Holiday">?</a>\n        <div class="controls">\n            <input type="checkbox" id="includeHolidays" name="includeHolidays" value="' +
__e( includeHolidays ) +
'" ';
 if (includeHolidays) { ;
__p += ' checked ';
 } ;
__p += '/>\n        </div>\n    </div>\n\n    ';
 if (App.config.company.config.overnightNightZonesEnabled) { ;
__p += '\n    <div class="control-group span6">\n        <label class="control-label" for="overnightNightEnabled">Overnight / Night Enabled</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether this zone has overnight / night rates enabled" data-original-title="Overnight / Night Enabled">?</a>\n        <div class="controls">\n            <input type="checkbox" id="overnightNightEnabled" name="overnightNightEnabled" value="' +
__e( overnightNightEnabled ) +
'" ';
 if (overnightNightEnabled) { ;
__p += ' checked ';
 } ;
__p += '/>\n        </div>\n    </div>\n    ';
 } ;
__p += '\n</div>\n\n<div class="row-fluid">\n    <div class="control-group span4">\n        <label class="control-label required" for="name">Name</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Name to give this rate zone">?</a>\n        <div class="controls">\n            <input class="span12" type="text" id="name" name="name" value="' +
__e( name ) +
'" placeholder="Zone Name"/>\n        </div>\n    </div>\n\n    <div class="control-group span8">\n        <label class="control-label required" for="description">Description</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Description to give this rate zone">?</a>\n        <div class="controls">\n            <input class="span12" type="text" id="description" class="input-large" name="description" value="' +
__e( description ) +
'" placeholder="Zone Description"/>\n        </div>\n    </div>\n</div>\n\n';
 if (App.config.company.config.overnightNightZonesEnabled) { ;
__p += '\n<div class="row-fluid">\n    <div class="control-group span4">\n        <label class="control-label required" for="overnightName">Overnight Name</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Name to give the overnight rate zone">?</a>\n        <div class="controls">\n            <input class="span12" type="text" id="overnightName" name="overnightName" value="' +
__e( overnightName ) +
'" placeholder="Overnight Zone Name"/>\n        </div>\n    </div>\n\n    <div class="control-group span8">\n        <label class="control-label required" for="overnightDescription">Overnight Description</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Description to give the overnight rate zone">?</a>\n        <div class="controls">\n            <input class="span12" type="text" id="overnightDescription" class="input-large" name="overnightDescription" value="' +
__e( overnightDescription ) +
'" placeholder="Overnight Zone Description"/>\n        </div>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <div class="control-group span4">\n        <label class="control-label required" for="nightName">Night Name</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Name to give the night rate zone">?</a>\n        <div class="controls">\n            <input class="span12" type="text" id="nightName" name="nightName" value="' +
__e( nightName ) +
'" placeholder="Night Zone Name"/>\n        </div>\n    </div>\n\n    <div class="control-group span8">\n        <label class="control-label required" for="nightDescription">Night Description</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Description to give the night rate zone">?</a>\n        <div class="controls">\n            <input class="span12" type="text" id="nightDescription" class="input-large" name="nightDescription" value="' +
__e( nightDescription ) +
'" placeholder="Night Zone Description"/>\n        </div>\n    </div>\n</div>\n';
 } ;
__p += '\n\n<ul class="segments unstyled" class="clear">\n\n</ul>\n<div class="clear" style="margin-bottom: 25px;">\n    <a id="addSegment" href="javascript:void(0);" title="Add Segment"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-plus"></span>Add Segment</a>\n</div>\n';

}
return __p
};

this["JST"]["admin/ratezone/ratezonegroup/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span12" style="text-align: center;"><h3>';
 if (name) { ;
__p +=
__e( name );
 } else { ;
__p += 'New Rate Zone Group';
 } ;
__p += '</h3></div>\n</div>\n\n<div class="row-fluid">\n    <div class="span4">\n        <div class="control-group">\n            <label for="name" class="control-label required">Name</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter a name for this rate zone grouping." data-original-title="Name">?</a>\n            <div class="controls">\n                <input type="text" id="name" name="name" value="' +
__e( name ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group">\n            <label for="defaultGroup">Default Group</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Specify if this is the default group for your company." data-original-title="Default Group">?</a>\n            <div class="controls">\n                <input type="checkbox" id="defaultGroup" name="defaultGroup" value="' +
__e( defaultGroup ) +
'" ';
 if (defaultGroup) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Default Group"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span8">\n        <div class="control-group">\n            <label for="description" class="control-label required">Description</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enter a description for this rate zone grouping." data-original-title="Description">?</a>\n            <div class="controls">\n                <textarea style="width: 350px; height: 100px; margin-top: 2px;" id="description" name="description">' +
__e( description ) +
'</textarea>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div>\n    <a id="viewHolidays" href="' +
__e( App.config.context ) +
'/company/holidays"><i class="icon icon-eye-open"></i> See Holidays</a>\n</div>\n<div class="" id="zones">\n\n</div>\n\n<div class="pull-left">\n    <div class="btn-toolbar">\n        <div class="btn-group">\n            <button class="btn btn-primary" type="button" id="save" value="Save" data-loading-text="Saving ...">Save Rate Zones</button>\n        </div>\n        <div class="btn-group">\n            <button class="btn btn-success" type="button" id="new" value="New">New Rate Zones</button>\n        </div>\n        <div class="btn-group">\n            <button class="btn btn-success" type="button" id="duplicate" value="Duplicate">Duplicate Rate Zones</button>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["admin/ratezone/ratezonelist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12" type="text" id="filter" placeholder="Search rate zones"/>\n<ul id="rate-zones" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["admin/ratezone/ratezonelistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (defaultGroup) { ;
__p += '<span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-check"></span>';
 } ;
__p +=
__e( obj.name + " (" + obj.description + ")" ) +
'\n';

}
return __p
};

this["JST"]["admin/ratezone/segment/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<input type="hidden" name="id" value="' +
__e( obj.id ) +
'"/>\n<div class="form-inline">\n    <div class="control-group span2">\n        <label class="control-label required">Day</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Choose a day of the week or alternatively select a specific date" data-original-title="Day">?</a>\n        <div class="controls">\n            <select class="span11" name="day.id" class="input-mini" id="day.id">\n                ' +
((__t = ( selectOptions(App.dict.days, {noSelection: {id: '', name: '[Day]'}}) )) == null ? '' : __t) +
'\n            </select>\n        </div>\n    </div>\n    <div class="control-group border">\n        <label class="control-label required">Date</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Choose a specific date instead of a particular day of the week" data-original-title="Date">?</a>\n        <div class="controls">\n            <input type="text" name="date" value="' +
__e( obj.date ) +
'" class="input-mini datepicker" autocomplete="off"/>\n        </div>\n    </div>\n    <div class="control-group">\n        <label class="control-label required">All Day</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Check this box if this segment applies all day this day or date" data-original-title="All Day">?</a>\n        <div class="controls">\n            <input type="checkbox" id="allDay" name="allDay" value="true" ';
 if (obj.allDay) { ;
__p += ' checked ';
 } ;
__p += ' class="input-mini"/>\n        </div>\n    </div>\n    <div class="control-group">\n        <label class="control-label required">Start Time</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the hour and minute for the start time." data-original-title="Start Time">?</a>\n        <div class="controls">\n            <select name="startHour" class="input-mini" id="startHour">\n                ' +
((__t = ( selectOptions(App.dict.hours, {noSelection: {id: '', name: '[Hr]'}}) )) == null ? '' : __t) +
'\n            </select>\n            :\n            <select name="startMinute" class="input-mini" id="startMinute">\n                ' +
((__t = ( selectOptions(App.dict.minutes, {noSelection: {id: '', name: '[Min]'}}) )) == null ? '' : __t) +
'\n            </select>\n        </div>\n    </div>\n    <div class="control-group">\n        <label class="control-label required">End Time</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Select the hour and minute for the end time." data-original-title="End Time">?</a>\n        <div class="controls">\n            <select name="endHour" class="input-mini" id="endHour">\n                ' +
((__t = ( selectOptions(App.dict.hours, {noSelection: {id: '', name: '[Hr]'}}) )) == null ? '' : __t) +
'\n            </select>\n            :\n            <select name="endMinute" class="input-mini" id="endMinute">\n                ' +
((__t = ( selectOptions(App.dict.minutes, {noSelection: {id: '', name: '[Min]'}}) )) == null ? '' : __t) +
'\n            </select>\n        </div>\n    </div>\n    <div class="control-group">\n        <label>&nbsp;</label>\n        <a id="deleteSegment" href="javascript:void(0);" title="Delete Segment"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["admin/smstemplate/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="accordion-heading">\n    <a class="accordion-toggle" data-toggle="collapse" data-parent="#smsTemplatesAccordion" href="#collapse' +
__e( nameKey ) +
'">\n        ' +
__e( name ) +
'\n    </a>\n</div>\n<div id="collapse' +
__e( nameKey ) +
'" class="accordion-body collapse">\n    <div class="accordion-inner">\n        <form>\n            <fieldset>\n                <div class="control-group">\n                    <label class="control-label required" for="template' +
__e( nameKey ) +
'">Template Body (' +
__e( name ) +
') </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="' +
__e( used ) +
'" data-original-title="' +
__e( name ) +
'">?</a>\n                    <div class="controls">\n                            <textarea style="height: 150px;" name="body" placeholder="Template Body">' +
__e( body ) +
'</textarea>\n                    </div>\n                </div>\n\n                <button class="btn btn-primary saveCmd" type="button" value="Save" data-loading-text="Saving ...">Save</button>\n                <button class="btn previewCmd" type="button"value="Preview">Preview</button>\n\n            </fieldset>\n        </form>\n    </div> <!-- / accordion-inner -->\n</div> <!-- / collapse -->\n';

}
return __p
};

this["JST"]["admin/template/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="accordion-heading">\n    <a class="accordion-toggle" data-toggle="collapse" data-parent="#templatesAccordion" href="#collapse' +
__e( nameKey ) +
'">\n        ' +
__e( name ) +
'\n    </a>\n</div>\n<div id="collapse' +
__e( nameKey ) +
'" class="accordion-body collapse">\n    <div class="accordion-inner">\n        <form>\n            <fieldset>\n                <div class="control-group">\n                    <label class="control-label required" for="template' +
__e( nameKey ) +
'">Template Body (' +
__e( name ) +
') </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="' +
__e( used ) +
'" data-original-title="' +
__e( name ) +
'">?</a>\n                    <div class="controls">\n                            <textarea id="template' +
__e( nameKey ) +
'" style="height: 450px;" class="wysiwyg" name="template' +
__e( nameKey ) +
'" placeholder="Template Body">\n                                ' +
__e( body ) +
'\n                            </textarea>\n                    </div>\n                </div>\n\n                <!-- Display only for Booking Request (Job Offer) -->\n                ';
 if (nameKey == "request" || nameKey == "confirmInterpreter" || nameKey == "bookingNew" || nameKey == "confirmCustomer" || nameKey == "bookingConfirmReminder" || "bookingCloseReminder" || nameKey == "bookingUpcomingReminder") { ;
__p += '\n                    <br />\n                    <div class="control-group span3">\n                        <label class="control-label" for="enableDigest">Enable Digest</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Send notifications in a digest format rather." data-original-title="Email Digest">?</a>\n                        <div class="controls span2">\n                            <input id="enableDigest" name="enableDigest" type="checkbox" ';
 if (enableDigest) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                        </div>\n                    </div>\n\n                    <div class="control-group span6">\n                        <label class="control-label" for="subject">Subject</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Subject for email template" data-original-title="Subject" tabindex="-1">?</a>\n                        <div class="controls">\n                            <textarea class="input-block-level" rows=5 id="subject" name="subject">' +
__e( subject ) +
'</textarea>\n                        </div>\n                    </div>\n                ';
 } ;
__p += '\n            </fieldset>\n\n            <button class="btn btn-primary saveCmd" type="button" value="Save" data-loading-text="Saving ...">Save</button>\n            <button class="btn previewCmd" type="button"value="Preview">Preview</button>\n        </form>\n    </div> <!-- / accordion-inner -->\n</div> <!-- / collapse -->\n';

}
return __p
};

this["JST"]["admin/user/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="span3">\n        <div id="users-control">\n        </div>\n    </div>\n    <div class="span9">\n\n        <div id="edit-panel">\n            <div id="controls" class="" style="padding-top: 15px;">\n                <button id="new" class="btn-success btn" name="new" value="Add New">New User</button>\n            </div>\n        </div>\n\n    </div>\n\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["admin/user/userlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12" type="text" id="filter" placeholder="Search users"></input>\n<ul id="users" class="list">\n</ul>\n';

}
return __p
};

this["JST"]["admin/user/userlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.username + " (" + obj.firstName + " " + obj.lastName + ")" ) +
'\n';

}
return __p
};

this["JST"]["admin/user/userview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="user" style="margin-left: 25px;">\n    <h4 style="text-align: center;">User: ' +
__e( obj.username + " (" + obj.firstName + " " + obj.lastName + ")" ) +
'</h4>\n    <input type="hidden" value="' +
__e( obj.id ) +
'">\n\n    <h4>Details</h4>\n    <div class="row-fluid">\n        <div class="span3">\n            <div class="control-group required">\n                ';
 if ( obj.mode === "edit" || obj.mode === "newUser" ) { ;
__p += '\n                <label class="control-label" for="username">Username</label>\n                <div class="controls">\n                    <input class="span12" type="text" id="username" name="username" value="' +
__e( obj.username ) +
'" placeholder="Username"/></p>\n                </div>\n                ';
 } else { ;
__p += '\n                <label class="control-label" for="username">Username</label> <a id="edit" href="javascript:void(0);" title="Edit Username"><i class="icon icon-lock"></i></a>\n                <div>' +
__e( obj.username ) +
'</div>\n                ';
 } ;
__p += '\n            </div>\n            <div class="control-group">\n                <label class="control-label" for="email">Email</label>\n                <div class="controls">\n                    <input class="span12" type="text" id="email" name="email" value="' +
__e( obj.email ) +
'" placeholder="Email Address"/>\n                </div>\n            </div>\n        </div>\n\n        <div class="span3">\n            <div class="control-group">\n                <label class="control-label" for="password">Password</label>\n                <div class="controls">\n                    <input class="span12" type="password" id="password" name="password" value="' +
__e( obj.password ) +
'" placeholder="Password"/>\n                </div>\n            </div>\n            <div class="control-group">\n                <label class="control-label" for="passwordConfirm">Confirm Password</label>\n                <div class="controls">\n                    <input class="span12" type="password" id="passwordConfirm" name="passwordConfirm" value="' +
__e( obj.password ) +
'" placeholder="Password"/>\n                </div>\n            </div>\n        </div>\n\n        <div class="span6">\n            <div class="row-fluid">\n                <div class="control-group required span6">\n                    <label class="control-label" for="firstName">First Name</label>\n                    <div class="controls">\n                        <input class="span12" type="text" id="firstName" name="firstName" value="' +
__e( obj.firstName ) +
'" placeholder="First name"/>\n                    </div>\n                </div>\n\n                <div class="control-group required span6">\n                    <label class="control-label" for="lastName">Last Name</label>\n                    <div class="controls">\n                        <input class="span12" type="text" id="lastName" name="lastName" value="' +
__e( obj.lastName ) +
'" placeholder="Last name"/>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="control-group required span6">\n                    <label class="control-label" for="businessUnit">Business Unit</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The business unit this user is associated with. If a user is associated with a business unit directly they will not have the option to switch between business units." data-original-title="Business Unit">?</a>\n                    <div class="controls">\n                        <select class="span12 api-v2" name="businessUnit">\n                            ' +
((__t = ( selectOptions(App.dict.businessUnit, {noSelection: {id: '', name: '[Choose a Unit]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <fieldset class="span4">\n            <legend>User Type</legend>\n            <div class="roles">\n\n            </div>\n        </fieldset>\n        <fieldset class="span4">\n            <legend>Configuration</legend>\n            <div class="sub-roles">\n\n            </div>\n            ';
 if (obj.userType === "Customer") { ;
__p += '\n            <div class="row-fluid">\n                <div class="span12">\n                    <p>To manage associations for this customer, go to the <a href="' +
__e( App.config.context ) +
'/requestor/edit/' +
__e( obj.id ) +
'">Requestor</a> page.</p>\n                </div>\n            </div>\n            ';
 } else if (obj.userType === "Interpreter") { ;
__p += '\n            <div class="row-fluid">\n                <div class="control-group one-button">\n                    <!--<label class="control-label" for="interpreterList">Interpreter</label>-->\n                    <div class="input-append input-block-level">\n                        <div class="append-wrapper">\n                            <button title="Clear interpreter" id="interpreterX" class="btn"><i class="icon icon-remove"></i></button>\n                        </div>\n                        <div class="input-wrapper">\n                            <input class="span12 api-delegate" type="text" id="interpreterList" name="interpreterList" value="';
 if ( obj.interpreter ) { ;
__p +=
__e( obj.interpreter.displayName );
 } ;
__p += '" placeholder="Interpreter"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ';
 } ;
__p += '\n        </fieldset>\n        <fieldset class="span4">\n            <legend>Settings</legend>\n            <div class="span12">\n                <div class="control-group">\n                    <input type="checkbox" id="enabled" name="enabled" value="' +
__e( obj.enabled ) +
'" ';
 if (obj.enabled) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Account Enabled"/>\n                    <label class="control-label" for="enabled">Account Enabled</label>\n                </div>\n            </div>\n\n            <div class="span12">\n                <div class="control-group">\n                    <input type="checkbox" id="accountExpired" name="accountExpired" ';
 if (obj.accountExpired) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( obj.accountExpired ) +
'" placeholder="Account Expired"/>\n                    <label class="control-label" for="accountExpired">Account Expired</label>\n                </div>\n            </div>\n\n            <div class="span12">\n                <div class="control-group">\n                    <input type="checkbox" id="accountLocked" name="accountLocked" ';
 if (obj.accountLocked) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( obj.accountLocked ) +
'" placeholder="Account Locked"/>\n                    <label class="control-label" for="accountLocked">Account Locked</label>\n                </div>\n            </div>\n\n            <div class="span12">\n                <div class="control-group">\n                    <input type="checkbox" id="passwordExpired" name="passwordExpired" ';
 if (obj.passwordExpired) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( obj.passwordExpired ) +
'" placeholder="Password Expired"/>\n                    <label class="control-label" for="passwordExpired">Password Expired</label>\n                </div>\n            </div>\n        </fieldset>\n    </div>\n\n    <div id="controls" class="" style="padding-top: 15px;">\n        <button id="save" class="btn-primary btn default" name="save" value="Save">Save</button>\n        <button id="new" class="btn-success btn" name="new" value="Add New">New User</button>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/asynctaskactioncell/fromraw"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n        <i class="icon-cog"></i>\n        <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <li><a href="#" class="widget-fail"><i class="icon-trash"></i> <span ';
 if (obj.status === "finished") {;
__p += 'class="muted"';
 } ;
__p += '>Mark task as failed</span></a></li>\n            <li><a href="#" class="widget-reset"><i class="icon-refresh"></i> Reset Task</a></li>\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/bookingactioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n            <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            ';
 if (obj.bookingMode && ((config.vriEnabled && obj.bookingMode.nameKey === 'vri')  || (config.videoEnabled && obj.bookingMode.nameKey === 'video'))) { ;
__p += '\n            <li><a href="#" class="widget-start-video"><i class="icon-facetime-video"></i> Start Video</a></li>\n            ';
 } ;
__p += '\n            ';
 if (obj.bookingMode && ((config.opiEnabled && obj.bookingMode.nameKey === 'opi') || (config.phoneEnabled && obj.bookingMode.nameKey === 'phoneScheduled'))) { ;
__p += '\n            <li><a href="#" class="widget-start-voice"><i class="icon-phone"></i> Start Voice Call</a></li>\n            ';
 } ;
__p += '\n            ';
 if ((obj.bookingMode && ((config.vriEnabled && obj.bookingMode.nameKey === 'vri')  || (config.videoEnabled && obj.bookingMode.nameKey === 'video'))) || (obj.bookingMode && ((config.opiEnabled && obj.bookingMode.nameKey === 'opi') || (config.phoneEnabled && obj.bookingMode.nameKey === 'phoneScheduled')))) { ;
__p += '\n            <li class="divider"></li>\n            ';
 } ;
__p += '\n            <li><a href="javascript:void(0);" class="widget-view-more"><i class="icon-fullscreen"></i> View More</a></li>\n            <li><a href="javascript:void(0);" class="widget-view-all"><i class="icon-fullscreen"></i> View (in full)</a></li>\n            <span class="secured secured-comp secured-cust">\n                 <li><a href="javascript:void(0);" class="widget-edit"><i class="icon-pencil"></i> Edit (in full)</a></li>\n            </span>\n            <span class="secured secured-comp">\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-assign"><i class="icon-user"></i> Assign Interpreter</a></li>\n                <li><a href="javascript:void(0);" class="widget-unassign"><i class="icon-remove-sign"></i> Unassign Interpreter</a></li>\n                <li><a href="javascript:void(0);" class="widget-view-offers"><i class="icon-eye-open"></i> View Offers</a></li>\n                ';
 if (!obj.disableBookingActions) { ;
__p += '\n                    <li class="divider"></li>\n                    <li><a href="javascript:void(0);" class="widget-confirm-customer"><i class="icon-asterisk"></i> Open / Re-Open Job</a></li>\n                    <li><a href="javascript:void(0);" class="widget-confirm-interpreter"><i class="icon-ok"></i> Confirm Interpreter</a></li>\n                    <li><a href="javascript:void(0);" class="widget-confirm-requestor"><i class="icon-ok"></i> Confirm w/ Requestor</a></li>\n                ';
 } ;
__p += '\n            </span>\n            <span class="secured secured-comp">\n                <li class="divider"></li>\n                <li><a href="#" class="widget-send-adhoc-email"><i class="icon-envelope"></i> Send Ad Hoc Email</a></li>\n                <li><a href="javascript:void(0);" class="widget-email-new-job"><i class="icon-envelope"></i> Send New Job Email</a></li>\n                <li><a href="#" class="widget-send-job-status-update-email"><i class="icon-envelope"></i> Send Job Status Update Email</a></li>\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-email-customer-confirmation"><i class="icon-envelope"></i> Send Customer Confirmation</a></li>\n                <li><a href="" class="widget-email-interpreter-confirmation"><i class="icon-envelope"></i> Send Interpreter Confirmation</a></li>\n                <li class="divider"></li>\n\n                <li><a href="#" class="widget-send-adhoc-sms"><i class="icon-mobile-phone"></i> Send Ad Hoc SMS</a></li>\n                <li><a href="javascript:void(0);" class="widget-resendcofirmation-sms"><i class="icon-mobile-phone"></i> Resend Confirmation SMS</a></li>\n                <li><a href="javascript:void(0);" class="widget-resendreminder-sms"><i class="icon-mobile-phone"></i> Resend Reminder SMS</a></li>\n                <li class="divider"></li>\n\n                <li><a href="javascript:void(0);" class="widget-price-quote"><i class="icon-shopping-cart"></i> Price Quote</a></li>\n            </span>\n            <span class="secured secured-comp secured-cont">\n                <li><a href="javascript:void(0);" class="widget-incidentals"><i class="icon-briefcase"></i> Incidentals</a></li>\n            </span>\n            ';
 if (!obj.disableBookingActions) { ;
__p += '\n            <li class="divider"></li>\n            <span class="secured secured-close_job">\n                <li><a href="javascript:void(0);" class="widget-close"><i class="icon-time"></i> Close</a></li>\n            </span>\n            ';
 } ;
__p += '\n            <span class="secured secured-cont">\n                <li><a href="javascript:void(0);" class="widget-confirm-interpreter"><i class="icon-ok"></i> Confirm Attendance</a></li>\n            </span>\n            <li><a href="javascript:void(0);" class="widget-vos"><i class="icon-file-alt"></i> VoS Form</a></li>\n            <li><a href="javascript:void(0);" class="widget-add-vos"><i class="icon-file-alt"></i> add VoS</a></li>\n            <li><a href="javascript:void(0);" class="widget-eSig"><i class="icon-pencil"></i> eSignature</a></li>\n            <span class="secured secured-comp">\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-create-interaction"><i class="icon-file"></i> Create Interaction</a></li>\n            </span>\n            <span class="secured secured-comp secured-cust">\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-clone"><i class="icon-refresh"></i> Create Follow-up</a></li>\n                <li><a href="javascript:void(0);" class="widget-duplicate"><i class="icon-refresh"></i> Duplicate</a></li>\n                <li><a href="javascript:void(0);" class="widget-repeat"><i class="icon-calendar"></i> Make Recurring</a></li>\n            </span>\n            <span class="secured secured-comp">\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-cancel"><i class="icon-remove"></i> Cancel</a></li>\n            </span>\n            <span class="secured secured-cust" id="customer-cancel">\n                ';
 if (config.allowCustomerCancel) { ;
__p += '\n                    <li class="divider"></li>\n                    <li><a href="javascript:void(0);" class="widget-cancel"><i class="icon-remove"></i> Cancel</a></li>\n                ';
 } ;
__p += '\n            </span>\n            <span class="secured secured-comp">\n                <li><a href="javascript:void(0);" class="widget-decline"><i class="icon-thumbs-down"></i> Can\'t Fulfill</a></li>\n            </span>\n            <span class="secured secured-comp secured-admin">\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-delete"><i class="icon-trash"></i> Delete</a></li>\n            </span>\n            <!-- dropdown menu links -->\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/companylanguageactioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span class="pull-left">\n    <a class="widget-save" href="javascript:void(0);" title="Save"><i class="icon-save"></i></a>\n</span>\n<span class="pull-right">\n    <a class="widget-delete" href="javascript:void(0);" title="Delete"><i class="icon-remove"></i></a>\n</span>\n';

}
return __p
};

this["JST"]["app/backgrid/companypayableitemtypeactioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span class="pull-left">\n    <a class="widget-save" href="javascript:void(0);" title="Save"><i class="icon-save"></i></a>\n</span>\n<span class="pull-right">\n    <a class="widget-delete" href="javascript:void(0);" title="Delete"><i class="icon-remove"></i></a>\n</span>\n';

}
return __p
};

this["JST"]["app/backgrid/contactworkeractioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n            <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <li><a href="javascript:void(0);" class="widget-view-details"><i class="icon-fullscreen"></i> View Details</a></li>\n            <li><a href="javascript:void(0);" class="widget-make-available"><i class="icon-folder-open"></i> Make Available</a></li>\n            <li><a href="javascript:void(0);" class="widget-make-unavailable"><i class="icon-folder-close"></i> Make Unavailable</a></li>\n            <li class="secured secured-uber_admin"><a href="javascript:void(0);" class="widget-edit-attributes"><i class="icon-pencil"></i> Edit Attributes</a></li>\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/deleteactioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span>\n    <a class="widget-delete" href="javascript:void(0);" title="Delete"><i class="icon-remove"></i></a>\n</span>\n';

}
return __p
};

this["JST"]["app/backgrid/duein/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/interpretervisitactioncell/fromraw"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n        <i class="icon-cog"></i>\n        <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <span class="secured secured-comp">\n                <li><a href="javascript:void(0);" class="widget-assign"><i class="icon-user"></i> Assign Interpreter</a></li>\n                <li><a href="javascript:void(0);" class="widget-unassign"><i class="icon-remove-sign"></i> Unassign Interpreter</a></li>\n                <li><a href="javascript:void(0);" class="widget-view-offers"><i class="icon-eye-open"></i> View Offers</a></li>\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-confirm-customer"><i class="icon-asterisk"></i> Open / Re-Open Job</a></li>\n                <li><a href="javascript:void(0);" class="widget-confirm-interpreter"><i class="icon-ok"></i> Confirm Interpreter</a></li>\n                <li><a href="javascript:void(0);" class="widget-confirm-requestor"><i class="icon-ok"></i> Confirm w/ Requestor</a></li>\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-email-new-job"><i class="icon-envelope"></i> Send New Job Email</a></li>\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-email-customer-confirmation"><i class="icon-envelope"></i> Send Customer Confirmation</a></li>\n                <li><a href="javascript:void(0);" class="widget-email-interpreter-confirmation"><i class="icon-envelope"></i> Send Interpreter Confirmation</a></li>\n                <li class="divider"></li>\n\n                <li><a href="javascript:void(0);" class="widget-resendcofirmation-sms"><i class="icon-envelope"></i> Resend Confirmation SMS</a></li>\n                <li><a href="javascript:void(0);" class="widget-resendreminder-sms"><i class="icon-envelope"></i> Resend Reminder SMS</a></li>\n                <li class="divider"></li>\n\n                <li><a href="javascript:void(0);" class="widget-price-quote"><i class="icon-shopping-cart"></i> Price Quote</a></li>\n                <li><a href="javascript:void(0);" class="widget-incidentals"><i class="icon-briefcase"></i> Incidentals</a></li>\n                <li class="divider"></li>\n            </span>\n            <span class="secured secured-close_job">\n                <li><a href="javascript:void(0);" class="widget-close"><i class="icon-time"></i> Close</a></li>\n            </span>\n                <li><a href="javascript:void(0);" class="widget-vos"><i class="icon-file-alt"></i> VoS Form</a></li>\n                <li><a href="javascript:void(0);" class="widget-eSig"><i class="icon-pencil"></i> eSignature</a></li>\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-cancel"><i class="icon-remove"></i> Cancel</a></li>\n            <span class="secured secured-comp">\n                <li><a href="javascript:void(0);" class="widget-decline"><i class="icon-thumbs-down"></i> Can\'t Fulfill</a></li>\n            </span>\n            <span class="secured secured-comp secured-admin">\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-delete"><i class="icon-trash"></i> Delete</a></li>\n            </span>\n        <!-- dropdown menu links -->\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/ivrcallactioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n            <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <li><a href="javascript:void(0);" class="widget-view-details"><i class="icon-fullscreen"></i> View Details</a></li>\n            <!-- dropdown menu links -->\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/jobofferactioncell/assign/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n        <i class="icon-cog"></i>\n        <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <li><a href="#" class="widget-assign-offer"><i class="icon-ok"></i> Assign</a></li>\n            <li><a href="#" class="widget-forfeit-guarantee"><i class="icon-remove-sign"></i> Forfeit Guarantee</a></li>\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/jobofferactioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n        <i class="icon-cog"></i>\n        <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <li><a href="#" class="widget-view-offer"><i class="icon-external-link"></i> View More</a></li>\n            <li><a href="#" class="widget-accept-offer"><i class="icon-ok"></i> Accept Offer</a></li>\n            <li><a href="#" class="widget-decline-offer"><i class="icon-remove-sign"></i> Decline Offer</a></li>\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/paginator/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<ul>\n    ';
 _.each(handles, function (handle) { ;
__p += '\n        <li ';
 if (handle.className) { ;
__p += 'class="' +
__e( handle.className ) +
'"';
 } ;
__p += '>\n            <a href="#" ';
 if (handle.title) {;
__p += ' title="' +
__e( handle.title ) +
'"';
 } ;
__p += '>' +
__e( handle.label ) +
'</a>\n        </li>\n    ';
 }); ;
__p += '\n    <li>\n\n        <select class="input-mini pageSize">\n            <option value="10" ' +
__e( state.pageSize === 10 ? "selected" : "" ) +
'>10</option>\n            <option value="25" ' +
__e( state.pageSize === 25 ? "selected" : "" ) +
'>25</option>\n            <option value="50" ' +
__e( state.pageSize === 50 ? "selected" : "" ) +
'>50</option>\n            <option value="100" ' +
__e( state.pageSize === 100 ? "selected" : "" ) +
'>100</option>\n            <option value="250" ' +
__e( state.pageSize === 250 ? "selected" : "" ) +
'>250</option>\n            <option value="500" ' +
__e( state.pageSize === 500 ? "selected" : "" ) +
'>500</option>\n            <option value="1000" ' +
__e( state.pageSize === 1000 ? "selected" : "" ) +
'>1000</option>\n        </select>\n\n        <input type="text" class="currentPage" value="' +
__e( state.currentPage ) +
'" style="width: 25px"/>\n\n    </li>\n</ul>\n<div>Page <strong>' +
__e( state.currentPage ) +
'</strong> of <strong>' +
__e( state.lastPage ) +
'</strong> (<strong>' +
__e( state.totalRecords ) +
'</strong> Total Records)</div>\n';

}
return __p
};

this["JST"]["app/backgrid/saveactioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span>\n    <a class="widget-save" href="javascript:void(0);" title="Save"><i class="icon-save"></i></a>\n</span>\n';

}
return __p
};

this["JST"]["app/backgrid/visitactioncell/fromraw"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!--<a class="btn" href="' +
__e(App.config.context) +
'/visit/edit/' +
__e(obj.id) +
'" target="_blank">Edit</a>-->\n<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n        <i class="icon-cog"></i>\n        <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <li><a href="#" class="widget-edit"><i class="icon-pencil"></i> <strong>Edit Job</strong></a></li>\n            <li class="divider"></li>\n\n                <!-- TODO: re-enable this once we figure out how this should work\n                <li><a href="#" class="widget-close"><i class="icon-time"></i> Close</a></li>\n                <li class="divider"></li>\n                -->\n                <li><a href="#" class="widget-clone"><i class="icon-share"></i> Create Follow-up</a></li>\n                <li><a href="#" class="widget-repeat"><i class="icon-calendar"></i> Make Recurring</a></li>\n                <!-- TODO: re-enable this once we figure out how this should work\n                <li class="divider"></li>\n                <li><a href="#" class="widget-cancel"><i class="icon-remove"></i> Cancel</a></li>\n                -->\n                <!-- TODO: re-enable this once we figure out how this should work\n            <span class="secured secured-comp">\n                <li><a href="#" class="widget-decline"><i class="icon-thumbs-down"></i> Decline</a></li>\n            </span>\n                -->\n            <span class="secured secured-comp secured-admin">\n                <li class="divider"></li>\n                <li><a href="#" class="widget-delete"><i class="icon-trash"></i> Delete</a></li>\n            </span>\n        <!-- dropdown menu links -->\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/visitfinancialactioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!--<a class="btn" href="' +
__e(App.config.context) +
'/visit/edit/' +
__e(obj.id) +
'" target="_blank">Edit</a>-->\n<div class="btn-group-wrapper-compact">\n    <div class="btn-group">\n        <a class="btn btn-primary btn-mini dropdown-toggle" data-toggle="dropdown" href="#">\n            <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <li><a href="javascript:void(0);" class="widget-edit"><i class="icon-pencil"></i> <strong>Verify (Times)</strong></a></li>\n            <li class="divider"></li>\n\n            <span class="secured secured-comp">\n                <li><a href="javascript:void(0);" class="widget-vos"><i class="icon-file-alt"></i> VoS Form</a></li>\n                <li><a href="javascript:void(0);" class="widget-unassign"><i class="icon-remove-sign"></i> Prepare</a></li>\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-price-quote"><i class="icon-shopping-cart"></i> Preview</a></li>\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-confirm-customer"><i class="icon-asterisk"></i> Undo Verify</a></li>\n                <li><a href="javascript:void(0);" class="widget-close"><i class="icon-time"></i> Close</a></li>\n                <li><a href="javascript:void(0);" class="widget-cancel"><i class="icon-remove"></i> Cancel</a></li>\n                <li><a href="javascript:void(0);" class="widget-close"><i class="icon-time"></i> View More</a></li>\n                <li><a href="javascript:void(0);" class="widget-close"><i class="icon-time"></i> Edit (In Full)</a></li>\n                <li><a href="javascript:void(0);" class="widget-close"><i class="icon-time"></i> View (In Full)</a></li>\n\n                <li class="divider"></li>\n            </span>\n\n            <li class="divider"></li>\n            <li><a href="javascript:void(0);" class="widget-clone"><i class="icon-share"></i> Create Follow-up</a></li>\n            <li><a href="javascript:void(0);" class="widget-repeat"><i class="icon-calendar"></i> Make Recurring</a></li>\n            <li class="divider"></li>\n\n            <span class="secured secured-comp">\n                <li><a href="javascript:void(0);" class="widget-decline"><i class="icon-thumbs-down"></i> Can\'t Fulfill</a></li>\n            </span>\n            <span class="secured secured-comp secured-admin">\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-delete"><i class="icon-trash"></i> Delete</a></li>\n            </span>\n            <!-- dropdown menu links -->\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/backgrid/volumepricetieractioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span class="pull-left">\n    <a class="widget-save" href="javascript:void(0);" title="Save"><i class="icon-save"></i></a>\n</span>\n<span class="pull-right">\n    <a class="widget-delete" href="javascript:void(0);" title="Delete"><i class="icon-remove"></i></a>\n</span>\n';

}
return __p
};

this["JST"]["app/backgrid/vrisessionactioncell/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n            <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <li><a href="javascript:void(0);" class="widget-view-history"><i class="icon-fullscreen"></i> View History</a></li>\n            <li class="secured secured-uber_admin"><a href="javascript:void(0);" class="widget-edit-attributes"><i class="icon-pencil"></i> Edit Attributes</a></li>\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["app/compositepaginator/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["app/simplepaginator/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["availability/availabilityedit/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Edit Availability</h3>\n</div>\n<div class="modal-body">\n\n    <div class="row-fluid">\n        <span class="availability-type-optgroup-container span2"></span>\n    </div>\n\n\n    <textarea rows="5" style="width: 90%;" name="notes">' +
__e( obj.notes ) +
'</textarea>\n\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-save" data-dismiss="modal">Save</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["availability/availabilityedit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Weekly Recurring Availability</h3>\n<p>Use the calendar below to indicate the days and times during <strong>each</strong> week that are <strong>\n    generally</strong> available or not available for jobs during those days and times.</p>\n\n<p>The specific section can be used to add specific dates and times for availability.</p>\n\n<div id="contact-out-of-office">\n\n</div>\n\n<button class="btn btn-primary" type="button" id="save-availability" value="Save">Save</button>\n\n<div class="calendar">\n</div>\n';

}
return __p
};

this["JST"]["availability/manage"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="nav nav-tabs">\n\n    <li class="active"><a href="#available" data-toggle="tab">General</a></li>\n    <li><a href="#contact-not-available" data-toggle="tab">Specific</a></li>\n\n</ul>\n\n<div class="tab-content">\n\n    <div class="tab-pane active" id="available">\n\n        <div id="contact-availability">\n\n        </div>\n\n    </div> <!-- / availability -->\n\n    <div class="tab-pane" id="contact-not-available">\n\n        <div id="contact-non-available-ranges">\n\n        </div>\n\n    </div>\n\n</div>';

}
return __p
};

this["JST"]["availability/notavailable/addRanges"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Add Availability Range</h3>\n</div>\n<div class="modal-body">\n\n    <div class="row-fluid">\n        <div class="model-startDate control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Start Date</span></span>\n\n                <div class="controls">\n                    <input type="text" name="startDate" data-timezone="' +
__e(obj.timezone) +
'"\n                           class="input-block-level format-date" value="' +
__e(obj.startDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-startTime control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Start Time</span></span>\n\n                <div class="controls">\n                    <input id="start-time" type="text" name="startDate" data-timezone="' +
__e(obj.timezone) +
'"\n                           class="input-block-level format-time" value="' +
__e(obj.startDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Type</span></span>\n                <div class="controls availability-type-optgroup-container">\n\n                </div>\n            </label>\n        </div>\n        <div class="model-startTime control-group span2">\n            <label>\n                <input id="all-day" value="' +
__e(obj.allDay) +
'" type="checkbox" name="allDay"> <b>All\n                Day</b><br>\n            </label>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="model-endDate control-group span2">\n            <label>\n                <span class="control-label"><span class="required">End Date</span></span>\n\n                <div class="controls">\n                    <input type="text" name="endDate" data-timezone="' +
__e(obj.timezone) +
'"\n                           class="input-block-level format-date" value="' +
__e(obj.endDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-startTime control-group span2">\n            <label>\n                <span class="control-label"><span class="required">End Time</span></span>\n\n                <div class="controls">\n                    <input id="end-time" type="text" name="endDate" data-timezone="' +
__e(obj.timezone) +
'"\n                           class="input-block-level format-time" value="' +
__e(obj.endDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="model-notes">\n            <label>\n                <span class="control-label"><span>Notes</span></span>\n\n                <div class="controls">\n                    <textarea name="notes" row=\'5\' class="span12" style="height:74px; margin-bottom:0 !important;">' +
__e( obj.notes ) +
'</textarea>\n                </div>\n            </label>\n        </div>\n    </div>\n\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-save">Save</a>\n    ';
 if (obj.type && obj.type.nameKey === 'guarantee') { ;
__p += '\n    <a href="javascript:void(0);" class="btn btn-default cmd-widget-forfeit">Forfeit</a>\n    ';
 } ;
__p += '\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["availability/notavailable/nonAvailableRanges"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Specific Availability</h3>\n<p>Use the calendar below to add <strong>specific</strong> dates and times for periods of time\n    that can be marked as available or not available for jobs during those times.</p>\n<p>Alternatively click on the <strong>Add Availability</strong> link to do the same.</p>\n\n<a href="javascript:void(0);" class="add-availability-range"><i class="icon icon-plus-circle"></i> Add availability</a>\n<br/>\n\n<div class="calendar">\n</div>\n';

}
return __p
};

this["JST"]["availability/notavailable/outOfOffice"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<label>\n    <input id="out-of-office-check-box" type="checkbox" name="out-of-office"> <b>Out Of Office</b><br>\n</label>\n';

}
return __p
};

this["JST"]["booking/administration/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row secured secured-admin">\n    <div class="control-group span3">\n        <label class="control-label required" for="status.id">Job Status </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Reset the booking status." data-original-title="Booking Status">?</a>\n        <div class="controls">\n            <select id="status.id" name="status.id">\n                ' +
((__t = ( selectOptions(App.dict.bookingStatus, {noSelection: {id: '', name: '[Booking Status]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <label class="control-label required" for="invoiceStatus.id">Invoice Status </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Reset the booking invoice (receiveable) status." data-original-title="Invoice Status">?</a>\n        <div class="controls">\n            <select id="invoiceStatus.id" name="invoiceStatus.id">\n                ' +
((__t = ( selectOptions(App.dict.invoiceStatus, {noSelection: {id: '', name: '[Invoice Status]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <label class="control-label required" for="paymentStatus.id">Payment Status </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Reset the booking payment (payable) status." data-original-title="Payment Status">?</a>\n        <div class="controls">\n            <select id="paymentStatus.id" name="paymentStatus.id">\n                ' +
((__t = ( selectOptions(App.dict.paymentStatus, {noSelection: {id: '', name: '[Invoice Status]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/advancedsearch/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div id="clauses_manage">\n\n</div>\n<br/>\n<div class="btn-group">\n\n    <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown" type="button" value="more">\n        Export <span class="caret"></span>\n    </button>\n    <ul class="dropdown-menu">\n        <li><a class="exportCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i>\n            Excel</a>\n        </li>\n        <li><a class="exportCmd" href="javascript:void(0);" data-format="csv"><i class="icon-ms-excel"></i>\n            CSV</a>\n        </li>\n    </ul>\n    <div class="span6">\n        <label for="all_bookings">All bookings (with current filters applied)</label>\n        <input id="all_bookings" type="checkbox"/>\n    </div>\n</div>\n<br/>\n<div class="bookings-list">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["booking/assign/consumer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.consumer ? obj.consumer.name : "N/A" ) +
' ' +
((__t = ( obj.consumer ? '<a class="cmdEditConsumer" href="javascript:void(0);"><i class="icon-pencil"></i></a>' : '' )) == null ? '' : __t);

}
return __p
};

this["JST"]["booking/assign/jobactions"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-toolbar" style="padding-right:80px;">\n    <div class="btn-group">\n        <a class="btn btn-primary btn-medium" href="' +
__e( App.config.context ) +
'/job/edit/' +
__e( options.visit.jobContextId ) +
'">Edit Job</a>\n    </div>\n    <div class="btn-group">\n        <button class="btn btn-success dropdown-toggle" data-toggle="dropdown" type="button" value="more"> More . . . <span class="caret"></span> </button>\n        <ul class="dropdown-menu">\n            <!-- dropdown menu links -->\n            <li>\n                <a href="javascript:void(0);" class="widget-create"><i class="icon-star-empty"></i> New Booking</a>\n            </li>\n            <li class="divider"></li>\n            <li><a href="javascript:void(0);" class="widget-price-quote-visit"><i class="icon-shopping-cart"></i> Job Price Quote</a></li>\n            <li><a href="javascript:void(0);" class="widget-price-quote-superBooking"><i class="icon-shopping-cart"></i> Booking Price Quote</a></li>\n            <li class="divider"></li>\n            <li><a href="javascript:void(0);" class="widget-clone"><i class="icon-share"></i> Create Follow-up</a></li>\n            <li><a href="javascript:void(0);" class="widget-duplicate"><i class="icon-share"></i> Duplicate</a></li>\n            <li><a href="javascript:void(0);" class="widget-repeat"><i class="icon-calendar"></i> Make Recurring</a></li>\n            <li><a href="javascript:void(0);" class="widget-cancel"><i class="icon-remove"></i> Cancel Job</a></li>\n\n            <!--\n            <li class="divider"></li>\n            <li><a href="javascript:void(0);" class="widget-archive-updates"><i class="icon-eye-open"></i> Archive updated fields</a></li>\n            <li class="divider"></li>\n            -->\n            <!--\n            <div class="secured secured-comp secured-cust">\n                <li>\n                    <a href="javascript:void(0);" class="widget-cancel"><i class="icon-remove"></i> Cancel Job</a>\n                </li>\n            </div>\n            -->\n            <div class="secured secured-admin">\n                <li class="divider"></li>\n                <li>\n                    <a href="javascript:void(0);" class="widget-delete"><i class="icon-trash"></i> Delete Job</a>\n                </li>\n            </div>\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/assign/location"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.displayLabel) { ;
__p += '\n    ' +
((__t = ( obj.displayLabel )) == null ? '' : __t) +
'\n        ';
 if (obj.addressPhone) { ;
__p += '\n            (<strong>PH:</strong> ' +
((__t = ( obj.addressPhone )) == null ? '' : __t) +
' )\n        ';
 } ;
__p += '\n    <a class="cmdEditLocation" href="javascript:void(0);"><i class="icon-pencil"></i></a>\n';
 } else { ;
__p += '\n    No location specified\n';
 } ;


}
return __p
};

this["JST"]["booking/assign/notes"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h5>Notes</h5>\n<div class="row-fluid">\n    <div class="span6">\n        <label>\n            <span class="control-label">Appointment Details&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Any notes or details describing this booking." data-original-title="Booking Details" tabindex="-1">?</a></span>\n            <div class="controls">\n                <textarea rows="4" name="bookingDetails" class="input-block-level wysiwyg">' +
__e( obj.bookingDetails ) +
'</textarea>\n            </div>\n        </label>\n    </div>\n    <div class="span6">\n        <label>\n            <span class="control-label">Billing Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the billing and payment. This information is for internal use only." data-original-title="Billing Notes" tabindex="-1">?</a></span>\n            <div class="controls">\n                <textarea rows="4" name="billingNotes" class="input-block-level wysiwyg">' +
__e( obj.billingNotes ) +
'</textarea>\n            </div>\n        </label>\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span6">\n        <label>\n            <span class="control-label">Notes about Interpreter(s)&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the interpreter to be assigned to this job. These notes are for internal use only." data-original-title="Interpreter Notes" tabindex="-1">?</a></span>\n            <div class="controls">\n                <textarea rows="4" name="interpreterNotes" class="input-block-level wysiwyg">' +
__e( obj.interpreterNotes ) +
'</textarea>\n            </div>\n        </label>\n    </div>\n    <div class="span6">\n        <label>\n            <span class="control-label">Job Details&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any details specific to the job that might be useful to the interpreter." data-original-title="Job Details" tabindex="-1">?</a></span>\n            <div class="controls">\n                <textarea rows="4" name="notes" class="input-block-level wysiwyg">' +
__e( obj.notes ) +
'</textarea>\n            </div>\n        </label>\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span6">\n        <button class="btn btn-primary cmdSaveNotes" type="button" value="Save Job" data-loading-text="Saving changes ...">Save</button>\n    </div>\n</div>';

}
return __p
};

this["JST"]["booking/assign/requestor"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.requestor ? obj.requestor.displayLabel : "N/A" ) +
' ' +
((__t = ( obj.requestor ? '<a class="cmdEditRequestor" href="javascript:void(0);"><i class="icon-pencil"></i></a>' : '' )) == null ? '' : __t);

}
return __p
};

this["JST"]["booking/assign/requirements/genderrequirement"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (!obj.modal) { ;
__p += '\n<div class="control-group span3">\n    <label>\n        <span class="control-label">Interpreter Gender Required</span>\n        <div class="controls">\n            <select class="input-block-level api-v2" name="genderRequirement">\n                ' +
((__t = ( selectOptions(App.dict.gender, { selected: ( obj.genderRequirement && obj.genderRequirement.id ? obj.genderRequirement.id : '' ), noSelection: { id: '', name: '[Select Gender]' } }) )) == null ? '' : __t) +
'\n            </select>\n        </div>\n    </label>\n</div>\n';
 } else { ;
__p += '\n<div class="control-group span4">\n    <label>\n        <span class="control-label">Interpreter Gender Required</span>\n        <div class="controls">\n            <select class="input-block-level api-v2" name="genderRequirement">\n                ' +
((__t = ( selectOptions(App.dict.gender, { selected: ( obj.genderRequirement && obj.genderRequirement.id ? obj.genderRequirement.id : '' ), noSelection: { id: '', name: '[Select Gender]' } }) )) == null ? '' : __t) +
'\n            </select>\n        </div>\n    </label>\n</div>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["booking/assign/requirements/requirement"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group span10">\n    <label>\n        <span class="control-label">\n            ';
 if (overrideRequirements === true) { ;
__p += '\n                Job Requirement\n            ';
 } else { ;
__p += '\n                Booking Requirement\n            ';
 } ;
__p += '\n        </span>\n        <div class="controls">\n            ';
 if (obj.dependent === "autoComplete") { ;
__p += '\n                <div>' +
__e( obj.criteria.name ) +
'</div>\n            ';
 } else { ;
__p += '\n                <select name="criteria" class="input-block-level requirementCriteria api-v2">\n                    ' +
((__t = ( selectOptions(_.sortBy(App.dict.bookingCriteria, function(obj) { return obj.name }), {selected: obj.criteria ? obj.criteria.id : null, noSelection: {id: '', name: '[Choose a Requirement]'}}) )) == null ? '' : __t) +
'\n                </select>\n            ';
 } ;
__p += '\n        </div>\n    </label>\n</div>\n<div class="control-group span2">\n    ';
 if (hasRole("comp")) { ;
__p += '\n        <span class="control-label">&nbsp;</span>\n        <div class="controls">\n            <button class="btn btn-danger widget-delete"><i class="icon-trash"></i></button>\n        </div>\n    ';
 } ;
__p += '\n</div>';

}
return __p
};

this["JST"]["booking/assign/requirements/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4 class="mb-1">\n    ';
 if (overrideRequirements === true) { ;
__p += '\n        Additional Job Requirements (Overrides Booking Requirements)<br />\n        (Addition and removal of requirements is permanently persisted to the job)\n    ';
 } else { ;
__p += '\n        Additional Requirements<br />\n        (Addition and removal of requirements is permanently persisted to the booking)\n    ';
 } ;
__p += '\n</h4>\n<div class="booking booking-additional-requirements-list row-fluid"></div>\n<div class="widget-new-req">\n    <i class="icon icon-plus-sign"></i>\n    <a href="javascript:void(0);" title="Add ';
 if (overrideRequirements === true) { ;
__p += 'Job';
 } ;
__p += ' Requirement">\n        ';
 if (overrideRequirements === true) { ;
__p += '\n            Add Job Requirement\n        ';
 } else { ;
__p += '\n            Add Requirement\n        ';
 } ;
__p += '\n    </a>\n</div>';

}
return __p
};

this["JST"]["booking/bare/bookingbare/feedback"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div class="row secured secured-comp secured-admin">\n    <div class="span4">\n        <!-- rating -->\n        <h5>Rating</h5>\n        <label for="rating" style="display: inline;">Rating <div id="rating-scr" style="display: inline;">(' +
__e( (obj.averageRating ? obj.averageRating : "0") ) +
'/5)</div></label>\n        <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="<p>Click on the stars below to rate your experience of the interpretation service that\n                            was provided, with 5 stars being the most positive experience.</p>\n                            <p>You can change or update your rating in the future.</p>" data-original-title="Rating">?</a>\n        <div id="rating"></div>\n    </div>\n\n    <div class="span4">\n        <!-- comments -->\n        <h5>Comments</h5>\n        <div id="comments" class="commentable">\n\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/bare/bookingbare/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 var statusId = obj.status ? obj.status.id : '' ;
__p += '\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Booking #' +
__e( obj.superBooking ? obj.superBooking.id : '' ) +
' / Job #' +
__e( obj.id ) +
' (' +
__e( getStatusAttributeById(App.dict.bookingStatus, statusId, 'name') ) +
') </h3>\n</div>\n<div class="modal-body">\n<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#details" data-toggle="tab">Details</a></li>\n    <li><a href="#references" data-toggle="tab">Reference / Notes</a></li>\n    <li class="secured secured-comp"><a href="#feedback" data-toggle="tab">Feedback Review</a></li>\n    <li class="secured secured-comp secured-admin"><a href="#billingNotes" data-toggle="tab">Billing Notes</a></li>\n    <li class="secured secured-comp secured-admin"><a href="#history" data-toggle="tab">Audit History</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<div id="bareView" class="tab-content">\n\n<!-- / Details Pane start -->\n<div class="tab-pane active" id="details">\n    <div class="row-fluid">\n        <div class="span6">\n            <br/>\n            <div class="row-fluid">\n                <div class="span5">\n                    <h5>Customer</h5>\n                    <div>' +
__e( obj.customer ? obj.customer.name : "" ) +
'</div>\n                </div>\n                <div class="span5">\n                    <h5>Customer (Bill To)</h5>\n                    <div>' +
__e( obj.billingCustomer ? obj.billingCustomer.name : "" ) +
'</div>\n                </div>\n\n                <!-- booking status -->\n                <div class="span2">\n                    <h5>Job Status</h5>\n                    <div>\n                        ' +
__e( getStatusAttributeById(App.dict.bookingStatus, statusId, 'name') ) +
'\n                    </div>\n                </div>\n            </div>\n            <br/>\n            <div class="row-fluid">\n                <div class="span4">\n                    <h5>Client</h5>\n                    <div>' +
__e( obj.client ? obj.client.name : "" ) +
'</div>\n                </div>\n                <div class="span4">\n                    <h5>Site Contact</h5>\n                    <div>' +
__e( obj.siteContact ) +
'</div>\n                </div>\n                ';
 if (obj.consumer) { ;
__p += '\n                <div class="span4">\n                    <h5>Consumers</h5>\n                    <div>\n                        <ul>\n                            <li>' +
__e( obj.consumer.name ) +
'</li>\n                            ';
 if (!_.isEmpty(obj.consumers)) { ;
__p += '\n                                ';
 _.each(obj.consumers, function(consumer) { ;
__p += '\n                                    <li>' +
__e( consumer.name ) +
'</li>\n                                ';
 }); ;
__p += '\n                            ';
 } ;
__p += '\n                        </ul>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div>\n            <br/>\n            <div class="row-fluid">\n                <!-- location -->\n                <div class="span12">\n                    <h5>Location</h5>\n                    ';
 if(obj.actualLocationDisplayLabel) { ;
__p += '\n                        <div>\n                            ';
 if(obj.bookingMode && obj.bookingMode.nameKey=='phone') { ;
__p += '\n                                <b>Phone</b>:\n                                ' +
__e(obj.actualLocationDisplayLabel) +
'\n                                <br/>\n                                ' +
__e(obj.actualLocation.displayLabel) +
'\n                            ';
 } else { ;
__p += '\n                                ' +
__e(obj.actualLocationDisplayLabel) +
'\n                            ';
 } ;
__p += '\n                        </div>\n                        <!--';
 if(obj["subLocation.id"]) { ;
__p += '\n                        <br/><b>Sub-Location</b>:\n                        ' +
__e(obj["subLocation.label"]) +
'\n                        ';
 } ;
__p += '-->\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n            <br/>\n            ';
 if (App.config.company.config.showColInterpreterTimezone) { ;
__p += '\n            <div class="row-fluid">\n                <div class="span4">\n                    <h5>Interpreter Timezone</h5>\n                        ';
 var intTz = obj.interpreter.timeZone ? obj.interpreter.timeZone : obj.timeZone ;
__p += '\n                        ' +
__e(intTz) +
'\n                </div>\n\n                <div class="span4">\n                    <h5>Interpreter Tz Start Date</h5>\n                    <div class="format-datetime" data-timezone="' +
__e(intTz) +
'">' +
__e(obj.expectedStartDate) +
'</div>\n                </div>\n\n                <div class="span4">\n                    <h5>Interpreter Tz End Date</h5>\n                    <div class="format-datetime" data-timezone="' +
__e(intTz) +
'">' +
__e(obj.expectedEndDate) +
'</div>\n                </div>\n\n            </div>\n            <br/>\n            ';
 } ;
__p += '\n            <div class="row-fluid">\n                <div class="span6">\n                    <h5>Venue Information</h5>\n                    <div>\n                        ' +
((__t = (obj.locationNote)) == null ? '' : __t) +
'\n                    </div>\n                </div>\n                <div class="span6">\n                    <h5>Booking Timezone</h5>\n                    <div>\n                        ' +
__e(obj.timeZone) +
'\n                    </div>\n                </div>\n            </div>\n            <br/>\n            <div class="row-fluid">\n                <!-- start date -->\n                <div class="span4">\n                    <h5>Expected Start Date</h5>\n                    <div class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.expectedStartDate ) +
'</div>\n\n                </div>\n\n                <!-- end date / time -->\n                <div class="span4">\n                    <h5>Expected End Date</h5>\n                    <div class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.expectedEndDate ) +
'</div>\n                </div>\n\n                <div class="span4">\n                    <h5>Expected Duration</h5>\n                    <div data-start="expectedStartDate" data-end="expectedEndDate" class="format-duration">' +
__e(obj.expectedDurationHrs) +
'</div>\n                </div>\n            </div>\n            <br/>\n            <div class="row-fluid">\n                <div class="span4">\n                    <h5>Actual Start Date</h5>\n                    <div class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e(obj.actualStartDate) +
'</div>\n                </div>\n\n                <div class="span4">\n                    <h5>Actual End Date</h5>\n                    <div class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e(obj.actualEndDate) +
'</div>\n                </div>\n\n                <div class="span4">\n                    <h5>Actual Duration</h5>\n                    <div data-start="actualStartDate" data-end="actualEndDate" class="format-duration">' +
__e(obj.actualDurationHrs) +
'</div>\n                </div>\n\n            </div>\n            <br/>\n            <div class="row-fluid">\n            <div class="secured secured-comp secured-admin">\n                <h5>Job Date</h5>\n                <div class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e(obj.bookingDate) +
'</div>\n            </div>\n\n            ';
 if (statusId === App.dict.bookingStatus["cancelled"].id) { ;
__p += '\n                <br/>\n                <div>\n                    <h5>Cancellation Date</h5>\n                    <div class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.cancellationDate ) +
'</div>\n                    <br/>\n                    <h5>Cancellation Reason</h5>\n                    <div>' +
__e( obj.cancellationReason ? obj.cancellationReason.name : '' ) +
'</div>\n                </div>\n            ';
 } ;
__p += '\n\n            ';
 if (statusId === App.dict.bookingStatus["declined"].id) { ;
__p += '\n            <br/>\n            <div>\n                <h5>Unfulfilled Date</h5>\n                <div class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e(obj.unfulfilledDate) +
'</div>\n                <br/>\n                <h5>Unfulfilled Reason</h5>\n                <div>' +
__e( obj.unfulfilledReason ? obj.unfulfilledReason.name : '' ) +
'</div>\n            </div>\n            ';
 } ;
__p += '\n            </div> <!-- new row for job date etc. -->\n\n        </div> <!-- / left column -->\n\n        <div class="span6">\n            <br/>\n            <div>\n                <h5>Language Requested</h5>\n                <div>' +
__e(obj.language ? obj.language.displayName : '' ) +
'</div>\n            </div>\n            <br/>\n            <div>\n                <h5>Gender</h5>\n                <div>' +
__e( obj.genderRequirement ? getStatusAttributeById(App.dict.gender, obj.genderRequirement.id, "name") : "n/a" ) +
'</div>\n            </div>\n            <br/>\n            <div class="secured secured-comp secured-admin secured-cust mb-1">\n                <h5>Additional Requirements</h5>\n                ';
 if(_.first(obj.requirements) == null) { ;
__p += '\n                    None\n                ';
 } else { ;
__p += '\n                <ul>\n                ';
 _.each(obj.requirements, function(req) { ;
__p += '  <li>' +
__e( req.criteria ? req.criteria.name : '' ) +
'</li> ';
 }); ;
__p += '\n                </ul>\n                ';
 } ;
__p += '\n            </div>\n            <!-- interpreter -->\n            <div>\n                <h5>Interpreter</h5>\n                <div>\n                    ';
 if (obj.interpreter.id && obj.interpreter.id !== "") { ;
__p += '\n                    ' +
__e( obj.interpreter.displayName ) +
'\n                    <span class="secured secured-comp secured-admin">' +
__e( "(" + obj.interpreter.primaryNumberLabel + ")" ) +
'\n                       (<a href="javascript:void(0);" onclick="$.colorbox({iframe:true, innerWidth:App.config.popups.cal.width, innerHeight:App.config.popups.cal.height, open:false, returnFocus: false, title: \'Interpreter Jobs\', href: App.config.context + \'/calendar/interpreter/' +
__e( obj.interpreter.id ) +
'/bookings\'});"><i class="icon-calendar"></i> Jobs</a>)\n                    </span>\n                    ';
 } else { ;
__p += '\n                    Not Yet Assigned\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n            <br/>\n            <div class="secured secured-comp secured-admin secured-cust">\n                <h5>Preferred Interpreter</h5>\n                <div>\n                    ' +
__e(obj.preferredInterpreter? obj.preferredInterpreter.name : "" ) +
'\n                </div>\n            </div>\n            <br/>\n            <!-- interpreter notes -->\n            <div class="secured secured-comp">\n                <h5>Notes about Interpreter(s)</h5>\n                <div><div id="interpreterNotes-' +
__e(obj.id) +
'" class="edit_area">' +
__e(obj.interpreterNotes) +
'</div></div>\n            </div>\n\n            <div style="clear: both;"></div>\n            <br/>\n            <!-- booking mode -->\n            <div>\n                <h5>Interpretation Type</h5>\n                <div>' +
__e( obj.bookingMode ? obj.bookingMode.name : '' ) +
'</div>\n            </div>\n\n            <!-- phone number -->\n            ';
if(obj.bookingMode && obj.bookingMode.nameKey=='phone') { ;
__p += '\n                <br/>\n                <div id="phoneNumDiv" class="field">\n                    <h5>Phone Number</h5>\n                    <div>' +
__e(obj.numberForTelephoneTranslation) +
'</div>\n                </div>\n            ';
 } ;
__p += '\n            <br/>\n            <div class="secured secured-comp secured-cust">\n                <h5>Requestor</h5>\n                <div>' +
__e(obj.requestor ? obj.requestor.displayName : '' ) +
'</div>\n            </div>\n\n        </div> <!-- / right column -->\n    </div> <!-- / row -->\n</div> <!-- Details pane end -->\n\n<!-- References pane start -->\n<div class="tab-pane" id="references">\n<div class="row-fluid">\n    <div class="span6">\n        <h5>Reference</h5>\n        <ul class="arrows" id="bookingRefs">\n            ';
 _.each(obj.refs, function(entry) { ;
__p += '  <li rel="' +
__e(entry.id) +
'"><div id="name-' +
__e(entry.id) +
'" style=\'display: inline;\' class="edit">' +
__e((entry.name)) +
'</div>: <div id="ref-' +
__e(entry.id) +
'" style=\'display: inline;\' class="edit">' +
__e((entry.ref)) +
'</div></li> ';
 }); ;
__p += '\n        </ul>\n    </div> <!-- / left column -->\n\n    <div class="span6">\n        <!-- notes -->\n        <div class="field" style="clear:both;">\n            <h5>Job Details</h5>\n            <div><div id="notes-' +
__e(obj.id) +
'" class="edit_area">' +
((__t = (obj.visitDetails)) == null ? '' : __t) +
'</div></div>\n        </div>\n        <br/>\n        <br/>\n        <div class="field secured secured-comp secured-cont" style="clear:both;">\n            <h5>Job Notes</h5>\n            <div><div id="visitNotes-' +
__e(obj.id) +
'" class="edit_area">' +
((__t = (obj.visitNotes)) == null ? '' : __t) +
'</div></div>\n        </div>\n        <br/>\n        <br/>\n        <div class="field" style="clear:both;">\n            <h5>Booking Details</h5>\n            <div><div id="bookingDetails">' +
((__t = ( obj.bookingDetails)) == null ? '' : __t) +
'</div></div>\n        </div>\n    </div> <!-- / right column -->\n    </div> <!-- /row -->\n</div>\n<!-- References Pane end -->\n\n<!-- Review Pane start -->\n<div class="tab-pane" id="feedback">\n    <div class="row secured secured-comp">\n\n     </div>\n\n</div>\n<!-- Review pane end -->\n\n<!-- Billing Notes pane start -->\n\n<div class="tab-pane" id="billingNotes">\n    <div class="row secured secured-comp">\n        <div class="span6">\n\n            <h5>Billing Notes</h5>\n            <div><div id="billingNotes-' +
__e(obj.id) +
'" class="edit_area">' +
((__t = (obj.billingNotes)) == null ? '' : __t) +
'</div></div>\n\n        </div> <!-- / left column -->\n    </div> <!-- /row -->\n</div>\n<!-- Secure this -->\n<!-- Billing Notes pane end -->\n\n<div class="tab-pane" id="history">\n</div>\n\n</div><!-- bareview -->\n\n</div> <!-- Modal Body -->\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Close</a>\n</div>';

}
return __p
};

this["JST"]["booking/cancel/cancelBooking/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n<a class="close" data-dismiss="modal">&times;</a>\n<h3>Cancel Booking</h3>\n</div>\n<div class="modal-body">\n    <fieldset>\n\n        <input type="hidden" name="id" value="' +
__e( obj.id ) +
'" />\n        <input type="hidden" name="version" value="' +
__e( obj.version ) +
'" /> <!-- ${booking?.version} -->\n        <input type="hidden" name="company.id" value="' +
__e( App.config.company.id ) +
'" />    <!-- ${company?.id} -->\n        <input type="hidden" id="cancelledFrom" name="cancelledFrom" value=" " />\n\n        <div class="row">\n            <div class="control-group span6">\n                <label>\n                    <span class="control-label">\n                        <span class="required">\n                            Please select the reason for the cancellation in this field:\n                        </span>\n                    </span>\n                </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Choose a reason why this booking is being cancelled.<p>" data-original-title="Cancellation Reason">?</a>\n                <div class="controls">\n                    <select class="input-xlarge" name="cancellationReason.id" id="cancellationReason">\n                        ' +
((__t = ( selectOptions(App.dict.cancellationReasons, {noSelection: {id: '', name: '[Choose a Cancellation Reason]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                    <p class="help-block">Required field.</p>\n                </div>\n            </div>\n        </div>\n\n\n        <div class="row">\n            <div class="span6">\n                <h5>Please enter any additional information for the cancellation in this field:</h5>\n                <textarea name="notes" style="width: 90%; height: 180px;"></textarea>\n            </div>\n        </div>\n\n    <!-- <sec:ifAnyGranted roles="ROLE_COMP, ROLE_ADMIN"> -->\n\t\t<div class="row secured secured-comp secured-admin">\n\t\t  <div class="span3">\n  \t\t\t<label><span class="control-label">\n                        <span class="required">\n                            Billable\n                        </span>\n                    </span>\n                </label>\n              <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Should the customer be charged for this booking?</p>\n<p>This will be verified prior to invoicing.</p>" data-original-title="Billable">?</a>\n              <select class="input-medium" name="billable.id" id="billable" >\n                  ' +
((__t = ( selectOptions(App.dict.yesNoType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n              </select>\n        </div>\n\n            <div class="span3">\n                <label><span class="control-label">\n                        <span class="required">\n                            Payable\n                        </span>\n                    </span>\n                </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Is the interpreter eligible to be paid for this booking?</p><p>This will be verified prior to invoicing.</p>" data-original-title="Payable">?</a>\n                <select class="input-medium" name="payable.id" id="payable">\n                    ' +
((__t = ( selectOptions(App.dict.yesNoType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                </select>\n        </div>\n          </div> <!-- / row -->\n        <div class="row secured secured-comp secured-admin">\n            <div class="span6">\n                <h5>Do NOT send cancellation email <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Do not send notification email to Interpreter and Customer</p>" data-original-title="Do not Email">?</a></h5>\n                <input type="checkbox" id="noemail" name="noemail" value="true">\n            </div>\n        </div>\n\n        <div class="row secured secured-cust secured-cust-admin">\n            <input type="hidden" name="billable.id" value="' +
__e( App.dict.yesNoType['n'].id ) +
'" />\n            <input type="hidden" name="payable.id" value="' +
__e( App.dict.yesNoType['n'].id ) +
'" />\n        </div>\n\n\t</fieldset>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Cancel Booking</a>\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["booking/close/alreadyclosed"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span12">\n        <div class="text-center my-3">\n            <h3>Job #' +
__e( obj.id ) +
' has previously been closed.</h3>\n            <h5 class="mb-1">If you would like to update the job details please contact the administrator.</h5>\n            <p>\n                <a href="' +
__e(App.config.context) +
'/payment/downloadPreview?bookings.id=' +
__e(obj.id) +
'" class="widget-save-as-pdf nowrap">\n                    <i class="intint-icon-file-pdf"></i>\n                    Save as PDF\n                </a>\n            </p>\n        </div>\n\n    </div>\n</div>';

}
return __p
};

this["JST"]["booking/close/confirmation"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="text-center my-3">\n    <h3 class="mb-1">Job #' +
__e( obj.id ) +
' successfully closed.</h3>\n    <p>\n        <a href="' +
__e(App.config.context) +
'/payment/downloadPreview?bookings.id=' +
__e(obj.id) +
'" class="widget-save-as-pdf nowrap">\n            <i class="intint-icon-file-pdf"></i>\n            Save as PDF\n        </a>\n    </p>\n</div>';

}
return __p
};

this["JST"]["booking/close/details"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<style>\n    .inline {\n        float: left;\n        padding-top: 5px;\n        text-align: right;\n        width: 100%;\n    }\n</style>\n<div class="row-fluid">\n\n    <!--www closing - booking.review.js / booking/review/bookingclose/show -->\n    <!--www disclaimer - booking.review.js / booking/review/bookingclose/disclaimer -->\n    <!--mobile closing - mobile.js / mobile/closebooking/show-->\n\n    <!-- could not be found / not used in www / mobile -->\n    <!--String notes-->\n    <!--String finalNotes-->\n\n    <!-- deprecated -->\n    <!--String billingNotes-->\n    <!--String interpreterNotes-->\n    <!--String timeZone-->\n    <!--List<ReferenceCode> convertedRefs = new ArrayList<ReferenceCode>()-->\n\n\n    <!--String signer-->\n    <!--String signatureRaw-->\n    <!--String signatureWidth-->\n    <!--String signatureHeight-->\n    <!--String signatureHash-->\n    <!--Boolean isCancelled-->\n    <!--Boolean noemail = true-->\n    <!--CancellationReason cancellationReason-->\n    <!--YesNoType payable-->\n    <!--YesNoType billable-->\n\n    <!-- left column -->\n    <div class="span6">\n        <h4>Details</h4>\n        ';
 if (companyConfig.enableContactArrivalDate || debug) { ;
__p += '\n            <!-- contactArrivalDate -->\n            <div class="row-fluid">\n                <div class="span4">\n                    <span class="control-label inline">\n                        <label class="required" for="contactArrivalDateDate">Arrival Date / Time</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Arrival Date" data-original-title="Arrival Date">?</a>\n                    </span>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="contactArrivalDateDate" name="contactArrivalDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.contactArrivalDate || obj.expectedStartDate ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="contactArrivalDateTime" name="contactArrivalDate" data-timezone="' +
__e(obj.timeZone) +
'" data-defaulttime="' +
__e( obj.contactArrivalDate || obj.expectedStartDate ) +
'" class="input-block-level format-time" value="' +
__e( obj.contactArrivalDate || (companyConfig.enableBlankStartTimeClosing ? '' : obj.expectedStartDate) ) +
'" rel="tooltip" data-placement="right" title="All times are in the timezone of the job location (' +
__e( obj.timeZone ) +
')"/>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- /contactArrivalDate -->\n        ';
 } ;
__p += '\n\n        ';
 if (companyConfig.enableContactLateTimeTracking || debug) { ;
__p += '\n            <!-- contactLateMins -->\n            <div class="row-fluid">\n                <div class="span4">\n                    <span class="control-label inline">\n                        <label class="required" for="contactLateMins">Minutes Late</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Arrival Date" data-original-title="Arrival Date">?</a>\n                    </span>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <select class="input-block-level" name="contactLateMins" id="contactLateMins">\n                                ' +
((__t = ( selectOptions(App.dict.minutes, {selected: (_.isNumber(parseInt(obj.contactLateMins)) ? parseInt(obj.contactLateMins) : ''), noSelection: {id: '', name: '[Choose Minutes]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- /contactLateMins -->\n        ';
 } ;
__p += '\n\n        <!-- actualStartDate -->\n        <div class="row-fluid">\n            <div class="span4">\n                <span class="control-label inline">\n                    <label class="required" for="actualStartDateDate">Start Date / Time</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Actual Start Date" data-original-title="Actual Start Date">?</a>\n                </span>\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <div class="controls">\n                        <input type="text" id="actualStartDateDate" name="actualStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.actualStartDate || obj.expectedStartDate ) +
'"/>\n                    </div>\n                </div>\n            </div>\n            <div class="span4">\n                <div class="controls">\n                    <div class="control-group">\n                        <input type="text" id="actualStartDateTime" name="actualStartDate" data-timezone="' +
__e(obj.timeZone) +
'" data-defaulttime="' +
__e( obj.actualStartDate || obj.expectedStartDate ) +
'" class="input-block-level format-time" value="' +
__e( obj.actualStartDate || (companyConfig.enableBlankStartTimeClosing ? '' : obj.expectedStartDate) ) +
'" rel="tooltip" data-placement="right" title="All times are in the timezone of the job location (' +
__e( obj.timeZone ) +
')"/>\n                    </div>\n                </div>\n            </div>\n        </div> <!-- /actualStartDate -->\n\n        <!-- actualEndDate -->\n        <div class="row-fluid">\n            <div class="span4">\n                <span class="control-label inline">\n                    <label class="required" for="actualEndDateDate">End Date / Time</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Actual End Date" data-original-title="Actual End Date">?</a>\n                </span>\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <div class="controls">\n                        <input type="text" id="actualEndDateDate" name="actualEndDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.actualEndDate || obj.expectedEndDate ) +
'"/>\n                    </div>\n                </div>\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <div class="controls">\n                        <input type="text" id="actualEndDateTime" name="actualEndDate" data-timezone="' +
__e(obj.timeZone) +
'" data-defaulttime="' +
__e( obj.actualEndDate || obj.expectedEndDate ) +
'" class="input-block-level format-time" value="' +
__e( obj.actualEndDate || (companyConfig.enableBlankStartTimeClosing ? '' : obj.expectedEndDate) ) +
'" rel="tooltip" data-placement="right" title="All times are in the timezone of the job location (' +
__e( obj.timeZone ) +
')"/>\n                    </div>\n                </div>\n            </div>\n        </div> <!-- /actualEndDate -->\n\n        <!-- ////// sla reporting / time tracking section ////// -->\n        ';
 if ((customerConfig.slaReportingEnabled || customerConfig.enableTimeTracking) || debug) { ;
__p += '\n            <!-- assignmentDate -->\n            <div class="row-fluid">\n                <div class="span4">\n                    <span class="control-label inline">\n                        <label class="required" for="assignmentDateDate">Interpreter Assigned Date / Time</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The date / time the interpreter was assigned." data-original-title="Interpreter Assigned Date">?</a>\n                    </span>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="assignmentDateDate" name="assignmentDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.assignmentDate ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="assignmentDateTime" name="assignmentDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time" value="' +
__e( obj.assignmentDate ) +
'" rel="tooltip" data-placement="right" title="All times are in the timezone of the job location (' +
__e( obj.timeZone ) +
')"/>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- /assignmentDate -->\n\n            <!-- timeInterpreterDepartedOutbound -->\n            <div class="row-fluid">\n                <div class="span4">\n                    <span class="control-label inline">\n                            <label class="required" for="timeInterpreterDepartedOutboundDate">Outbound Departure Date / Time</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The date when the interpreter departed for the job" data-original-title="Outbound Departure Date">?</a>\n                    </span>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="timeInterpreterDepartedOutboundDate" name="timeInterpreterDepartedOutbound" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.timeInterpreterDepartedOutbound || obj.expectedStartDate ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="timeInterpreterDepartedOutboundTime" name="timeInterpreterDepartedOutbound" data-timezone="' +
__e(obj.timeZone) +
'" data-defaulttime="' +
__e( obj.timeInterpreterDepartedOutbound || obj.expectedStartDate ) +
'" class="input-block-level format-time" value="' +
__e( obj.timeInterpreterDepartedOutbound ) +
'" rel="tooltip" data-placement="right" title="All times are in the timezone of the job location (' +
__e( obj.timeZone ) +
')"/>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- /timeInterpreterDepartedOutbound -->\n\n            <!-- timeInterpreterArrivedOutbound -->\n            <div class="row-fluid">\n                <div class="span4">\n                    <span class="control-label inline">\n                        <label class="required" for="timeInterpreterArrivedOutboundDate">Outbound Arrival Date / Time</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The date when the interpreter arrived at the job location." data-original-title="Outbound Arrival Date">?</a>\n                    </span>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="timeInterpreterArrivedOutboundDate" name="timeInterpreterArrivedOutbound" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.timeInterpreterArrivedOutbound || obj.expectedStartDate ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="timeInterpreterArrivedOutboundTime" name="timeInterpreterArrivedOutbound" data-timezone="' +
__e(obj.timeZone) +
'" data-defaulttime="' +
__e( obj.timeInterpreterArrivedOutbound || obj.expectedStartDate ) +
'" class="input-block-level format-time" value="' +
__e( obj.timeInterpreterArrivedOutbound ) +
'" rel="tooltip" data-placement="right" title="All times are in the timezone of the job location (' +
__e( obj.timeZone ) +
')"/>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- /timeInterpreterArrivedOutbound -->\n        ';
 } ;
__p += '\n\n        ';
 if (customerConfig.enableTimeTracking || debug) { ;
__p += '\n            <!-- timeInterpreterDepartedInbound -->\n            <div class="row-fluid">\n                <div class="span4">\n                    <span class="control-label inline">\n                        <label class="required" for="timeInterpreterDepartedInboundDate">Inbound Departure Date / Time</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The date when the interpreter departed after job completion." data-original-title="Inbound Departure Date">?</a>\n                    </span>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="timeInterpreterDepartedInboundDate" name="timeInterpreterDepartedInbound" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.timeInterpreterDepartedInbound || obj.expectedEndDate ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="timeInterpreterDepartedInboundTime" name="timeInterpreterDepartedInbound" data-timezone="' +
__e(obj.timeZone) +
'" data-defaulttime="' +
__e( obj.timeInterpreterDepartedInbound || obj.expectedEndDate ) +
'" class="input-block-level format-time" value="' +
__e( obj.timeInterpreterDepartedInbound ) +
'" rel="tooltip" data-placement="right" title="All times are in the timezone of the job location (' +
__e( obj.timeZone ) +
')"/>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- /timeInterpreterDepartedInbound -->\n\n            <!-- timeInterpreterArrivedInbound -->\n            <div class="row-fluid">\n                <div class="span4">\n                    <span class="control-label inline">\n                        <label class="required" for="timeInterpreterArrivedInboundDate">Inbound Arrival Date / Time</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The date when the interpreter arrived at his/her home location." data-original-title="Inbound Arrival Date">?</a>\n                    </span>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="timeInterpreterArrivedInboundDate" name="timeInterpreterArrivedInbound" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.timeInterpreterArrivedInbound || obj.expectedEndDate ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="text" id="timeInterpreterArrivedInboundTime" name="timeInterpreterArrivedInbound" data-timezone="' +
__e(obj.timeZone) +
'" data-defaulttime="' +
__e( obj.timeInterpreterArrivedInbound || obj.expectedEndDate ) +
'" class="input-block-level format-time" value="' +
__e( obj.timeInterpreterArrivedInbound ) +
'" rel="tooltip" data-placement="right" title="All times are in the timezone of the job location (' +
__e( obj.timeZone ) +
')"/>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- /timeInterpreterArrivedInbound -->\n        ';
 } ;
__p += '\n        <!-- ////// /sla reporting / time tracking section ////// -->\n\n        ';
 if (customerConfig.consumerCountEnabled || debug) { ;
__p += '\n            <!-- consumerCount -->\n            <div class="row-fluid">\n                <div class="span4">\n                    <span class="control-label inline">\n                        <label class="required" for="consumerCount">Number Consumers</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Number Consumers" data-original-title="Number Consumers">?</a>\n                    </span>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <div class="controls">\n                            <select class="input-block-level" name="consumerCount" id="consumerCount">\n                                ' +
((__t = ( selectOptions(App.dict.consumerCount, {selected: (_.isNumber(parseInt(obj.consumerCount)) ? parseInt(obj.consumerCount) : ''), noSelection: {id: '', name: '[# Consumers]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- /consumerCount -->\n        ';
 } ;
__p += '\n\n        ';
 if ((companyConfig.vosRequired && customerConfig.vosRequired) || debug) { ;
__p += '\n            <!-- attach vos -->\n            <div class="row-fluid">\n                <div class="span4">\n                    <span class="control-label inline">\n                        <label for="vos">VoS <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Attach supporting verification document." data-original-title="VoS">?</a></label>\n                    </span>\n                </div>\n                <div class="span8 form-inline">\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="file" id="vos" name="vos" value="' +
__e( obj.vos ? obj.vos.name : "" ) +
'"/> <input type="checkbox" id="vosOffline" name="vosOffline" ' +
__e( obj.vosOffline ? "checked" : "" ) +
'/> Paperwork to be Submitted <strong>Offline</strong>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n            <!-- container for warning message about submitting paperwork offline -->\n            <div class="row-fluid ' +
__e( obj.vosOffline ? "" : "hide" ) +
' vosOffline-warning-container">\n                <div class="span4"><!-- offset4 not working! --></div>\n                <div class="span8">\n                    <div class="alert alert-error">\n                        <strong>Warning!</strong> Submission of verification paperwork offline <strong>may delay payment</strong>.\n                        Please contact your administrator to determine how you can best process verification paperwork\n                            electronically in the future.\n                    </div>\n                </div>\n            </div>\n            <!-- /attach vos -->\n        ';
 } ;
__p += '\n\n        ';
 if (companyConfig.enableCancelCheck || debug) { ;
__p += '\n            <!-- cancellation information -->\n            <div class="row-fluid 1secured secured-cont">\n                ';
 if (hasRole("cont") && obj.status.nameKey != "cancelled") { ;
__p += '\n                    <div class="span4">\n                        <span class="control-label inline">\n                            <label for="isCancelled">Job Cancelled? <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="<p>Select if the job has been cancelled.</p>" data-original-title="Job Cancelled">?</a></label>\n                        </span>\n                    </div>\n                    <div class="span8">\n                        <div class="control-group">\n                            <div class="controls">\n                                <input type="checkbox" id="isCancelled" name="isCancelled" ' +
__e( obj.isCancelled ? "checked" : "" ) +
'>\n                            </div>\n                        </div>\n                    </div>\n                ';
 } ;
__p += '\n            </div>\n            <div class="row-fluid 1secured secured-cont ' +
__e( obj.isCancelled ? "" : "hide" ) +
' cancellationReason-container">\n                <div class="span4">\n                    <div class="control-group inline">\n                        <label class="required" for="cancellationReason">Cancellation Reason <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Please select the reason for the cancellation in this field. Choose a reason why this booking is being cancelled.<p>" data-original-title="Cancellation Reason">?</a></label>\n                    </div>\n                </div>\n                <div class="span8">\n                    <div class="control-group">\n                        <div class="controls">\n                            <select class="input-block-level api-v2" name="cancellationReason" id="cancellationReason">\n                                ' +
((__t = ( selectOptions(App.dict.cancellationReasons, {noSelection: {id: '', name: '[Choose a Cancellation Reason]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- /cancellation information -->\n        ';
 } ;
__p += '\n\n        <!-- notes -->\n        <div class="row-fluid">\n            <div class="span4">\n                <span class="control-group inline">\n                    <label for="closingNotes">Job Close Notes</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Optionally enter any notes related to the interpretation for the attention of the agency." data-original-title="Job Closing Notes">?</a>\n                </span>\n            </div>\n            <div class="span8">\n                <div class="control-group">\n                    <div class="controls">\n                        <textarea id="closingNotes" class="wysiwyg" name="closingNotes">' +
__e( obj.closingNotes ) +
'</textarea>\n                    </div>\n                </div>\n            </div>\n        </div> <!-- /notes -->\n    </div> <!-- /left column -->\n\n    <!-- right column -->\n    <div class="span6">\n        <!-- hidden by default and shown if any refs need to be collected at closing -->\n        <div class="row-fluid hidden references-container">\n            <div class="span12" id="references">\n\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <div class="span12" id="incidentals">\n\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <div class="span12" id="documents">\n                Docs go here\n            </div>\n        </div>\n    </div>\n    <!-- /right column -->\n</div>\n';

}
return __p
};

this["JST"]["booking/close/help"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span12">\n\n        ';
 if (obj.helpTextClosing) { ;
__p += '\n        <p>' +
((__t = ( obj.helpTextClosing )) == null ? '' : __t) +
'</p>\n        ';
 } else { ;
__p += '\n        <p>There is no help information currently available. Please contact your interpreter manager for instructions.</p>\n        ';
 } ;
__p += '\n\n    </div>\n</div>';

}
return __p
};

this["JST"]["booking/close/main"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n<a class="close" data-dismiss="modal">&times;</a>\n<h3>Close Job #' +
__e( obj.id ) +
'</h3>\n</div>\n<div class="modal-body closing-container">\n\n    <!-- views go here -->\n\n</div>\n<div class="modal-footer">\n    <span style="float: left;">\n        <span class="help">\n            <a href="javascript:void(0);" class="btn btn-warning widget-help">I Need Help!</a>\n        </span>\n        <span class="help-actions hide">\n            <a href="javascript:void(0);" class="btn widget-previous">Done With Help!</a>\n        </span>\n    </span>\n\n\n    <span class="details-actions">\n        <a href="javascript:void(0);" class="btn widget-next">Next</a>\n    </span>\n    <span class="summary-actions hide">\n        <a href="javascript:void(0);" class="btn widget-previous">Previous</a>\n        <a href="javascript:void(0);" class="btn btn-primary widget-ok">Confirm & Close Job</a>\n    </span>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["booking/close/summary-item"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<td>' +
__e( obj.type.name ) +
'' +
__e( obj.rateType ? " / " + obj.rateType.name : "" ) +
'</td>\n<td>' +
((__t = ( obj.description.trunc(80).replace(/<br\s*[\/]?>/gi, " ") )) == null ? '' : __t) +
'</td>\n<td>' +
__e( obj.quantity ) +
'</td>\n<td>' +
__e( formatMoney(obj.unitCost) ) +
'</td>\n<td>' +
__e( formatMoney((obj.isDeduction || obj.isDeductionService) ? (-1 * obj.totalCost) : obj.totalCost) ) +
'</td>\n\n';

}
return __p
};

this["JST"]["booking/close/summary"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-spacer">\n    <div>\n        You are submitting the following information. Please <span class="label label-info">review carefully</span> before submitting. If any information you\n        submitted looks incorrect, you can click the <span class="label">Previous</span> button below to correct it and re-submit.\n    </div>\n    <div class="row-fluid">\n        <div class="span4">\n            <dl class="dl-horizontal">\n                ';
 if (companyConfig.enableContactArrivalDate || debug) { ;
__p += '\n                <dt>Arrival</dt><dd><span class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.contactArrivalDate ) +
'</span></dd>\n                ';
 } ;
__p += '\n                ';
 if (companyConfig.enableContactLateTimeTracking || debug) { ;
__p += '\n                <dt># Minutes Late</dt><dd>' +
__e( obj.contactLateMins ) +
' minutes</dd>\n                ';
 } ;
__p += '\n                <dt>Duration</dt><dd><span class="format-duration" data-start="actualStartDate" data-end="actualEndDate"> </span></dd>\n                ';
 if ((customerConfig.slaReportingEnabled || customerConfig.enableTimeTracking) || debug) { ;
__p += '\n                <dt>Assigned</dt><dd><span class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.assignmentDate ) +
'</span></dd>\n                <dt>Departed (Outbound)</dt><dd><span class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.timeInterpreterDepartedOutbound ) +
'</span></dd>\n                <dt>Arrived (Outbound)</dt><dd><span class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.timeInterpreterArrivedOutbound ) +
'</span></dd>\n                ';
 } ;
__p += '\n                ';
 if (customerConfig.enableTimeTracking || debug) { ;
__p += '\n                <dt>Departed (Inbound)</dt><dd><span class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.timeInterpreterDepartedInbound ) +
'</span></dd>\n                <dt>Arrived (Inbound)</dt><dd><span class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.timeInterpreterArrivedInbound ) +
'</span></dd>\n                ';
 } ;
__p += '\n                ';
 if (obj.consumerCountEnabled || debug) { ;
__p += '\n                <dt># Consumers</dt><dd>' +
__e( obj.consumerCount ) +
'</span></dd>\n                ';
 } ;
__p += '\n                ';
 if (companyConfig.enableCancelCheck || debug) { ;
__p += '\n                <dt>Cancelled</dt><dd>' +
__e( obj.cancellationReason && obj.cancellationReason.id ? getStatusAttributeById(App.dict.cancellationReasons, obj.cancellationReason.id, "name") : "[Not Selected]" ) +
'</dd>\n                ';
 } ;
__p += '\n                <!--// vos preview-->\n                <!--// esignature preview-->\n            </dl>\n        </div>\n        <div class="span4">\n            <dl class="dl-horizontal">\n                ';
 _.each(obj.incidentals, function(i) { ;
__p += '\n                    <dt>' +
__e( i.type.name ) +
'</dt><dd>' +
__e( i.description ) +
' ' +
__e( i.durationHours ? i.durationHours : i.quantity ) +
'</dd>\n                ';
 }); ;
__p += '\n                ';
 if (obj.incidentals && obj.incidentals.length == 0) { ;
__p += '\n                    <dt>Incidentals</dt><dd>[No incidentals]</dd>\n                ';
 } ;
__p += '\n            </dl>\n\n            <dl class="dl-horizontal">\n                ';
 _.each(obj.refs, function(r) { ;
__p += '\n                <dt>' +
__e( r.name ) +
'</dt><dd>' +
__e( r.ref ) +
'</dd>\n                ';
 }); ;
__p += '\n                ';
 if (obj.refs && obj.refs.length == 0) { ;
__p += '\n                <dt>References</dt><dd>[No references]</dd>\n                ';
 } ;
__p += '\n            </dl>\n        </div>\n        <div class="span4">\n            <dl class="dl-horizontal">\n                <dt>Notes</dt><dd>' +
__e( obj.closingNotes ? obj.closingNotes : "[No Notes]" ) +
'</dd>\n            </dl>\n        </div>\n    </div>\n</div>\n\n\n<div class="row-spacer">\n    <div>\n        <p>Your <span class="label label-warning"><strong>estimated</strong></span> reimbursement is as follows. Note\n            that this is an estimate only and will be finalized before any reimbursement is issued. Please contact\n            your interpreter manager with any questions.\n        </p>\n    </div>\n\n    <table class="table" style="border: 1px solid grey;">\n        <thead>\n            <tr>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Quantity</th>\n                <th>Rate</th>\n                <th>Total</th>\n            </tr>\n        </thead>\n        <tbody class="summary-items">\n\n        </tbody>\n    </table>\n</div>\n\n<div class="row-spacer">\n    ';
 if (companyConfig.disclaimerEnabled || debug) { ;
__p += '\n    <div class="disclaimer">\n        <div>\n            ' +
((__t = ( companyConfig.disclaimer )) == null ? '' : __t) +
'\n        </div>\n        <div class="control-group">\n            <div class="controls">\n                <input type="text" class="input-mini" style="margin-top: 9px;" name="disclaimerAcceptedInitials" value="" placeholder="Initials"/>\n                <button type="button" class="btn widget-accept-disclaimer" data-toggle="button" value="Submit">Agree</button>\n            </div>\n        </div>\n        <!--<iiiiframe src="' +
__e( App.config.context ) +
'/payment/preview/?interpreter.id=' +
__e(obj["interpreter.id"] ) +
'&bookings.id=' +
__e(obj.id ) +
'&hideHeader=true" width="100%" height="500px" frameBorder="0"/>-->\n    </div>\n    ';
 } ;
__p += '\n</div>';

}
return __p
};

this["JST"]["booking/decline/declineBooking/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Can\'t Fulfill Job</h3>\n</div>\n<div class="modal-body">\n    <fieldset>\n\n        <input type="hidden" name="id" value="' +
__e( obj.id ) +
'" />\n        <input type="hidden" name="version" value="' +
__e( obj.version ) +
'" />\n        <input type="hidden" name="company.id" value="' +
__e( App.config.company.id ) +
'" />\n\n        <div class="row">\n            <div class="control-group span6">\n                <label>\n                    <span class="control-label">\n                        <span class="required">\n                            Please select the reason for the visit being unfulfilled in this field:\n                        </span>\n                    </span>\n                </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Choose a reason why this booking is being unfulfilled.<p>" data-original-title="Unfulfilled Reason">?</a>\n                <div class="controls">\n                    <select class="input-xlarge" name="unfulfilledReason.id" id="unfulfilledReason">\n                        ' +
((__t = ( selectOptions(App.dict.unfulfilledReasons, {noSelection: {id: '', name: '[Choose an Unfulfilled Reason]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                    <p class="help-block">Required field.</p>\n                </div>\n            </div>\n        </div>\n\n        <div class="row">\n            <div class="span6">\n                <h5>Please enter any additional information for declining the booking in this field:</h5>\n                <textarea id="notes" name="notes" style="width: 90%; height: 180px;"></textarea>      <!-- ${bookingInstance?.notes} -->\n            </div>\n        </div>\n\n            <div class="row secured secured-comp secured-admin">\n                <div class="span6">\n                    <h5>Do NOT send can\'t fulfill email <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Do not send notification email to Interpreter and Customer</p>" data-original-title="Do not Email">?</a></h5>\n                    <input type="checkbox" id="noemail" name="noemail" value="true">\n                </div>\n            </div>\n\n        <div class="row secured secured-cust secured-cust-admin">\n            <!-- <sec:ifNotGranted roles="ROLE_COMP, ROLE_ADMIN"> -->\n            <input type="hidden" name="billable.id" value="' +
__e( App.dict.yesNoType['n'].id ) +
'" />\n            <input type="hidden" name="payable.id" value="' +
__e( App.dict.yesNoType['n'].id ) +
'" />\n            <!-- </sec:ifNotGranted> -->\n        </div>\n\n    </fieldset>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Can\'t Fulfill Job</a>\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["booking/feedback/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div class="feedback">\n\n    <!-- feedback (' +
__e( id ) +
') -->\n\n    <h4>Rating & Comments</h4>\n    <h5>Rating</h5>\n    <!-- rating -->\n\n    <label for="rating" style="display: inline;">Rating <div id="rating-scr" style="display: inline;">(' +
__e( (obj.averageRating ? obj.averageRating : "0") ) +
'/5)</div></label>\n    <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="<p>Click on the stars below to rate your experience of the interpretation service that\n                            was provided, with 5 stars being the most positive experience.</p>\n                            <p>You can change or update your rating in the future.</p>" data-original-title="Rating">?</a>\n    <div id="rating"></div>\n\n\n    <!-- comments -->\n    <div id="comments" class="commentable">\n\n    </div>\n</div>\n\n<script id="feedbackTemplate" type="text/template">\n    <div class="row secured secured-comp secured-admin">\n        <div class="span4">\n            <!-- rating -->\n            <h5>Rating</h5>\n            <label for="rating" style="display: inline;">Rating <div id="rating-scr" style="display: inline;">(' +
((__t = ( (obj.averageRating ? obj.averageRating : "0") )) == null ? '' : __t) +
'/5)</div></label>\n            <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="<p>Click on the stars below to rate your experience of the interpretation service that\n                                was provided, with 5 stars being the most positive experience.</p>\n                                <p>You can change or update your rating in the future.</p>" data-original-title="Rating">?</a>\n            <div id="rating"></div>\n        </div>\n\n        <div class="span4">\n            <!-- comments -->\n            <h5>Comments</h5>\n            <div id="comments" class="commentable">\n\n            </div>\n        </div>\n    </div>\n</script>';

}
return __p
};

this["JST"]["booking/generaledit/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<section>\n    <form class="form-vertical">\n        <fieldset>\n            <h4 class="well">\n                Job #' +
__e( obj.id ? obj.id : "[]" ) +
'\n                ';
 if (obj["recurringGroup.id"]) { ;
__p += '(<a class="gridiFramePopup" href="' +
__e(App.config.context) +
'/calendar/recurring/' +
__e( obj.id ) +
'" title=\'Recurring Booking (Group #' +
__e( obj.id ) +
')\'><i class=\'icon-calendar\'></i>Recurring</a>)';
 } ;
__p += '\n                - <span class="secured secured-comp secured-admin secured-cont">Customer Information</span>\n                <span class="secured secured-cust">Requestor Information</span>\n                <span class="pull-right">Status: ' +
__e( obj.id ? getStatusAttributeById(App.dict.bookingStatus, obj["status.id"], 'name') : "New" ) +
'</span>\n            </h4>\n            <div class="row">\n                <!-- left column -->\n                <div class="span5">\n\n\n                    <div class="control-group secured secured-comp" style="position: relative;">\n                        <label class="control-label required" for="customer">Customer </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the customer that this booking is for." data-original-title="Customer">?</a>\n                        <div class="controls">\n                            <div class="input-append">\n                                <input id="customer-select" class="customer-select" style="width: 65%" name="customer-select" type="text" value="' +
__e( obj["customer.label"] ) +
'" placeholder="Type, select or create new customer"/><button title="Clear customer" id="customerX" class="btn"><i class="icon icon-remove"></i></button><button title="Choose customer" id="customerDD" class="btn"><i class="icon icon-chevron-down"></i></button><button title="New customer" id="customerNew" class="btn"><i class="icon icon-edit"></i></button>\n                                <p class="help-block">Required field.</p>\n                            </div>\n                        </div>\n                        <div id="customers-popup" class="autocompletePopup ac-left">\n                            <div class="popupHeader">\n                                <p>Location: <span>&nbsp;</span></p><div class="closePopup"></div>\n                            </div> <!-- / popupHeader -->\n                            <div class="popupBody">\n                                <div><img src="' +
__e(App.config.context) +
'/images/loader-circle.gif"> Loading ...</div>\n                            </div> <!-- / popupBody -->\n                        </div> <!-- / customers -->\n                    </div>\n\n                    <div class="secured secured-cust secured-comp">\n                        <div class="control-group" style="position: relative;">\n                            <label class="control-label required" for="billingLocation">Location Requesting Service </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The correct billing address will automatically appear here. This may differ from the location where service takes place and is used for reporting and invoicing purposes." data-original-title="Billing Address">?</a>\n                            <div class="controls">\n                                <div class="input-append">\n                                    <input id="billingLocation-select" style="width: 65%" name="billingLocation-select" type="text" value="' +
__e( obj["billingLocation.label"] ) +
'" placeholder="Type, select or create new location"/><button title="Clear location" id="billingLocationX" class="btn"><i class="icon icon-remove"></i></button><button title="Select location" id="billingLocationDD" class="btn"><i class="icon icon-chevron-down"></i></button><button title="Create new location" id="billingLocationNew" class="btn"><i class="icon icon-edit"></i></button>\n                                    <p class="help-block">Required field.</p>\n                                </div>\n                            </div>\n                            <div id="billingLocations-popup" class="autocompletePopup ac-left">\n                                <div class="popupHeader">\n                                    <p>Location: <span>&nbsp;</span></p><div class="closePopup"></div>\n                                </div> <!-- / popupHeader -->\n                                <div class="popupBody">\n                                    <div><img src="' +
__e(App.config.context) +
'/images/loader-circle.gif"> Loading ...</div>\n                                </div> <!-- / popupBody -->\n                            </div> <!-- / billing locations -->\n                        </div>\n\n                        <div class="control-group" style="position: relative;">\n                            <label class="control-label required" for="requestor-select">Requested By </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The name and contact information of the requestor." data-original-title="Requested By">?</a>\n                            <div class="controls">\n                                <div class="input-append">\n                                    <input id="requestor-select" style="width: 65%" name="requestor-select" type="text" value="' +
__e( obj["requestor.label"] ) +
'" placeholder="Type, select or create new site contact"/><button title="Clear contact" id="requestorX" class="btn"><i class="icon icon-remove"></i></button><button title="Select contact" id="requestorDD" class="btn"><i class="icon icon-chevron-down"></i></button><button title="Create new contact" id="requestorNew" class="btn"><i class="icon icon-edit"></i></button>\n                                </div>\n                            </div>\n                            <div id="requestors-popup" class="autocompletePopup ac-left">\n                                <div class="popupHeader">\n                                    <p>Requestor: <span>&nbsp;</span></p><div class="closePopup"></div>\n                                </div> <!-- / popupHeader -->\n                                <div class="popupBody">\n                                    <div><img src="' +
__e(App.config.context) +
'/images/loader-circle.gif"> Loading ...</div>\n                                </div> <!-- / popupBody -->\n                            </div> <!-- / site contacts -->\n                        </div>\n                        ';
 if (obj.requestedBy) { ;
__p += '\n                        <p><strong>Legacy Requested By</strong> ' +
__e( obj.requestedBy ) +
'</p>\n                        ';
 } ;
__p += '\n                    </div>\n\n                </div> <!-- / left column -->\n\n                <!-- right column -->\n                <div class="span3">\n                    <div id="contract" class="secured secured-comp">\n                        <strong>Contract Type</strong>: <span id="contractType">' +
__e( obj.contractType ) +
'</span>\n                    </div>\n                    <div class="control-group secured secured-comp">\n                        <label class="control-label" for="customerNotes">Customer Notes </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Notes about the customer." data-original-title="Customer Notes">?</a>\n                        <div class="controls">\n                            <!--<textarea id="customerNotes" disabled name="customerNotes">' +
__e( obj.customerNotes ) +
'</textarea>-->\n                            <span id="customerNotes">' +
__e( obj.customerNotes ) +
'</span>\n                        </div>\n                    </div>\n\n                    <div class="control-group secured secured-comp">\n                        <label class="control-label" for="billingNotes">Billing Notes </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Add any notes or information related to billing or interpreter payment here." data-original-title="Billing Notes">?</a>\n                        <div class="controls">\n                            <textarea id="billingNotes" name="billingNotes">' +
__e( obj.billingNotes ) +
'</textarea>\n                        </div>\n                    </div>\n\n                    <div class="control-group secured secured-cust">\n                        <label class="control-label" for="notes">Special Instruction / Notes </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Any special instructions notes for the booking." data-original-title="Notes">?</a>\n                        <div class="controls">\n                            <textarea class="wysiwyg" disabled name="notes">' +
__e( obj.notes ) +
'</textarea>\n                        </div>\n                    </div>\n\n                </div> <!-- / right column -->\n            </div> <!-- / row -->\n\n            <div class="row">\n\n                <div class="control-group span3">\n                    <label class="control-label" for="notificationEmail">Email Address </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Email address to send booking notifications to." data-original-title="Notification Email">?</a>\n                    <div class="controls">\n                        <div class="input-append">\n                            <input id="notificationEmail" style="width: 80%;" name="notificationEmail" type="text" value="' +
__e( obj.notificationEmail ) +
'"/><span class="add-on"><i class="icon icon-envelope"></i></span>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="control-group span1">\n                    <label class="control-label" for="notify">Notify </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enable email notifications to this email address." data-original-title="Enable notifications.">?</a>\n                    <div class="controls">\n                        <input id="notify" name="notify" type="checkbox" value="true" ';
 if (obj.notify) { ;
__p += 'checked';
 } ;
__p += '/>\n                    </div>\n                </div>\n\n\n                <div class="control-group span2 secured secured-comp">\n                    <label class="control-label required" for="bookingDate">Booking Date </label>\n                    <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="The date the booking was made." data-original-title="Appointment Date">?</a>\n                    <div class="controls">\n                        <input id="bookingDateField" name="bookingDateField" type="text" value="' +
__e( (obj.bookingDate ? Date.parseExact(obj.bookingDate, App.config.company.config.dateFormat + " " + App.config.company.config.jsTimeFormat).toString(App.config.company.config.dateFormat) : "") ) +
'"/>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </div>\n\n                <div class="control-group span2 secured secured-comp">\n                    <label class="control-label required" for="bookingTime">Booking Time </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The time the booking was made." data-original-title="Appointment Time">?</a>\n                    <div class="controls">\n                        <input id="bookingTime" name="bookingTime" type="text" value="' +
__e( (obj.bookingDate ? Date.parseExact(obj.bookingDate, App.config.company.config.dateFormat + " " + App.config.company.config.jsTimeFormat).toString(App.config.company.config.jsTimeFormat) : "") ) +
'"/>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </div>\n\n            </div> <!-- / row -->\n\n            <h4 id="location" class="well">Service Location</h4>\n            <div class="row">\n                <!-- left column -->\n                <div class="span5">\n                    <div class="control-group" style="position: relative;">\n                        <label class="control-label required" for="location">Location </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the location for the appointment." data-original-title="Location">?</a>\n                        <div class="controls">\n                            <div class="input-append">\n                                <input id="location-select" style="width: 65%" name="location-select" type="text" value="' +
__e( obj["location.label"] ) +
'" placeholder="Type, select or create new location"/><button title="Clear location" id="locationX" class="btn"><i class="icon icon-remove"></i></button><button title="Select location" id="locationDD" class="btn"><i class="icon icon-chevron-down"></i></button><button title="Create new location" id="locationNew" class="btn"><i class="icon icon-edit"></i></button>\n                                <p class="help-block">Required field.</p>\n                            </div>\n                        </div>\n                        <div id="locations-popup" class="autocompletePopup ac-left">\n                            <div class="popupHeader">\n                                <p>Location: <span>&nbsp;</span></p><div class="closePopup"></div>\n                            </div> <!-- / popupHeader -->\n                            <div class="popupBody">\n                                <div><img src="' +
__e(App.config.context) +
'/images/loader-circle.gif"> Loading ...</div>\n                            </div> <!-- / popupBody -->\n                        </div> <!-- / locations -->\n                    </div>\n\n                    <div id="subLocationDiv" class="control-group" style="position: relative;">\n                        <label class="control-label" for="subLocation">Sub-Location </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the sub-location within the venue." data-original-title="Sub-Location">?</a>\n                        <div class="controls">\n                            <div class="input-append">\n                                <input id="subLocation-select" style="width: 65%" name="subLocation-select" type="text" value="' +
__e( obj["subLocation.label"] ) +
'" placeholder="Type, select or create new sub location"/><button title="Clear location" id="subLocationX" class="btn"><i class="icon icon-remove"></i></button><button title="Select location" id="subLocationDD" class="btn"><i class="icon icon-chevron-down"></i></button><button title="Create new sub-location" id="subLocationNew" class="btn"><i class="icon icon-edit"></i></button>\n                            </div>\n                        </div>\n                        <div id="subLocations-popup" class="autocompletePopup ac-left">\n                            <div class="popupHeader">\n                                <p>Sub-Location: <span>&nbsp;</span></p><div class="closePopup"></div>\n                            </div> <!-- / popupHeader -->\n                            <div class="popupBody">\n                                <div><img src="' +
__e(App.config.context) +
'/images/loader-circle.gif"> Loading ...</div>\n                            </div> <!-- / popupBody -->\n                        </div> <!-- / Sub locations -->\n                    </div>\n\n\n                    <div class="row">\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="siteContact">Site Contact </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the name and any other information you have for the on site contact person to ask for upon arrival." data-original-title="Site Contact">?</a>\n                            <div class="controls">\n                                <input id="siteContact" name="siteContact" type="text" value="' +
__e( obj.siteContact ) +
'"/>\n                            </div>\n\n                        </div>\n                    </div>\n\n                </div> <!-- / left column -->\n\n                <!-- right column -->\n                <div class="span3">\n                    <div class="row">\n                        <div class="control-group span3">\n                            <label class="control-label">Interpretation Type </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Type of interpretation service." data-original-title="Interpretation Type">?</a>\n                            <div class="controls">\n                                <select name="bookingMode.id" id="bookingMode.id">\n                                    ' +
((__t = ( selectOptions(App.dict.bookingMode) )) == null ? '' : __t) +
'\n                                </select>\n                                <p class="help-block">Required field.</p>\n                            </div>\n                        </div>\n\n                    </div>\n                    <div class="row">\n\n                        <div id="locationNoteControl" class="control-group span3 ';
 if (obj["bookingMode.id"] && obj["bookingMode.id"] != App.dict.bookingMode['inperson'].id) { ;
__p += ' hidden ';
 } ;
__p += '">\n                            <label class="control-label" for="locationNote">Place of Appointment </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any additional information to further clarify the place of appointment e.g Court, Office, Suite Number or Hospital Ward." data-original-title="Place of Appointment">?</a>\n                            <div class="controls">\n                                <input id="locationNote" name="locationNote" type="text" value="' +
__e( obj.locationNote ) +
'"/>\n                            </div>\n                        </div>\n\n                        <div id="phoneNumControl" class="control-group span3 ';
 if (obj['bookingMode.id'] != App.dict.bookingMode['phone'].id) { ;
__p += ' hidden ';
 } ;
__p += '">\n                            <label class="control-label" for="phoneNum">Phone Number for Interpretation </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the phone number for the interpretation." data-original-title="Phone Number">?</a>\n                            <div class="controls">\n                                <input id="phoneNum" name="phoneNum" type="text" value="' +
__e( obj.numberForTelephoneTranslation ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n                </div> <!-- / right column -->\n            </div> <!-- / row -->\n\n            <div class="row secured secured-comp">\n\n                <div class="span4">\n                    <div class="well">\n                        <label class="control-label" for="notes">Service Summary </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Any special instructions notes for the booking." data-original-title="Notes">?</a>\n                        <address>\n                            ' +
__e( obj.locationNote ) +
'\n                            ' +
__e( obj["location.label"] ) +
'\n                        </address>\n\n                        <div>\n                            ' +
__e( obj.notes ) +
'\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span4">\n                    <div class="control-group">\n                        <label class="control-label" for="notes">Special Instruction / Notes </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Any special instructions notes for the booking." data-original-title="Notes">?</a>\n                        <div class="controls">\n                            <textarea class="wysiwyg" disabled name="notes">' +
__e( obj.notes ) +
'</textarea>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n            <h4 class="well">Appointment Details</h4>\n            <div id="appointment">\n                ';
 if (obj["status.id"] == App.dict.bookingStatus["cancelled"].id) { ;
__p += '\n                <div class="row">\n                    <div class="span6">\n                        <p><strong>Cancellation Reason</strong>: ' +
__e( obj["cancellationReason.label"] ) +
'</p>\n                        <p><strong>Cancellation Date</strong>: ' +
__e( obj.cancellationDate ) +
'</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="row">\n                    <div class="span8">\n                        <div class="row">\n                            <div class="control-group span4" style="position: relative;">\n                                <label class="control-label required" for="language">Language </label>\n                                <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="Language." data-original-title="Language">?</a>\n                                <div class="controls">\n                                    <div class="input-append">\n                                        <input id="language-select" style="width: 70%" name="language-select" type="text" value="' +
__e( obj["language.label"] ) +
'" placeholder="Type or select a language"/><button title="Clear language" id="languageX" class="btn"><i class="icon icon-remove"></i></button><button title="Select language" id="languageDD" class="btn"><i class="icon icon-chevron-down"></i></button>\n                                        <p class="help-block">Required field.</p>\n                                    </div>\n                                </div>\n                                <div id="languages-popup" class="autocompletePopup ac-left">\n                                    <div class="popupHeader">\n                                        <p>Language: <span>&nbsp;</span></p><div class="closePopup"></div>\n                                    </div> <!-- / popupHeader -->\n                                    <div class="popupBody">\n                                        <div><img src="' +
__e(App.config.context) +
'/images/loader-circle.gif"> Loading ...</div>\n                                    </div> <!-- / popupBody -->\n                                </div> <!-- / languages -->\n                            </div>\n\n                            <div class="control-group span2">\n                                <label class="control-label" for="gender">Gender Requirements </label>\n                                <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="Additionally specify whether there is a specific gender requirement." data-original-title="Gender">?</a>\n                                <div class="controls">\n                                    <select name="genderRequirement.id" id="genderRequirement.id">\n                                        <option>[Choose a gender]</option>\n                                        ' +
((__t = ( selectOptions(App.dict.gender) )) == null ? '' : __t) +
'\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="row">\n                            <div class="control-group span2">\n                                <label class="control-label required" for="expectedStartDate">Start Date </label>\n                                <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="The appointment date." data-original-title="Appointment Date">?</a>\n                                <div class="controls">\n                                    <input id="startDate" name="startDate" type="text" value="' +
__e( obj.startDate ) +
'" autocomplete="off"/>\n                                    <p class="help-block">Required field.</p>\n                                </div>\n                            </div>\n\n                            <div class="control-group span2">\n                                <label class="control-label required" for="expectedStartDate">Start Time </label>\n                                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The appointment time." data-original-title="Appointment Time">?</a>\n                                <div class="controls">\n                                    <input id="startTime" name="startTime" type="text" value="' +
__e( obj.startTime ) +
'" autocomplete="off"/>\n                                    <p class="help-block">Required field.</p>\n                                </div>\n                            </div>\n\n                            <div class="control-group span2">\n                                <label class="control-label required" for="expectedDurationHrs">Duration </label>\n                                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Duration of the booking" data-original-title="Duration">?</a>\n                                <div class="controls">\n                                    <div class="input-append">\n                                        <input id="expectedDurationHrs" name="expectedDurationHrs" style="width: 65%" type="text" value="' +
__e( obj.expectedDurationHrs ) +
'" autocomplete="off"/><span class="secured secured-comp"><button class="btn" id="priceQuote" type="button" title="Get Price Quote!"><i class="icon icon-shopping-cart"></i></button></span>\n                                        <p class="help-block">Required field.</p>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="control-group span2">\n                                <label class="control-label required" for="timeZone">Time Zone </label>\n                                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Time zone that the booking takes place. This defaults to the timezone of the customer.<p>You should only need to change this for customer bookings across multiple timezones.</p>Please contact your system administrator if you are finding that this must be frequently updated." data-original-title="Time Zone">?</a>\n                                <div class="controls">\n                                    <div class="input-append">\n                                        <select name="timeZone" id="timeZone">\n                                            ' +
((__t = ( selectOptions(App.dict.timeZones, {selected:App.config.userData.timeZone, display:'gmtOffset'}) )) == null ? '' : __t) +
'\n                                        </select>\n                                        <p class="help-block">Required field.</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                    ';
 if (obj.actualStartDate) { ;
__p += '\n                    <div class="row">\n                        <div class="control-group span2">\n                            <label class="control-label required">Actual Start Date </label>\n                            <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="The actual appointment date." data-original-title="Actual Appointment Date">?</a>\n                            <div class="controls">\n                                <input type="text" disabled value="' +
__e( obj.actStartDate ) +
'"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span2">\n                            <label class="control-label required">Actual Start Time </label>\n                            <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="The actual appointment time." data-original-title="Actual Appointment Time">?</a>\n                            <div class="controls">\n                                <input type="text" disabled value="' +
__e( obj.actStartTime ) +
'"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span2">\n                            <label class="control-label required">Actual Duration </label>\n                            <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="The actual duration" data-original-title="Actual Duration">?</a>\n                            <div class="controls">\n                                <input type="text" disabled value="' +
__e( obj.actualDurationHrs ) +
'"/>\n                            </div>\n                        </div>\n\n\n                    </div>\n                    ';
 } ;
__p += '\n\n                </div>\n\n            </div> <!-- / row -->\n\n            <h4 class="well">Interpreter Details</h4>\n            <div id="interpreter">\n                <div class="row" style="margin-bottom: 15px;">\n                    <div class="span8">\n                        ';
 if (obj["interpreter.id"] && obj["interpreter.id"] !== "") { ;
__p += '\n                        <p><strong>Interpreter</strong>: ' +
__e( obj["interpreter.label"] ) +
' <span class="secured secured-comp">' +
__e( "(" + obj["interpreter.primaryNumber"] + ")" ) +
'</span>\n                        <span class="secured secured-comp secured-admin">\n                            <a href="javascript:void(0);" onclick="$.colorbox({iframe:true, innerWidth:App.config.popups.cal.width, innerHeight:App.config.popups.cal.height, open:false, returnFocus: false, title: \'Interpreter Bookings\', href: App.config.context + \'/calendar/interpreter/' +
__e( obj['interpreter.id'] ) +
'/bookings\'});"><i class="icon-calendar"></i> See Calendar</a>,\n                            <a href="' +
__e(App.config.context) +
'/booking/manager/unassign/' +
__e( obj.id ) +
'"><i class="icon-remove"></i> Clear from Booking</a>\n                        </span>\n                        </p>\n                        <p><strong>Date Assigned</strong>: ' +
__e( obj.assignmentDate ) +
'</p>\n                        ';
 } else { ;
__p += '\n                        Not Yet Assigned\n                        ';
 } ;
__p += '\n                    </div>\n                    <div class="span4 secured secured-comp secured-admin">\n                        <div class="control-group">\n                            <label class="control-label" for="interpreterNotes">Notes about Interpreter(s)</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any notes about the interpreter here. <p>These notes are for internal use only and not shared with the customer or interpreter." data-original-title="Interpreter Notes">?</a>\n                            <div class="controls">\n                                <textarea id="interpreterNotes" class="wysiwyg" name="interpreterNotes">' +
__e( obj.interpreterNotes ) +
'</textarea>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="span4 secured secured-comp secured-cont">\n                        <div class="control-group">\n                            <label class="control-label" for="visitNotes">Job Notes </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any notes about Interpreter\'s job experience" data-original-title="Job Notes">?</a>\n                            <div class="controls">\n                                <textarea id="visitNotes" class="wysiwyg" name="visitNotes">' +
__e( obj.visitNotes ) +
'</textarea>\n                            </div>\n                        </div>\n                    </div>\n                </div> <!-- / row -->\n            </div>\n\n            <h4 id="references" class="well">Booking References</h4>\n            <div class="row" id="refs"> </div>\n\n            <div class="row">\n                <a href="javascript:void(0);" class="span8 addReference"><i class="icon icon-plus-sign"></i>Add reference</a>\n            </div>\n\n\n            <h4 id="reqs" class="well">Additional Requirements</h4>\n            <div class="row" id="requirements"></div>\n\n            <div class="row">\n                <a href="javascript:void(0);" class="span8 addRequirement"><i class="icon icon-plus-sign"></i>Add requirement</a>\n            </div>\n\n        </fieldset>\n    </form>\n</section>\n';

}
return __p
};

this["JST"]["booking/generaledit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<section id="customer">\n    <h4 class="well">\n        Job #' +
__e( obj.id ? obj.id : "[]" ) +
'\n        ';
 if (obj["recurringGroup.id"]) { ;
__p += '(<a class="gridiFramePopup" href="' +
__e(App.config.context) +
'/calendar/recurring/' +
__e( obj.id ) +
'" title=\'Recurring Booking (Group #' +
__e( obj.id ) +
')\'><i class=\'icon-calendar\'></i>Recurring</a>)';
 } ;
__p += '\n        - <span class="secured secured-comp secured-admin">Customer Information</span><span class="secured secured-cust">Requestor Information</span>\n        <span class="pull-right">Status: ' +
__e( obj.id ? getStatusAttributeById(App.dict.bookingStatus, obj["status.id"], 'name') : "New" ) +
'</span>\n    </h4>\n    <div class="row">\n      <!-- left column -->\n      <div class="span5">\n        <p><strong>Customer Name:</strong> ' +
__e( obj["customer.label"] ) +
'</p>\n        <div class="secured secured-cust secured-comp">\n        <p><strong>Location Requesting Service:</strong> ' +
__e( obj["billingLocation.label"] ) +
'</p>\n        <p><strong>Requested By</strong> ' +
__e( obj["requestor.label"] ? obj["requestor.label"] : "Other: " + obj["customRequestor"]) +
'</p>\n        ';
 if (obj.requestedBy) { ;
__p += '\n        <p><strong>Legacy Requested By</strong> ' +
__e( obj.requestedBy ) +
'</p>\n        ';
 } ;
__p += '\n        <p><strong>Email Address for notifications:</strong> ' +
__e( (obj.notificationEmail ? obj.notificationEmail : "Not Available") ) +
' (<strong>Notify? </strong> ' +
((__t = ( (obj.notify ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
')</p>\n        </div>\n        <div class="secured secured-comp">\n            <p><strong>Contract:</strong> ' +
__e( obj.contractType ) +
'</p>\n            <p><strong>Customer Notes:</strong> ' +
((__t = ( obj.customerNotes )) == null ? '' : __t) +
'</p>\n            <p><strong>Billing Notes:</strong> ' +
((__t = ( obj.billingNotes )) == null ? '' : __t) +
'</p>\n        </div>\n        <p><strong>Booking Date:</strong> ' +
__e(  obj.bookingDate ) +
'</p>\n      </div>\n    </div> <!-- / row -->\n\n    <h4 id="location" class="well">Service Location</h4>\n    <div class="row">\n      <div class="span5">\n        <p><strong>Location for Service:</strong> ' +
__e( obj["location.label"] ? obj["location.label"] : "Other: " + obj["customLocation"] ) +
'</p>\n        ';
 if (obj["subLocation.id"]) { ;
__p += '<p><strong>Sub-Location for Service:</strong> ' +
__e( obj["subLocation.label"] ) +
'</p> ';
 } ;
__p += '\n        <p><strong>Site Contact:</strong> ' +
__e(  obj["siteContact"] ) +
'</p>\n        <p><strong>Interpretation Type:</strong> ' +
__e(  obj["bookingMode.label"] ) +
'</p>\n        <p class="';
 if (obj["bookingMode.id"] && obj["bookingMode.id"] != App.dict.bookingMode['inperson'].id) { ;
__p += ' hidden ';
 } ;
__p += '">\n          <strong>Place of Booking:</strong> ' +
((__t = ( obj.locationNote )) == null ? '' : __t) +
'</p>\n        <p class="';
 if (obj["bookingMode.id"] != App.dict.bookingMode['phone'].id) { ;
__p += ' hidden ';
 } ;
__p += '">\n          <strong>Phone Number:</strong> ' +
__e( obj.numberForTelephoneTranslation ) +
'</p>\n        <p><strong>Booking Details:</strong> ' +
((__t = ( obj.bookingDetails )) == null ? '' : __t) +
'</p>\n      </div>\n    </div>\n\n    <h4 class="well">Job Details</h4>\n    ';
 if (obj["status.id"] === App.dict.bookingStatus["cancelled"].id) { ;
__p += '\n        <div class="row">\n            <div class="span6">\n                <p><strong>Cancellation Reason</strong>: ' +
__e( obj["cancellationReason.label"] ) +
'</p>\n                <p><strong>Cancellation Date</strong>: ' +
__e( obj.cancellationDate ) +
'</p>\n            </div>\n        </div>\n    ';
 } ;
__p += '\n    <div class="row">\n      <div class="span6">\n        <p><strong>Job Details:</strong> ' +
((__t = ( obj.visitDetails )) == null ? '' : __t) +
'</p>\n        <p><strong>Language:</strong> ' +
__e( obj["language.label"] ) +
' (<a class="gridPopup" href="' +
__e(App.config.context) +
'/language/summary/' +
__e( obj.languageCode ) +
'">' +
__e( obj.languageCode ) +
'</a>)</p>\n        <p><strong>Gender:</strong> ' +
__e( obj["genderRequirement.id"] ? getStatusAttributeById(App.dict.gender, obj["genderRequirement.id"], "name") : "n/a" ) +
'</p>\n          ';
 if (App.config.company.config.showColInterpreterTimezone) { ;
__p += '\n          <p><strong>Interpreter Timezone:</strong> ' +
__e( obj.terpTimeZone ) +
'</p>\n          <p><strong>Expected Start Date:</strong> ' +
__e( obj.terpExpectedStartDate ) +
'</p>\n          <p><strong>Expected End Date:</strong> ' +
__e( obj.terpExpectedEndDate ) +
'</p>\n          <hr/>\n          ';
 } ;
__p += '\n        <p><strong>Job Timezone:</strong> ' +
__e( obj.timeZone ) +
'</p>\n        <p><strong>Expected Start Date:</strong> ' +
__e( obj.expectedStartDate ) +
' ';
 if (obj.actualStartDate) { ;
__p += ', <strong>Actual Start Date:</strong> ' +
__e( obj.actualStartDate ) +
' ';
 } ;
__p += '</p>\n        <p><strong>Expected End Date:</strong> ' +
__e( obj.expectedEndDate ) +
' ';
 if (obj.actualEndDate) { ;
__p += ', <strong>Actual End Date:</strong> ' +
__e( obj.actualEndDate ) +
' ';
 } ;
__p += '</p>\n        <p><strong>Expected Duration:</strong> ' +
__e( obj.expectedDurationHrs ) +
' hours ';
 if (obj.actualDurationHrs) { ;
__p += ', <strong>Actual Duration:</strong> ' +
__e( obj.actualDurationHrs ) +
' hours ';
 } ;
__p += '</p>\n      </div>\n    </div>\n\n    <h4 class="well">Interpreter Details</h4>\n    <div id="interpreter">\n        <div class="row" style="margin-bottom: 15px;">\n            <div class="span8">\n                ';
 if (obj["interpreter.id"] && obj["interpreter.id"] !== "") { ;
__p += '\n                <p><strong>Interpreter</strong>: ' +
__e( obj["interpreter.label"] ) +
'  <p><strong>Interpreter</strong>: ' +
__e( obj["interpreter.label"] ) +
' <span class="secured secured-comp secured-role">' +
__e( "(" + obj["interpreter.primaryNumber"] + ")" ) +
'</span>\n                <span class="secured secured-comp secured-admin">\n                    <a href="javascript:void(0);" onclick="$.colorbox({iframe:true, innerWidth:App.config.popups.cal.width, innerHeight:App.config.popups.cal.height, open:false, returnFocus: false, title: \'Interpreter Bookings\', href: App.config.context + \'/calendar/interpreter/' +
__e( obj['interpreter.id'] ) +
'/bookings\'});"><i class="icon-calendar"></i> See Calendar</a>,\n                    <a href="' +
__e(App.config.context) +
'/booking/manager/unassign/' +
__e( obj.id ) +
'"><i class="icon-remove"></i> Clear from Job</a>\n                </span>\n                </p>\n                <p><strong>Date Assigned</strong>: ' +
__e( obj.assignmentDate ) +
'</p>\n                ';
 } else { ;
__p += '\n                Not Yet Assigned\n                ';
 } ;
__p += '\n            </div>\n        </div> <!-- / row -->\n        <div class="row">\n            <div class="span4 secured secured-comp">\n                <p><strong>Notes about Interpreter(s)</strong>:\n                ' +
((__t = ( obj.interpreterNotes )) == null ? '' : __t) +
'\n                </p>\n            </div>\n            <div class="span4 secured secured-comp secured-cont">\n                <p><strong>Job Notes</strong>:\n                ' +
((__t = ( obj.visitNotes )) == null ? '' : __t) +
'\n                </p>\n            </div>\n        </div>\n    </div>\n\n    <h4 id="references" class="well">Booking References</h4>\n    <div class="row" id="refs">\n\n    </div>\n\n    <h4 id="reqs" class="well">Additional Requirements</h4>\n    <div class="row" id="requirements">\n\n    </div>\n</section>\n';

}
return __p
};

this["JST"]["booking/manage/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="bookings-list">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["booking/quote/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<form class="well form-inline">\n    <h4>Overrides <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the customer that this booking is for." data-original-title="Customer">?</a></h4>\n    <input type="text" id="durationOverrideHrs" name="durationOverrideHrs" class="input-small" placeholder="Minutes" data-toggle="tooltip" title="This field has changed to use \'Minutes\' instead of hours." value="' +
__e( obj.durationOverrideHrs ) +
'">\n    @ <input type="text" id="rateOverride" name="rateOverride" class="input-small" placeholder="Rate" value="' +
__e( obj.rateOverride ) +
'"> per hour\n    <br/>\n    <input type="text" id="mileage" name="mileage" class="input-small" placeholder="Mileage rate" value="' +
__e( obj.mileage ) +
'"> per mile\n    <!-- call to size to full load ${incidentals.size()} -->\n    <!--\n    <h4>Includes</h4>\n    <g:each var="incidental" in="${incidentals}">\n        <label class="checkbox">\n            <input type="checkbox" id="incidental" value="${incidental.id}"> ${incidental.name}\n        </label>\n        <br/>\n    </g:each>\n    -->\n    <h4>Message</h4>\n    <textarea id="message" name="message" placeholder="Message for email">' +
__e( obj.message ) +
'</textarea>\n</form>';

}
return __p
};

this["JST"]["booking/reference/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- reference (' +
__e( obj.id ) +
') -->\n<div class="row">\n    <div class="control-group span3">\n        ';
 if (obj.config) { ;
__p += '\n        <label style="display: block;">&nbsp;</label>\n        <h4>' +
__e( obj.name ) +
'</h4>\n        ';
 } else { ;
__p += '\n        <label class="control-label required" for="reference">Name / Identifier </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Use this field to enter the name or type for this reference e.g. HRN #, Client Name.</p>\n            <p>Use the \'Ref Number\' field to enter the actual reference itself e.g. 5423 (for HRN #) or \'John Doe\' (for Patient Name)</p>. <p>If the reference in not applicable for this booking, you may remove it by clicking on the \'-\' to delete this reference." data-original-title="Booking Reference">?</a>\n        <div class="controls">\n            <input id="name" name="name" type="text" value="' +
__e( obj.name ) +
'"/>\n            <p class="help-block">Required field.</p>\n        </div>\n        ';
 } ;
__p += '\n    </div>\n\n    <div class="control-group span3">\n        <label class="control-label required" for="reference">Reference </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Use this field to enter the name or type for this reference e.g. HRN #, Client Name.</p>\n            <p>Use the \'Ref Number\' field to enter the actual reference itself e.g. 5423 (for HRN #) or \'John Doe\' (for Patient Name)</p>.<p>If the reference in not applicable for this booking, you may remove it by clicking on the \'-\' to delete this reference." data-original-title="Booking Reference">?</a>\n        <div class="controls">\n            <input id="ref" name="ref" type="text" value="' +
__e( obj.ref ) +
'"/>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n\n    <div class="control-group span1">\n        <br/>\n        ';
 if (!(obj.config && obj.config.required)) { ;
__p += '\n        <a href="javascript:void(0);" id="deleteReference" class="pull-right"><i class="icon icon-minus-sign"></i>Delete</a>\n        ';
 } ;
__p += '\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/reference/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- reference (' +
__e( obj.id ) +
') -->\n<div class="row">\n  <div class="span3">\n    <p><strong>' +
__e( obj.name ) +
'</strong> ' +
__e( obj.ref ) +
'</p>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/requirement/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- requirement (' +
__e( obj.id ) +
') -->\n<div id="info" class="alert alert-info">\n  ';
 if (!obj.config) { ;
__p += '\n  <a class="close deleteRequirement" data-dismiss="alert" href="#" title="Delete requirement">×</a>\n  ';
 } ;
__p += '\n  <div class="row">\n    <div class="control-group span4">\n      <label class="control-label required" for="criteria.id">Booking Requirement </label>\n      <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Select a requirement from the list below." data-original-title="Booking Requirement">?</a>\n      <div class="controls">\n          ';
 if (obj.config) { ;
__p += '\n          <h4>' +
__e( obj.criteria.name ) +
'</h4>\n          ';
 } else { ;
__p += '\n              <select name="criteria.id">\n                  ' +
((__t = ( selectOptions(_.sortBy(App.dict.bookingCriteria, function(obj) { return obj.name }), {noSelection: {id: '', name: '[Choose a Requirement]'}}) )) == null ? '' : __t) +
'\n              </select>\n          ';
 } ;
__p += '\n        <p class="help-block">Required field.</p>\n      </div>\n    </div>\n\n    <div class="control-group span2">\n      <label class="control-label" for="required">Required? </label>\n      <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Choose whether this is a necessity for the booking or a preference." data-original-title="Required">?</a>\n      <div class="controls">\n        <input type="checkbox" name="required" ';
 if (obj.config) { ;
__p += ' disabled ';
 } ;
__p += ' ';
 if (obj.required) { ;
__p += 'checked';
 } ;
__p += ' value="required">\n      </div>\n    </div>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/requirement/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- requirement (' +
__e( obj.id ) +
') -->\n<div id="info" class="alert alert-info">\n  <div class="row">\n    <div class="control-group span4">\n      <h5>Booking Requirement </h5>\n      <div class="controls">\n        <p><strong>' +
__e( obj.criteria.name ) +
'</strong> ' +
__e( obj.criteria.description ) +
'</p>\n        <p><strong>Required? </strong> ' +
__e( (obj.required ? "&#x2713;" : "&#x2718;") ) +
'\n      </div>\n    </div>\n  </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/review/bookingclose/disclaimer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '    <div class="row row-spacer" style="border-bottom:2px solid black">\n        <div class="span12">\n            <h4>Review the financial information presented below</h4>\n        </div>\n    </div>\n        <div class="row row-spacer">\n            <div class="span12">\n ';
 if (App.config.company.config.disclaimerEnabled) { ;
__p += '\n    <div class="modal-body">\n        ' +
__e(App.config.company.config.disclaimer ) +
'\n    </div>\n    <button class="btn" type="button" id="acceptDisclaimer" value="Submit">Agree</button>\n    <button class="btn" type="button" id="denyDisclaimer" value="Submit">Cancel</button>\n  ';
 }else{ ;
__p += '\n    <button class="btn btn-primary" type="button" id="acceptDisclaimer" value="Close Job">Close Job</button>\n  ';
 } ;
__p += '\n        </div>\n    </div>\n<iframe src="' +
__e( App.config.context ) +
'/payment/preview/?interpreter.id=' +
__e(obj["interpreter.id"] ) +
'&bookings.id=' +
__e(obj.id ) +
'&hideHeader=true" width="100%" height="500px" frameBorder="0"/>\n\n\n';

}
return __p
};

this["JST"]["booking/review/bookingclose/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#details" data-toggle="tab">Booking Details</a></li>\n    <li class="secured secured-comp secured-cont"><a href="#incidentals" data-toggle="tab">Incidentals</a></li>\n    <li><a href="#referencesNotes" data-toggle="tab">References & Notes</a></li>\n    <li class="secured secured-comp"><a href="#billingInformation" data-toggle="tab">Billing Information</a></li>\n    <li><a href="#history" data-toggle="tab">Audit History</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n    <div class="tab-pane active" id="details">\n\n        <h5>Job # ' +
__e( obj.id ) +
' <span class="pull-right">Job Status: ' +
__e( getStatusAttributeById(App.dict.bookingStatus, obj["status.id"], 'name') ) +
'</span></h5>\n        <h5>Interpreter: ' +
__e( obj["interpreter.label"] ? obj["interpreter.label"] : "No Interpreter Assigned"  ) +
'</h5>\n\n        <div id="successContainer">\n        </div>\n        <div id="errorContainer">\n        </div>\n\n        <div class="row">\n            <div class="span7"> <!-- left column -->\n                <form>\n                    <div class="row row-spacer">\n\n                        <div class="span3">\n                            <h5>Location Requesting Service</h5>\n                            ' +
__e( obj["billingLocation.label"] ) +
'\n                        </div>\n\n                        <div class="span3">\n                            <h5>Location of Service</h5>\n                            ' +
__e( obj["location.label"] ) +
'\n                        </div>\n                    </div>\n\n                    <div class="row row-spacer">\n                        <div class="span2">\n                            <h5>Booking Timezone</h5>\n                            ' +
__e( obj.timeZone ) +
'\n                        </div>\n\n                        <div class="span4">\n                            <div class="alert alert-warning">\n                                <strong>NOTE</strong>: jobs are closed assuming the timezone where the job takes place. Do not convert times to your\n                                local timezone.\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        ';
 if (App.config.company.config.enableContactArrivalDate) { ;
__p += '\n                            <div class="control-group span2">\n                                <label class="control-label required" for="arrivalDate">Arrival Date </label>\n                                <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The interpreter arrival date." data-original-title="Arrival Date">?</a>\n                                <div class="controls">\n                                    <input id="arrivalDate" name="arrivalDate" type="text" value="' +
__e( obj.arrivalDate ? obj.arrivalDate : obj.startDate  ) +
'" class="date" related="arrivalTime" attribute="contactArrivalDate" autocomplete="off"/>\n                                    <p class="help-block">Required field.</p>\n                                </div>\n                            </div>\n\n                            <div class="control-group span2">\n                                <label class="control-label required" for="arrivalTime">Arrival Time </label>\n                                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The interpreter arrival time." data-original-title="Arrival Time">?</a>\n                                <div class="controls">\n                                    <input id="arrivalTime" name="arrivalTime" type="text" value="" class="time" related="arrivalDate" attribute="contactArrivalDate" autocomplete="off"/>\n                                    <p class="help-block">Required field.</p>\n                                </div>\n                            </div>\n\n                        ';
 } ;
__p += '\n\n                        ';
 if (App.config.company.config.enableContactLateTimeTracking) { ;
__p += '\n                            <div class="control-group span2">\n                                <label class="control-label required" for="contactLateMins">Minutes Late </label>\n                                <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover" data-placement="right" data-content="The number of minutes late." data-original-title="Minutes Late">?</a>\n                                <div class="controls">\n                                    <input id="contactLateMins" name="contactLateMins" type="text" value="' +
__e( obj.contactLateMins ? obj.contactLateMins : 0  ) +
'" attribute="contactLateMins" />\n                                    <p class="help-block">Required field.</p>\n                                </div>\n                            </div>\n                        ';
 } ;
__p += '\n\n                    </div>\n\n                    <div class="row">\n                        <div class="control-group span2">\n                            <label class="control-label required" for="startDate">Start Date </label>\n                            <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The appointment date." data-original-title="Appointment Date">?</a>\n                            <div class="controls">\n                                <input id="startDate" name="startDate" type="text" value="' +
__e( obj.startDate ) +
'" class="date" related="startTime" attribute="actualStartDate" autocomplete="off" />\n                                <p class="help-block">Required field.</p>\n                            </div>\n                        </div>\n\n                        <div class="control-group span2">\n                            <label class="control-label required" for="startTime">Start Time </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The appointment time." data-original-title="Appointment Time">?</a>\n                            <div class="controls">\n                                <input id="startTime" name="startTime" type="text" value="' +
__e( obj.enableBlankStartTimeClosing ? '' : obj.actStartTime ? obj.actStartTime : obj.startTime ) +
'" class="time" related="startDate" attribute="actualStartDate" autocomplete="off" />\n                                <p class="help-block">Required field.</p>\n                            </div>\n                        </div>\n\n                        <div class="control-group span3">\n                            <h5 class="control-label" for="duration">Calculated Duration </h5>\n                            <div id="actualDuration" class="controls format-duration" style="text-align: center;">\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div class="row">\n                        <div class="control-group span2">\n                            <label class="control-label required" for="endDate">End Date </label>\n                            <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The appointment end date." data-original-title="Appointment End Date">?</a>\n                            <div class="controls">\n                                <input id="endDate" name="endDate" type="text" value="' +
__e( obj.endDate ) +
'" class="date" related="endTime" attribute="actualEndDate" autocomplete="off" />\n                                <p class="help-block">Required field.</p>\n                            </div>\n                        </div>\n\n                        <div class="control-group span2">\n                            <label class="control-label required" for="endTime">End Time </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The appointment end time." data-original-title="Appointment End Time">?</a>\n                            <div class="controls">\n                                <input id="endTime" name="endTime" type="text" value="" class="time" related="endDate" attribute="actualEndDate" autocomplete="off" />\n                                <p class="help-block">Required field.</p>\n                            </div>\n                        </div>\n\n                    </div>\n\n                    <div id="slaReportingInformation">\n                        <div class="sla_information">\n                            <div class="row">\n                                <div class="control-group span3">\n                                    <label class="control-label required" for="assignmentDateDate">Interpreter assigned on </label>\n                                    <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The date when the interpreter was assigned." data-original-title="Interpreter assigned date">?</a>\n                                    <div class="controls">\n                                        <input id="assignmentDateDate" name="assignmentDateDate" type="text" value="' +
__e( obj.assignmentDateDate ) +
'" class="date" related="assignmentDateTime" attribute="assignmentDate" autocomplete="off" />\n                                    </div>\n                                </div>\n\n                                <div class="control-group span3">\n                                    <label class="control-label required" for="assignmentDateTime">Interpreter assigned on (Time) </label>\n                                    <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The time when the interpreter was assigned." data-original-title="Interpreter assigned time">?</a>\n                                    <div class="controls">\n                                        <input id="assignmentDateTime" name="assignmentDateTime" type="text" value="' +
__e( obj.assignmentDateTime ) +
'" class="time" related="assignmentDateDate" attribute="assignmentDate" autocomplete="off" />\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="control-group span3">\n                                    <label class="control-label required" for="timeInterpreterDepartedDateOutbound">Outbound Departure Date </label>\n                                    <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The date when the interpreter departed for the job." data-original-title="Outbound Departure Date">?</a>\n                                    <div class="controls">\n                                        <input id="timeInterpreterDepartedDateOutbound" name="timeInterpreterDepartedDateOutbound" type="text" value="' +
__e( obj.timeInterpreterDepartedDateOutbound ) +
'" class="date" related="timeInterpreterDepartedTimeOutbound" attribute="timeInterpreterDepartedOutbound" autocomplete="off"/>\n                                    </div>\n                                </div>\n\n                                <div class="control-group span3">\n                                    <label class="control-label required" for="timeInterpreterDepartedTimeOutbound">Outbound Departure Time </label>\n                                    <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The time when the interpreter departed for the job." data-original-title="Outbound Departure Time">?</a>\n                                    <div class="controls">\n                                        <input id="timeInterpreterDepartedTimeOutbound" name="timeInterpreterDepartedTimeOutbound" type="text" value="' +
__e( obj.timeInterpreterDepartedTimeOutbound ) +
'" class="time" related="timeInterpreterDepartedDateOutbound" attribute="timeInterpreterDepartedOutbound" autocomplete="off"/>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="control-group span3">\n                                    <label class="control-label required" for="timeInterpreterArrivedDateOutbound">Outbound Arrival Date </label>\n                                    <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The date when the interpreter arrived at the job location." data-original-title="Outbound Arrival Date">?</a>\n                                    <div class="controls">\n                                        <input id="timeInterpreterArrivedDateOutbound" name="timeInterpreterArrivedDateOutbound" type="text" value="' +
__e( obj.timeInterpreterArrivedDateOutbound ) +
'" class="date" related="timeInterpreterArrivedTimeOutbound" attribute="timeInterpreterArrivedOutbound" autocomplete="off"/>\n                                    </div>\n                                </div>\n\n                                <div class="control-group span3">\n                                    <label class="control-label required" for="timeInterpreterArrivedTimeOutbound">Outbound Arrival Time </label>\n                                    <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The time when the interpreter arrived at the job location." data-original-title="Outbound Arrival Time">?</a>\n                                    <div class="controls">\n                                        <input id="timeInterpreterArrivedTimeOutbound" name="timeInterpreterArrivedTimeOutbound" type="text" value="' +
__e( obj.timeInterpreterArrivedTimeOutbound ) +
'" class="time" related="timeInterpreterArrivedDateOutbound" attribute="timeInterpreterArrivedOutbound" autocomplete="off"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="time_information">\n                            <div class="row">\n                                <div class="control-group span3">\n                                    <label class="control-label required" for="timeInterpreterDepartedDateInbound">Inbound Departure Date </label>\n                                    <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The date when the interpreter departed after job completion." data-original-title="Inbound Departure Date">?</a>\n                                    <div class="controls">\n                                        <input id="timeInterpreterDepartedDateInbound" name="timeInterpreterDepartedDateInbound" type="text" value="' +
__e( obj.timeInterpreterDepartedDateInbound ) +
'" class="date" related="timeInterpreterDepartedTimeInbound" attribute="timeInterpreterDepartedInbound" autocomplete="off"/>\n                                    </div>\n                                </div>\n\n                                <div class="control-group span3">\n                                    <label class="control-label required" for="timeInterpreterDepartedTimeInbound">Inbound Departure Time </label>\n                                    <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The time when the interpreter departed after job completion." data-original-title="Inbound Departure Time">?</a>\n                                    <div class="controls">\n                                        <input id="timeInterpreterDepartedTimeInbound" name="timeInterpreterDepartedTimeInbound" type="text" value="' +
__e( obj.timeInterpreterDepartedTimeInbound ) +
'" class="time" related="timeInterpreterDepartedDateInbound" attribute="timeInterpreterDepartedInbound" autocomplete="off"/>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class="row">\n                                <div class="control-group span3">\n                                    <label class="control-label required" for="timeInterpreterArrivedDateInbound">Inbound Arrival Date </label>\n                                    <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The date when the interpreter arrived at his/her home location." data-original-title="Inbound Arrival Date">?</a>\n                                    <div class="controls">\n                                        <input id="timeInterpreterArrivedDateInbound" name="timeInterpreterArrivedDateInbound" type="text" value="' +
__e( obj.timeInterpreterArrivedDateInbound ) +
'" class="date" related="timeInterpreterArrivedTimeInbound" attribute="timeInterpreterArrivedInbound" autocomplete="off"/>\n                                    </div>\n                                </div>\n\n                                <div class="control-group span3">\n                                    <label class="control-label required" for="timeInterpreterArrivedTimeInbound">Inbound Arrival Time </label>\n                                    <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The time when the interpreter arrived at his/her home location" data-original-title="Inbound Arrival Time">?</a>\n                                    <div class="controls">\n                                        <input id="timeInterpreterArrivedTimeInbound" name="timeInterpreterArrivedTimeInbound" type="text" value="' +
__e( obj.timeInterpreterArrivedTimeInbound ) +
'" class="time" related="timeInterpreterArrivedDateInbound" attribute="timeInterpreterArrivedInbound" autocomplete="off"/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row">\n                        <div class="span7">\n\n                            <div class="btn-group pull-left">\n                                <button class="btn btn-primary" type="button" id="closeBooking" value="Close Job">Close Job</button>\n                            </div>\n                            <!--<div class="btn-group pull-left">\n                                <button class="btn" type="button" id="closeWindow" value="Close Window">Close Window</button>\n                              </div>-->\n\n                        </div>\n                    </div>\n                </form>\n            </div> <!-- / left column -->\n\n            <div class="span4"> <!-- right column -->\n                <form>\n                    <div class="control-group">\n                        <label class="control-label" for="visitNotes">Job Close Notes</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Optionally enter any notes related to the interpretation for the attention of the agency." data-original-title="Job Notes">?</a>\n                        <div class="controls">\n                            <textarea id="visitNotes" class="wysiwyg" name="visitNotes"></textarea>\n                        </div>\n                    </div>\n                    <div class="secured secured-cont cancel_tracking">\n                        <div class="control-group">\n                            <label>Job Cancelled? <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="<p>Select if the job has been cancelled.</p>" data-original-title="Job Cancelled">?</a></label>\n                            <div class="controls">\n                                <input type="checkbox" id="isCancelled" name="isCancelled">\n                            </div>\n                        </div>\n                    </div>\n                    <div class="secured secured-cont">\n                        <div class="control-group hide" id="cancelReasonsDiv">\n                            <label>Please select the reason for the cancellation in this field: <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Choose a reason why this booking is being cancelled.<p>" data-original-title="Cancellation Reason">?</a></label>\n                            <select class="input-xlarge" name="cancellationReason.id" id="cancellationReason">\n                                ' +
((__t = ( selectOptions(App.dict.cancellationReasons, {noSelection: {id: '', name: '[Choose a Cancellation Reason]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </div>\n                </form>\n\n                ';
 if (obj.consumerCountEnabled) { ;
__p += '\n\n                    <div class="row row-spacer">\n                        <div class="control-group span4">\n                            <label class="control-label required" for="consumerCount">Number Consumers</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Number Consumers" data-original-title="Number Consumers">?</a>\n                            <div class="controls">\n                                <input id="consumerCount" name="consumerCount" type="text" value="' +
__e( obj.consumerCount? obj.consumerCount : '') +
'" related="consumerCount" attribute="consumerCount"/>\n                            </div>\n                        </div>\n\n                    </div>\n\n                ';
 } ;
__p += '\n\n                <h4 id="verificationHeader">Method of Verification</h4>\n                <select id="verificationMethod" class="span4" name="methodVerification">\n                    <option value="">[Select a Verification Method]</option>\n                    <option value="vos">Upload Signed Verification of Service Form</option>\n                    <!--<option value="esign">Electronic Signature</option>-->\n                    <option value="offline">Paperwork to be Submitted Offline</option>\n                </select>\n                <br />\n                <!-- verification of service form -->\n                <div id="vos" class="row row-spacer hide">\n                    <div class="span4">\n                        <h5>Verification of Service Form</h5>\n                        <form name="fileUploadVoS" action="' +
__e( App.config.context ) +
'/upload/file" method="post" enctype="multipart/form-data" id="fileUploadVoS">\n                            <fieldset>\n\n                                <input type="hidden" id="company.id" name="company.id" value="' +
__e( App.config.company.id ) +
'"/>\n                                <input type="hidden" id="parentEntityType" name="parentEntityType" value="booking"/>\n                                <input type="hidden" id="parentEntityClass" name="parentEntityClass" value="com.ngs.id.model.Booking"/>\n                                <input type="hidden" id="parentEntityId" name="parentEntityId" value="' +
__e( obj.id ) +
'"/>\n                                <input type="hidden" id="type.id" name="type.id" value="' +
__e( App.dict.documentType['vossigned'].id ) +
'"/>\n                                <input type="hidden" id="isIE" name="isIE" value="false"/>\n                                <div class="row">\n                                    <div class="span4">\n                                        <input type="file" class="input-medium" name="theFile" id="theFile" />\n                                        <button class="btn btn-primary pull-right" type="submit" id="upload" value="upload" data-loading-text="Uploading File ...">Upload</button>\n                                    </div>\n                                </div>\n                                <div class="progress progress-success active">\n                                    <div class="bar" style="width: 0%;"></div>\n                                </div>\n\n                            </fieldset>\n                        </form>\n\n                        <!--<ul id="documents" class="thumbnails row">\n\n                        </ul>-->\n                    </div>\n\n                </div> <!-- / row -->\n\n                <div id="esign" class="row row-spacer hide">\n                    <div class="span4">\n                        <h5>Electronic Signature</h5>\n                        <ul class="unstyled">\n                            <li><a id="doSign" class="" href="#mySignature" data-toggle="modal"><i class="icon-pencil"></i> Click to record your Electronic Signature</a></li>\n                        </ul>\n                        <!--<div>\n                                  Signer Name\n                                </div>-->\n                    </div>\n                </div>\n\n                <div id="offline" class="row row-spacer hide">\n                    <div class="span4">\n                        <h5>Manually</h5>\n\n                        <div class="alert alert-warning">\n                            <h4 class="alert-heading">NOTE:</h4>\n                            <p>The manual submission of Verification of Service forms may delay the invoice and payment processing.</p>\n                            <p>Please contact your administrator to determine how you can best process bookings electronically in the future.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="row row-spacer">\n                    <div class="span4" id="miscDocuments">\n\n                    </div>\n                </div>\n\n                <div class="row row-spacer">\n                    <div class="span4">\n                        <div class="secured secured-comp secured-cust">\n                            <h4>Rating & Comments</h4>\n                            <h5>Rating</h5>\n                            <!-- rating -->\n\n                            <label for="rating" style="display: inline;">Rating <div id="rating-scr" style="display: inline;">(' +
__e( (obj.averageRating ? obj.averageRating : "0") ) +
'/5)</div></label>\n                            <a href="javascript:void(0);" notab class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="<p>Click on the stars below to rate your experience of the interpretation service that\n                                            was provided, with 5 stars being the most positive experience.</p>\n                                            <p>You can change or update your rating in the future.</p>" data-original-title="Rating">?</a>\n                            <div id="rating"></div>\n\n\n                            <!-- comments -->\n                            <!--<h5>Comments</h5>\n                            <div id="comments" class="commentable">\n                                <comments:each bean="${booking}">\n                                    <div class="comment${comment.id}">\n                                        <div class="commentDetails">\n                                            <span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-mail-open"></span>\n                                            <strong>${comment?.poster.username}</strong> (<g:formatDate format="MMM dd, yyyy hh:mm a" date="${comment.dateCreated}"/>)\n                                        </div>\n                                        <div class=\'commentBody\'>\n                                            ${comment.body}\n                                        </div>\n                                    </div>\n                                </comments:each>\n                            </div>\n                            -->\n\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- / right column -->\n        </div> <!-- / row -->\n\n    </div> <!-- / details -->\n\n    <div class="tab-pane " id="incidentals">\n\n    </div> <!-- incidentals -->\n\n    <div class="tab-pane" id="referencesNotes">\n        <form>\n            <div class="row">\n                <div class="span6">\n                    <!-- reference fields and notes -->\n                    <div class="row" id="refs">\n\n                    </div>\n                </div>\n\n                <div class="span3">\n                    <div class="control-group">\n                        <label class="control-label" for="visitDetails">Job Details </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Any special instructions notes for the job." data-original-title="Notes">?</a>\n                        <div id="visitDetails" name="visitDetails" class="well">\n                            ' +
__e( obj.visitDetails ) +
'\n                        </div>\n                    </div>\n                    <br>\n                    <div class="control-group">\n                        <label class="control-label" for="bookingDetails">Booking Details </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Any special instructions for the booking." data-original-title="Booking Details">?</a>\n                        <div id="bookingDetails" name="bookingDetails" class="well">\n                            ' +
__e( obj.bookingDetails ) +
'\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </form>\n    </div> <!-- / reference notes -->\n\n    <div class="tab-pane" id="billingInformation">\n        <form>\n            <div class="row">\n\n                <div class="control-group span4">\n                    <label class="control-label" for="billingNotes">Billing Notes </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Add any notes or information related to billing or interpreter payment here." data-original-title="Billing Notes">?</a>\n                    <div class="controls">\n                        <textarea id="billingNotes" style="width: 100%" class="wysiwyg" name="billingNotes">' +
__e( obj.billingNotes ) +
'</textarea>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="interpreterNotes">Notes about Interpreter(s) </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter any notes about the interpreter here. <p>These notes are for internal use only and not shared with the customer or interpreter." data-original-title="Interpreter Notes">?</a>\n                    <div class="controls">\n                        <textarea id="interpreterNotes" style="width: 100%" class="wysiwyg" name="interpreterNotes">' +
__e( obj.interpreterNotes ) +
'</textarea>\n                    </div>\n                </div>\n\n            </div>\n        </form>\n    </div> <!-- billing information -->\n\n    <div class="tab-pane" id="history">\n\n        <div id="audit">\n\n        </div>\n\n    </div> <!-- / history -->\n\n</div> <!-- / tab content -->\n\n';

}
return __p
};

this["JST"]["booking/review/reference/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- TODO: refactor to be common booking/reference/edit.jst. Only difference is delete does not appear on review screen -->\n<!-- reference (' +
__e( id ) +
') -->\n<div class="row">\n    <div class="control-group span3">\n\n        ';
 if (obj.config) { ;
__p += '\n        <label style="display: block;">&nbsp;</label>\n        <h4>' +
__e( obj.name ) +
'</h4>\n        ';
 } else { ;
__p += '\n        <label class="control-label required" for="reference">Name / Identifier </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="<p>Use this field to enter the name or type for this reference e.g. HRN #, Client Name.</p>\n            <p>Use the \'Ref Number\' field to enter the actual reference itself e.g. 5423 (for HRN #) or \'John Doe\' (for Patient Name)</p>. <p>If the reference in not applicable for this booking, you may remove it by clicking on the \'-\' to delete this reference." data-original-title="Booking Reference">?</span></a>\n        <div class="controls">\n            <input id="name" name="name" type="text" value="' +
__e( obj.name ) +
'"/>\n            <p class="help-block">Required field.</p>\n        </div>\n        ';
 } ;
__p += '\n\n    </div>\n\n    <div class="control-group span3">\n        <label class="control-label required" for="reference">Reference </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="<p>Use this field to enter the name or type for this reference e.g. HRN #, Client Name.</p>\n        <p>Use the \'Ref Number\' field to enter the actual reference itself e.g. 5423 (for HRN #) or \'John Doe\' (for Patient Name)</p>. <p>If the reference in not applicable for this booking, you may remove it by clicking on the \'-\' to delete this reference." data-original-title="Booking Reference">?</span></a>\n        <div class="controls">\n            <input id="ref" name="ref" type="text" value="' +
__e( ref ) +
'"/>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n\n    <!--<div class="control-group span1">\n    <br/>\n    <a href="javascript:void(0);" id="deleteReference" class="pull-right"><i class="icon icon-minus-sign"></i>Delete</a>\n    </div>-->\n</div>\n';

}
return __p
};

this["JST"]["booking/unassign/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span12">\n        <p>Please indicate whom you would like to <b>notify</b> about this unassignment?</p>\n        <div class="control-group">\n            <div class="controls">\n                <div><input type="radio" name="unassignEmail" class="unassignEmail" value="terp" checked />  Interpreter</div>\n                <div><input type="radio" name="unassignEmail" class="unassignEmail" value="cust" />  Requestor</div>\n                <div><input type="radio" name="unassignEmail" class="unassignEmail" value="both" />  Both Interpreter and Requestor</div>\n                <div><input type="radio" name="unassignEmail" class="unassignEmail" value="none" />  None</div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="control-group">\n    <label>\n        <span class="control-label">Create Interaction</span>\n        <div class="controls">\n            <input type="checkbox" id="createInteraction" name="createInteraction"/>\n        </div>\n    </label>\n</div>\n<div class="interaction-options">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label">Category</span>\n            <div class="controls">\n                <select class="input-block-level api-v2" id="category" name="category">\n                    ' +
((__t = ( selectOptions(App.dict.interactionCategory, {selected: (obj.category ? obj.category.id : ''), noSelection: {id: '', name: '[Choose a Category]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label">Sub-Category</span>\n            <div class="controls">\n                <select class="input-block-level api-v2" id="subCategory" name="subCategory">\n                    ' +
((__t = ( selectOptions(obj.subCategories, {selected:obj.subCategory.id, noSelection: {id: '', name: '[Choose a Sub Category]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span4 cancellationReason" style = "display: none">\n        <label class="control-label" for="cancellationReason">Cancellation Reason</label>\n        <div class="controls">\n            <select name="cancellationReason" id="cancellationReason" class="api-v2 input-block-level">\n                ' +
((__t = ( selectOptions(App.dict.cancellationReasons, {noSelection: {id: '', name: '[Choose a Cancellation Reason]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n\n    <div class="control-group span4 deactivationReason" style = "display: none">\n        <label class="control-label" for="deactivationReason">Deactivation Reason</label>\n        <div class="controls">\n            <select name="deactivationReason" id="deactivationReason" class="api-v2 input-block-level">\n                ' +
((__t = ( selectOptions(App.dict.deactivationReasons, {noSelection: {id: '', name: '[Choose a Deactivation Reason]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label">Please enter a description text</span>\n            <div class="controls">\n                <textarea rows="4" id="description" name="description" class="input-block-level"></textarea>\n            </div>\n        </label>\n    </div>\n</div>\n\n<div class="row">\n    <div class="span5">\n        <button class="btn btn-large btn-primary" type="submit" name="unassignAction" id="unassignAction" value="Unassign">Unassign</button>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/unassign/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="control-group">\n    <label>\n        <span class="control-label">Create Interaction</span>\n        <div class="controls">\n            <input type="checkbox" id="createInteraction" name="createInteraction"/>\n        </div>\n    </label>\n</div>\n<div class="interaction-options">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label">Category</span>\n            <div class="controls">\n                <select class="input-block-level api-v2" id="category" name="category">\n                    ' +
((__t = ( selectOptions(App.dict.interactionCategory, {selected: (obj.interactionCategory ? obj.interactionCategory.id : ''), noSelection: {id: '', name: '[Choose a Category]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label">Sub-Category</span>\n            <div class="controls">\n                <select class="input-block-level api-v2" id="subCategory" name="subCategory">\n                    ' +
((__t = ( selectOptions(App.dict.interactionSubCategory, {selected: (obj.interactionSubCategory ? obj.interactionSubCategory.id : ''), noSelection: {id: '', name: '[Choose a Sub Category]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label">Please enter a description text</span>\n            <div class="controls">\n                <textarea rows="4" id="description" name="description" class="input-block-level"></textarea>\n            </div>\n        </label>\n    </div>\n</div>\n\n<div class="row">\n    <div class="span5">\n        <span class="button"><input class="btn btn-large btn-primary" name="unassignAction" id="unassignAction" value="Unassign"/></span>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/documentsupload/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Miscellaneous Files</h4>\n\n<div class="progress progress-success active">\n    <div class="bar" style="width: 0%;"></div>\n</div>\n\n<div class="row">\n    <form action="' +
__e(App.config.context) +
'/upload/file" method="post" name="fileUpload" enctype="multipart/form-data" id="fileUpload">\n        <fieldset>\n            <div class="span4">\n                <input type="hidden" name="company.id" value="' +
__e( obj.company ? obj.company.id : '' ) +
'" id="company.id">\n                <input type="hidden" name="parentEntityType" value="superBooking" id="parentEntityType">\n                <input type="hidden" name="parentEntityClass" value="com.ngs.id.model.SuperBooking" id="parentEntityClass">\n                <input type="hidden" name="parentEntityId" value="' +
__e(obj.id) +
'" id="parentEntityId">\n                <input type="hidden" name="type.id" value="' +
__e(App.dict.documentType.misc.id) +
'">\n                <input type="hidden" name="isIE" value="" id="isIE">\n\n                <div class="row">\n                    <div class="span4">\n                        <label>Select file to upload</label>\n                        <div class="input-append customfile">\n                            <input type="file" class="input-xlarge" name="theFile" id="theFile" />\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="span4">\n                        <label>Description</label>\n                        <textarea id="description" name="description" placeholder="Enter a short description of the file being uploaded"></textarea>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="span4">\n                        <br>\n                        <button class="btn btn-primary" type="submit" id="upload" value="upload" data-loading-text="Uploading File ...">Upload File</button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["booking/v2/edit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<header class="booking-subhead"></header>\n<div id="successContainer" style="display: block">\n</div>\n<div id="errorContainer" style="display: block">\n    ';
 if (!obj.valid && !obj.isNew()) { ;
__p += '\n    <div id="error" class="alert alert-warning">\n        <a class="close" data-dismiss="alert" href="#">×</a>\n        <h4 class="alert-heading">Warning!</h4>\n        The booking is not valid. Check that all temporary fields are set to valid values.\n    </div>\n    ';
 } ;
__p += '\n</div>\n<div class="container">\n    <section class="booking booking-basics ">\n    </section> <!-- .booking-customer-basics -->\n    <section class="booking booking-locations">\n    </section> <!-- .booking-customer-locations -->\n    <section class="booking booking-additional">\n    </section> <!-- .booking-customer-additional -->\n    <section class="booking booking-visits">\n    </section> <!-- .booking-customer-visits -->\n    <section class="booking booking-financials">\n    </section> <!-- .booking-customer-financials -->\n    <hr/>\n    <div>\n        <button class="btn btn-large btn-success booking-save">';
 if (obj.isNew()) { ;
__p += 'Create';
 } else { ;
__p += 'Save';
 } ;
__p += '</button>\n        ';
 if (!obj.isNew() && hasRole("comp")) { ;
__p += '\n        <button class="btn btn-large btn-danger booking-delete">Delete</button>\n        ';
 } ;
__p += '\n    </div>\n</div> <!-- /container -->\n';

}
return __p
};

this["JST"]["booking/v2/editadditionalinfo/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h1>Additional References and Requirements</h1>\n<div class="row">\n    <div class="control-group span6 form-horizontal">\n        <label>\n            <span class="control-label">Gender Requirement&nbsp;<a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="Additionally specify whether there is a specific gender requirement." data-original-title="Gender" tabindex="-1">?</a>\n            </span>\n            <div class="controls">\n                <select class="input-block-level api-v2" name="genderRequirement">\n                    ' +
((__t = ( selectOptions(App.dict.gender, {selected: (obj.genderRequirement ? obj.genderRequirement.id : ''), noSelection: {id: '', name: '[Select Gender]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span6 form-horizontal">\n        <label>\n            <span class="control-label">Files &amp; downloads&nbsp;<a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="Additionally specify additional files which can be downloaded" data-original-title="Files" tabindex="-1">?</a>\n            </span>\n            <div class="controls">\n                <a class="btn btn-files-downloads" href="#">Add files</a>\n            </div>\n        </label>\n        <br/>\n        <div class="region-documents row-fluid">\n        </div>\n    </div>\n</div>\n<div class="row">\n    <div class="span6 region-left">\n    </div>\n    <div class="span6 region-right">\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/editbasics/dropdown_consumer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<li id="' +
__e( obj.id ) +
'">' +
__e( obj.name ) +
'</li>\n';

}
return __p
};

this["JST"]["booking/v2/editbasics/dropdown_consumer_list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="clear"><b>All Matching Consumers</b></div>\n<div class="popupBlock narrow">\n    <ul id="dropdown_consumers">\n\n    </ul>\n</div>\n<div style="clear:both"></div>\n';

}
return __p
};

this["JST"]["booking/v2/editbasics/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h1>Booking Basics</h1>\n<div class="row">\n    <div class="span6">\n        <div class="customer control-group secured secured-comp">\n            <label>\n                <span class="control-label"><span class="required">Customer</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the customer that this booking is for." data-original-title="Customer" tabindex="-1">?</a> </span>\n                <div class="controls">\n                </div>\n            </label>\n        </div>\n        <div class="consumer control-group secured secured-comp">\n            <label>\n                <span class="control-label">Consumer<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the consumer that this booking is for." data-original-title="Consumer" tabindex="-1">?</a> </span>\n                <div class="controls">\n                </div>\n            </label>\n        </div>\n        <div class="requestor control-group secured secured-comp secured-cust">\n            <label>\n                <span class="control-label"><span class="required">Requested By</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The name and contact information of the requestor." data-original-title="Requested By" tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                </div>\n            </label>\n        </div>\n        <div class="requestor-alt control-group" style="display: none">\n            <label>\n                <span class="control-label"><span>Other requestor</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the requestor for the booking." data-original-title="Other requestor" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <input type="text" name="customRequestor" value="' +
__e( obj.customRequestor ) +
'" class="input-block-level"/>\n                </div>\n            </label>\n        </div>\n        <div class="notificationEmail control-group">\n            <label>\n                <span class="control-label">Notification Email&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Email address to send booking notifications to." data-original-title="Notification Email" tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                    <input type="text" class="input-block-level" name="notificationEmail" value="' +
__e(obj.notificationEmail) +
'" />\n                </div>\n            </label>\n        </div>\n        <div class="control-group">\n            <label>\n                <span class="control-label">Notification Email enabled&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enable email notifications to this email address." data-original-title="Enable notifications." tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                    <input type="checkbox" name="notify" ' +
__e( obj.notify ? "checked" : "" ) +
'/>\n                </div>\n            <label>\n        </div>\n    </div>\n    <div class="span6">\n        <div class="language control-group">\n            <label>\n                <span class="control-label"><span class="required">Language</span>&nbsp;<a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="Language." data-original-title="Language" tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                </div>\n            </label>\n        </div>\n        <div class="control-group">\n            <label>\n                <span class="control-label"><span class="required">Interpretation Type</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Type of interpretation service." data-original-title="Interpretation Type" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <select name="bookingMode" class="input-block-level api-v2">\n                        ' +
((__t = ( selectOptions(App.dict.bookingMode, {selected: (obj.bookingMode ? obj.bookingMode.id : App.dict.bookingMode.inperson.id), noSelection: {id: '', name: '[Select Interpretation Type]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n            </label>\n        </div>\n        <div class="model-visitDetails control-group">\n            <label>\n                <span class="control-label">Booking Details&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Any notes or details describing this booking." data-original-title="Booking Details" tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                    <textarea rows="4" name="bookingDetails" class="input-block-level wysiwyg">' +
__e( obj.bookingDetails ) +
'</textarea>\n                </div>\n            </label>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/editfinancials/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h1 class="secured secured-comp secured-cust">Booking Financials</h1>\n<div class="row">\n    <div class="span6 secured secured-comp secured-cust">\n        <div class="billingLocation control-group">\n            <label>\n                <span class="control-label"><span class="required">Location Requesting Service</span>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The correct billing address will automatically appear here. This may differ from the location where service takes place and is used for reporting and invoicing purposes." data-original-title="Billing Address" tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                </div>\n            </label>\n        </div>\n    </div>\n    <div class="customerNotes span6 secured secured-comp">\n        <div class="control-group">\n            <label>\n                <span class="control-label">Customer notes</span>\n                <div class="controls well">\n                    ' +
__e( obj.customerNotes ) +
'\n                </div>\n            </label>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/editheader/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="container">\n    <!--<h1>Create new Booking</h1>-->\n    <h1></h1>\n    <div class="row">\n        <div class="span10">\n            <p><span class="intro"></span> <a class="model-language text-error" href="#"></a> <a class="model-type text-error" href="#"></a> booking for <a class="model-customer text-error" href="#"></a> at <a class="model-location text-error" href="#"></a></p>\n            <p class="visit-jump-link"><a href="#"><i class="icon-calendar"></i> Schedule a Job &hellip;</a></p>\n        </div>\n        <div class="span2">\n            <button class="btn btn-success booking-save"></button>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/editlocations/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h1>Service Location</h1>\n<div class="row">\n    <div class="span6">\n        <div class="location control-group">\n            <label>\n                <span class="control-label"><span class="required">Location</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the location for the booking." data-original-title="Location" tabindex="-1">?</a></span>\n                <div class="controls">\n                </div>\n            </label>\n        </div>\n        <div class="location-alt control-group" style="display: none">\n            <label>\n                <span class="control-label"><span>Other location</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the location for the booking." data-original-title="Other location" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <input type="text" name="customLocation" value="' +
__e( obj.customLocation ) +
'" class="input-block-level"/>\n                </div>\n            </label>\n        </div>\n        <div class="sublocation control-group">\n            <label>\n                <span class="control-label"><span>Sublocation</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the sub-location within the venue." data-original-title="Sub-Location" tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                </div>\n            </label>\n        </div>\n    </div>\n    <div class="span6">\n        <div class="control-group">\n            <label>\n                <span class="control-label">Place of Appointment&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any additional information to further clarify the place of booking e.g Court, Office, Suite Number or Hospital Ward." data-original-title="Place of Appointment" tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                    <input id="locationNote" name="locationNote" class="input-block-level" type="text" value="' +
__e( obj.locationNote ) +
'"/>\n                </div>\n            </label>\n        </div>\n        <div class="control-group">\n            <label>\n                <span class="control-label">Site Contact&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the name and any other information you have for the on site contact person to ask for upon arrival." data-original-title="Site Contact" tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                    <input type="text" name="siteContact" class="input-block-level" value="' +
__e(obj.siteContact) +
'"/>\n                </div>\n            </label>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/editreferenceitem/autocomplete/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Edit Auto Complete</h4>\n<div class="row">\n    <div class="span9">\n        <div class="control-group">\n            <label>\n                <div class="controls">\n                    <input type="text" class="value" name="value" value="' +
__e( value ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </label>\n        </div>\n    </div>\n</div>\n<div class="row">\n    <div class="span4">\n        <br>\n        <button class="btn btn-primary" type="submit" id="save" value="save">Save</button>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/editreferenceitem/consumer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<label>\n    <span class="control-label">\n        <span class="' +
__e( (obj.config && obj.config.required) ? "required" : "" ) +
'">' +
__e( obj.name ) +
'</span>\n    </span>\n    <div class="controls">\n        ';
 if (obj.config && obj.config.required) { ;
__p += '\n        <div class="input-append input-block-level">\n            <div class="append-wrapper"><a href="javascript:void(0);" class="btn widget-clear" tabindex="-1"><i class="icon icon-remove"></i></a><a class="btn widget-create add-on" href="javascript:void(0);" tabindex="-1" disabled><i class="icon-edit"></i></a></div><div class="input-wrapper"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n        </div>\n        ';
 } else { ;
__p += '\n        <div class="input-append input-block-level">\n            <div class="append-wrapper"><a class="btn widget-delete" href="javascript:void(0);" tabindex="-1"><i class="icon-trash"></i></a><a href="#" class="btn widget-clear add-on" tabindex="-1"><i class="icon icon-remove"></i></a><a class="btn widget-create add-on" href="javascript:void(0);" tabindex="-1" disabled><i class="icon-edit"></i></a></div><div class="input-wrapper" style="margin-right: 95px;"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n        </div>\n        ';
 } ;
__p += '\n    </div>\n    <div class="consumerDetailsContainer"></div>\n</label>\n';

}
return __p
};

this["JST"]["booking/v2/editreferenceitem/consumerdetails"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group consumer-dob-container" style="margin-bottom:5px;">\n    <label>\n        <span class="control-label">\n            <span style="color:#468847;"><b>Date of Birth</b></span>\n        </span>\n\n        <div class="controls" style="padding-top: 5px;">\n            <span style="color:#468847;">' +
__e( obj.dateOfBirth ) +
'</span>\n        </div>\n    </label>\n</div>\n\n';
 if (obj.claimNumber) { ;
__p += '\n<div class="control-group" style="margin-bottom:5px;">\n    <label>\n        <span class="control-label">\n            <span style="color:#468847;"><b>Claim Number</b></span>\n        </span>\n\n        <div class="controls" style="padding-top: 5px;">\n            <span style="color:#468847;">' +
((__t = ( obj.claimNumber )) == null ? '' : __t) +
'</span>\n        </div>\n    </label>\n</div>\n';
 } ;
__p += '\n\n';
 if (obj.dateOfInjury) { ;
__p += '\n<div class="control-group" style="margin-bottom:5px;">\n    <label>\n        <span class="control-label">\n            <span style="color:#468847;"><b>Date of Injury</b></span>\n        </span>\n\n        <div class="controls" style="padding-top: 5px;">\n            <span style="color:#468847;">' +
((__t = ( obj.dateOfInjury )) == null ? '' : __t) +
'</span>\n        </div>\n    </label>\n</div>\n';
 } ;
__p += '\n\n<div class="control-group consumer-notes-container" style="margin-bottom:5px;">\n    <label>\n        <span class="control-label">\n            <span style="color:#468847;"><b>Notes</b></span>\n        </span>\n\n        <div class="controls" style="padding-top: 5px;">\n            <span style="color:#468847;">' +
((__t = ( obj.notes )) == null ? '' : __t) +
'</span>\n        </div>\n    </label>\n</div>\n\n<div class="control-group consumer-comments-container" style="margin-bottom:5px;">\n    <label>\n        <span class="control-label">\n            <span style="color:#468847;"><b>Comments</b></span>\n        </span>\n\n        <div class="controls" style="padding-top: 5px;">\n            <span style="color:#468847;">' +
((__t = ( obj.comments )) == null ? '' : __t) +
'</span>\n        </div>\n    </label>\n</div>\n\n';

}
return __p
};

this["JST"]["booking/v2/editreferenceitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- Use obj.referenceValue instead of obj.ref -->\n<label>\n    <span class="control-label"><span class="' +
__e( (obj.config && obj.config.required) ? "required" : "" ) +
'">' +
__e( obj.name ) +
'</span>\n    </span>\n    <div class="controls">\n        ';
 if(obj.config && obj.config.enableDropdown) { ;
__p += '\n            ';
 if (obj.config && obj.config.required) { ;
__p += '\n                <select id="ac_dropdown" name="ref" class="input-block-level widget-ref-value"></select>\n            ';
 } else { ;
__p += '\n                <div class="input-append input-block-level">\n                    <div class="append-wrapper"><a class="btn widget-delete add-on" href="javascript:void(0);"><i class="icon-trash"></i></a></div>\n                    <div class="input-wrapper" style="margin-right: 35px;">\n                        <select id="ac_dropdown" name="ref" class="input-block-level widget-ref-value"></select>\n                    </div>\n                </div>\n            ';
 } ;
__p += '\n        ';
 } else { ;
__p += '\n            ';
 if (obj.config && obj.config.required) { ;
__p += '\n                ';
 if(obj.config.selectField) {   ;
__p += '\n                    <div class="input-append input-block-level">\n                        <div class="append-wrapper"><a class="btn widget-approve add-on" href="javascript:void(0);" tabindex="-1" disabled><i class="icon-chevron-down"></i></a><a title="New" class="btn widget-edit add-on" href="javascript:void(0);" tabindex="-1" disabled><i class="icon-edit"></i></a></div><div class="input-wrapper" style="margin-right: 65px;"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n                    </div>\n                ';
 } else { ;
__p += '\n                    <input type="text" class="input-block-level widget-ref-value" name="ref" value="' +
__e( obj.referenceValue || obj.ref ) +
'" />\n                ';
 } ;
__p += '\n            ';
 } else if(obj.config && !obj.config.required) { ;
__p += '\n                ';
 if(obj.config.selectField) { ;
__p += '\n                    <div class="input-append input-block-level">\n                        <div class="append-wrapper"><a class="btn widget-delete add-on" href="javascript:void(0);" tabindex="-1"><i class="icon-trash"></i></a><a class="btn widget-approve add-on" href="javascript:void(0);" tabindex="-1" disabled><i class="icon-chevron-down"></i></a><a class="btn widget-edit add-on" tabindex="-1" disabled><i class="icon-edit"></i></a></div><div class="input-wrapper" style="margin-right: 91px;"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n                    </div>\n                ';
 } else { ;
__p += '\n                    <div class="input-append input-block-level">\n                        <div class="append-wrapper"><a class="btn widget-delete add-on" href="javascript:void(0);" tabindex="-1"><i class="icon-trash"></i></a></div><div class="input-wrapper" style="margin-right: 37px;"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n                    </div>\n                ';
 } ;
__p += '\n            ';
 } else { ;
__p += '\n                <div class="input-append input-block-level">\n                    <div class="append-wrapper"><a class="btn widget-delete add-on" href="javascript:void(0);" tabindex="-1"><i class="icon-trash"></i></a></div><div class="input-wrapper" style="margin-right: 37px;"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n                </div>\n            ';
 } ;
__p += '\n        ';
 } ;
__p += '\n    </div>\n</label>\n';

}
return __p
};

this["JST"]["booking/v2/editreferences/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h1>Additional References</h1>\n<div class="booking booking-additional-references-list form-horizontal">\n</div> <!-- .booking-additional-references-list -->\n<div class="well">\n    <div class="row">\n        <div class="control-group span2">\n            <label>\n                <div class="controls">\n                    <input type="text" class="input-block-level widget-new-ref-name" placeholder="New Reference Name"/>\n                </div>\n            </label>\n        </div>\n        <div class="control-group span2">\n            <label>\n                <div class="controls">\n                    <input type="text" class="input-block-level widget-new-ref-ref" placeholder="New Reference Value"/>\n                </div>\n            </label>\n        </div>\n    </div>\n    <button class="btn btn-success widget-new-ref">Add new Reference</button>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/editreferences/wait"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h1>Additional References</h1>\n<div class="well">\n    <h2>Please save booking</h2>\n    <p>Please save booking before creating additional references</p>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/editrequirementitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="well">\n    <div class="row-fluid">\n        <div class="control-group span6">\n            <label>\n                <span class="control-label">Booking Requirement</span>\n                <div class="controls">\n                    <select name="criteria" class="input-block-level requirementCriteria">\n                        ' +
((__t = ( selectOptions(App.dict.bookingCriteria, {selected: obj.criteria ? obj.criteria.id : null, noSelection: {id: '', name: '[Choose a Requirement]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n            </label>\n        </div>\n        <div class="span1"></div>\n        <div class="control-group span3">\n            <label>\n                <span class="control-label">Required?</span>\n                <div class="controls">\n                    <input type="checkbox" class="requirementRequired" ';
 if (obj.required) { ;
__p += 'checked';
 } ;
__p += '/>\n                </div>\n            </label>\n        </div>\n        <div class="span2">\n            <button class="btn btn-danger widget-delete"><i class="icon-trash"></i></button>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/editrequirements/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h1>Additional Requirements</h1>\n<div class="booking booking-additional-requirements-list"></div>\n<div class="well">\n    <div class="row">\n        <div class="control-group span3">\n            <label>\n                <span class="control-label">New Requirement</span>\n                <div class="controls">\n                    <select class="input-block-level widget-new-req-criteria">\n                        ' +
((__t = ( selectOptions(App.dict.bookingCriteria, {noSelection: {id: '', name: '[Choose a Requirement]'}, sortBy: 'name'}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n            </label>\n        </div>\n        <div class="control-group span2">\n            <label>\n                <span class="control-label">Required?</span>\n                <div class="controls">\n                    <input class="widget-new-req-required" type="checkbox"/>\n                </div>\n            </label>\n        </div>\n    </div>\n    <button class="btn btn-success widget-new-req">Add Requirement</button>\n</div>\n';

}
return __p
};

this["JST"]["booking/v2/editvisits/create"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<form>\n    <fieldset>\n        <legend>Job Information</legend>\n        <div class="row">\n            <div class="span6">\n                <div class="row">\n                    <div class="model-startDate control-group span3">\n                        <label>\n                            <span class="control-label"><span class="required">Expected Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Expected start date for the job." data-original-title="Expected Start Date" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="expectedStartDate" class="input-block-level format-date" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                    <div class="model-startTime control-group span3">\n                        <label>\n                            <span class="control-label"><span class="required">Expected Start Time</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Expected start time for the job." data-original-title="Expected Start Time ' +
__e( App.config.company.config.isTimeFormat24Hour ? '(24 hour clock)' : '(12 hour clock)' ) +
'" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="expectedStartDate" class="input-block-level format-time" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="model-expectedDurationHrs control-group span4">\n                        <label>\n                            <span class="control-label"><span class="required">Duration</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Duration of the job in hours. Use decimals for partial hours e.g. 2.5 for 2 and a half hours" data-original-title="Duration" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="expectedDurationHrs" class="input-block-level"/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="model-timeZone control-group span6">\n                        <label>\n                            <span class="control-label"><span class="required">Time Zone</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Local timezone where the job is to take place." data-original-title="Time Zone" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <select name="timeZone" class="input-block-level">\n                                    ' +
((__t = ( selectOptions(App.dict.timeZones, {selected:App.config.userData.timeZone, display:'gmtOffset'}) )) == null ? '' : __t) +
'\n                                </select>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row secured secured-comp">\n                    <div class="model-bookingDate control-group span3">\n                        <label>\n                            <span class="control-label"><span class="required">Booking Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date the job was received from the customer. Used in the calculation of short notice rates and rush fees." data-original-title="Booking Date" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="bookingDate" class="input-block-level format-date" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                    <div class="model-bookingTime control-group span3">\n                        <label>\n                            <span class="control-label"><span class="required">Booking Time</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Time the job was received from the customer. Used in the calculation of short notice rates and rush fees." data-original-title="Booking Time ' +
__e( App.config.company.config.isTimeFormat24Hour ? '(24 hour clock)' : '(12 hour clock)' ) +
'" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="bookingTime" class="input-block-level format-time" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div class="span6">\n                <div class="model-visitDetails control-group">\n                    <label>\n                        <span class="control-label">Job Details&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any details specific to the job that might be useful to the interpreter." data-original-title="Job Details" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <textarea rows="4" name="notes" class="input-block-level wysiwyg"></textarea>\n                        </div>\n                    </label>\n                </div>\n                <div class="model-visitBillingNotes control-group secured secured-comp">\n                    <label>\n                        <span class="control-label">Billing Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the billing and payment. This information is for internal use only." data-original-title="Billing Notes" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <textarea rows="4" name="billingNotes" class="input-block-level wysiwyg"></textarea>\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["booking/v2/editvisits/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h1>Jobs <a class=\'gridiFramePopup\' href=\'' +
__e( App.config.context + "/calendar/bookingCal/" + obj.id ) +
'\' title=\'Recurring Jobs (Booking #' +
__e( obj.id ) +
')\'><i class=\'icon-calendar\'></i> Calendar</a></h1>\n<div class="list-container"></div>\n<form>\n    <fieldset>\n        <legend>Schedule Job</legend>\n        <div class="row">\n            <div class="span6">\n                <div class="row">\n                    <div class="model-startDate control-group span3">\n                        <label>\n                            <span class="control-label"><span class="required">Expected Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Expected start date for the job." data-original-title="Expected Start Date" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="startDate" class="input-block-level format-date" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                    <div class="model-startTime control-group span3">\n                        <label>\n                            <span class="control-label"><span class="required">Expected Start Time</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Expected start time for the job." data-original-title="Expected Start Time ' +
__e( App.config.company.config.isTimeFormat24Hour ? '(24 hour clock)' : '(12 hour clock)' ) +
'" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="startTime" class="input-block-level format-time" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="model-expectedDurationHrs control-group span4">\n                        <label>\n                            <span class="control-label"><span class="required">Duration</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Duration of the job in hours. Use decimals for partial hours e.g. 2.5 for 2 and a half hours" data-original-title="Duration" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="expectedDurationHrs" class="input-block-level"/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="model-timeZone control-group span6">\n                        <label>\n                            <span class="control-label"><span class="required">Time Zone</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Local timezone where the job is to take place." data-original-title="Time Zone" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <select name="timeZone" class="input-block-level">\n                                    ' +
((__t = ( selectOptions(App.dict.timeZones, {selected:App.config.userData.timeZone, display:'gmtOffset'}) )) == null ? '' : __t) +
'\n                                </select>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row secured secured-comp">\n                    <div class="model-bookingDate control-group span3">\n                        <label>\n                            <span class="control-label"><span class="required">Booking Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date the job was received from the customer. Used in the calculation of short notice rates and rush fees." data-original-title="Booking Date" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="bookingDate" class="input-block-level format-date" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                    <div class="model-bookingTime control-group span3">\n                        <label>\n                            <span class="control-label"><span class="required">Booking Time</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Time the job was received from the customer. Used in the calculation of short notice rates and rush fees." data-original-title="Booking Time ' +
__e( App.config.company.config.isTimeFormat24Hour ? '(24 hour clock)' : '(12 hour clock)' ) +
'" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="bookingTime" class="input-block-level format-time" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div class="span6">\n                <div class="model-visitDetails control-group">\n                    <label>\n                        <span class="control-label">Job Details&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any details specific to this job. This information is shared with the interpreter and customer." data-original-title="Job Details" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <textarea rows="4" name="notes" class="input-block-level wysiwyg"></textarea>\n                        </div>\n                    </label>\n                </div>\n                <div class="model-visitBillingNotes control-group secured secured-comp">\n                    <label>\n                        <span class="control-label">Billing Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the billing and payment. This information is for internal use only." data-original-title="Billing Notes" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <textarea rows="4" name="billingNotes" class="input-block-level wysiwyg"></textarea>\n                        </div>\n                    </label>\n                </div>\n                <div class="">\n                    <button type="submit" class="widget-create btn btn-success pull-right">Schedule new Job</button>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["booking/warning/jobFrozen"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n\n    <h3>Warning!</h3>\n</div>\n<div class="modal-body">\n    <div class="alert">\n        <p>\n            Cannot update this job so close to the start date. Please contact the agency for assistance.\n        </p>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["booking/warning/preventEditing"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n\n    <h3>Warning!</h3>\n</div>\n<div class="modal-body">\n    <div class="alert">\n        <p>\n            <b>' +
__e( userEditing ) +
'</b> is editing this job. You were redirected to the read only view. If you think that this is not correct, please contact your administrator.\n        </p>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["chat/channel/ask-nickname"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close cmd-widget-close" data-dismiss="modal">×</a>\n    <h3>Nickname required</h3>\n</div>\n<div class="modal-body">\n    <p>Please choose a nickname to send messages in this chat</p>\n    <input name="nickname" type="text" class="nickname input-block-level">\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn cmd-widget-accept">Accept</a>\n    <a href="#" class="btn cmd-widget-close">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["chat/channel/conversation-wrapper"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="conversation-wrapper">\n    <div class="upper-fade"></div>\n\n    <div class="spinner-upper text-center p-1" style="display: none;">\n        <i class="icon-3x icon-spin icon-spinner" style="color: #999"></i>\n    </div>\n\n    <div class="chat-messages"></div>\n\n    <div class="sending-message"></div>\n\n    <div class="spinner-lower text-center p-1" style="display: none;">\n        <i class="icon-3x icon-spin icon-spinner" style="color: #999"></i>\n    </div>\n\n    <div class="btn btn-info btn-to-bottom" style="display: none;">\n        <i class="icon-chevron-sign-down"></i>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["chat/channel/conversation"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '';

}
return __p
};

this["JST"]["chat/channel/date-separator"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="text-center date-separator">\n    <div class="separator format-date" data-timezone="' +
((__t = ( App.config.userData.timeZone )) == null ? '' : __t) +
'">' +
((__t = ( obj.msg_date )) == null ? '' : __t) +
'</div>\n</div>\n';

}
return __p
};

this["JST"]["chat/channel/main"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="chat" style="display: none;">\n\n    <div class="conversation-view">\n\n    </div>\n\n    <div class="user-is-typing-view">\n\n    </div>\n\n    <div class="send-message-view p-sm">\n\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["chat/channel/message"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="msg-' +
((__t = ( obj.index )) == null ? '' : __t) +
'" class="message-container ' +
((__t = ( obj.author === identity ? 'mine' : 'yours' )) == null ? '' : __t) +
'" data-index="' +
((__t = ( obj.index )) == null ? '' : __t) +
'">\n    <div class="message arrow_box">\n        <div class="from">';
 if (obj.author !== App.config.userData.uuid) { ;
__p += ' ' +
((__t = ( mapping[obj.author] )) == null ? '' : __t) +
' ';
 } ;
__p += ' </div>\n        <div class="text">' +
((__t = ( obj.body )) == null ? '' : __t) +
'</div>\n        <div class="timestamp format-time" data-timezone="' +
((__t = ( App.config.userData.timeZone )) == null ? '' : __t) +
'">' +
((__t = ( obj.msg_date )) == null ? '' : __t) +
'</div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["chat/channel/sending-message"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="message-container mine" id="message-' +
((__t = ( messageId )) == null ? '' : __t) +
'">\n    <div class="message sending arrow_box">\n        <div class="from">';
 if (obj.author !== App.config.userData.uuid) { ;
__p += ' ' +
((__t = ( mapping[obj.author] )) == null ? '' : __t) +
' ';
 } ;
__p += '\n            <div class="pull-right">\n                <i class="icon-spinner icon-spin"></i>\n            </div>\n        </div>\n<!--        <div class="text">-->\n<!--            <span>.</span><span>.</span><span>.</span>-->\n<!--        </div>-->\n        <div class="text">' +
((__t = ( obj.body )) == null ? '' : __t) +
'</div>\n        <div class="timestamp format-time" data-timezone="' +
((__t = ( App.config.userData.timeZone )) == null ? '' : __t) +
'">' +
((__t = ( obj.msg_date )) == null ? '' : __t) +
'</div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["chat/channel/sendmessage"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="input-block-level input-append">\n    <div class="append-wrapper">\n        <button class="btn btn-info send-new-message" type="button">\n            SEND <i class="icon-caret-right"></i>\n        </button>\n    </div>\n\n    <div class="input-wrapper" style="margin-right: 72px;">\n        <textarea name="text" class="input-block-level new-message-text" placeholder="Type your message here"></textarea>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["chat/channel/typing"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="user-typing">' +
((__t = ( mapping[obj.user] )) == null ? '' : __t) +
' is typing <span>.</span><span>.</span><span>.</span></div>\n';

}
return __p
};

this["JST"]["chat/channel/unread-separator"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="text-center unread-separator">\n    <div class="separator">\n        Unread messages\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["chat/chat-channel-actions"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid no-gutters">\n\n    <div class="span6">\n        ';
 if (!$.common.isInterpreter() && !$.common.isCustomer()) { ;
__p += '\n            <a href="javascript:void(0)" class="cmd-widget cmd-widget-back text-left">\n                        <span class="mr-xs">\n                            <i class="icon-chevron-left"></i>\n                        </span>\n                Back\n            </a>\n        ';
 } else { ;
__p += '\n            <span class="text-left chat-title">\n                <i class="icon-comments"></i> COMPANY CHAT\n            </span>\n        ';
 } ;
__p += '\n    </div>\n\n    <div class="span6">\n        <a href="javascript:void(0)" class="cmd-widget cmd-widget-hide text-right">\n            Hide chat panel\n            <span class="ml-xs">\n                <i class="icon-chevron-right"></i>\n            </span>\n        </a>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["chat/chat-conversations"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="p-1 d-flex fd-column flex-1">\n\n    ';
 if ($.common.isAgency()) { ;
__p += '\n    <div class="row-fluid">\n\n        <div class="span-12">\n            <h3 class="title">Find user</h3>\n            <hr/>\n        </div>\n    </div>\n\n    <div class="row-fluid mb-1">\n        <div class="span-12">\n\n            <div class="p-relative">\n                <div class="contact-dropdown">\n\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n    ';
 } ;
__p += '\n\n    <div class="row-fluid">\n        <div class="span-12">\n            <h3 class="title">Recent chats</h3>\n            <hr/>\n        </div>\n    </div>\n\n    <div class="chat-headers-container flex-1"></div>\n</div>\n';

}
return __p
};

this["JST"]["chat/chat-header-collection"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="chats-container"></div>\n';

}
return __p
};

this["JST"]["chat/chat-header-item"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<a href="javascript:void(0)" class="row-fluid chat-header cmd-widget-open-chat">\n    <div class="span2">\n        <div class="icon-container">\n            <i class="' +
((__t = ( icon )) == null ? '' : __t) +
'"></i>\n        </div>\n    </div>\n    <div class="span10">\n        <div>\n            <span class="label label-info unread-label ' +
((__t = ( obj.unread ? '' : 'hidden' )) == null ? '' : __t) +
'">' +
((__t = ( obj.unread )) == null ? '' : __t) +
'</span>\n            <div class="chat-user-friendly-name">' +
((__t = ( friendlyName )) == null ? '' : __t) +
'</div>\n        </div>\n        <div>\n            <div class="label label-warning type-label ' +
((__t = ( $.common.isInterpreter() || $.common.isCustomer() ? 'hidden' : '' )) == null ? '' : __t) +
'">' +
((__t = ( type )) == null ? '' : __t) +
'</div>\n            <div class="text-right font-xs last-message-date format-datetime">' +
((__t = ( obj.lastMessage )) == null ? '' : __t) +
'</div>\n        </div>\n    </div>\n</a>\n';

}
return __p
};

this["JST"]["chat/chat-panel-conversations-actions"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="span12">\n        <a href="javascript:void(0)" class="cmd-widget cmd-widget-hide text-right">\n            Hide chat panel\n            <span class="ml-xs">\n                <i class="icon-chevron-right"></i>\n            </span>\n        </a>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["chat/chat-panel"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="sidenav sidenav-light sidenav-right sidenav-chat">\n\n    <div class="chat-main-container">\n\n        <div class="chat-panel-actions"></div>\n\n        <div style="display: none" class="chat-panel-wait-overlay h-100 p-absolute text-center fs-5">\n\n            <i class="icon-spinner icon-spin"></i>\n\n            <div class="text-center font-sm mt-3 fb">\n                INITIALIZING CHAT\n            </div>\n\n        </div>\n\n        <div class="chat-panel-content"></div>\n\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["chat/fab"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<button class="btn btn-info btn-chat-fab cmd-widget-toggle-chat-panel" title="Toggle chat panel">\n    <span class="label label-warning label-unread ' +
((__t = ( !obj.unread ? 'hidden' : '' )) == null ? '' : __t) +
'">' +
((__t = ( obj.unread )) == null ? '' : __t) +
'</span>\n    <i class="icon-comments fs-2"></i>\n</button>\n';

}
return __p
};

this["JST"]["chat/main"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div id="fab-container">\n\n</div>\n\n<div id="chat-panel">\n\n\n</div>\n';

}
return __p
};

this["JST"]["common/actions/calendarjob"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<ul class="dropdown-menu" id="calendarActions">\n    ';
 if (obj.bookingMode && ((config.vriEnabled && obj.bookingMode.nameKey === 'vri')  || (config.videoEnabled && obj.bookingMode.nameKey === 'video'))) { ;
__p += '\n    <li><a href="#" class="widget-start-video"><i class="icon-facetime-video"></i> Start Video</a></li>\n    ';
 } ;
__p += '\n    ';
 if (obj.bookingMode && ((config.opiEnabled && obj.bookingMode.nameKey === 'opi') || (config.phoneEnabled && obj.bookingMode.nameKey === 'phoneScheduled'))) { ;
__p += '\n    <li><a href="#" class="widget-start-voice"><i class="icon-phone"></i> Start Voice Call</a></li>\n    ';
 } ;
__p += '\n    ';
 if ((obj.bookingMode && ((config.vriEnabled && obj.bookingMode.nameKey === 'vri')  || (config.videoEnabled && obj.bookingMode.nameKey === 'video'))) || (obj.bookingMode && ((config.opiEnabled && obj.bookingMode.nameKey === 'opi') || (config.phoneEnabled && obj.bookingMode.nameKey === 'phoneScheduled')))) { ;
__p += '\n    <li class="divider"></li>\n    ';
 } ;
__p += '\n    <li><a href="#" class="widget-view-more"><i class="icon-fullscreen"></i> View More</a></li>\n    <li><a href="#" class="widget-view-in-full"><i class="icon-external-link"></i> View (in full)</a></li>\n    <span class="secured secured-comp secured-cust">\n        <li><a href="#" class="widget-edit-in-full"><i class="icon-edit"></i> Edit (in full)</a></li>\n    </span>\n    <span class="secured secured-comp">\n        <li class="divider"></li>\n        <li><a href="#" class="widget-assign"><i class="icon-user"></i> Assign Interpreter</a></li>\n        <li><a href="#" class="widget-unassign"><i class="icon-remove-sign"></i> Unassign Interpreter</a></li>\n        <li><a href="#" class="widget-view-offers"><i class="icon-eye-open"></i> View Offers</a></li>\n    ';
 if (!obj.disableBookingActions) { ;
__p += '\n        <li class="divider"></li>\n        <li><a href="#" class="widget-confirm-customer"><i class="icon-asterisk"></i> Open / Re-Open Job</a></li>\n        <li><a href="#" class="widget-confirm-interpreter"><i class="icon-ok"></i> Confirm Interpreter</a></li>\n        <li><a href="#" class="widget-confirm-requestor"><i class="icon-ok"></i> Confirm w/ Requestor</a></li>\n    ';
 } ;
__p += '\n    </span>\n    <span class="secured secured-comp">\n        <li class="divider"></li>\n        <li><a href="#" class="widget-send-adhoc-email"><i class="icon-envelope"></i> Send Ad Hoc Email</a></li>\n        <li><a href="javascript:void(0);" class="widget-email-new-job"><i class="icon-envelope"></i> Send New Job Email</a></li>\n        <li class="divider"></li>\n        <li><a href="#" class="widget-email-customer-confirmation"><i class="icon-envelope"></i> Send Customer Confirmation</a></li>\n        <li><a href="#" class="widget-email-interpreter-confirmation"><i class="icon-envelope"></i> Send Interpreter Confirmation</a></li>\n        <li class="divider"></li>\n        <li><a href="#" class="widget-send-adhoc-sms"><i class="icon-mobile-phone"></i> Send Ad Hoc SMS</a></li>\n        <li><a href="#" class="widget-resendcofirmation-sms"><i class="icon-mobile-phone"></i> Resend Confirmation SMS</a></li>\n        <li><a href="#" class="widget-resendreminder-sms"><i class="icon-mobile-phone"></i> Resend Reminder SMS</a></li>\n        <li class="divider"></li>\n\n        <li><a href="#" class="widget-price-quote"><i class="icon-shopping-cart"></i> Price Quote</a></li>\n    </span>\n    <span class="secured secured-comp secured-cont">\n        <li><a href="javascript:void(0);" class="widget-incidentals"><i class="icon-briefcase"></i> Incidentals</a></li>\n    </span>\n    ';
 if (!obj.disableBookingActions) { ;
__p += '\n    <li class="divider"></li>\n    <span class="secured secured-close_job">\n        <li><a href="#" class="widget-close"><i class="icon-time"></i> Close</a></li>\n    </span>\n    ';
 } ;
__p += '\n    <span class="secured secured-cont">\n        <li><a href="#" class="widget-confirm-interpreter"><i class="icon-ok"></i> Confirm Attendance</a></li>\n    </span>\n    <li><a href="#" class="widget-vos"><i class="icon-file-alt"></i> VoS Form</a></li>\n    <li><a href="#" class="widget-add-vos"><i class="icon-file-alt"></i> Add VoS</a></li>\n    <li><a href="#" class="widget-eSig"><i class="icon-pencil"></i> eSignature</a></li>\n    <span class="secured secured-comp">\n        <li class="divider"></li>\n        <li><a href="#" class="widget-create-interaction"><i class="icon-file"></i> Create Interaction</a></li>\n    </span>\n    <span class="secured secured-comp secured-cust">\n        <li class="divider"></li>\n        <li><a href="#" class="widget-create-follow-up"><i class="icon-refresh"></i> Create Follow-up</a></li>\n        <li><a href="#" class="widget-duplicate"><i class="icon-refresh"></i> Duplicate</a></li>\n        <li><a href="#" class="widget-make-recurring"><i class="icon-calendar"></i> Make Recurring</a></li>\n    </span>\n    <span class = "secured secured-cust">\n            ';
 if (config.allowCustomerCancel) { ;
__p += '\n                <li><a href="#" class="widget-cancel"><i class="icon-remove"></i> Cancel</a></li>\n            ';
 } ;
__p += '\n    </span>\n    <span class="secured secured-comp">\n        <li class="divider"></li>\n        <li><a href="#" class="widget-cancel"><i class="icon-remove"></i> Cancel</a></li>\n        <li><a href="#" class="widget-decline"><i class="icon-thumbs-down"></i> Can\'t Fulfill</a></li>\n    </span>\n    <span class="secured secured-admin">\n        <li class="divider"></li>\n        <li><a href="#" class="widget-delete"><i class="icon-trash"></i> Delete</a></li>\n    </span>\n    <!-- dropdown menu links -->\n</ul>\n';

}
return __p
};

this["JST"]["common/actions/interpreterjob"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n            <i class="icon-cog"></i>\n            <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <span class="secured secured-comp">\n                <li><a href="#" class="widget-save"><i class="icon-save"></i> Save</a></li>\n                <li><a href="#" class="widget-edit"><i class="icon-edit"></i> Edit</a></li>\n                <li class="divider"></li>\n                <li><a href="#" class="widget-assign"><i class="icon-user"></i> Assign Interpreter</a></li>\n                <li><a href="#" class="widget-unassign"><i class="icon-remove-sign"></i> Unassign Interpreter</a></li>\n                <li><a href="#" class="widget-view-offers"><i class="icon-eye-open"></i> View Offers</a></li>\n                <li class="divider"></li>\n            ';
 if (!obj.disableBookingActions) { ;
__p += '\n                <li><a href="#" class="widget-confirm-customer"><i class="icon-asterisk"></i> Open / Re-Open Job</a></li>\n                <li><a href="#" class="widget-confirm-interpreter"><i class="icon-ok"></i> Confirm Interpreter</a></li>\n                <li><a href="#" class="widget-confirm-requestor"><i class="icon-ok"></i> Confirm w/ Requestor</a></li>\n            ';
 } ;
__p += '\n            </span>\n            <span class="secured secured-comp">\n                <li class="divider"></li>\n                <li><a href="#" class="widget-send-adhoc-email"><i class="icon-envelope"></i> Send Ad Hoc Email</a></li>\n                <li><a href="javascript:void(0);" class="widget-email-new-job"><i class="icon-envelope"></i> Send New Job Email</a></li>\n                <li class="divider"></li>\n                <li><a href="#" class="widget-email-customer-confirmation"><i class="icon-envelope"></i> Send Customer Confirmation</a></li>\n                <li><a href="#" class="widget-email-interpreter-confirmation"><i class="icon-envelope"></i> Send Interpreter Confirmation</a></li>\n                <li class="divider"></li>\n\n                <li><a href="#" class="widget-send-adhoc-sms"><i class="icon-mobile-phone"></i> Send Ad Hoc SMS</a></li>\n                <li><a href="#" class="widget-resendcofirmation-sms"><i class="icon-mobile-phone"></i> Resend Confirmation SMS</a></li>\n                <li><a href="#" class="widget-resendreminder-sms"><i class="icon-mobile-phone"></i> Resend Reminder SMS</a></li>\n                <li class="divider"></li>\n\n                <li><a href="#" class="widget-price-quote"><i class="icon-shopping-cart"></i> Price Quote</a></li>\n                <li><a href="#" class="widget-incidentals"><i class="icon-briefcase"></i> Incidentals</a></li>\n                <li class="divider"></li>\n            </span>\n            ';
 if (!obj.disableBookingActions) { ;
__p += '\n            <span class="secured secured-close_job">\n                <li><a href="#" class="widget-close"><i class="icon-time"></i> Close</a></li>\n            </span>\n            ';
 } ;
__p += '\n            <li><a href="#" class="widget-vos"><i class="icon-file-alt"></i> VoS Form</a></li>\n            <li><a href="#" class="widget-eSig"><i class="icon-pencil"></i> eSignature</a></li>\n            <span class="secured secured-comp">\n                <li class="divider"></li>\n                <li><a href="#" class="widget-create-interaction"><i class="icon-file"></i> Create Interaction</a></li>\n            </span>\n            <li class="divider"></li>\n            <span class="secured secured-comp">\n                <li><a href="#" class="widget-cancel"><i class="icon-remove"></i> Cancel</a></li>\n                <li><a href="#" class="widget-decline"><i class="icon-thumbs-down"></i> Can\'t Fulfill</a></li>\n            </span>\n            <span class="secured secured-admin">\n                <li class="divider"></li>\n                <li><a href="#" class="widget-delete"><i class="icon-trash"></i> Delete</a></li>\n            </span>\n            <!-- dropdown menu links -->\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/actions/job"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- company actions -->\n<div class="secured secured-comp">\n    <div class="btn-toolbar">\n        <div class="btn-group" ' +
((__t = ( isView ? 'style="display: none;"' : '' )) == null ? '' : __t) +
'>\n            <button class="btn btn-primary widget-save" type="button" value="Save Booking" data-loading-text="Saving changes ...">Save</button>\n        </div>\n        <div class="btn-group" ' +
((__t = ( !isView ? 'style="display: none;"' : '' )) == null ? '' : __t) +
'>\n            <button class="btn btn-primary widget-edit" type="button" value="Edit Booking">Edit</button>\n        </div>\n        <div class="btn-group" ' +
((__t = ( (isNewJob) ? 'style="display: none;"' : '' )) == null ? '' : __t) +
'>\n            <button class="btn btn-success dropdown-toggle" data-toggle="dropdown" type="button" value="more"> More . . . <span class="caret"></span> </button>\n            <ul class="dropdown-menu">\n                <!-- dropdown menu links -->\n                <li>\n                    <a href="javascript:void(0);" class="widget-create"><i class="icon-star-empty"></i> New Booking</a>\n                </li>\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-price-quote-visit"><i class="icon-shopping-cart"></i> Job Price Quote</a></li>\n                <li><a href="javascript:void(0);" class="widget-price-quote-superBooking"><i class="icon-shopping-cart"></i> Booking Price Quote</a></li>\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-clone"><i class="icon-share"></i> Create Follow-up</a></li>\n                <li><a href="javascript:void(0);" class="widget-duplicate"><i class="icon-share"></i> Duplicate</a></li>\n                <li><a href="javascript:void(0);" class="widget-repeat"><i class="icon-calendar"></i> Make Recurring</a></li>\n                <li><a href="javascript:void(0);" class="widget-cancel"><i class="icon-remove"></i> Cancel Job</a></li>\n\n                <!--\n                <li class="divider"></li>\n                <li><a href="javascript:void(0);" class="widget-archive-updates"><i class="icon-eye-open"></i> Archive updated fields</a></li>\n                <li class="divider"></li>\n                -->\n                <!--\n                <div class="secured secured-comp secured-cust">\n                    <li>\n                        <a href="javascript:void(0);" class="widget-cancel"><i class="icon-remove"></i> Cancel Job</a>\n                    </li>\n                </div>\n                -->\n                <span class="secured secured-close_job">\n                    <li class="divider"></li>\n                    <li><a href="javascript:void(0);" class="widget-close"><i class="icon-time"></i> Close</a></li>\n                </span>\n                <div class="secured secured-admin">\n                <li class="divider"></li>\n                    <li><a href="javascript:void(0);" class="widget-delete"><i class="icon-trash"></i> Delete Job</a></li>\n                </div>\n                <div class="secured secured-comp">\n                    <li class="divider"></li>\n                    <li><a href="javascript:void(0);" class="widget-unlock"><i class="icon-unlock"></i> Unlock Job</a></li>\n                </div>\n            </ul>\n        </div>\n        <div class="btn-group addtocalendar-widget">\n            <!-- common/calendar/addtocalendar -->\n        </div>\n    </div>\n</div>\n<!-- .company actions -->\n\n<!-- customer action -->\n<div class="secured secured-cust">\n    <div class="btn-toolbar">\n        <div class="btn-group" ' +
((__t = ( (isNewJob && jobCreateEnabled && !isView) || (!isNewJob && jobUpdateEnabled && !isView) ? '' : 'style="display: none;"' )) == null ? '' : __t) +
'>\n            <button class="btn btn-primary widget-save" type="button" value="Save Booking" data-loading-text="Saving changes ...">Save</button>\n        </div>\n        <div class="btn-group" ' +
((__t = ( isView && jobUpdateEnabled ? '' : 'style="display: none;"' )) == null ? '' : __t) +
'>\n            <button class="btn btn-primary widget-edit" type="button" value="Edit Booking">Edit</button>\n        </div>\n        <div class="btn-group" ' +
((__t = ( isNewJob ? 'style="display: none;"' : '' )) == null ? '' : __t) +
'>\n            <button class="btn btn-success dropdown-toggle" data-toggle="dropdown" type="button" value="more"> More . . . <span class="caret"></span></button>\n            <ul class="dropdown-menu">\n                <div ' +
((__t = ( jobCreateEnabled ? '' : 'style="display: none;"' )) == null ? '' : __t) +
'>\n                    <!-- dropdown menu links -->\n                    <li>\n                        <a href="javascript:void(0);" class="widget-create"><i class="icon-star-empty"></i> New Booking</a>\n                    </li>\n                    <li class="divider"></li>\n                    <li><a href="javascript:void(0);" class="widget-clone"><i class="icon-share"></i> Create Follow-up</a></li>\n                    <li><a href="javascript:void(0);" class="widget-duplicate"><i class="icon-share"></i> Duplicate</a></li>\n                    <li><a href="javascript:void(0);" class="widget-repeat"><i class="icon-calendar"></i> Make Recurring</a></li>\n                    <li><a href="javascript:void(0);" class="widget-cancel"><i class="icon-remove"></i> Cancel Job</a></li>\n                    <span class="secured secured-close_job">\n                        <li class="divider"></li>\n                        <li><a href="javascript:void(0);" class="widget-close"><i class="icon-time"></i> Close</a></li>\n                    </span>\n\n                </div>\n                <!--\n                <li class="divider"></li>\n                <li>\n                    <a href="javascript:void(0);" class="widget-cancel"><i class="icon-remove"></i> Cancel Job</a>\n                </li>\n                -->\n            </ul>\n        </div>\n        <div class="btn-group addtocalendar-widget">\n            <!-- common/calendar/addtocalendar -->\n        </div>\n    </div>\n</div>\n<!-- .customer actions -->\n\n<!-- interpreter action -->\n<div class="secured secured-cont">\n    <div class="addtocalendar-widget">\n        <!-- common/calendar/addtocalendar -->\n    </div>\n</div>\n<!-- .interpreter action -->\n';

}
return __p
};

this["JST"]["common/actions/jobbulkactions"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group">\n    <button class="btn">Bulk Actions</button>\n    <button class="btn dropdown-toggle" data-toggle="dropdown">\n        <span class="caret"></span>\n    </button>\n    <ul class="dropdown-menu" style="left: auto; right: 0;">\n        <li>\n            <a href="javascript:void(0);" class="sendOffersCmd"><i class="icon-signout"></i> Send Offers</a>\n        </li>\n        <li>\n            <a href="javascript:void(0);" class="sendJobStatusUpdateCmd"><i class="icon-signout"></i> Send Job Status Update</a>\n        </li>\n        <li>\n            <a href="javascript:void(0);" class="sendCustomerNewJobCmd"><i class="icon-signout"></i> Send Customer New Job Email</a>\n        </li>\n        <li>\n            <a href="javascript:void(0);" class="sendConfirmationsCmd"><i class="icon-signout"></i> Send Email Confirmations</a>\n        </li>\n        <li>\n            <a href="javascript:void(0);" class="confirmJobsCmd"><i class="icon-ok"></i> Confirm Jobs</a>\n        </li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["common/actions/schedulerinterpreter"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group-wrapper">\n    <div class="btn-group">\n        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n            <span class="caret"></span>\n        </a>\n        <ul class="dropdown-menu">\n            <li class="widget-assign"><a href="javascript:void(0);"><i class="icon-user"></i> Assign Interpreter</a></li>\n            <li class="widget-offers"><a href="javascript:void(0);"><i class="icon-time"></i> View Offers</a></li>\n            <!-- dropdown menu links -->\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/address/quickadd"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- add customer from booking screen -->\n<div id="popupErrorContainer" class="msg-modal hide">\n</div>\n<div id="popupSuccessContainer" class="msg-modal hide">\n</div>\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>';
 if (model.id) { ;
__p += 'Edit Existing Sublocation';
 } else {;
__p += 'Create New Sublocation';
 } ;
__p += '</h3>\n</div>\n<div class="modal-body">\n    ';
 if (model.id) { ;
__p += '\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing sublocation. This will update <strong>all bookings</strong>\n        that are already associated with this sublocation. If you want to enter a new sublocation, click on the\n        <span class="label label-info">Create New</span> button below and enter the new sublocation information.\n    </div>\n    ';
 } ;
__p += '\n    <div class="row-fluid">\n        <div class="span6">\n            <div class="control-group">\n                <label>\n                    <span class="control-label"><span>Description</span>&nbsp;\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter a description for this sublocation" data-original-title="Description" tabindex="-1">?</a>\n                    </span>\n                    <div class="controls">\n                        <input type="text" name="description" value="' +
__e( obj.model.description ) +
'" class="input-block-level"/>\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="span6">\n            <label>\n                <span class="control-label">Active?</span>\n                <input name="active" class="" type="checkbox" value="true" checked disabled/>\n            </label>\n        </div>\n        <br/>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary widget-save-sublocation">Save Sublocation</a>\n    <a href="javascript:void(0);" class="btn btn-primary widget-create-sublocation hidden">Create New</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["common/address/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- address (' +
__e( id ) +
') -->\n<!-- address description -->\n<div class="span6">\n    <div class="control-group">\n        <label class="control-label" for="description">Description </label>\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <a href="javascript:void(0);" tabindex="-1" class="pull-right deleteAddress"><i class="icon icon-minus-sign"></i>Delete</a>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Address description. Click on the \'-\' to delete this address." data-original-title="Description">?</span></a>\n        ';
 } ;
__p += '\n        <div class="controls">\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <input class="description span12" name="description" type="text" value="' +
__e( obj.description ) +
'" />\n        ';
 } else { ;
__p += '\n            ' +
__e( obj.description || '' ) +
'\n        ';
 } ;
__p += '\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <!-- apt. / unit -->\n        <div class="control-group span4">\n            <label class="control-label" for="aptUnit">Apt / Unit </label>\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the apartment number of unit number." data-original-title="Apt / Unit">?</span></a>\n            ';
 } ;
__p += '\n            <div class="controls">\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <input class="aptUnit span12" name="aptUnit" type="text" value="' +
__e( obj.aptUnit ) +
'" />\n            ';
 } else { ;
__p += '\n                ' +
__e( obj.aptUnit || '' ) +
'\n            ';
 } ;
__p += '\n            </div>\n        </div>\n\n\n        <!-- place name -->\n        <div class="control-group span8">\n            <label class="control-label" for="preamble">Place Name</label>\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the place name or building name of the address." data-original-title="Place Name">?</span></a>\n            ';
 } ;
__p += '\n            <div class="controls">\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <input class="preamble span12" name="preamble" type="text" value="' +
__e( obj.preamble ) +
'" />\n            ';
 } else { ;
__p += '\n                ' +
__e( obj.preamble || '' ) +
'\n            ';
 } ;
__p += '\n            </div>\n        </div>\n    </div>\n\n\n    <div class="';
 if (!obj.valid) { ;
__p += ' ' +
__e( "error" ) +
' ';
 } ;
__p += ' control-group">\n        <label class="control-label ';
 if (!obj.readOnly) { ;
__p += 'required';
 } ;
__p += '" for="addrEntered">Street Address </label>\n        ';
 if (obj.valid) { ;
__p += '\n            <i title="Address validated" class="icon icon-ok"></i>\n        ';
 }  else { ;
__p += '\n            <i title="Address needs validation" class="icon icon-warning-sign"></i>\n        ';
 } ;
__p += '\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <a href="javascript:void(0);" tabindex="-1" class="pull-right validateAddress"><i class="icon icon-map-marker"></i>Validate</a>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the street address. This address must be verified and validated prior to saving." data-original-title="Address">?</span></a>\n        ';
 } ;
__p += '\n        <div class="controls">\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <textarea class="addrEntered span12" name="addrEntered">' +
__e( obj.addrEntered ) +
'</textarea>\n            <p class="help-block">Street address is required and must be validated.</p>\n        ';
 } else { ;
__p += '\n            ' +
__e( obj.addrEntered || '' ) +
'\n        ';
 } ;
__p += '\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <!-- address type -->\n        <div class="control-group span3">\n            <label class="control-label ';
 if (!obj.readOnly) { ;
__p += 'required';
 } ;
__p += '" for="type.id">Type </label>\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the type of address." data-original-title="Type">?</a>\n            ';
 } ;
__p += '\n            <div class="controls">\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <select id="addressType" name="type.id">\n                    ' +
((__t = ( selectOptions(App.dict.addressType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                </select>\n                <p class="help-block">Required field</p>\n            ';
 } else { ;
__p += '\n                ' +
__e( getStatusAttributeById(App.dict.addressType, obj["type.id"], "name") ) +
'\n            ';
 } ;
__p += '\n            </div>\n        </div>\n\n        <!-- primary address -->\n        <div class="control-group pull-right">\n            <label class="control-label" for="primaryAddress">Primary?</label>\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Indicate whether this address is the primary mailing address." data-original-title="Primary Address">?</a>\n            ';
 } ;
__p += '\n            <div class="controls">\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <input class="primaryAddress" name="primaryAddress" type="checkbox" ';
 if (obj.primaryAddress) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true" />\n            ';
 } else { ;
__p += '\n                ';
 if (obj.primaryAddress) { ;
__p += '\n                    Yes\n                ';
 } else { ;
__p += '\n                    No\n                ';
 } ;
__p += '\n            ';
 } ;
__p += '\n            </div>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/address/sublocation"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span3">\n        <!-- ' +
__e( obj.id ) +
' -->\n        <div class="control-group">\n            <label>\n                <span class="control-label"><span>Description</span>&nbsp;<a href="javascript:void(0);"\n                                                                             class="helptext badge badge-info"\n                                                                             rel="popover"\n                                                                             data-content="Enter a description for this sublocation"\n                                                                             data-original-title="Description"\n                                                                             tabindex="-1">?</a></span>\n\n                <div class="controls">\n                    <input type="text" name="description" value="' +
__e( obj.description ) +
'" class="input-block-level"/>\n                </div>\n            </label>\n        </div>\n    </div>\n    <div class="span3">\n        <label>\n            <span class="control-label">Active?</span>\n            <input name="active" class="" type="checkbox" ' +
__e( obj.active ? "checked" : "" ) +
' value="true"/>\n        </label>\n    </div>\n    <br/>\n\n    <div class="span3">\n        <div id="controls">\n            <button class="btn btn-primary" type="button" id="save" value="Save Sublocation"\n                    data-loading-text="Saving sublocation ...">Save\n            </button>\n        </div>\n    </div>\n</div>\n\n';

}
return __p
};

this["JST"]["common/address/sublocationlist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>' +
__e( obj.displayLabel ) +
' (' +
__e( obj.costCenter ) +
')</h4>\n<h5>Sublocations</h5>\n<div class="sublocation-list"></div>\n<div class="pagination-container"></div>\n<div id="controls">\n    <button class="btn btn-success" type="button" id="new" value="New Sublocation">New Sublocation</button>\n</div>\n';

}
return __p
};

this["JST"]["common/addressextended/quickadd"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- add customer from booking screen -->\n<div id="popupErrorContainer" class="msg-modal hide">\n</div>\n<div id="popupSuccessContainer" class="msg-modal hide">\n</div>\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>';
 if (model.id) { ;
__p += 'Edit Existing Location';
 } else {;
__p += 'Create New Location';
 } ;
__p += '</h3>\n</div>\n<div class="modal-body">\n    ';
 if (model.id) { ;
__p += '\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing location. This will update <strong>all bookings</strong>\n        that are already associated with this location. If you want to enter a new location, click on the\n        <span class="label label-info">Create New</span> button below and enter the new location information.\n    </div>\n    ';
 } ;
__p += '\n    <div class="row-fluid">\n        <div id="address"></div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary widget-save-location">Save Location</a>\n    <a href="javascript:void(0);" class="btn btn-primary widget-create-location hidden">Create New</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["common/addressextended/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- address (' +
__e( obj.id ) +
') -->\n<div class="row-fluid">\n    <!-- left column -->\n    <div class="span6">\n        <!-- address description -->\n        <div class="control-group" id="client-container">\n            <label class="control-label" for="search-client-customer">Client</label><br>\n            <div class="controls">\n                <input class="span12" type="text" id="search-client-customer" placeholder="Search Client" value="' +
__e( obj.client ? obj.client.name : '' ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="description">Description </label> <a href="javascript:void(0);" tabindex="-1" id="deleteAddress" class="pull-right"><i class="icon icon-minus-sign"></i>Delete</a>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Address description. Click on the \'-\' to delete this address." data-original-title="Description">?</a>\n            <div class="controls">\n                <input class="span12" id="description" name="description" type="text" value="' +
__e( obj.description ) +
'" placeholder="Address description"/>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <!-- apt. / unit -->\n            <div class="control-group span4">\n                <label class="control-label" for="aptUnit">Apt / Unit </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the apartment number of unit number." data-original-title="Apt / Unit">?</a>\n                <div class="controls">\n                    <input class="span12" id="aptUnit" name="aptUnit" type="text" value="' +
__e( obj.aptUnit ) +
'"/>\n                </div>\n            </div>\n\n            <div class="control-group span8">\n                <label class="control-label" for="preamble">Place Name</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the place name or building name of the address." data-original-title="Place Name">?</a>\n                <div class="controls">\n                    <input class="span12" id="preamble" name="preamble" type="text" value="' +
__e( obj.preamble ) +
'"/>\n                </div>\n            </div>\n\n        </div>\n        <div class="';
 if (!obj.valid) { ;
__p += ' error ';
 } else if (obj.valid && obj.validationStatus !== 'OK') { ;
__p += ' warning ';
 } ;
__p += ' control-group">\n            <label class="control-label required" for="addrEntered">Street Address </label> ';
 if (obj.valid) { ;
__p += ' <i title="Address validated" class="icon icon-ok"></i> ';
 }  else { ;
__p += '<i title="Address needs validation" class="icon icon-warning-sign"></i>';
 } ;
__p += '<a href="javascript:void(0);" tabindex="-1" id="validateAddress" class="pull-right"><i class="icon icon-map-marker"></i>Validate</a>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the street address. This address must be verified and validated prior to saving." data-original-title="Address">?</span></a>\n            <div class="controls">\n                <textarea class="addrEntered span12" name="addrEntered">' +
__e( obj.addrEntered ) +
'</textarea>\n                <p class="help-block">Street address is required and must be validated.</p>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <!-- address type -->\n            <div class="control-group span6">\n                <label class="control-label required" for="type.id">Type </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the type of address." data-original-title="Type">?</a>\n                <div class="controls">\n                    <select class="span12" name="type.id" id="type.id">\n                        <option value="">[Choose a Type]</option>\n                        ';
 _.each(App.dict.addressType, function(type) { ;
__p += ' <option value="' +
__e(type.id ) +
'" ' +
__e( type.defaultValue ? "selected" : "" ) +
'>' +
__e( type.name ) +
'</option> ';
 }); ;
__p += '\n                    </select>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n\n            <!-- primary address -->\n            <div class="control-group span6">\n                <label class="control-label" for="primaryAddress">Primary?</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Indicate whether this address is the primary mailing address." data-original-title="Primary Address">?</a>\n                <div class="controls">\n                    <input id="primaryAddress" name="primaryAddress" type="checkbox" ';
 if (obj.primaryAddress) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n        </div>\n        ';
 if (obj.isServiceLocation) { ;
__p += '\n            <!-- special instructions for service location only -->\n            <div class="row-fluid">\n                <div class="control-group">\n                    <label class="control-label" for="customerSpecialInstructions">Customer Special Instructions </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Special Instructions related to the customer. These will appear on the customer booking screens." data-original-title="Customer Special Instructions">?</a>\n                    <div class="controls">\n                        <textarea style="width:100%" class="_wysiwyg" name="customerSpecialInstructions">' +
__e( obj.customerSpecialInstructions ) +
'</textarea>\n                    </div>\n                </div>  <!-- Customer Special Instructions -->\n            </div> <!-- / row -->\n            <div class="row-fluid">\n                <div class="control-group">\n                    <label class="control-label" for="contactSpecialInstructions">Interpreter Special Instructions </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Special Instructions related to the interpreter. These will appear on the interpreter booking screens." data-original-title="Interpreter Special Instructions">?</a>\n                    <div class="controls">\n                        <textarea style="width:100%" class="_wysiwyg" name="contactSpecialInstructions">' +
__e( obj.contactSpecialInstructions ) +
'</textarea>\n                    </div>\n                </div>  <!-- Interpreter Special Instructions -->\n            </div> <!-- / row -->\n            <div class="row-fluid">\n                <div class="control-group">\n                    <label class="control-label" for="companySpecialInstructions">Internal Special Instructions </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Special Instructions related to the internal admin user. These will appear on the admin booking screens." data-original-title="Internal Special Instructions">?</a>\n                    <div class="controls">\n                        <textarea style="width:100%" class="_wysiwyg" name="companySpecialInstructions">' +
__e( obj.companySpecialInstructions ) +
'</textarea>\n                    </div>\n                </div>  <!-- Admin / Internal Special Instructions -->\n            </div> <!-- / row-->\n        ';
 } ;
__p += '\n    </div> <!-- / left column -->\n\n    <!-- right column -->\n    <div class="span6">\n\n        <div class="row-fluid">\n            <!-- contact person -->\n            <div class="control-group span4">\n                <label class="control-label" for="contactPerson">Contact Person </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Contact person for this address." data-original-title="Contact Person">?</a>\n                <div class="controls">\n                    <input class="span12" id="contactPerson" name="contactPerson" type="text" value="' +
__e( obj.contactPerson ) +
'"/>\n                </div>\n            </div>\n\n            <!-- address email -->\n            <div class="control-group span8">\n                <label class="control-label" for="addressEmail">Email Address</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Email address for this address." data-original-title="Email Address">?</a>\n                <div class="controls">\n                    <input class="span12" id="addressEmail" name="addressEmail" type="text" value="' +
__e( obj.addressEmail ) +
'"/>\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <!-- address phone -->\n            <div class="control-group span6">\n                <label class="control-label" for="addressPhone">Phone Number </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Phone for this address." data-original-title="Phone Number">?</a>\n                <div class="controls">\n                    <input class="span12" id="addressPhone" name="addressPhone" type="text" value="' +
__e( obj.addressPhone ) +
'"/>\n                </div>\n            </div>\n\n            <!-- fax number -->\n            <div class="control-group span6">\n                <label class="control-label" for="addressFax">Fax Number</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Fax number for this address." data-original-title="Fax Number">?</a>\n                <div class="controls">\n                    <input class="span12" id="addressFax" name="addressFax" type="text" value="' +
__e( obj.addressFax ) +
'"/>\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid parentLocation">\n\t\t\t<div class="control-group span12" style="position: relative;">\n                <label class="control-label" for="parentLocation-select">Parent Location </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter the parent location for this location." data-original-title="Parent Location">?</a>\n                <div class="controls">\n                    <div class="input-append">\n                        <input class="span12" id="parentLocation-select" style="width: 65%" name="parentLocation-select" type="text" value="' +
__e( obj["parent.label"] ) +
'" placeholder="Type, select or create new parent location" class="ui-autocomplete-input" autocomplete="off" role="textbox" aria-autocomplete="list" aria-haspopup="true"><button title="Clear location" id="parentLocationX" class="btn"><i class="icon icon-remove"></i></button><button title="Select location" id="parentLocationDD" class="btn"><i class="icon icon-chevron-down"></i></button>\n                    </div>\n                </div>\n                <div id="parentLocations-popup" class="autocompletePopup ac-right">\n                    <div class="popupHeader">\n                        <p>Parent Location: <span>&nbsp;</span></p><div class="closePopup"></div>\n                    </div> <!-- / popupHeader -->\n                    <div class="popupBody">\n                        <div><img src="/interpreter-direct/images/loader-circle.gif"> Loading ...</div>\n                    </div> <!-- / popupBody -->\n                </div> <!-- / Parent locations -->\n            </div>\n\t\t</div>\n\n        <div class="row-fluid secured secured-comp">\n            <!--<div class="secured secured-comp">-->\n            <div class="control-group span12">\n                <label class="control-label" for="notes">Notes </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Internal notes related to this address." data-original-title="Internal Notes">?</a>\n                <div class="controls">\n                    <!-- id must be unique for wysiwyg (so no wysiwyg) -->\n                    <textarea class="span12" name="notes">' +
__e( obj.notes ) +
'</textarea>\n                </div>\n            </div>\n            <!--</div>-->\n        </div> <!-- / row -->\n\n        <div class="row-fluid">\n            <div class="control-group">\n                <label class="control-label" for="publicNotes">Venue Information </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Venue information notes related to this address. These will appear on the jobs screen." data-original-title="Venue Information">?</a>\n                <div class="controls">\n                    <!-- id must be unique for wysiwyg (so no wysiwyg) -->\n                    <textarea class="span12" name="publicNotes">' +
__e( obj.publicNotes ) +
'</textarea>\n                </div>\n            </div>\n        </div> <!-- / row -->\n\n        <div class="row-fluid">\n            <div class="control-group span4 secured secured-comp">\n                <label class="control-label" for="costCenter">Cost Center </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Cost center that this service location falls under. Included as part of the export." data-original-title="Cost Center">?</a>\n                <div class="controls">\n                    <!-- id must be unique for wysiwyg (so no wysiwyg) -->\n                    <input class="span12" id="costCenter" name="costCenter" type="text" value="' +
__e( obj.costCenter ) +
'"/>\n                </div>\n            </div>\n\n            <div class="control-group span4 secured secured-comp">\n                <label class="control-label" for="costCenterName">Cost Center Name</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Cost center name that this service location falls under." data-original-title="Cost Center Name">?</a>\n                <div class="controls">\n                    <!-- id must be unique for wysiwyg (so no wysiwyg) -->\n                    <input class="span12" id="costCenterName" name="costCenterName" type="text" value="' +
__e( obj.costCenterName ) +
'"/>\n                </div>\n            </div>\n\n            <div class="control-group span4">\n                <label class="control-label" for="active">Active </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Whether this service location is active or not" data-original-title="Active">?</a>\n                <div class="controls">\n                    <input class="span6" name="active" type="checkbox" ';
 if (obj.active) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n        </div> <!-- / row -->\n\n        <div class="row-fluid">\n            <div class="control-group span6 secured secured-comp">\n                <label class="control-label" for="accountingSickLeaveCode">Accounting Sick Leave Code </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="An accounting code to represent sick leave for the Service Location" data-original-title="Accounting Sick Leave Code">?</a>\n                <div class="controls">\n                    <input class="span12" id="accountingSickLeaveCode" name="accountingSickLeaveCode" type="text" value="' +
__e( obj.accountingSickLeaveCode ) +
'"/>\n                </div>\n            </div>\n            <div class="control-group span6 secured secured-comp">\n                <label class="control-label" for="accountingReferenceAddr">Accounting Reference </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="A reference number or code to identify this address in other systems" data-original-title="Accounting Reference">?</a>\n                <div class="controls">\n                    <input class="span12" id="accountingReferenceAddr" name="accountingReference" type="text" value="' +
__e( obj.accountingReference ) +
'"/>\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid ' +
__e( (obj["type.id"] == App.dict.addressType.service.id) ? "" : "hidden" ) +
'" >\n            <div class="model-timeZone control-group span12">\n                <label>\n                    <label class="control-label" for="timeZone">Time Zone</label>\n                    <div class="controls">\n                        <select name="timeZone" id="timeZone" class="input-block-level">\n                            ' +
((__t = ( selectOptions(App.dict.timeZones, {selected: (obj.timeZone ? obj.timeZone : ''), noSelection: {id: '', gmtOffset: '[Choose a TimeZone]'}, display:'gmtOffset'}) )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                </label>\n            </div>\n        </div> <!-- / row -->\n\n        <div class="row-fluid secured secured-comp">\n            <!-- region -->\n            <div class="control-group span6">\n                <label class="control-label" for="region.id">Region </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Region this address falls under." data-original-title="Region">?</a>\n                <select class="span12" name="region.id" id="region.id">\n                    <option value="">[Choose a Region]</option>\n                    ';
 _.each(App.dict.regions, function(region) { ;
__p += ' <option value="' +
__e( region.id ) +
'">' +
__e( region.name ) +
'</option> ';
 }); ;
__p += '\n                </select>\n            </div>\n\n            <!-- billing region -->\n            <div class="control-group span6">\n                <label class="control-label" for="billingRegion.id">Billing Region </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Billing region this address falls under." data-original-title="Billing Region">?</a>\n                <select class="span12" name="billingRegion.id" id="billingRegion.id">\n                    <option value="">[Choose a Region]</option>\n                    ';
 _.each(_.filter(App.dict.regions, function(r) { return r.isBilling }), function(region) { ;
__p += ' <option value="' +
__e( region.id ) +
'">' +
__e( region.name ) +
'</option> ';
 }); ;
__p += '\n                </select>\n            </div>\n        </div>\n\n    </div> <!-- / right column -->\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["common/association/associationswitcher"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Currently Viewing Bookings For: <a href="javascript:void(0);" class="action-refresh" title="Refresh Bookings"><i class="icon icon-refresh"></i> Refresh</a></h4>\n<div class="row-fluid">\n    <div class="span4 customer-container"></div>\n    <div class="span4 client-container"></div>\n    <div class="span4 location-container"></div>\n</div>\n';

}
return __p
};

this["JST"]["common/audit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.downloadURL) { ;
__p += '\n    <div class="btn-group">\n            <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown" type="button" value="more">\n                Export <span class="caret"></span>\n            </button>\n            <ul class="dropdown-menu">\n                <li><a class="exportChanges" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i>\n                    Excel</a>\n                </li>\n                <li><a class="exportChanges" href="javascript:void(0);" data-format="csv"><i class="icon-ms-excel"></i>\n                    CSV</a>\n                </li>\n            </ul>\n    </div>\n';
 } ;
__p += '\n<table class="table">\n    <thead>\n    <tr>\n        <th>Date</th>\n        <th>Update</th>\n        <th>By</th>\n        <th>Message</th>\n    </tr>\n    </thead>\n    <tbody>\n    ';
 _.each(obj.history, function(h) { ;
__p += '\n    <tr>\n        <td>' +
__e( h.createdDate ) +
'</td>\n        <td>' +
__e( h.eventType ) +
'</td>\n        <td>' +
__e( h.initiator ) +
'</td>\n        <td>' +
__e( h.eventMsg ) +
'</td>\n    </tr>\n    ';
 });;
__p += '\n    </tbody>\n</table>\n';

}
return __p
};

this["JST"]["common/backgrid/edit_delete_cell"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span>\n    <a class="widget-delete" href="javascript:void(0);" title="Delete"><i class="icon-remove"></i></a>\n    <a class="widget-edit" href="javascript:void(0);" title="Edit"><i class="icon-edit"></i></a>\n</span>\n';

}
return __p
};

this["JST"]["common/basics/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<dl>\n    <dt>Name (ID)</dt><dd>' +
__e( (obj.id && obj.name) ? obj.name + " #" + obj.id + "" : (obj.id && obj.interpreter && obj.interpreter.displayName) ? obj.interpreter.displayName + " #" + obj.id + "" : "" ) +
'</dd>\n    <dt>Last Modified By</dt><dd>' +
__e( obj.lastModifiedBy ) +
'</dd>\n    <dt>Last Modified</dt><dd data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="format-datetime">' +
__e( obj.lastModifiedDate ) +
'</dd>\n    <dt>Created By</dt><dd>' +
__e( obj.createdBy ) +
'</dd>\n    <dt>Created</dt><dd data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="format-datetime">' +
__e( obj.createdDate ) +
'</dd>\n</dl>\n';

}
return __p
};

this["JST"]["common/booking/pricequote/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Confirm Price Quote</h4>\n<br />\n<p>The quote will be sent with original booking date and time below. If you need to send a new quote from now or a different booking date update it below, before sending.</p>\n<br />\n<div class="row-fluid">\n    <div class="model-bookingDate control-group span4">\n        <label>\n            <span class="control-label"><span class="required">Booking Date</span>&nbsp;</span>\n            <div class="controls">\n                <input type="text" name="bookingDate" class="input-block-level format-date" value="' +
__e( obj.bookingDate ) +
'" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n    <div class="model-bookingTime control-group span4">\n        <label>\n            <span class="control-label"><span class="required">Booking Time</span>&nbsp;</span>\n            <div class="controls">\n                <input type="text" name="bookingDate" class="input-block-level format-time" value="' +
__e( obj.bookingDate ) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span4" style="padding-top:19px;">\n        <button class="btn btn-primary" type="submit" id="nowDateTime" value="now">Now</button>\n    </div>\n</div>\n<div class="row">\n    <div class="span4">\n        <br>\n        <button class="btn btn-success" type="submit" id="sendQuote" value="save">Send Quote</button>\n    </div>\n</div>';

}
return __p
};

this["JST"]["common/booking/rateplan/applied/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.ratePlan) { ;
__p += '\n        <b>Rate Plan Applied</b> <br /> ' +
((__t = ( obj.ratePlan.name )) == null ? '' : __t) +
'\n';
 } else { ;
__p += '\n        Default Rate Plan has not been set.\n';
 } ;


}
return __p
};

this["JST"]["common/booking/rateplan/contact/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group">\n    <label class="control-label" for="contactRatePlan"><b>Interpreter Rate Plan</b></label>\n    <a href="javascript:void(0);" class="clearContact pull-right"><i class="icon icon-remove-sign"></i> Clear</a>\n    <input class="api-v2 api-delegate input-block-level" type="text" id="contactRatePlan" name="contactRatePlan" value="';
 if ( obj.contactRatePlan ) { ;
__p +=
__e( obj.contactRatePlan.name );
 } ;
__p += '" />\n</div>';

}
return __p
};

this["JST"]["common/booking/rateplan/customer/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group">\n    <label class="control-label" for="customerRatePlan"><b>Customer Rate Plan</b></label>\n    <a href="javascript:void(0);" class="clearCustomer pull-right"><i class="icon icon-remove-sign"></i> Clear</a>\n    <div class="controls">\n        <input class="api-v2 api-delegate input-block-level" type="text" id="customerRatePlan" name="customerRatePlan" value="';
 if ( obj.customerRatePlan ) { ;
__p +=
__e( obj.customerRatePlan.name );
 } ;
__p += '" />\n    </div>\n</div>';

}
return __p
};

this["JST"]["common/booking/reassignment"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert">\n    <div class="modal-header">\n        <a class="close" data-dismiss="modal">&times;</a>\n\n        <h3>Conflict</h3>\n    </div>\n    <div class="modal-body">\n        This booking is already assign to ' +
__e( obj.interpreter.displayName ) +
', press "Continue" if you want to change this\n        assignment or Cancel if you are not sure.\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/bookingbasics/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<dl>\n    <dt>Job #' +
__e( obj.id ? obj.id : "" ) +
'</dt><dd>' +
__e( obj["language.label"] + ": " + obj.expectedStartDate ) +
'</dd>\n    <dt>Customer</dt><dd>' +
__e( obj["customer.label"] ) +
'</dd>\n    <dt>Status</dt><dd>' +
((__t = ( getStatusAttributeById(App.dict.bookingStatus, obj["status.id"], 'name') )) == null ? '' : __t) +
' <div style="width: 30px; display: inline-block;" class="status-' +
__e( getStatusAttributeById(App.dict.bookingStatus, obj["status.id"], 'nameKey') ) +
'">' +
((__t = ( getAbbreviationByStatus(getStatusAttributeById(App.dict.bookingStatus, obj["status.id"], "nameKey")) )) == null ? '' : __t) +
'</span></dd>\n    <dt>Last Modified By</dt><dd>' +
__e( obj.lastModifiedBy ) +
'</dd>\n    <dt>Last Modified</dt><dd data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="format-datetime">' +
__e( obj.lastModifiedDate ) +
'</dd>\n    <dt>Created By</dt><dd>' +
__e( obj.createdBy ) +
'</dd>\n    <dt>Created</dt><dd data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="format-datetime">' +
__e( obj.createdDate ) +
'</dd>\n</dl>\n';

}
return __p
};

this["JST"]["common/bulkconfirmjobsaction/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm Bulk Confirm Jobs</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <p>Please confirm you would like to bulk confirm the selected jobs.</p>\n            <p>Only jobs in the <strong>Assigned</strong> status can be confirmed in this way. All jobs not in the assigned status will be skipped.</p>\n            <p>You have selected <strong>' +
__e( obj.isCheckedAll ? "All jobs (with current filters applied) / " + obj.totalRecords : obj.selectedModels.length ) +
'</strong> jobs to confirm.</p>\n            <p>The jobs will be confirmed using your current default configuration for confirmation: e.g. notification email is enabled, single email per job versus digest.</p>\n            <p><strong>This action cannot be undone.</strong></p>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Confirm Jobs</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/bulksendemaildigestaction/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm Bulk Send ' +
__e( obj.title ? obj.title : "") +
' Emails</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <p>Please confirm you would like to bulk send emails for the jobs selected.</p>\n            <p>You have selected <strong>' +
__e( obj.isCheckedAll ? "All jobs (with current filters applied) / " + obj.totalRecords : obj.selectedModels.length ) +
'</strong> jobs to send emails for.</p>\n            <p>The emails will be sent using your current default configuration for sending emails.</p>\n            <p><strong>This action cannot be undone.</strong></p>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Confirm Send</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>';

}
return __p
};

this["JST"]["common/bulksendofferconfirmaction/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm Bulk Send Offers</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <p>Please confirm you would like to bulk send offers to jobs selected.</p>\n            <p>You have selected <strong>' +
__e( obj.isCheckedAll ? "All jobs (with current filters applied) / " + obj.totalRecords : obj.selectedModels.length ) +
'</strong> jobs to send offers for.</p>\n            <p>The offers will be sent using your current default configuration for sending offers: proximity, availability, assignment time frame and excluded hours.</p>\n            <p><strong>This action cannot be undone.</strong></p>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Confirm Send</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/businessunit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<select class="input-block-level" name="businessUnit" id="businessUnit">\n    ' +
((__t = ( selectOptions(App.dict.businessUnit, {selected: App['businessUnit'] ,sortBy: true, noSelection: {id: '', name: '[All]'}}) )) == null ? '' : __t) +
'\n</select>\n';

}
return __p
};

this["JST"]["common/calendar/addtocalendar"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span class="addtocalendar atc-style-button-icon atc-style-menu-wb">\n<a class=\'atcb-link\'><img src=\'' +
__e( App.config.context ) +
'/js/atc/cal-icon/cal-red-04.png\' width=\'30\' style="vertical-align:0;"></a>\n<var class="atc_event">\n    <var class="atc_date_start">' +
__e( obj.expectedStartDate? obj.expectedStartDate:""  ) +
'</var>\n    <var class="atc_date_end">' +
__e( obj.expectedEndDate? obj.expectedEndDate:"" ) +
'</var>\n    <var class="atc_timezone">UTC</var>\n    <var class="atc_title">' +
__e( obj.company.name? obj.company.name:""  ) +
' - Job Ref #' +
__e( obj.jobContextId? obj.jobContextId:"") +
'</var>\n    <var class="atc_description">' +
__e( obj.language.displayLabel? obj.location.displayLabel:"") +
' - ' +
__e( obj.bookingMode.name? obj.bookingMode.name:"" ) +
'</var>\n    <var class="atc_location">' +
__e( obj.location.displayLabel? obj.location.displayLabel:"" ) +
'</var>\n    <var class="atc_organizer">' +
__e( obj.siteContact? obj.siteContact:"") +
'</var>\n    <var class="atc_organizer_email">' +
__e( obj.company.email? obj.company.email:"") +
'</var>\n</var>\n</span>';

}
return __p
};

this["JST"]["common/calendar/calendar"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid" id="export-options" style="display:none">\n    <div class="span12">\n        <div class="pull-left">\n            <a id="synchCal" href="javascript:void(0);"><i class="icon icon-retweet"></i> Export to Calendar</a> [<a id="publicCal" href="javascript:void(0);"><i class="icon icon-share"></i></a>]\n            <a href="javascript:void(0);" id="send-confirmations" class="secured secured-comp">Send Confirmations <span class="icon-share"></span></a>\n            ';
 if(obj.showSidenav === true) { ;
__p += '<span style="cursor:pointer" class="openSideNav">&#9776; Filters</span>';
 } ;
__p += '\n        </div>\n        <div class="pull-right">\n            <span class="currentDate"></span>\n        </div>\n        <div class="hasDatepicker">\n            &nbsp;&nbsp;&nbsp;Jump to Date :<input type="hidden" id="date_picker" value="" />\n            <img src="' +
__e( App.config.context ) +
'/images/calendar.gif" id="datePickerImage" />\n        </div>\n    </div>\n</div>\n\n';
 if(obj.showFiltersApplied === true) { ;
__p += '\n<div id="queryFiltersAppliedView">\n    <div class="row-fluid">\n        <div class="span12">\n            <strong>Query Applied:</strong>\n            <span id="queryFiltersApplied"></span>\n        </div>\n    </div>\n</div>\n';
 } ;
__p += '\n\n<div class="row-fluid">\n    <div class="span12">\n        <!-- booking calendar -->\n        <div>\n            <div id="calendar"></div>\n        </div>\n    </div>\n</div>\n\n<div id="calendar-view-type" class="secured secured-comp">\n    <span class="fc-header-space"></span>\n    <select name="calendar-view-type">\n        <option value="job">Jobs</option>\n        <option value="interpreter">Interpreters</option>\n        <option value="customer">Customers</option>\n        <option value="language">Languages</option>\n        <option value="category">Employment Category</option>\n    </select>\n    <!--\n    <span class="fc-button fc-state-default fc-corner-left fc-corner-right" id="job">\n        <span class="fc-button-inner">\n            <span class="fc-button-content">jobs</span>\n            <span class="fc-button-effect">\n                <span></span>\n            </span>\n        </span>\n    </span>\n    <span class="fc-button fc-state-default fc-corner-left fc-corner-right" id="interpreter">\n        <span class="fc-button-inner">\n            <span class="fc-button-content">interpreters</span>\n            <span class="fc-button-effect">\n                <span></span>\n            </span>\n        </span>\n    </span>\n    <span class="fc-button fc-state-default fc-corner-left fc-corner-right" id="customer">\n        <span class="fc-button-inner">\n            <span class="fc-button-content">customers</span>\n            <span class="fc-button-effect">\n                <span></span>\n            </span>\n        </span>\n    </span>-->\n</div>\n\n<!-- Legend on calendar -->\n<div id="legendButton">\n    <span class="fc-header-space"></span>\n    <span class="fc-button fc-button-legend fc-state-default fc-corner-left fc-corner-right">\n        <span class="fc-button-inner">\n            <span class="fc-button-content">legend</span>\n            <span class="fc-button-effect">\n                <span></span>\n            </span>\n        </span>\n    </span>\n</div>\n<div id="legend">\n    <div class="status-new-legend"></div>\n    <p>New</p>\n    <div class="status-open-legend"></div>\n    <p>Open</p>\n    <div class="status-offered-legend"></div>\n    <p>Offered</p>\n    <div class="status-assigned-legend"></div>\n    <p>Assigned</p>\n    <div class="status-confirmed-legend"></div>\n    <p>Confirmed</p>\n    <div class="status-closed-legend"></div>\n    <p>Closed</p>\n    <div class="status-cancelled-legend"></div>\n    <p>Cancelled</p>\n    <div class="status-declined-legend"></div>\n    <p>Unfulfilled</p>\n    <div class="status-nonattendance-legend"></div>\n    <p>Nonattendance</p>\n</div>\n';

}
return __p
};

this["JST"]["common/calendar/jobpopup"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.isTelephoneTranslation == true) { ;
__p += '\n    <b><div class=\'phone\'>' +
__e( obj.actualLocation.displayLabel + "(" + obj.customer.label + ")" ) +
'</div></b>\n';
 } else if (App.dict.bookingMode['video'] && (obj.bookingMode.id == App.dict.bookingMode['video'].id)) { ;
__p += '\n    <b><div class=\'video\'>' +
__e( (obj.actualLocation ? obj.actualLocation.displayLabel : "Remote") ) +
'</div></b>\n';
 } else if (App.dict.bookingMode['vri'] && (obj.bookingMode.id == App.dict.bookingMode['vri'].id)) { ;
__p += '\n    <b><div class=\'video\'>' +
__e( (obj.actualLocation ? obj.actualLocation.displayLabel : "Remote") ) +
'</div></b>\n';
 } else if (App.dict.bookingMode['opi'] && (obj.bookingMode.id == App.dict.bookingMode['opi'].id)) { ;
__p += '\n    <b><div class=\'phone\'>' +
__e( (obj.actualLocation ? obj.actualLocation.displayLabel : "Remote") ) +
'</div></b>\n';
 } else if (App.dict.bookingMode['phoneScheduled'] && (obj.bookingMode.id == App.dict.bookingMode['phoneScheduled'].id)) { ;
__p += '\n    <b><div class=\'phone\'>' +
__e( (obj.actualLocation ? obj.actualLocation.displayLabel : "Remote") ) +
'</div></b>\n';
 } else if (App.dict.bookingMode['video3rd'] && (obj.bookingMode.id == App.dict.bookingMode['video3rd'].id)) { ;
__p += '\n    <b><div class=\'video\'>' +
__e( (obj.actualLocation ? obj.actualLocation.displayLabel : "Remote") ) +
'</div></b>\n';
 } else if (App.dict.bookingMode['phone3rd'] && (obj.bookingMode.id == App.dict.bookingMode['phone3rd'].id)) { ;
__p += '\n    <b><div class=\'phone\'>' +
__e( (obj.actualLocation ? obj.actualLocation.displayLabel : "Remote") ) +
'</div></b>\n';
 } else { ;
__p += '\n    ';
 if (obj.location) { ;
__p += '\n        <b>\n        ';
 if (App.dict.bookingMode['inperson'] && (obj.bookingMode.id == App.dict.bookingMode['inperson'].id)) { ;
__p += '\n            <div class=\'person\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else if (App.dict.bookingMode['phone'] && (obj.bookingMode.id == App.dict.bookingMode['phone'].id)) { ;
__p += '\n            <div class=\'phone\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else if (App.dict.bookingMode['phoneScheduled'] && (obj.bookingMode.id == App.dict.bookingMode['phoneScheduled'].id)) { ;
__p += '\n            <div class=\'phone\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else if (App.dict.bookingMode['video3rd'] && (obj.bookingMode.id == App.dict.bookingMode['video3rd'].id)) { ;
__p += '\n            <div class=\'video\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else if (App.dict.bookingMode['phone3rd'] && (obj.bookingMode.id == App.dict.bookingMode['phone3rd'].id)) { ;
__p += '\n            <div class=\'phone\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else if (App.dict.bookingMode['mr'] && (obj.bookingMode.id == App.dict.bookingMode['mr'].id)) { ;
__p += '\n            <div class=\'envelope\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else if (App.dict.bookingMode['cmr'] && (obj.bookingMode.id == App.dict.bookingMode['cmr'].id)) { ;
__p += '\n            <div class=\'envelope\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else if (App.dict.bookingMode['court'] && (obj.bookingMode.id == App.dict.bookingMode['court'].id)) { ;
__p += '\n            <div class=\'legal\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else if (App.dict.bookingMode['conference'] && (obj.bookingMode.id == App.dict.bookingMode['conference'].id)) { ;
__p += '\n            <div class=\'group\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else if (App.dict.bookingMode['group'] && (obj.bookingMode.id == App.dict.bookingMode['group'].id)) { ;
__p += '\n            <div class=\'group\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else if (App.dict.bookingMode['simultaneous'] && (obj.bookingMode.id == App.dict.bookingMode['simultaneous'].id)) { ;
__p += '\n            <div class=\'group\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } else { ;
__p += '\n            <div class=\'generic\'>' +
__e( obj.location.displayLabel ) +
'</div>\n        ';
 } ;
__p += '\n        </b>\n    ';
 } ;
__p += '\n    ';
 if (obj.subLocation) { ;
__p += '\n        <div><b>Sub-Location:</b> ' +
__e( obj.subLocation.displayLabel ) +
'</div>\n    ';
 } ;
__p += '\n';
 } ;
__p += '\n\n<div><b>Booking #</b>: ' +
__e( obj.superBooking.id ) +
'</div>\n<div><b>Job #</b>: ' +
__e( obj.id ) +
'</div>\n<div><b>Status</b>: ' +
__e( (getStatusById(App.dict.bookingStatus, obj.status.id) ? getStatusById(App.dict.bookingStatus, obj.status.id).name :"n/a") ) +
'</div>\n<div><b>Created by</b>: ' +
__e( obj.createdBy ) +
'</div>\n<div><b>Customer</b>: ' +
__e( (obj.customer ? obj.customer.name : "On Demand") ) +
'</div>\n<div><b>Customer (Bill To)</b>: ' +
__e( (obj.billingCustomer ? obj.billingCustomer.name : "On Demand") ) +
'</div>\n<div><b>Client</b>: ' +
__e( (obj.client ? obj.client.name : "On Demand") ) +
'</div>\n';
 if(obj.consumer) { ;
__p += '\n    <div>\n        <b>Consumers</b>:\n        ' +
__e( obj.consumer.name );
 if (!_.isEmpty(obj.consumers)) { ;
__p += ',\n            ';
 _.each(obj.consumers, function(consumer, index) { ;
__p += '\n                ' +
__e( consumer.name );
 if (index < (obj.consumers.length -1)) {;
__p += ',';
 } ;
__p += '\n            ';
 }); ;
__p += '\n        ';
 } ;
__p += '\n    </div>\n';
 } ;
__p += '\n<div><b>Calendar Date</b>: ' +
__e( (new Date(obj.expectedStartDate).toString(App.config.company.config.calDateTimeFormat)) ) +
'</div>\n<div><b>Booking (Local Time)</b>: ' +
__e( obj.timeZone + ": " + $.app.mixins.templateHelpersMixin.formatDate(obj.expectedStartDate, obj.timeZone) +" " +$.app.mixins.templateHelpersMixin.formatTime(obj.expectedStartDate, obj.timeZone) + " - " +$.app.mixins.templateHelpersMixin.formatTime(obj.expectedEndDate, obj.timeZone) ) +
'</div>\n';
 if(obj.interpreter) { ;
__p += '\n    ';
 if(obj.interpreter.timeZone) { ;
__p += '\n        <div><b>Interpreter (Local Time)</b>: ' +
__e( obj.interpreter.timeZone + ": " + $.app.mixins.templateHelpersMixin.formatDate(obj.expectedStartDate, obj.interpreter.timeZone) +" " +$.app.mixins.templateHelpersMixin.formatTime(obj.expectedStartDate, obj.interpreter.timeZone) ) +
'</div>\n    ';
 } else { ;
__p += '\n        <div><b>Interpreter (Local Time)</b>: ' +
__e( obj.timeZone + ": " + $.app.mixins.templateHelpersMixin.formatDate(obj.expectedStartDate, obj.timeZone) +" " +$.app.mixins.templateHelpersMixin.formatTime(obj.expectedStartDate, obj.timeZone) ) +
'</div>\n    ';
 } ;
__p += '\n';
 } else { ;
__p += '\n    <div><b>Interpreter (Local Time)</b>: ' +
__e( obj.timeZone + ": " + $.app.mixins.templateHelpersMixin.formatDate(obj.expectedStartDate, obj.timeZone) +" " +$.app.mixins.templateHelpersMixin.formatTime(obj.expectedStartDate, obj.timeZone) ) +
'</div>\n';
 } ;
__p += '\n<div><b>Language:</b> ' +
__e( obj.language.displayName ) +
'</div>\n<div><b>Interpreter:</b> ' +
__e( (obj.interpreter ? obj.interpreter.displayName : "n/a") ) +
'</div>\n<div><b>Reference(s)</b>\n    ';
 _.each(obj.refs, function(ref) { ;
__p += '\n        <!-- // promote this reference field to top -->\n        ';
 if (ref && ref.config && ref.config.promote) { ;
__p += '\n            <div><b>' +
__e( ref.name ) +
'</b>: ' +
__e( ref.ref ) +
'</div>\n        ';
 } ;
__p += '\n        <!-- // concat each ref -->\n        ';
 if (ref && ref.name) { ;
__p += '\n            <br/><b>' +
__e( ref.name ) +
'</b>: ' +
__e( ref.ref ) +
'\n        ';
 } ;
__p += '\n    ';
 }); ;
__p += '\n</div>\n';

}
return __p
};

this["JST"]["common/calendar/modalcalendar"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Interpreter Jobs</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid" id="export-options" style="display:none">\n        <div class="span12">\n            <div class="pull-left">\n                <a id="synchCal" href="javascript:void(0);"><i class="icon icon-retweet"></i> Export to Calendar</a> [<a id="publicCal" href="javascript:void(0);"><i class="icon icon-share"></i></a>]\n            </div>\n            <div class="pull-right">\n                <span class="currentDate"></span>\n            </div>\n            <div class="hasDatepicker">\n                &nbsp;&nbsp;&nbsp;Jump to Date :<input type="hidden" id="date_picker" value="" />\n                <img src="' +
__e( App.config.context ) +
'/images/calendar.gif" id="datePickerImage" />\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span12">\n            <!-- booking calendar -->\n            <div>\n                <div id="calendar"></div>\n            </div>\n        </div>\n    </div>\n\n    <div id="calendar-view-type" class="secured secured-comp">\n        <span class="fc-header-space"></span>\n        <select name="calendar-view-type">\n            <option value="job">jobs</option>\n            <option value="interpreter">interpreters</option>\n            <option value="customer">customers</option>\n        </select>\n        <!--\n        <span class="fc-button fc-state-default fc-corner-left fc-corner-right" id="job">\n            <span class="fc-button-inner">\n                <span class="fc-button-content">jobs</span>\n                <span class="fc-button-effect">\n                    <span></span>\n                </span>\n            </span>\n        </span>\n        <span class="fc-button fc-state-default fc-corner-left fc-corner-right" id="interpreter">\n            <span class="fc-button-inner">\n                <span class="fc-button-content">interpreters</span>\n                <span class="fc-button-effect">\n                    <span></span>\n                </span>\n            </span>\n        </span>\n        <span class="fc-button fc-state-default fc-corner-left fc-corner-right" id="customer">\n            <span class="fc-button-inner">\n                <span class="fc-button-content">customers</span>\n                <span class="fc-button-effect">\n                    <span></span>\n                </span>\n            </span>\n        </span>-->\n    </div>\n\n    <!-- Legend on calendar -->\n    <div id="legendButton">\n        <span class="fc-header-space"></span>\n    <span class="fc-button fc-button-legend fc-state-default fc-corner-left fc-corner-right">\n        <span class="fc-button-inner">\n            <span class="fc-button-content">legend</span>\n            <span class="fc-button-effect">\n                <span></span>\n            </span>\n        </span>\n    </span>\n    </div>\n    <div id="legend">\n        <div class="status-new-legend"></div>\n        <p>New</p>\n        <div class="status-open-legend"></div>\n        <p>Open</p>\n        <div class="status-offered-legend"></div>\n        <p>Offered</p>\n        <div class="status-assigned-legend"></div>\n        <p>Assigned</p>\n        <div class="status-confirmed-legend"></div>\n        <p>Confirmed</p>\n        <div class="status-closed-legend"></div>\n        <p>Closed</p>\n        <div class="status-cancelled-legend"></div>\n        <p>Cancelled</p>\n        <div class="status-declined-legend"></div>\n        <p>Unfulfilled</p>\n        <div class="status-nonattendance-legend"></div>\n        <p>Nonattendance</p>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["common/clauses/booleanClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<label>\n    <select class="input-block-level">\n        <option value="true">True</option>\n        <option value="false">False</option>\n    </select>\n</label>\n';

}
return __p
};

this["JST"]["common/clauses/childrenClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span1">\n    <button class="btn btn-primary remove" type="button" data-loading-text="Saving ...">-\n    </button>\n</div>\n<div class="span2">\n    <label>\n        <select class="not input-block-level">\n            <option value=""></option>\n            <option value="NOT">NOT</option>\n        </select>\n    </label>\n</div>\n<div class="span3">\n    <label>\n        <select class="input-block-level fields">\n            <option></option>\n            <option value="AND">AND</option>\n            <option value="OR">OR</option>\n        </select>\n    </label>\n</div>\n<div class="span6 restriction">\n\n</div>\n';

}
return __p
};

this["JST"]["common/clauses/clause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<li class="row-fluid">\n    ';
 if (obj.modal) { ;
__p += '\n    <div class="span12">\n    ';
 } else { ;
__p += '\n    <div class="span6">\n    ';
 } ;
__p += '\n        <div class="span1">\n            <button class="btn btn-primary remove" type="button" data-loading-text="Saving ...">-\n            </button>\n        </div>\n        <div class="span3">\n            <label>\n                <select class="input-block-level fields">\n                    <option></option>\n                    <option value="AND">And</option>\n                    <option value="OR">Or</option>\n                </select>\n            </label>\n        </div>\n        <div class="span2">\n            <label>\n                <select class="not input-block-level">\n                    <option value=""></option>\n                    <option value="NOT">Does not</option>\n                </select>\n            </label>\n        </div>\n        <div class="span6 restriction">\n\n        </div>\n    </div>\n    ';
 if (obj.modal) { ;
__p += '\n    <div style="display: none" class="span12">\n    ';
 } else { ;
__p += '\n    <div style="display: none" class="span6">\n    ';
 } ;
__p += '\n        <div style="display: none" class="span1 new_child_container">\n            <button class="btn btn-primary new_child" type="button" data-loading-text="Saving ...">+\n            </button>\n        </div>\n        <div class="children span11">\n\n        </div>\n    </div>\n</li>\n';

}
return __p
};

this["JST"]["common/clauses/clausesManage"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.modal) { ;
__p += '\n<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>\n    ';
 if (obj.filterType == "booking") { ;
__p += '\n    <h3>Unassigned Booking Filters</h3>\n    ';
 } else { ;
__p += '\n    <h3>Interpreter Filters</h3>\n    ';
 } ;
__p += '\n</div>\n<div class="modal-body">\n';
 } ;
__p += '\n<div>\n    <ul style="list-style-type: none" id="clauses" class="container-fluid">\n\n    </ul>\n    <br/>\n\n    <div class="btn-group">\n        <button class="btn btn-primary" type="button" id="add" value="Save" data-loading-text="Saving ...">\n            ' +
__e( obj.showQueryComponent ? "Search" : "Add Clause" ) +
'\n        </button>\n        <button class="btn btn-primary" type="button" id="search" value="Save" data-loading-text="Saving ...">\n            ' +
__e( obj.showQueryComponent ? "Reset" : "Search" ) +
'\n        </button>\n    </div>\n</div>\n';
 if (obj.modal) { ;
__p += '\n</div>\n<div class="modal-footer">\n    <button class="btn" id="close" data-dismiss="modal">Close</button>\n</div>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["common/clauses/compositeClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span12 extraClauses">\n\n</div>\n';

}
return __p
};

this["JST"]["common/clauses/dateClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span12 row-fluid">\n    <div class="span4">\n        <label>\n            <select class="input-block-level">\n                <option value="eqd">Equals</option>\n                <option value="rank">Rank</option>\n                <option value="ged">Greater Than</option>\n                <option value="led">Less Than</option>\n            </select>\n        </label>\n    </div>\n    <div class="span3">\n        <label>\n            <input class="firstDate input-block-level date" type=\'text\' value=\'\' autocomplete="off" />\n        </label>\n    </div>\n    <div class="span3">\n        <label>\n            <input class="secondDate input-block-level date" style="display: none;" type=\'text\' value=\'\' autocomplete="off" />\n        </label>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/clauses/dateTimeClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span12 row-fluid">\n    <div class="span4">\n        <label>\n            <select class="input-block-level">\n                <option value="eqd">Equals</option>\n                <option value="rank">Rank</option>\n                <option value="ged">Greater Than</option>\n                <option value="led">Less Than</option>\n            </select>\n        </label>\n    </div>\n    <div class="span3">\n        <label class="firstContainer">\n            <input class="firstDate input-block-level date" type=\'text\' value=\'\' autocomplete="off" />\n            <input class="firstTime input-block-level format-time" type=\'text\' value=\'\' autocomplete="off" />\n        </label>\n    </div>\n    <div class="span3">\n        <label class="secondContainer" style="display: none;">\n            <input class="secondDate input-block-level date" type=\'text\' value=\'\' autocomplete="off" />\n            <input class="secondTime input-block-level format-time" type=\'text\' value=\' autocomplete="off" \'/>\n        </label>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/clauses/numberClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span12 row-fluid">\n    <div class="span4">\n        <label>\n            <select class="input-block-level">\n                <option value="eq">Equals</option>\n                <option value="rank">Rank</option>\n                <option value="ge">Greater Than</option>\n                <option value="le">Less Than</option>\n            </select>\n        </label>\n    </div>\n    <div class="span3">\n        <label>\n            <input class="firstNumber input-block-level" type=\'number\' value=\'\'/>\n        </label>\n\n    </div>\n    <div class="span3">\n        <label>\n            <input style="display: none" class="secondNumber input-block-level" type=\'number\' value=\'\'/>\n        </label>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/clauses/optionClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<label>\n    <select class="input-block-level">\n    </select>\n</label>\n';

}
return __p
};

this["JST"]["common/clauses/textClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span12 row-fluid">\n    <div class="span4">\n        <label>\n            <select class="input-block-level">\n                <option value="bw">Contain(s)</option>\n                <option value="eqw">Equal(s)</option>\n                <option value="sw">Start(s) With</option>\n                <option value="ew">End(s) With</option>\n            </select>\n        </label>\n    </div>\n    <div class="span6">\n        <label>\n            <input class="input-block-level" type=\'text\' value=\'\'/>\n        </label>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/client/quickadd"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- add client from booking screen -->\n<div id="popupErrorContainer" class="msg-modal hide">\n</div>\n<div id="popupSuccessContainer" class="msg-modal hide">\n</div>\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>';
 if (obj.id) { ;
__p += 'Edit Existing Client';
 } else {;
__p += 'Create New Client';
 } ;
__p += '</h3>\n</div>\n<div class="modal-body">\n    ';
 if (obj.id) { ;
__p += '\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing client. This will update <strong>all bookings</strong>\n        that are already associated with this client. If you want to enter a new client, click on the\n        <span class="label label-info">Create New</span> button below and enter the new client information.\n    </div>\n    ';
 } ;
__p += '\n    <div class="row-fluid">\n        <div class="span6">\n\n            <div class="row-fluid">\n                <div class="control-group span8">\n                    <label class="control-label required" for="name">Name </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Client name" data-original-title="Name">?</span></a>\n                    <div class="controls">\n                        <input class="input-block-level" name="name" type="text" value="' +
__e( obj.name ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="active">Active?</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Indicate whether this client is active." data-original-title="Active?">?</a>\n                    <div class="controls">\n                        <input name="active" type="checkbox" ';
 if (active || _.isNull(active)) { ;
__p += ' ' +
((__t = ( "checked" )) == null ? '' : __t) +
' ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label" for="accountingReference">Accounting Reference </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Accounting reference for third party accounting system" data-original-title="Accounting Reference">?</span></a>\n                <div class="controls">\n                    <input class="input-block-level" name="accountingReference" type="text" value="' +
__e( obj.accountingReference ) +
'"/>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span6">\n\n            <div class="control-group">\n                <label class="control-label" for="contactPerson">Contact Person </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Contact person for this client" data-original-title="Contact Person">?</span></a>\n                <div class="controls">\n                    <input class="input-block-level" name="contactPerson" type="text" value="' +
__e( obj.contactPerson ) +
'"/>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label" for="contactPhone">Contact Phone </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Contact phone for this client" data-original-title="Contact Phone">?</span></a>\n                <div class="controls">\n                    <input class="input-block-level" name="contactPhone" type="text" value="' +
__e( obj.contactPhone ) +
'"/>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label" for="contactEmail">Contact Email </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Contact email for this client" data-original-title="Contact Email">?</span></a>\n                <div class="controls">\n                    <input class="input-block-level" name="contactEmail" type="text" value="' +
__e( obj.contactEmail ) +
'"/>\n                </div>\n            </div>\n\n        </div>\n\n        <div class="span6">\n            <div class="control-group">\n                <label class="control-label" for="notes">Notes </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Notes related to the client." data-original-title="Notes">?</a>\n                <div class="controls">\n                    <textarea style="width:100%; height: 150px;" class="_wysiwyg" name="notes">' +
__e( notes ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary widget-save-client">Save Client</a>\n    <a href="javascript:void(0);" class="btn btn-primary widget-create-client hidden">Create New</a>\n    <a href="javascript:void(0);" class="btn widget-close-client" data-dismiss="modal">Close</a>\n</div>';

}
return __p
};

this["JST"]["common/client/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- client (' +
__e( obj.id ) +
') -->\n<div class="row-fluid">\n    <div class="span6">\n\n        <div class="row-fluid">\n            <div class="control-group span8">\n                <label class="control-label required" for="name">Name </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Client name" data-original-title="Name">?</span></a>\n                <div class="controls">\n                    <input class="input-block-level" name="name" type="text" value="' +
__e( obj.name ) +
'"/>\n                </div>\n            </div>\n\n            <div class="control-group span4">\n                <label class="control-label" for="active">Active?</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Indicate whether this client is active." data-original-title="Active?">?</a>\n                <div class="controls">\n                    <input name="active" type="checkbox" ';
 if (active || _.isNull(active)) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span6">\n        <div class="control-group">\n            <label class="control-label" for="accountingReference">Accounting Reference </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Accounting reference for third party accounting system" data-original-title="Accounting Reference">?</span></a>\n            <div class="controls">\n                <input class="input-block-level" name="accountingReference" type="text" value="' +
__e( obj.accountingReference ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="span6">\n        <div class="control-group">\n            <label class="control-label" for="accountingSickLeaveCode">Accounting Sick Leave Code </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="An accounting code to represent sick leave for the Client" data-original-title="Accounting Sick Leave Code">?</span></a>\n            <div class="controls">\n                <input class="input-block-level" name="accountingSickLeaveCode" type="text" value="' +
__e( obj.accountingSickLeaveCode ) +
'"/>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <div class="span6">\n\n        <div class="control-group">\n            <label class="control-label" for="contactPerson">Contact Person </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Contact person for this client" data-original-title="Contact Person">?</span></a>\n            <div class="controls">\n                <input class="input-block-level" name="contactPerson" type="text" value="' +
__e( obj.contactPerson ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group">\n            <label class="control-label" for="contactPhone">Contact Phone </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Contact phone for this client" data-original-title="Contact Phone">?</span></a>\n            <div class="controls">\n                <input class="input-block-level" name="contactPhone" type="text" value="' +
__e( obj.contactPhone ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group">\n            <label class="control-label" for="contactEmail">Contact Email </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Contact email for this client" data-original-title="Contact Email">?</span></a>\n            <div class="controls">\n                <input class="input-block-level" name="contactEmail" type="text" value="' +
__e( obj.contactEmail ) +
'"/>\n            </div>\n        </div>\n\n    </div>\n\n    <div class="span6">\n        <div class="control-group">\n            <label class="control-label" for="notes">Notes </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Notes related to the client." data-original-title="Notes">?</a>\n            <div class="controls">\n                <textarea style="width:100%; height: 150px;" class="_wysiwyg" name="notes">' +
__e( notes ) +
'</textarea>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<div class="row-fluid">\n    <div class="control-group span4">\n        <label class="control-label" for="customerSpecialInstructions">Customer Special Instructions </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Special Instructions related to the customer. These will appear on the customer booking screens." data-original-title="Customer Special Instructions">?</a>\n        <div class="controls">\n            <textarea style="width:100%" class="_wysiwyg" name="customerSpecialInstructions">' +
__e( customerSpecialInstructions ) +
'</textarea>\n        </div>\n    </div>  <!-- Customer Special Instructions -->\n    <div class="control-group span4">\n        <label class="control-label" for="contactSpecialInstructions">Interpreter Special Instructions </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Special Instructions related to the interpreter. These will appear on the interpreter booking screens." data-original-title="Interpreter Special Instructions">?</a>\n        <div class="controls">\n            <textarea style="width:100%" class="_wysiwyg" name="contactSpecialInstructions">' +
__e( contactSpecialInstructions ) +
'</textarea>\n        </div>\n    </div>  <!-- Interpreter Special Instructions -->\n    <div class="control-group span4">\n        <label class="control-label" for="companySpecialInstructions">Internal Special Instructions </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Special Instructions related to the internal admin user. These will appear on the admin booking screens." data-original-title="Internal Special Instructions">?</a>\n        <div class="controls">\n            <textarea style="width:100%" class="_wysiwyg" name="companySpecialInstructions">' +
__e( companySpecialInstructions ) +
'</textarea>\n        </div>\n    </div>  <!-- Admin / Internal Special Instructions -->\n</div> <!-- / row-->\n';

}
return __p
};

this["JST"]["common/comment/comment"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="comment" rel="tooltip" title="' +
__e( obj.createdBy ) +
'" >\n    <!-- id ' +
__e( obj.id ) +
' -->\n    <div class="comment-header">\n        <span class="secured secured-comp">';
 if (!obj.readStatus) { ;
__p += '<a href="javascript:void(0);" class="markRead" title="Mark as Read"><i class="icon icon-signout"></i></a>';
 } ;
__p += '</span>\n        <strong><span class="format-datetime" data-timezone="' +
__e( App.config.user.timeZone ) +
'">' +
__e( obj.createdDate ) +
'</span>: ' +
__e( obj.createdBy ) +
'</strong>\n    </div>\n    <div class="comment-body">\n        ';
 if (obj.readStatus) { ;
__p += '\n            ' +
__e( obj.body ) +
'\n        ';
 } else { ;
__p += '\n            <strong>' +
__e( obj.body ) +
'</strong>\n        ';
 } ;
__p += '\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/comment/comments-popup"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Comments - Booking #(' +
__e( obj.superBooking ? obj.superBooking.id : "" ) +
')</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div id="comments">\n\n            <div class="comments">\n\n            </div>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/comment/comments"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Comments</h4>\n<div id="saveFirstMessage">\n    <div class="well"></div>\n</div>\n<div class="comments-body hidden">\n    <i class="icon icon-plus-sign"></i> <a href="javascript:void(0);" class="addComment">Add Comment</a>\n    <div class="newComment">\n        <div></div>\n    </div>\n    <div class="comments">\n\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/comment/count"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span class="badge" title=""></span>';

}
return __p
};

this["JST"]["common/comment/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="control-group">\n    <label>Save Comment <a href="javascript:void(0);" class="saveComment"><i class="icon-save"></i></a>\n        <div class="controls">\n            <textarea rows="4" name="body" class="input-block-level wysiwyg"></textarea>\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/companypayableitemtype/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span12">\n        <button class="btn btn-primary addPayableItemTypeCmd">Add Configuration</button>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <div class="span-12 list-container">\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/companyservice/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group span4">\n        <label class="control-label" for="service">Service </label>\n        <div class="controls">\n            <select class="api-v2" id="service" name="service" class="input-block-level">\n                ' +
((__t = ( selectOptions(App.dict.bookingMode, {selected: obj.service ? obj.service.id : "", noSelection: {id: '', name: '[Choose a Service]'}, sidx: "name", sord: "asc"}) )) == null ? '' : __t) +
'\n            </select>\n        </div>\n    </div>\n\n    <div class="control-group span4">\n        <label>\n            <span class="control-label">Enabled? <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enabled" data-original-title="Enabled" tabindex="-1">?</a></span>\n            <div class="controls">\n                <input type="checkbox" name="enabled" ' +
__e( obj.enabled ? "checked" : "" ) +
'/>\n            </div>\n        </label>\n    </div>\n    <div class="span4">\n        <a href="javascript:void(0);" class="deleteService">Remove Service</a>\n    </div>\n</div>';

}
return __p
};

this["JST"]["common/confirmcancel/updateclient"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm or Cancel</h3>\n</div>\n<div class="modal-body">\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing client. This will update <strong>all bookings</strong>\n        that are already associated with this client.\n        <p>Please click on the <span class="label label-info">Confirm</span> button to make changes to this\n            existing client or the <span class="label">Cancel</span> button to go back and\n            create a new client.\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-confirm">Confirm</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/confirmcancel/updateconsumer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm or Cancel</h3>\n</div>\n<div class="modal-body">\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing consumer. This will update <strong>all bookings</strong>\n        that are already associated with this consumer.\n        <p>Please click on the <span class="label label-info">Confirm</span> button to make changes to this\n            existing consumer or the <span class="label">Cancel</span> button to go back and\n            create a new consumer.\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-confirm">Confirm</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/confirmcancel/updatecustomer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm or Cancel</h3>\n</div>\n<div class="modal-body">\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing customer. This will update <strong>all bookings</strong>\n        that are already associated with this customer.\n        <p>Please click on the <span class="label label-info">Confirm</span> button to make changes to this\n            existing customer or the <span class="label">Cancel</span> button to go back and\n            create a new customer.\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-confirm">Confirm</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/confirmcancel/updatelocation"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm or Cancel</h3>\n</div>\n<div class="modal-body">\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing location. This will update <strong>all bookings</strong>\n        that are already associated with this location.\n        <p>Please click on the <span class="label label-info">Confirm</span> button to make changes to this\n            existing location or the <span class="label">Cancel</span> button to go back and\n            create a new location.\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-confirm">Confirm</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/confirmcancel/updaterequestor"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm or Cancel</h3>\n</div>\n<div class="modal-body">\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing requestor. This will update <strong>all bookings</strong>\n        that are already associated with this requestor.\n        <p>Please click on the <span class="label label-info">Confirm</span> button to make changes to this\n            existing requestor or the <span class="label">Cancel</span> button to go back and\n            create a new requestor.\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-confirm">Confirm</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/confirmcancel/updatesublocation"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm or Cancel</h3>\n</div>\n<div class="modal-body">\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing sublocation. This will update <strong>all bookings</strong>\n        that are already associated with this sublocation.\n        <p>Please click on the <span class="label label-info">Confirm</span> button to make changes to this\n            existing sublocation or the <span class="label">Cancel</span> button to go back and\n            create a new sublocation.\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-confirm">Confirm</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/contact/status/change"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div id="statusErrorContainer"></div>\n<h3>Contact Status Change</h3>\n<br/>\n<div class="span6">\n    <div class="control-group span4">\n        <b>Intepreter: </b>' +
__e( name ) +
'\n    </div>\n    <div class="control-group span4">\n        <b>Current Status: </b>' +
__e( currentStatus.name ) +
'\n    </div>\n    <div class="control-group">\n        <div class="span2">\n            <label>\n                <b>Next Status: </b>\n\n                <select class="input-block-level" name="status.id">\n                    ' +
((__t = ( selectOptions(App.dict.contactStatus, {noSelection: {id: '', name: '[Choose Next Status]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </label>\n        </div>\n        <div class="span2" id="deactivation_reason">\n            <label>\n                <b>Deactivation Reason: </b>\n\n                <select id="deactivation_reason_select" class="input-block-level" name="deactivationReason.id">\n                </select>\n            </label>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">From Date</span>\n\n            <div class="controls">\n                <input type="text" name="fromDate" data-timezone="' +
__e(obj.timezone) +
'"\n                       class="input-block-level format-date" value="' +
__e(obj.fromDate) +
'" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">From Time</span>\n\n            <div class="controls">\n                <input type="text" name="fromDate" data-timezone="' +
__e(obj.timezone) +
'"\n                       class="input-block-level format-time" value="' +
__e(obj.fromDate) +
'" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">To Date</span>\n\n            <div class="controls">\n                <input type="text" name="toDate" data-timezone="' +
__e(obj.timezone) +
'"\n                       class="input-block-level format-date" value="' +
__e(obj.toDate) +
'" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">To Time</span>\n\n            <div class="controls">\n                <input type="text" name="toDate" data-timezone="' +
__e(obj.timezone) +
'"\n                       class="input-block-level format-time" value="' +
__e(obj.toDate) +
'" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n\n    <div class="control-group span6">\n        <label class="control-label" for="notes">Notes </label>\n\n        <textarea name="notes"></textarea>\n    </div>\n    <div class="btn-group span4">\n        <button class="btn btn-primary" type="button" id="change_status_button" value="Change Status"\n                data-loading-text="Saving ...">Change Status\n        </button>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/contactquotationtemplate/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Contact Quotation Template</h4>\n<dl class="dl-horizontal">\n    <dt>Created</dt><dd>' +
__e( (createdBy ? createdBy : "n/a") + " (" + (createdDate ? createdDate : "n/a") + ")" ) +
'</dd>\n    <dl><dt>Last Modified</dt><dd>' +
__e( (lastModifiedBy ? lastModifiedBy : "n/a") + " (" + (lastModifiedDate ? lastModifiedDate : "n/a") + ")" ) +
'</dd>\n    <dl><dt>Note</dt><dd>By saving this template a PDF document will be attached to the respective quotation email</dd>\n    </dl>\n    <form>\n        <fieldset>\n            <div class="control-group">\n                <div class="controls">\n                    <textarea id="contactquotation' +
((__t = ( id )) == null ? '' : __t) +
'" cols="4" rows="2" class="wysiwyg" style="height: 450px;" name="body" placeholder="Contact Quotation Template">\n                        ' +
__e( body ) +
'\n                    </textarea>\n                </div>\n            </div>\n\n            <button class="btn btn-primary" type="button" id="saveTemplate" value="Save" data-loading-text="Saving ...">Save</button>\n            <button class="btn btn-success" type="button" id="previewTemplate" value="Preview">Preview</button>\n\n        </fieldset>\n    </form>\n</dl>\n';

}
return __p
};

this["JST"]["common/contactworker/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Agent: ' +
__e( obj.friendlyName ) +
'</h3>\n</div>\n<div class="modal-body">\n    <div class="control-group">\n        <label>\n        <span class="control-label">Attributes</span>\n            <div class="controls">\n                <textarea rows="4" name="attributes" class="input-block-level">' +
__e( JSON.stringify(obj.attributes) ) +
'</textarea>\n            </div>\n        </label>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-save">Save</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/contactworker/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Agent: ' +
__e( obj.friendlyName ) +
'</h3>\n</div>\n<div class="modal-body">\n    <div class="statistics"></div>\n    <!-- JSON: ' +
__e( JSON.stringify(obj) ) +
' -->\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn" data-dismiss="modal">Ok</a>\n</div>\n';

}
return __p
};

this["JST"]["common/creditmemo/invoice/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Invoice Credit Memo</h4>\n<dl class="dl-horizontal">\n    <dt>Created</dt><dd>' +
__e( (createdBy ? createdBy : "n/a") + " (" + (createdDate ? createdDate : "n/a") + ")" ) +
'</dd>\n    <dl><dt>Last Modified</dt><dd>' +
__e( (lastModifiedBy ? lastModifiedBy : "n/a") + " (" + (lastModifiedDate ? lastModifiedDate : "n/a") + ")" ) +
'</dd>\n    </dl>\n    <form>\n        <fieldset>\n            <div class="control-group">\n                <div class="controls">\n                    <textarea id="invoiceCreditMemo' +
((__t = ( id )) == null ? '' : __t) +
'" cols="4" rows="2" class="wysiwyg" style="height: 450px;" name="body" placeholder="Invoice Credit Memo">\n                        ' +
__e( body ) +
'\n                    </textarea>\n                </div>\n            </div>\n\n            <button class="btn btn-primary" type="button" id="saveTemplate" value="Save" data-loading-text="Saving ...">Save</button>\n            <button class="btn btn-success" type="button" id="previewTemplate" value="Preview">Preview</button>\n\n        </fieldset>\n    </form>\n</dl>\n';

}
return __p
};

this["JST"]["common/creditmemo/payment/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Payment Credit Memo</h4>\n<dl class="dl-horizontal">\n    <dt>Created</dt><dd>' +
__e( (createdBy ? createdBy : "n/a") + " (" + (createdDate ? createdDate : "n/a") + ")" ) +
'</dd>\n    <dl><dt>Last Modified</dt><dd>' +
__e( (lastModifiedBy ? lastModifiedBy : "n/a") + " (" + (lastModifiedDate ? lastModifiedDate : "n/a") + ")" ) +
'</dd>\n    </dl>\n    <form>\n        <fieldset>\n            <div class="control-group">\n                <div class="controls">\n                    <textarea id="paymentCreditMemo' +
((__t = ( id )) == null ? '' : __t) +
'" cols="4" rows="2" class="wysiwyg" style="height: 450px;" name="body" placeholder="Payment Credit Memo">\n                        ' +
__e( body ) +
'\n                    </textarea>\n                </div>\n            </div>\n\n            <button class="btn btn-primary" type="button" id="saveTemplate" value="Save" data-loading-text="Saving ...">Save</button>\n            <button class="btn btn-success" type="button" id="previewTemplate" value="Preview">Preview</button>\n\n        </fieldset>\n    </form>\n</dl>\n';

}
return __p
};

this["JST"]["common/criteria/criteriaHierarchy/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<a href="javascript:void(0);" class="deleteChild"><i class="icon icon-minus-sign"></i>Delete</a>\n<input type="text" id="search-employment-criteria" placeholder="Search Employment Criteria"/>\n';

}
return __p
};

this["JST"]["common/customercontact/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group span6">\n        <label class="control-label required" for="firstName">First Name </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The first name of the contact person at the customer." data-original-title="First Name">?</a>\n        <div class="controls">\n            <input class="span12" name="firstName" type="text" value="' +
__e( firstName ) +
'" placeholder="First Name"/>\n            <p class="help-block">Required field</p>\n        </div>\n    </div>\n\n    <div class="control-group span6">\n        <label class="control-label" for="lastName">Last Name </label> <a href="javascript:void(0);" tabindex="-1" class="pull-right deleteContact"><i class="icon icon-minus-sign"></i>Delete</a>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The last name of the contact person at the customer." data-original-title="Last Name">?</a>\n        <div class="controls">\n            <input class="span12" class="lastName" name="lastName" type="text" value="' +
__e( lastName ) +
'" placeholder="Last Name"/>\n            <p class="help-block">Required field</p>\n        </div>\n    </div>\n</div> <!-- / row -->\n\n<div class="row-fluid">\n    <div class="control-group">\n        <label class="control-label" for="email">Email Address </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The email address of name of the contact person at the customer." data-original-title="Email Address">?</a>\n        <div class="controls">\n            <input class="span12" name="email" type="text" value="' +
__e( email ) +
'" placeholder="Email Address"/>\n        </div>\n    </div>\n</div> <!-- / row -->\n\n<div class="row-fluid">\n    <div class="control-group span6">\n        <label class="control-label" for="number">Number </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The contact number for the contact person at the customer." data-original-title="Contact Number">?</a>\n        <div class="controls">\n            <input class="span12" name="number" type="text" value="' +
__e( number ) +
'" placeholder="Contact Number"/>\n        </div>\n    </div>\n\n    <div class="control-group span6">\n        <label class="control-label" for="faxNumber">Fax Number </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="A fax number for the contact person at the customer." data-original-title="Contact Fax Number">?</a>\n        <div class="controls">\n            <input class="span12" name="faxNumber" type="text" value="' +
__e( faxNumber ) +
'" placeholder="Fax Number"/>\n        </div>\n    </div>\n\n</div> <!-- / row -->\n\n<div class="row-fluid">\n    <div class="control-group span6">\n        <label class="control-label" for="other">Other </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Any other information to associate with the contact person." data-original-title="Other">?</a>\n        <div class="controls">\n            <input class="span12" name="other" type="text" value="' +
__e( other ) +
'" placeholder="Other information"/>\n        </div>\n    </div>\n\n    <div class="control-group span6">\n        <label class="control-label" for="active">Active </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Whether this contact person is active or not" data-original-title="Active">?</a>\n        <div class="controls">\n            <input class="span12" name="active" type="checkbox" ';
 if (active) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n        </div>\n    </div>\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["common/customerquotationtemplate/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Customer Quotation Template</h4>\n<dl class="dl-horizontal">\n    <dt>Created</dt><dd>' +
__e( (createdBy ? createdBy : "n/a") + " (" + (createdDate ? createdDate : "n/a") + ")" ) +
'</dd>\n    <dl><dt>Last Modified</dt><dd>' +
__e( (lastModifiedBy ? lastModifiedBy : "n/a") + " (" + (lastModifiedDate ? lastModifiedDate : "n/a") + ")" ) +
'</dd>\n    <dl><dt>Note</dt><dd>By saving this template a PDF document will be attached to the respective quotation email</dd>\n    </dl>\n    <form>\n        <fieldset>\n            <div class="control-group">\n                <div class="controls">\n                    <textarea id="customerquotation' +
((__t = ( id )) == null ? '' : __t) +
'" cols="4" rows="2" class="wysiwyg" style="height: 450px;" name="body" placeholder="Customer Quotation Template">\n                        ' +
__e( body ) +
'\n                    </textarea>\n                </div>\n            </div>\n\n            <button class="btn btn-primary" type="button" id="saveTemplate" value="Save" data-loading-text="Saving ...">Save</button>\n            <button class="btn btn-success" type="button" id="previewTemplate" value="Preview">Preview</button>\n\n        </fieldset>\n    </form>\n</dl>\n';

}
return __p
};

this["JST"]["common/daily/jobslist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<table class="table table-condensed table-bordered">\n    <tr>\n        <th colspan="6">' +
__e( size ) +
' Jobs</th>\n    </tr>\n    <tr>\n        <th>#</th>\n        <th>Times</th>\n        <th>Status</th>\n        <th>Job Details</th>\n        <th>Language</th>\n        <th style="width: 20%;">Notes</th>\n    </tr>\n    <tbody>\n    ';
 _.each(jobs, function(job) { ;
__p += '\n        <tr>\n            <td>' +
__e( job.id ) +
'</td>\n            <td>\n                <div style="border-bottom: 1px solid black;"><br/><br/><br/></div>\n                ' +
__e( job.startTime ) +
' - ' +
__e( job.endTime ) +
'</td>\n            <td>' +
__e( getStatusAttributeById(App.dict.bookingStatus, job["status.id"], "name") ) +
'</td>\n            <td>\n                <dl class="dl-horizontal">\n                    <dt>Customer</dt><dd>' +
__e( job["customer.label"] ) +
'</dd>\n                    <dt>Client</dt><dd>' +
__e( job["client.label"] ) +
'</dd>\n                    <dt>Requestor</dt><dd>' +
__e( job["requestor.label"] ) +
'</dd>\n                    <dt>Location</dt><dd>' +
__e( job["location.label"] ) +
'</dd>\n                    ' +
((__t = ( (job["subLocation.label"] ? "<dt>Sublocation</dt><dd>" + job["subLocation.label"] + "</dd>" : "") )) == null ? '' : __t) +
'\n                    ' +
((__t = ( (job["siteContact"] ? "<dt>Site Contact</dt><dd>" + job["siteContact"] + "</dd>" : "") )) == null ? '' : __t) +
'\n                    ' +
((__t = ( (job["consumer.label"] ? "<dt>Consumer</dt><dd>" + job["consumer.label"] + "</dd>" : "") )) == null ? '' : __t) +
'\n                    ';
 _.each(job.refs, function(ref) { ;
__p += '\n                        <dt>' +
__e( ref ? ref.name : "N/A" ) +
'</dt><dd>' +
__e( ref ? ref.ref : "N/A" ) +
'</dd>\n                    ';
 }); ;
__p += '\n                </dl>\n            </td>\n            <td>\n                <div style="width: 200px; border-bottom: 1px solid black;"><br/><br/><br/></div>\n                <div>' +
__e( job["interpreter.label"] ? job["interpreter.label"] : "Unassigned" ) +
'</div>\n                <div class="secured secured-comp secured-admin"><strong>' +
__e( job["language.label"] ) +
'</strong> / ' +
__e( job["interpreter.label"] ? job["interpreter.label"] + " (" + job["interpreter.primaryNumber"] + ")" : "Unassigned" ) +
'</div>\n                <div class="secured secured-cust"><strong>' +
__e( job["language.label"] ) +
'</strong> / ' +
__e( job["interpreter.label"] ? job["interpreter.label"] : "Unassigned" ) +
'</div>\n                <div><strong>Gender Required:</strong> ' +
__e( job["genderRequirement.id"] ? getStatusAttributeById(App.dict.gender, job["genderRequirement.id"], "name") : "N/A" ) +
'</div>\n                <div><strong>Preferred Interpreter:</strong> ' +
__e( job["preferredInterpreter"] ? job["preferredInterpreter"].name : "N/A" ) +
'</div>\n            </td>\n            <td>\n                <div>\n                    <h5>Appointment Details</h5>\n                    ' +
((__t = ( job.bookingDetails ? job.bookingDetails : "&nbsp;" )) == null ? '' : __t) +
'\n                </div>\n                <div>\n                    <h5>Job Details</h5>\n                    ' +
((__t = ( job.visitDetails ? job.visitDetails : "&nbsp;" )) == null ? '' : __t) +
'\n                </div>\n                <div>\n                    <h5>Venue Information</h5>\n                    ' +
((__t = ( job.locationNote ? job.locationNote : "&nbsp;" )) == null ? '' : __t) +
'\n                </div>\n            </td>\n        </tr>\n    ';
 }); ;
__p += '\n    ';
 if (size === 0) { ;
__p += '\n        <tr>\n            <td colspan="6">No jobs Found</td>\n        </tr>\n    ';
 } ;
__p += '\n    </tbody>\n\n</table>\n';

}
return __p
};

this["JST"]["common/document/document"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="document">\n    <div class="">\n        <i class="icon-file"></i> <strong>' +
__e( obj.fileName + " (" + Math.round(obj.fileSize / 1024) + " Kb, " + obj.fileType + ")" ) +
'</strong>\n        (' +
__e( App.dict.documentType[obj["type.nameKey"]].name ) +
')\n        ' +
__e( obj.description ) +
'\n        ' +
__e( obj.createdBy ) +
' (' +
__e( obj.createdDate ) +
')\n\n        <div class="btn-group dropdown">\n            <button class="btn dropdown-toggle" data-toggle="dropdown" type="button" value="actions"> Actions <span class="caret"></span> </button>\n            <ul class="dropdown-menu">\n                <!-- dropdown menu links -->\n                <li>\n                    <a href="' +
__e( App.config.context + "/" + obj.fQPath ) +
'" class="view"> <i class="icon-share"></i> View</a>\n                </li>\n                <li>\n                    <a href="' +
__e( App.config.context + "/" + obj.fQPath ) +
'" id="download" target="_"><i class="icon-download"></i> Download</a>\n                </li>\n                <div class="secured secured-comp">\n                <li class="divider"></li>\n                <li>\n                    <a href="javascript:void(0);" id="deleteDocument"><i class="icon icon-trash"></i> Delete</a>\n                </li>\n                </div>\n            </ul>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/document/documents"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (title){ ;
__p += '\n<h4>' +
__e( title ) +
'</h4>\n';
 } else { ;
__p += '\n<h4>Documents</h4>\n';
 } ;
__p += '\n<i class="icon icon-plus-sign"></i> <a href="javascript:void(0);" class="addDocument">Add Document</a>\n<!--<div class="progress progress-success active">\n    <div class="bar" style="width: 0%;"></div>\n</div>-->\n<div class="documents">\n\n</div>\n';

}
return __p
};

this["JST"]["common/document/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4>Edit Document</h4>\n<br />\n<div class="row">\n    <div class="span4">\n        <div class="control-group">\n            <div class="row">\n                <div class="span4">\n                    <label class="control-label">Select Document Type </label>\n                    <select name="type.id" id="docType" class="input-block-level">\n                        ' +
((__t = ( selectOptions(App.dict.documentType, {selected: (obj ? obj["type.id"] : ''), noSelection: {id: '', name: '[Choose a File Type]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n            </div>\n            <div class="row">\n                <div class="span4">\n                    <label class="control-label">Public? </label>\n                    <div class="controls">\n                        <input type="checkbox" id="allowPublicView" name="allowPublicView" ';
 if (allowPublicView) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="row">\n    <div class="span4">\n        <br>\n        <button class="btn btn-primary" type="submit" id="save" value="save">Save</button>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/document/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="thumbnail">\n    <div class="caption">\n        ';
 if (obj.allowPublicView) { ;
__p += '\n            <span style="color:#468847;">\n        ';
 } else { ;
__p += '\n            <span>\n        ';
 } ;
__p += '\n            ' +
__e( obj.fileName + " (" + Math.round(obj.fileSize / 1024) + " Kb, " + obj.fileType + ")" ) +
'\n            (' +
__e( App.dict.documentType[obj["type.nameKey"]].name ) +
')\n            ' +
__e( obj.description ) +
'\n        </span>\n        <div class="btn-group dropdown">\n            <button class="btn dropdown-toggle" data-toggle="dropdown" type="button" value="actions"> Actions <span class="caret"></span> </button>\n            <ul class="dropdown-menu">\n                <!-- dropdown menu links -->\n                <li>\n                    <a href="' +
__e( App.config.context + "/" + obj.fQPath ) +
'" class="view"> <i class="icon-share"></i> View</a>\n                </li>\n                ';
 if (!this.options.disableEdit == true) { ;
__p += '\n                    <li class="secured secured-admin">\n                        <a href="javascript:void(0);" id="editDocument"><i class="icon icon-edit"></i> Edit</a>\n                    </li>\n                ';
 } ;
__p += '\n                <li>\n                    <a href="' +
__e( App.config.context + "/" + obj.fQPath ) +
'" id="download" target="_"><i class="icon-download"></i> Download</a>\n                </li>\n\n                ';
 if (!this.options.disableDelete == true) { ;
__p += '\n                    ';
 if (obj["type.nameKey"] == 'vossigned') { ;
__p += '\n                        <li class="divider secured secured-admin"></li>\n                        <li class="secured secured-admin">\n                            <a href="javascript:void(0);" id="deleteDocument"><i class="icon icon-trash"></i> Delete</a>\n                        </li>\n                    ';
 } else { ;
__p += '\n                        <li class="divider"></li>\n                        <li>\n                            <a href="javascript:void(0);" id="deleteDocument"><i class="icon icon-trash"></i> Delete</a>\n                        </li>\n                    ';
 } ;
__p += '\n                ';
 } ;
__p += '\n            </ul>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/dropdownautocomplete/dropdownconsumerlist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="clear"><b>All Matching Consumers</b></div>\n<div class="popupBlock narrow">\n    <ul id="dropdown-list">\n\n    </ul>\n</div>\n<div style="clear:both"></div>\n';

}
return __p
};

this["JST"]["common/dropdownautocomplete/dropdowninterpreterlist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="clear"><b>All Matching Interpreters</b></div>\n<div class="popupBlock narrow">\n    <ul id="dropdown-list">\n\n    </ul>\n</div>\n<div style="clear:both"></div>\n';

}
return __p
};

this["JST"]["common/dropdownautocomplete/dropdownitem"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<li id="' +
__e( obj.id ) +
'">' +
__e( obj.name ) +
'</li>\n';

}
return __p
};

this["JST"]["common/dropdownautocomplete/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.ui.isView) { ;
__p += '\n    ' +
__e( obj[obj.ui.labelField] ? obj[obj.ui.labelField] : "N/A" ) +
'\n';
 } else { ;
__p += '\n    <div class="widget-controls input-append input-block-level">\n        <div class="append-wrapper"><a href="#" title="' +
__e(obj.ui.clear) +
'" class="btn widget-clear" tabindex="-1"><i class="icon icon-remove"></i></a><a title="' +
__e(obj.ui.choose) +
'" class="btn widget-choose" tabindex="-1"><i class="icon icon-chevron-down"></i></a><a title="' +
__e(obj.ui.create) +
'" class="btn widget-create" tabindex="-1"><i class="icon icon-edit"></i></a></div><div class="input-wrapper"><input class="input-autocomplete ' +
__e(obj.ui.inputClassName) +
'" name="' +
__e(obj.ui.inputName) +
'" type="text" value="' +
__e( obj[obj.ui.labelField] ? obj[obj.ui.labelField] : obj.ui.otherLabel ) +
'" placeholder="' +
__e( obj.ui.placeholder ) +
'"/></div>\n        <p class="help-block">Required field.</p>\n    </div> <!-- .input-append.input-block-level -->\n    <div class="autocompletePopup ac-left">\n        <div class="popupHeader">\n            <p>' +
__e(obj.ui.popupHeader) +
': <span>&nbsp;</span></p><div class="closePopup"></div>\n        </div> <!-- .popupHeader -->\n        <div class="popupBody">\n            <div><img src="' +
__e(App.config.context) +
'/images/loader-circle.gif"> Loading ...</div>\n        </div> <!-- .popupBody -->\n    </div> <!--  .autocompletePopup -->\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["common/email/adhoc"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Ad Hoc Email: Job #' +
__e( interpreterJob.id ) +
'</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span9">\n            <div class="control-group">\n                <label>\n                    <span class="control-label"><span class="required">To:</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Email address to send the email to. Choose from the dropdown to populate with appropriate email for convenience." data-original-title="To" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="recipient" value="' +
__e( obj.recipient ) +
'" />\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="span3">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Recipient:&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Choose the recipient you want to send the email to." data-original-title="Recipient" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <select name="recipientType" class="input-block-level">\n                            <option value="">[Recipient]</option>\n                            <option value="int">Interpreter</option>\n                            <option value="cus">Customer</option>\n                            <option value="con">Consumer</option>\n                        </select>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span8">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Cc: <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Email address to Cc on the email being sent." data-original-title="Cc" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="cc" value="' +
__e( obj.cc ) +
'" />\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="span4">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Bcc: <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Email address to Bcc on the email being sent." data-original-title="Bcc" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="bcc" value="' +
__e( obj.bcc ) +
'" />\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="control-group">\n                <label>\n                    <span class="control-label"><span class="required">Subject:</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Subject line for the email." data-original-title="Subject" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="subject" value="' +
__e( obj.subject ) +
'" />\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span12">\n            <div>\n                <label>\n                    <span class="control-label"><span class="required">Body:</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the message you would like to send via email." data-original-title="Body" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <textarea rows="4" name="body" class="input-block-level wysiwyg">' +
__e( obj.body ) +
'</textarea>\n                    </div>\n                    <div class="controls">\n                        <select name="templateNameKey" class="input-block-level">\n                            ' +
__e( selectOptionsAsync("[name=templateNameKey]", templates, {value: "nameKey", selected: "", noSelection: {id: '', name: '[Load Template]'}}) ) +
'\n                        </select>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Reply To: <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The email address that replies are to be sent to. Leaving this blank will send replies to the default email setup." data-original-title="Reply To" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="replyTo" value="' +
__e( obj.replyTo ) +
'" />\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-send">Send</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["common/email/jobstatusupdate"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Job Status Update</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <p>\n            Job status update emails will be sent to the Requestor email addresses of the selected jobs.\n        </p>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span8">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Cc: <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Email address to Cc on the email being sent." data-original-title="Cc" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="cc"/>\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="span4">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Bcc: <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Email address to Bcc on the email being sent." data-original-title="Bcc" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="bcc" />\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="control-group">\n                <label>\n                    <span class="control-label"><span class="required">Subject:</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Subject line for the email." data-original-title="Subject" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="subject" value="' +
__e( obj.subject ) +
'"/>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span12">\n            <div>\n                <label>\n                    <span class="control-label"><span class="required">Body:</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the message you would like to send via email." data-original-title="Body" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <textarea rows="4" name="body" class="input-block-level wysiwyg">' +
__e( obj.body ) +
'</textarea>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Reply To: <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The email address that replies are to be sent to. Leaving this blank will send replies to the default email setup." data-original-title="Reply To" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="replyTo" />\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-send">Send</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>';

}
return __p
};

this["JST"]["common/email/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- email address (' +
__e( id ) +
') -->\n<div class="control-group">\n    <label class="control-label ';
 if (!obj.readOnly) { ;
__p += 'required';
 } ;
__p += '" for="emailAddress">Email </label>\n    ';
 if (!obj.readOnly) { ;
__p += '\n        <a href="javascript:void(0);" id="deleteEmail" class="pull-right"><i class="icon icon-minus-sign"></i>Delete</a>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter email address. Click on the \'-\' to delete this email address." data-original-title="Email Address">?</a>\n    ';
 } ;
__p += '\n    <div class="controls">\n    ';
 if (!obj.readOnly) { ;
__p += '\n        <input class="span12" id="emailAddress" name="emailAddress" type="text" value="' +
__e( obj.emailAddress ) +
'" />\n        <p class="help-block">Valid email address is required field</p>\n    ';
 } else { ;
__p += '\n        ' +
__e( obj.emailAddress || '' ) +
'\n    ';
 } ;
__p += '\n    </div>\n</div>\n\n<div class="row-fluid">\n    <!-- email address type -->\n    <div class="control-group span8">\n        <label class="control-label ';
 if (!obj.readOnly) { ;
__p += 'required';
 } ;
__p += '" for="email.type.id">Type </label>\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Select the type of email address." data-original-title="Type">?</a>\n        ';
 } ;
__p += '\n        <div class="controls">\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <select class="span12" name="type.id">\n                ' +
((__t = ( selectOptions(App.dict.emailType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field</p>\n        ';
 } else { ;
__p += '\n            ' +
__e( getStatusAttributeById(App.dict.emailType, obj["type.id"], "name") ) +
'\n        ';
 } ;
__p += '\n        </div>\n    </div>\n\n    <!-- primary email -->\n    <div class="control-group pull-right">\n        <label class="control-label" for="primaryEmail">Primary?</label>\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Indicate whether this number is the primary contact email address." data-original-title="Primary Email">?</a>\n        ';
 } ;
__p += '\n        <div class="controls">\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <input id="primaryEmail" name="primaryEmail" type="checkbox" ';
 if (obj.primaryEmail) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true" />\n        ';
 } else { ;
__p += '\n            ';
 if (obj.primaryEmail) { ;
__p += '\n                Yes\n            ';
 } else { ;
__p += '\n                No\n            ';
 } ;
__p += '\n        ';
 } ;
__p += '\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/employmentcriteria/delete"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span8">\n        Deleting this criteria will also delete all Employment Eligibilities, Assignment Criteria and Booking Criteria associated\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/employmentcriteria/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.mode === "edit") { ;
__p += '\n\n<div id="info" class="alert ' +
__e( obj['type'] ? (obj['type'].nameKey === "qualification" ? "alert-info" : "alert-success") : "alert-success" ) +
'">\n    <div class="row-fluid">\n        <div class="span9">\n            <h4 class="alert-heading">\n                <div class="row-fluid">\n                    <div class="control-group span3">\n                        <select name="type" class="input-block-level api-v2">\n                            ' +
((__t = ( selectOptions(App.dict.criteriaType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                    <div class="span3">\n                        <input type="text" id="name" name="name" class="input-block-level" value="' +
__e( obj.name ) +
'" placeholder="Criteria name"/>\n                    </div>\n                    <div class="span2">\n                        <span id="controls">\n                            <a id="save" href="javascript:void(0);" title="Save criteria"><i class="icon icon-ok"></i></a>\n                            <a id="undo" href="javascript:void(0);" title="Undo changes"><i class="icon icon-hand-left"></i></a>\n                            <!-- Commented out until the II-4131 (Delete throws error) is fixed permanently -->\n                            <!-- <a id="delete" href="javascript:void(0);" title="Delete criteria"><i class="secured secured-admin icon icon-remove"></i></a> -->\n                        </span>\n                    </div>\n                </div>\n            </h4>\n\n            <div class="row-fluid">\n                <div class="control-group span10">\n                    <input type="text" name="description" class="input-block-level" id="description" value="' +
__e( obj.description ) +
'" placeholder="Criteria description"/>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="control-group span4">\n                    <select name="enforcementPolicy" class="input-block-level api-v2" >\n                        ' +
((__t = ( selectOptions(App.dict.enforcementPolicy, {noSelection: {id: '', name: '[Choose a Policy]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n                <div class="control-group span6">\n                    <input type="text" id="durationOfValidity" class="input-block-level" name="durationOfValidity" placeholder="Duration of validity (days)" value="' +
__e( obj.durationOfValidity ) +
'">\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="control-group span3">\n                    <select name="active" class="input-block-level api-v2" >\n                        ' +
((__t = ( selectOptions(App.dict.yesNoType, {noSelection: {id: '', name: '[Active]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n                <div class="control-group span3">\n                    <input type="text" id="activeDate" name="activeDate" class="format-date input-block-level" value="' +
__e( obj.activeDate ) +
'" placeholder="Active since" autocomplete="off"/>\n                </div>\n                <div class="control-group span3">\n                    <input type="text" id="inactiveDate" class="format-date input-block-level" name="inactiveDate" value="' +
__e( obj.inactiveDate ) +
'" placeholder="Inactive since" autocomplete="off"/>\n                </div>\n\n            </div>\n\n            <!-- Only use in hierarchy -->\n            <section id="children-criteria" style="display: none">\n                <h4>Children Criteria</h4>\n                <div>\n                    <label class="control-label required" for="criteriaOperator">Operator </label>\n\n                    <div id="criteriaOperator" class="span12">\n                        <div class="span2"><input type="radio" class="criteriaOperator" name="criteriaOperator" value="OR"> OR</div>\n                        <div class="span2"><input type="radio" class="criteriaOperator" name="criteriaOperator" value="AND"> AND\n                        </div>\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div id="criteriaHierarchy" class="row-fluid">\n\n                    </div>\n                </div>\n                <a href="javascript:void(0);" id="addChild"><i class="icon icon-plus-sign"></i>Add child</a>\n            </section>\n            <!--End-->\n\n            <div class="row-fluid">\n                <input type="checkbox" id="notifyExpiration" name="notifyExpiration" value="' +
__e( true ) +
'" ';
 if (obj.notifyExpiration) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Notify Expiration"></input> Notify Expiration\n                <input type="checkbox" id="customerSpecific" name="customerSpecific" value="' +
__e( true ) +
'" ';
 if (obj.customerSpecific) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Customer specific name"></input> Customer Specific\n                <input type="checkbox" id="enableForBooking" name="enableForBooking" value="' +
__e( true ) +
'" ';
 if (obj.enableForBooking) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Enable for booking"></input> Enable for Booking\n                <input type="checkbox" id="editable" name="editable" value="' +
__e( true ) +
'" ';
 if (obj.editable) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Interpreter can edit"></input> Interpreter can Manage\n                <input type="checkbox" id="inactivateInterpreter" name="inactivateInterpreter" value="' +
__e( true ) +
'" ';
 if (obj.inactivateInterpreter) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Inactivate Interpreter"></input> Inactivate Interpreter\n                <input type="checkbox" id="presetCriteria" name="presetCriteria" value="' +
__e( true ) +
'" ';
 if (obj.presetCriteria) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Preset Criteria"></input> Preset Criteria\n                <input type="checkbox" id="excludeFromAssignment" name="excludeFromAssignment" value="' +
__e( true ) +
'" ';
 if (obj.excludeFromAssignment) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Exclude from Assignment"></input> Exclude from Assignment\n            </div>\n        </div>\n\n        <div class="span3">\n            <!-- ' +
__e( obj.id ) +
' -->\n            <div class="pull-right">\n                <dl class="dl-horizontal">\n                    <dt>Created By</dt><dd>' +
__e( obj.createdBy ) +
'</dd>\n                    <dt>Created</dt><dd><span class="format-datetime">' +
__e( obj.createdDate ) +
'</span></dd>\n                    <dt>Modified By</dt><dd>' +
__e( obj.lastModifiedBy ) +
'</dd>\n                    <dt>Modified</dt><dd><span class="format-datetime">' +
__e( obj.lastModifiedDate ) +
'</span></dd>\n                </dl>\n            </div>\n        </div>\n    </div>\n</div>\n\n';
 } else { // else read only ;
__p += '\n\n<div id="info" class="alert ' +
__e( obj['type'] ? (obj['type'].nameKey === "qualification" ? "alert-info" : "alert-success") : "alert-success" ) +
'">\n\n    <div class="row-fluid">\n        <div class="span7">\n            <h4 class="alert-heading">';
 if (obj['type'] && obj['type'].id == App.dict.criteriaType['qualification'].id) { ;
__p += '<i title="Qualification / Certification" class="icon icon-bookmark"></i>';
 } else { ;
__p += '<i title="Employment Criteria" class="icon icon-check"></i>';
 } ;
__p += ' ' +
__e( obj.name ) +
' <span id="controls"><a id="edit" href="javascript:void(0);" title="Edit criteria"><i class="icon icon-pencil"></i></a></span></h4>\n            <div>' +
__e( obj.description ) +
'</div>\n            <div><strong>Enforcement Policy</strong>: ' +
__e( obj['enforcementPolicy'] ? getStatusById(App.dict.enforcementPolicy, obj['enforcementPolicy'].id).name : "N/A" ) +
', <strong>Duration of Validity</strong>: ' +
__e( obj.durationOfValidity ) +
'</div>\n            <div><strong>Active</strong>: ' +
__e( obj['active'] ? getStatusById(App.dict.yesNoType, obj['active'].id).name : "N/A" ) +
', <strong>Active Since</strong>: <span class="format-date">' +
__e( obj.activeDate ) +
'</span>, <strong>Inactive Since</strong>: <span class="format-date">' +
__e( obj.inactiveDate ) +
'</span></div>\n            <div><strong>Notify Expiration</strong>: ' +
((__t = ( (obj.notifyExpiration ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
', <strong>Customer Specific</strong>: ' +
((__t = ( (obj.customerSpecific ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
', <strong>Enable as a Booking Requirement</strong>: ' +
((__t = ( (obj.enableForBooking ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
', <strong>Interpreter can Manage</strong>: ' +
((__t = ( (obj.editable ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
', <strong>Preset Criteria</strong>: ' +
((__t = ( (obj.presetCriteria ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
', <strong>Exclude from Assignment</strong>: ' +
((__t = ( (obj.excludeFromAssignment ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
'</div>\n        </div>\n\n        <div class="span3">\n            <!-- ' +
__e( obj.id ) +
' -->\n            <div class="pull-right">\n                <dl class="dl-horizontal">\n                    <dt>Created By</dt><dd>' +
__e( obj.createdBy ) +
'</dd>\n                    <dt>Created</dt><dd><span class="format-datetime">' +
__e( obj.createdDate ) +
'</span></dd>\n                    <dt>Modified By</dt><dd>' +
__e( obj.lastModifiedBy ) +
'</dd>\n                    <dt>Modified</dt><dd><span class="format-datetime">' +
__e( obj.lastModifiedDate ) +
'</span></dd>\n                </dl>\n            </div>\n        </div>\n    </div>\n</div>\n\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["common/error/action/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div id="error" class="' +
__e( className ) +
'">\n    <a class="close" data-dismiss="alert" href="#">×</a>\n    <h4 class="alert-heading">' +
((__t = ( header )) == null ? '' : __t) +
'</h4>\n    ' +
((__t = ( message )) == null ? '' : __t) +
'\n</div>\n';

}
return __p
};

this["JST"]["common/error/container/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="error" class="alert alert-error">\n    <a class="close" data-dismiss="alert" href="#">×</a>\n    <h4 class="alert-heading">' +
__e( header ? header : 'Error!' ) +
'</h4>\n    An error occurred processing your request. Please try again. If the problem persists, contact your administrator.\n    <div id="errors">\n        ' +
((__t = ( obj.message + " (Error: " + obj.code + ")" )) == null ? '' : __t) +
'\n        ';
 if (obj.actual && obj.actual != "") { ;
__p += ' <br/>' +
((__t = ( obj.actual )) == null ? '' : __t) +
' ';
 } ;
__p += '\n        <ul id="errors">\n            ';
 _.each(obj.errors, function(err) { if (err == null) { return; } ;
__p += '\n            <li>' +
((__t = ( err.message )) == null ? '' : __t) +
'</li>\n            ';
 }); ;
__p += '\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/error/popup/custom"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>' +
__e( header ? header : 'Error!' ) +
'</h3>\n</div>\n<div class="modal-body">\n    <p>\n        ' +
((__t = ( obj.message )) == null ? '' : __t) +
'\n    </p>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["common/error/popup/retry/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>' +
__e( header ? header : 'Conflict!' ) +
'</h3>\n</div>\n<div class="modal-body">\n    <div class="alert alert-block alert-info">\n        <h4 class="alert-heading">' +
((__t = ( obj.message + " (" + obj.code + ")" )) == null ? '' : __t) +
'</h4>\n        <div id="errors">\n            ';
 if (obj.actual && obj.actual != "") { ;
__p += ' ' +
((__t = ( obj.actual )) == null ? '' : __t) +
' ';
 } ;
__p += '\n            <ul id="errors">\n                ';
 _.each(obj.errors, function(err) { if (err == null) { return; } ;
__p += '\n                <li>' +
((__t = ( err.message )) == null ? '' : __t) +
'</li>\n                ';
 }); ;
__p += '\n            </ul>\n        </div>\n    </div>\n</div>\n\n<div class="modal-footer">\n    <button type="button" id="retry" class="btn btn-primary">' +
__e( retryButtonText ) +
'</button>\n    <button type="button" id="cancel" data-dismiss="modal" class="btn">Cancel</button>\n</div>\n';

}
return __p
};

this["JST"]["common/error/popup/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>' +
__e( header ? header : 'Error!' ) +
'</h3>\n</div>\n<div class="modal-body">\n    <p>\n        An error occurred processing your request. Please try again. If the problem persists, contact your administrator.\n    </p>\n    <div class="alert">\n\n        <div id="errors">\n            ';
 if (obj.actual && obj.actual != "") { ;
__p += ' ' +
((__t = ( obj.actual )) == null ? '' : __t) +
' ';
 } ;
__p += '\n            <ul id="errors">\n                ';
 _.each(obj.errors, function(err) { if (err == null) { return; } ;
__p += '\n                <li>' +
((__t = ( err.message )) == null ? '' : __t) +
'</li>\n                ';
 }); ;
__p += '\n            </ul>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["common/fileupload/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4>Add File</h4>\n<!--<br/>-->\n<!--<div class="span5">-->\n    <div id="errorContainer">\n    </div>\n    <div id="successContainer">\n    </div>\n    <form action="' +
__e(App.config.context) +
'/upload/file" method="post" name="fileUpload" enctype="multipart/form-data" id="fileUpload">\n        <fieldset>\n            <div class="row-fluid">\n                <div class="span12">\n\n                    <div class="control-group">\n                        <label class="control-label required" for="theFile">Select file to upload </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="File to upload." data-original-title="File">?</a>\n                        <div class="controls">\n                            <input type="file" class="input-xlarge" name="theFile" id="theFile" />\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n            <div class="row-fluid">\n\n                <div class="span12">\n\n                    <input type="hidden" id="company.id" name="company.id" value="' +
__e( App.config.company.id ) +
'"/>\n                    <input type="hidden" id="parentEntityType" name="parentEntityType" value="' +
__e( config.parentEntityType ) +
'"/>\n                    <input type="hidden" id="parentEntityClass" name="parentEntityClass" value="' +
__e( config.parentEntityClass ) +
'"/>\n                    <input type="hidden" id="parentEntityId" name="parentEntityId" value="' +
__e( config.parentEntityId ) +
'"/>\n                    ';
 if (config.showFileType) { ;
__p += '\n\n                    <div class="control-group">\n                        <label class="control-label required" for="type.id">File type </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Specify the type of file that is being uploaded." data-original-title="File Type">?</a>\n                        <div class="controls">\n                            <select name="type.id" id="type.id" class="input-medium">\n                                ' +
((__t = ( selectOptions(App.dict.documentType, {selected: config.documentType, noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    ';
 } else { ;
__p += '\n                        <input type="hidden" id="type.id" name="type.id" value="' +
__e( config.documentType ) +
'"/>\n                    ';
 } ;
__p += '\n                    <input type="hidden" id="isIE" name="isIE" value="false"/>\n\n                    <!--<label>Select file to upload</label>\n                    <div class="input-append customfile">\n                        <input type="file" class="input-xlarge" name="theFile" id="theFile" />\n                    </div>-->\n                </div>\n            </div>\n\n            <div class="progress progress-success active">\n                <div class="bar" style="width: 0%;"></div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span12">\n                    <br>\n                    <button class="btn btn-primary" type="submit" id="upload" value="upload" data-loading-text="Uploading File ...">Upload File</button>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n<!--</div>-->\n';

}
return __p
};

this["JST"]["common/incidental/inline"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- reference (' +
__e( obj.id ) +
') -->\n<div class="form-inline">\n\n    <div class="control-group">\n        <div class="controls">\n            <select name="type" id="type" class="api-v2 input-small">\n                ' +
((__t = ( selectOptions(obj.incidentalsAvailable, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n            </select>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <div class="controls">\n            <input id="description" name="description" class="input-medium" type="text" value="' +
__e( obj.description ) +
'" ' +
__e( obj.descriptionLocked ? "readonly" : "" ) +
'/>\n        </div>\n    </div>\n\n    ';
 if (obj.type && (obj.type.name === "Clock (Hours)" || obj.type.name === "Meal Break (Hours)")) { ;
__p += '\n\n        <div class="model-clockTimeIn control-group">\n            <label>\n                <span class="control-label"><span class="required">In Time </span></span>\n                <div class="controls">\n                    <input type="text" id="clockTimeInDate" name="clockTimeIn" data-timezone="' +
__e(obj.timeZone) +
'" class="input-mini format-date" value="' +
__e(obj.clockTimeIn || obj.expectedEndDate) +
'"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-clockTimeIn control-group">\n            <label>\n                <span class="control-label">&nbsp;</span>\n                <div class="controls">\n                    <input type="text" name="clockTimeIn" class="input-mini format-time" data-timezone="' +
__e(obj.timeZone) +
'" data-defaulttime="' +
__e(obj.clockTimeIn || obj.expectedEndDate) +
'" value="' +
__e(obj.clockTimeIn) +
'"/>\n                </div>\n            </label>\n        </div>\n\n        <div class="model-clockTimeOut control-group">\n            <label>\n                <span class="control-label"><span class="required">Out Time </span></span>\n                <div class="controls">\n                    <input type="text" id="clockTimeOutDate" name="clockTimeOut" class="input-mini format-date" data-timezone="' +
__e(obj.timeZone) +
'" value="' +
__e(obj.clockTimeOut || obj.expectedEndDate) +
'"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-clockTimeOut control-group">\n            <label>\n                <span class="control-label">&nbsp;</span>\n                <div class="controls">\n                    <input type="text" name="clockTimeOut" class="input-mini format-time" data-timezone="' +
__e(obj.timeZone) +
'" data-defaulttime="' +
__e(obj.clockTimeOut || obj.expectedEndDate) +
'" value="' +
__e(obj.clockTimeOut) +
'"/>\n                </div>\n            </label>\n        </div>\n\n    ';
 } else { ;
__p += '\n\n        <div class="control-group">\n            <div class="controls">\n                <input id="quantity" name="quantity" type="text" value="' +
__e( obj.quantity ) +
'" class="input-mini" rel="tooltip" data-placement="bottom" title="' +
__e( obj.unitDescription ? obj.unitDescription : "Amt./Qty." ) +
'"/>\n                <p class="help-block">Required field.</p>\n            </div>\n        </div>\n\n    ';
 } ;
__p += '\n\n    <div class="control-group">\n        <div class="controls">\n            ';
 if (obj.receipt && obj.receipt.id) { ;
__p += '\n            <a href="javascript:void(0);" id="viewReceipt" title="View Receipt" rel="tooltip"><i class="icon icon-file-alt"></i></a>\n            |\n            <a href="javascript:void(0);" id="deleteReceipt" title="Delete Receipt" rel="tooltip"><i class="icon icon-minus-sign"></i></a>\n            ';
 } ;
__p += '\n            <a href="javascript:void(0);" id="addReceipt" title="Add Receipt" rel="tooltip"><i class="icon icon-plus-sign"></i></a>\n            <!-- hide file selector. invoked programmatically -->\n            <input type="file" id="receiptObj" name="receiptObj" style="display: none;"/>\n        </div>\n    </div>\n\n    <a href="javascript:void(0);" id="deleteIncidental" title="Delete Incidental" rel="tooltip"><i class="icon-remove"></i></a>\n</div>\n';

}
return __p
};

this["JST"]["common/incidental/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="alert ' +
__e( obj.createdBy != obj.lastModifiedBy ? "alert-warning" : "alert-info" ) +
'">\n    <!-- reference (' +
__e( obj.id ) +
') -->\n    <div class="form-inline">\n\n        <div class="control-group">\n            <label class="control-label required" for="type">Type </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="<p>Incidental type." data-original-title="Type">?</a>\n            <div class="controls">\n                <select name="type" id="type" class="api-v2 input-medium">\n                    ' +
((__t = ( selectOptions(obj.incidentalsAvailable, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </div>\n\n        <div class="control-group">\n\n            <label class="control-label required" for="description">Description </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="<p>Enter a description for the incidental</p>" data-original-title="Description">?</a>\n            <div class="controls">\n                <input id="description" name="description" type="text" value="' +
__e( obj.description ) +
'" ' +
__e( obj.descriptionLocked ? "readonly" : "" ) +
'/>\n                <p class="help-block">Required field.</p>\n            </div>\n        </div>\n\n        ';
 if (obj.type && (obj.type.name === "Clock (Hours)" || obj.type.name === "Meal Break (Hours)")) { ;
__p += '\n\n            <div class="model-clockTimeIn control-group">\n                <label>\n                    <span class="control-label required">In Time </span>\n                    <div class="controls">\n                        <input type="text" name="clockTimeIn" class="input-mini format-date" data-timezone="' +
__e(obj.timeZone) +
'" value="' +
__e( obj.clockTimeIn ) +
'" autocomplete="off"/>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </label>\n            </div>\n            <div class="model-clockTimeIn control-group">\n                <label>\n                    <span class="control-label required">&nbsp;</span>\n                    <div class="controls">\n                        <input type="text" name="clockTimeIn" class="input-mini format-time" data-timezone="' +
__e(obj.timeZone) +
'" value="' +
__e( obj.clockTimeIn ) +
'" autocomplete="off"/>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </label>\n            </div>\n\n            <div class="model-clockTimeOut control-group">\n                <label>\n                    <span class="control-label required">Out Time </span>\n                    <div class="controls">\n                        <input type="text" name="clockTimeOut" class="input-mini format-date" data-timezone="' +
__e(obj.timeZone) +
'" value="' +
__e(obj.clockTimeOut) +
'" autocomplete="off"/>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </label>\n            </div>\n            <div class="model-clockTimeOut control-group">\n                <label>\n                    <span class="control-label required">&nbsp;</span>\n                    <div class="controls">\n                        <input type="text" name="clockTimeOut" class="input-mini format-time" data-timezone="' +
__e(obj.timeZone) +
'" value="' +
__e(obj.clockTimeOut) +
'" autocomplete="off"/>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </label>\n            </div>\n\n        ';
 } else { ;
__p += '\n\n            <div class="control-group">\n                <label id="quantityLabel" class="control-label required" for="quantity">' +
__e( obj.unitDescription ? obj.unitDescription : "Amt./Qty." ) +
'</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="<p>Quantity on the incidental. Numeric value. Enter the number of miles for mileage and monetary amount for all other incidentals." data-original-title="Quantity">?</a>\n                <div class="controls">\n                    <input id="quantity" name="quantity" type="text" value="' +
__e( obj.quantity ) +
'" class="input-mini"/>\n                    <p class="help-block">Required field.</p>\n                </div>\n            </div>\n\n        ';
 } ;
__p += '\n\n        <div class="control-group">\n            <label class="control-label" for="receipt">Receipt? </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-placement="bottom" data-content="<p>Attach a receipt or document along with this incidental or view existing." data-original-title="Receipt">?</a>\n            <div class="controls">\n                ';
 if (obj.id) { ;
__p += '\n                    ';
 if (obj.receipt && obj.receipt.id) { ;
__p += '\n                    <a href="javascript:void(0);" id="viewReceipt" title="View Receipt"><i class="icon icon-file-alt"></i></a>\n                    |\n                    <a href="javascript:void(0);" id="deleteReceipt" title="Delete Receipt"><i class="icon icon-minus-sign"></i></a>\n                    ';
 } ;
__p += '\n                    <a href="javascript:void(0);" id="addReceipt" title="Add Receipt"><i class="icon icon-plus-sign"></i></a>\n                ';
 } else { ;
__p += '\n                    N/A\n                ';
 } ;
__p += '\n            </div>\n        </div>\n\n        <span class="secured secured-comp">\n        <div class="control-group">\n            <label class="checkbox">\n                <input type="checkbox" name="isBillable" ' +
__e( obj.isBillable ? "checked" : "" ) +
'>Billable?\n            </label>\n            <div class="controls">\n\n                <label class="checkbox">\n                    <input type="checkbox" name="isBilled" ' +
__e( obj.isBilled ? "checked" : "" ) +
'>Is Billed?\n                </label>\n            </div>\n        </div>\n        </span>\n\n        <span class="secured secured-comp">\n        <div class="control-group">\n            <label class="checkbox">\n                <input type="checkbox" name="isPayable" ' +
__e( obj.isPayable ? "checked" : "" ) +
'>Payable?\n            </label>\n            <div class="controls">\n\n            <label class="checkbox">\n                <input type="checkbox" name="isPaid" ' +
__e( obj.isPaid ? "checked" : "" ) +
'>Is Paid?\n            </label>\n            </div>\n        </div>\n        </span>\n\n        <div class="control-group">\n            <a href="javascript:void(0);" id="saveIncidental"><i class="icon icon-save"></i> Save</a>\n            <a href="javascript:void(0);" id="deleteIncidental"><i class="icon icon-minus-sign"></i> Delete</a>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/incidentals/inline"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Incidentals (<span class="getMileage"><a id="getMileage" href="javascript:void(0);" title="Get Mileage"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-newwin"></span>Get Mileage</a>)</span></h4>\n<form>\n    <div class="incidentals">\n\n    </div>\n\n    <a href="javascript:void(0);" class="model-add"><i class="icon-plus-sign"></i> Add Incidental</a>\n    <span class="mileage-actions-container">\n        <a href="javascript:void(0);" class="cmd-add-mileage-to"><i class="icon-plus-sign"></i> Mileage To</a>\n        <a href="javascript:void(0);" class="cmd-add-mileage-from"><i class="icon-plus-sign"></i> Mileage From</a>\n    </span>\n</form>\n';

}
return __p
};

this["JST"]["common/incidentals/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Incidentals (<span class="getMileage"><a id="getMileage" href="javascript:void(0);" title="Get Mileage"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-newwin"></span>Get Mileage</a>)</span></h4>\n<form>\n    <div class="incidentals">\n\n    </div>\n\n    <a href="javascript:void(0);" class="btn btn-primary model-add" type="button" value="Add Incidental">Add Incidental</a>\n    <span class="mileage-actions-container">\n        <a href="javascript:void(0);" class="cmd-add-mileage-to"><i class="icon-plus-sign"></i> <strong>Mileage To</strong></a>\n        <a href="javascript:void(0);" class="cmd-add-mileage-from"><i class="icon-plus-sign"></i> <strong>Mileage From</strong></a>\n    </span>\n</form>\n';

}
return __p
};

this["JST"]["common/invoicetemplate/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Invoice</h4>\n<dl class="dl-horizontal">\n    <dt>Created</dt><dd>' +
__e( (createdBy ? createdBy : "n/a") + " (" + (createdDate ? createdDate : "n/a") + ")" ) +
'</dd>\n    <dl><dt>Last Modified</dt><dd>' +
__e( (lastModifiedBy ? lastModifiedBy : "n/a") + " (" + (lastModifiedDate ? lastModifiedDate : "n/a") + ")" ) +
'</dd>\n    </dl>\n    <form>\n        <fieldset>\n            <div class="control-group">\n                <div class="controls">\n                    <textarea id="invoice' +
((__t = ( id )) == null ? '' : __t) +
'" cols="4" rows="2" class="wysiwyg" style="height: 450px;" name="body" placeholder="Invoice">\n                        ' +
__e( body ) +
'\n                    </textarea>\n                </div>\n            </div>\n\n            <button class="btn btn-primary" type="button" id="saveTemplate" value="Save" data-loading-text="Saving ...">Save</button>\n            <button class="btn btn-success" type="button" id="previewTemplate" value="Preview">Preview</button>\n\n        </fieldset>\n    </form>\n</dl>\n';

}
return __p
};

this["JST"]["common/ivrcalldetails/recording"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span3">\n        ' +
__e( obj.context ) +
'\n    </div>\n    <div class="span3">\n        ' +
__e( obj.recordingStatus ) +
'\n    </div>\n    <div class="span3 recording">\n\n    </div>\n    <div class="span3">\n        ' +
__e( obj.asrText ) +
' (' +
__e( obj.asrTimeMilliseconds ) +
' / ' +
__e( obj.asrConfidence ) +
')\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/ivrcalldetails/recordings"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="recordings">\n\n</div>\n';

}
return __p
};

this["JST"]["common/ivrcalldetails/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Call Details</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n\n            <ul class="nav nav-tabs">\n                <li class="active"><a href="#call-steps" data-toggle="tab">Steps</a></li>\n                <li><a href="#call-recordings" data-toggle="tab">Recordings</a></li>\n            </ul> <!-- .nav-tabs -->\n\n            <div class="tab-content">\n                <div class="tab-pane active call-steps" id="call-steps">\n                    <div class="ivr-call-steps"></div>\n                    <div class="ivr-call-steps-paginator"></div>\n                </div> <!-- .call-steps -->\n\n                <div class="tab-pane call-recordings" id="call-recordings">\n                    <div class="recordings"></div>\n                </div> <!-- .call-steps -->\n            </div>\n\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn" data-dismiss="modal">Ok</a>\n</div>\n';

}
return __p
};

this["JST"]["common/ivrrecording/recording"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<span class="ivr-container">\n    <span class="audio"><a class="play" href="javascript:void(0);"><i class="icon-play-circle"></i></a></span>\n    ';
 if (obj.asrText) { ;
__p += ' <span class="text" title="' +
__e( obj.asrText ) +
'"><i class="icon-pencil"></i></span>';
 } ;
__p += '\n</span>\n';

}
return __p
};

this["JST"]["common/jobbulkcanceloptions/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Cancel Recurring Job</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <p>Would you like to <b>cancel</b> only this job, all jobs in the series, or this and all jobs following in the series?</p>\n            <p>There are <b>' +
__e( job.numJobs ) +
'</b> jobs in total in the recurring series.</p>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <a href="javascript:void(0);" class="btn widget-ok input-block-level" data-action="self">Only this job</a>\n            <br/>\n        </div>\n        <div class="span9">\n            All other jobs in the series will remain.\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <a href="javascript:void(0);" class="btn widget-ok input-block-level" data-action="allFollowing">Following jobs</a>\n            <br/>\n        </div>\n        <div class="span9">\n            This and all the following jobs will be cancelled.\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <a href="javascript:void(0);" class="btn widget-ok input-block-level" data-action="all">All jobs</a>\n            <br/>\n        </div>\n        <div class="span9">\n            All jobs in the series will be cancelled.\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel this change</a>\n</div>\n\n';

}
return __p
};

this["JST"]["common/jobbulkdeleteoptions/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Delete Recurring Job</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <p>Would you like to <b>delete</b> only this job, all jobs in the series, or this and all jobs following in the series?</p>\n            <p>There are <b>' +
__e( job.numJobs ) +
'</b> jobs in total in the recurring series.</p>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <a href="javascript:void(0);" class="btn widget-ok input-block-level" data-action="self">Only this job</a>\n            <br/>\n        </div>\n        <div class="span9">\n            All other jobs in the series will remain.\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <a href="javascript:void(0);" class="btn widget-ok input-block-level" data-action="allFollowing">Following jobs</a>\n            <br/>\n        </div>\n        <div class="span9">\n            This and all the following jobs will be deleted.\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <a href="javascript:void(0);" class="btn widget-ok input-block-level" data-action="all">All jobs</a>\n            <br/>\n        </div>\n        <div class="span9">\n            All jobs in the series will be deleted.\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel this change</a>\n</div>\n\n';

}
return __p
};

this["JST"]["common/jobbulkeditoptions/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Update Recurring Job</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <p>Would you like to <b>change</b> only this job, all jobs in the series, or this and all jobs following in the series?</p>\n            <p>Note: Only jobs that are <b>not verified</b> will get updated</p>\n            <p>There are <b>' +
__e( job.numJobs ) +
'</b> jobs in total in the recurring series.</p>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <a href="javascript:void(0);" class="btn widget-ok input-block-level" data-action="self">Only this job</a>\n            <br/>\n        </div>\n        <div class="span9">\n            All other jobs in the series will remain the same.\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <a href="javascript:void(0);" class="btn widget-ok input-block-level" data-action="allFollowing">Following jobs</a>\n            <br/>\n        </div>\n        <div class="span9">\n            This and all the following jobs will be changed. Any changes to future jobs will be lost.\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <a href="javascript:void(0);" class="btn widget-ok input-block-level" data-action="all">All jobs</a>\n            <br/>\n        </div>\n        <div class="span9">\n            All jobs in the series will be changed. Any changes to other jobs will be lost.\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel this change</a>\n</div>\n\n';

}
return __p
};

this["JST"]["common/joboffers/modal"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Job Offers for Job #' +
__e( obj.id? obj.id : "" ) +
'</h3>\n</div>\n<div class="modal-body">\n    <div class="jobOffers-container">\n        <!-- will display jobOffers-list -->\n    </div>\n\n    <div class="jobOffers-paginator">\n\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>';

}
return __p
};

this["JST"]["common/joboffers/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="jobOffers-list"></div>\n';

}
return __p
};

this["JST"]["common/notificationempty/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>No Notifications</h4>\n';

}
return __p
};

this["JST"]["common/notificationitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<article class="notification">\n    <h1><span class="notification-subject">' +
__e(obj.subject) +
'</span><span class="notification-date"></span></h1>\n    <dl class="notification-details">\n        <dt>Notification Date</dt>\n        <dd class="format-datetime">' +
__e(obj.createdDate) +
'</dd>\n        <dt>Recipient</dt>\n        <dd>' +
__e(obj.recipient) +
'</dd>\n        <dt>CC</dt>\n        <dd>' +
__e(obj.cc) +
'</dd>\n        <dt>BCC</dt>\n        <dd>' +
__e(obj.bcc) +
'</dd>\n        <dd></dd>\n        <dt>Status</dt>\n        <dd>' +
__e(obj.statusMessage) +
'</dd>\n        <dd>' +
__e(obj.providerStatusMessage? obj.providerStatusMessage : "") +
'</dd>\n    </dl>\n    <div class="notification-body">\n        ' +
((__t = (obj.body)) == null ? '' : __t) +
'\n    </div>\n</article>\n<hr/>\n';

}
return __p
};

this["JST"]["common/notificationlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="list-container">\n</div>\n\n<div class="pagination-container">\n</div>\n';

}
return __p
};

this["JST"]["common/number/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- phone number (' +
__e( id ) +
') -->\n<div class="control-group">\n    <label class="control-label ';
 if (!obj.readOnly) { ;
__p += 'required';
 } ;
__p += '" for="number-parsedNumber">Number </label>\n    ';
 if (!obj.readOnly) { ;
__p += '\n        <a href="javascript:void(0);" id="deleteNumber" class="pull-right"><i class="icon icon-minus-sign"></i>Delete</a>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter phone number including area code. Click on the \'-\' to delete this number." data-original-title="Phone Number">?</a>\n    ';
 } ;
__p += '\n    <div class="controls">\n    ';
 if (!obj.readOnly) { ;
__p += '\n        <input id="number-parsedNumber" name="parsedNumber" class="parsedNumber span12" type="text" value="' +
__e( obj.parsedNumber ) +
'" />\n        <p class="help-block">Required field</p>\n    ';
 } else { ;
__p += '\n        ' +
__e( obj.number && obj.parsedNumber || '' ) +
'\n    ';
 } ;
__p += '\n    </div>\n</div>\n\n<div class="row-fluid">\n    <!-- phone number type -->\n    <div class="control-group span8">\n        <label class="control-label ';
 if (!obj.readOnly) { ;
__p += 'required';
 } ;
__p += '" for="number-type-id">Type </label>\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the type of number." data-original-title="Type">?</a>\n        ';
 } ;
__p += '\n        <div class="controls">\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <select id="number-type-id" class="span12" name="type.id">\n                ' +
((__t = ( selectOptions(App.dict.numberType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field</p>\n        ';
 } else { ;
__p += '\n            ' +
__e( getStatusAttributeById(App.dict.numberType, obj["type.id"], "name") ) +
'\n        ';
 } ;
__p += '\n        </div>\n    </div>\n\n    <!-- primary contact -->\n    <div class="control-group pull-right">\n        <label class="control-label" for="number-primaryNumber">Primary?</label>\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Indicate whether this number is the primary contact number." data-original-title="Primary Number">?</a>\n        ';
 } ;
__p += '\n        <div class="controls">\n        ';
 if (!obj.readOnly) { ;
__p += '\n            <input id="number-primaryNumber" name="primaryNumber" type="checkbox" ';
 if (obj.primaryNumber) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true" />\n        ';
 } else { ;
__p += '\n            ';
 if (obj.primaryNumber) { ;
__p += '\n                Yes\n            ';
 } else { ;
__p += '\n                No\n            ';
 } ;
__p += '\n        ';
 } ;
__p += '\n        </div>\n    </div>\n</div> <!-- / number type row -->\n';

}
return __p
};

this["JST"]["common/oauth2/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<hr/>\n<b>QuickBooks Online Integration Login</b>\n\n<br/>\n<b> Receivables </b>\n\n';
 if (receivableLoggedIn) { ;
__p += '\n<br/>\n    Expire Date: ' +
__e( receivableOauthExpireDate ) +
'\n<br/>\n<a href="' +
__e( App.config.context ) +
'/api/oauth2/revokeToken?providerKey=qborecv" >Disconnect</a>\n\n\n';
 } else { ;
__p += '\n<div class="btn-group">\n    <button class="btn btn-sm model-add click clickReceivableLogin" type="button" value="OAuth2 Rec Login"> <img height="50%" width="50%" src="' +
__e(App.config.context) +
'/images/C2QB_green_btn_med_default.png"/></button>\n</div>\n';
 } ;
__p += '\n\n<br/>\n<br/>\n<b> Payables </b>\n\n';
 if (payableLoggedIn) { ;
__p += '\n<br/>\n        Expire Date: ' +
__e( payableOauthExpireDate ) +
'\n<br/>\n<a href="' +
__e( App.config.context ) +
'/api/oauth2/revokeToken?providerKey=qbopay" >Disconnect</a>\n\n';
 } else { ;
__p += '\n<div class="btn-group">\n    <button class="btn  btn-sm model-add click clickPayableLogin" type="button" value="OAuth2 Pay Login"><img height="50%" width="50%" src="' +
__e(App.config.context) +
'/images/C2QB_green_btn_med_default.png"/> </button>\n</div>\n';
 } ;
__p += '\n\n\n\n\n';

}
return __p
};

this["JST"]["common/offeredjobviewtemplate/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Offered Job View</h4>\n<dl class="dl-horizontal">\n    <dt>Created</dt><dd>' +
__e( (createdBy ? createdBy : "n/a") + " (" + (createdDate ? createdDate : "n/a") + ")" ) +
'</dd>\n    <dl><dt>Last Modified</dt><dd>' +
__e( (lastModifiedBy ? lastModifiedBy : "n/a") + " (" + (lastModifiedDate ? lastModifiedDate : "n/a") + ")" ) +
'</dd>\n    </dl>\n    <form>\n        <fieldset>\n            <div class="control-group">\n                <div class="controls">\n                    <textarea id="offeredJobView' +
((__t = ( id )) == null ? '' : __t) +
'" cols="4" rows="2" class="wysiwyg" style="height: 450px;" name="body" placeholder="Offered Job View">\n                        ' +
__e( body ) +
'\n                    </textarea>\n                </div>\n            </div>\n\n            <button class="btn btn-primary" type="button" id="saveTemplate" value="Save" data-loading-text="Saving ...">Save</button>\n            <button class="btn btn-success" type="button" id="previewTemplate" value="Preview">Preview</button>\n\n        </fieldset>\n    </form>\n</dl>\n';

}
return __p
};

this["JST"]["common/payableitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<td>\n    <div><strong>Type</strong>: ' +
__e( obj.type ? obj.type.name : "N/A" ) +
'</div>\n    <div>' +
((__t = ( obj.description )) == null ? '' : __t) +
'</div>\n</td>\n<td>\n    ' +
__e( obj.quantity ) +
'\n</td>\n<td>\n    ' +
__e( formatMoney(obj.unitCost) ) +
'\n</td>\n<td>\n    ' +
__e( formatMoney(obj.totalCost) ) +
'\n</td>\n<td>\n    ' +
__e( obj.invoice ? obj.invoice.statusLabel : (obj.payment ? obj.payment.statusLabel : "N/A") ) +
'\n</td>\n';

}
return __p
};

this["JST"]["common/payableitems/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<table id="payableItems" class="table">\n    <thead>\n    <tr>\n        <th>Description</th>\n        <th>Quantity</th>\n        <th>Unit Price</th>\n        <th>Line Total</th>\n        <th>Status</th>\n    </tr>\n    </thead>\n\n    <tbody>\n\n    </tbody>\n\n</table>\n';

}
return __p
};

this["JST"]["common/paymenttemplate/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Payment</h4>\n<dl class="dl-horizontal">\n    <dt>Created</dt><dd>' +
__e( (createdBy ? createdBy : "n/a") + " (" + (createdDate ? createdDate : "n/a") + ")" ) +
'</dd>\n    <dl><dt>Last Modified</dt><dd>' +
__e( (lastModifiedBy ? lastModifiedBy : "n/a") + " (" + (lastModifiedDate ? lastModifiedDate : "n/a") + ")" ) +
'</dd>\n    </dl>\n    <form>\n        <fieldset>\n            <div class="control-group">\n                <div class="controls">\n                    <textarea id="payment' +
((__t = ( id )) == null ? '' : __t) +
'" cols="4" rows="2" class="wysiwyg" style="height: 450px;" name="body" placeholder="Payment">' +
__e( body ) +
'\n                    </textarea>\n                </div>\n            </div>\n\n            <button class="btn btn-primary" type="button" id="saveTemplate" value="Save" data-loading-text="Saving ...">Save</button>\n            <button class="btn btn-success" type="button" id="previewTemplate" value="Preview">Preview</button>\n\n        </fieldset>\n    </form>\n</dl>\n';

}
return __p
};

this["JST"]["common/querycomponent/booleanClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span5">\n    <select class="input-block-level" name="data">\n        ' +
((__t = ( selectOptions(App.dict.querycomponent.booleanOptions, { selected: (obj), noSelection: {id: '', name: '[Select value]'} }) )) == null ? '' : __t) +
'\n    </select>\n</div>';

}
return __p
};

this["JST"]["common/querycomponent/clause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="span3">\n        <div class="controls">\n            <select name="field" class="input-block-level fields">\n                ' +
((__t = ( selectOptions(opts, { selected: (obj.field), noSelection: {name: '[Select field]'} }) )) == null ? '' : __t) +
'\n            </select>\n        </div>\n    </div>\n\n    <div class="span8 clause-container"></div>\n\n    <div class="span1">\n        <div class="btn-group" data-toggle="buttons-checkbox">\n            <a href="javascript:void(0);" type="button" class="remove">\n                <i class="icon-remove"></i>\n            </a>\n        </div>\n    </div>\n\n</div>';

}
return __p
};

this["JST"]["common/querycomponent/dateClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="selectContainer span5">\n    <select class="input-block-level" name="op">\n        ' +
((__t = ( selectOptions(App.dict.querycomponent.dateOptions, { selected: (obj), noSelection: {id: '', name: '[Select operation]'} }) )) == null ? '' : __t) +
'\n    </select>\n</div>\n\n<div class="rangeStart span7">\n    <input class="dp text-center input-block-level" type=\'text\' name="data" value="' +
__e( obj.data ) +
'"/>\n</div>\n\n<div class="rangeEnd hidden">\n    <input class="dp text-center input-block-level" type=\'text\' name="rangeEnd" value="' +
__e( obj.rangeEnd ) +
'"/>\n</div>';

}
return __p
};

this["JST"]["common/querycomponent/dateTimeClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="selectContainer span5">\n    <label>\n        <select class="input-block-level" name="op">\n            ' +
((__t = ( selectOptions(App.dict.querycomponent.dateOptions, { selected: (obj), noSelection: {id: '', name: '[Select operation]'} }) )) == null ? '' : __t) +
'\n        </select>\n    </label>\n</div>\n\n<div class="rangeStart span7">\n    <div class="span6">\n        <input class="dp input-block-level text-center" type=\'text\' placeholder="date" name="date" value="' +
__e( obj.date ) +
'" autocomplete="off"/>\n    </div>\n    <div class="span6">\n        <input class="time-format input-block-level text-center" type=\'text\' placeholder="time" name="time" value="' +
__e( obj.time ) +
'" autocomplete="off"/>\n    </div>\n</div>\n\n<div class="rangeEnd hidden">\n    <div class="span6">\n        <input class="dp input-block-level text-center" type=\'text\' placeholder="date" name="rangeEnd" value="' +
__e( obj.rangeEnd ) +
'" autocomplete="off"/>\n    </div>\n    <div class="span6">\n        <input class="time-format input-block-level text-center" type=\'text\' placeholder="time" name="rangeEndTime" value="' +
__e( obj.rangeEndTime ) +
'" autocomplete="off"/>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/querycomponent/employmentEligibilityClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="extraClauses">\n    <div class="row-fluid">\n        <div class="span6">\n            <div class="control-group">\n                <label class="control-label" for="inputCriteria">Criteria</label>\n                <div class="controls">\n                    <input type="text" name="criteriaId" class="criteriaId autocomplete input-block-level" value="" />\n                </div>\n            </div>\n        </div>\n        <div class="span6">\n            <div class="control-group">\n                <label class="control-label" for="inputLanguage">Language</label>\n                <div class="controls">\n                    <input type="text" name="languageId" class="languageId autocomplete input-block-level" value="" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span4">\n            <div class="control-group">\n                <label class="control-label" for="selectState">State</label>\n                <div class="controls">\n                    <select name="state" class="state input-block-level">\n                        ' +
((__t = ( selectOptions(App.dict.employmentEligibilityStates, {display:'name'}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n            </div>\n        </div>\n        <div class="span4">\n            <div class="control-group">\n                <label class="control-label" for="inputStateDateSince">State date since</label>\n                <input type="text" name="stateDateSince" class="dp stateDateSince input-block-level" value="" />\n             </div>\n        </div>\n        <div class="span4">\n            <div class="control-group">\n                <label class="control-label" for="inputStateDateUntil">State date until</label>\n                <input type="text" name="stateDateUntil" class="dp stateDateUntil input-block-level" value="" />\n            </div>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["common/querycomponent/group"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    <li class="qc-group">\n        <div class="row-fluid">\n            <div class="span2">\n                <select name="groupOp" class="input-block-level">\n                    ' +
((__t = ( selectOptions(App.dict.querycomponent.groupOp, { selected: (obj), noSelection: {id: '', name: '[Select operation]'} }) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n            <div class="span10">\n                <div class="pull-right">\n                    <a href="javascript:void(0);" type="button" class="remove">\n                        <i class="icon-remove"></i>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n        <div class="qc-clauses"></div>\n\n        <div class="row-fluid actions-row">\n            <div class="span12">\n                <div class="pull-right">\n                    <div class="actions">\n                        <a class="addRule" href="javascript:void(0);">Add condition</a>\n                        <a class="addGroup" href="javascript:void(0);">Add group</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </li>\n</div>\n';

}
return __p
};

this["JST"]["common/querycomponent/main"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="querycomponent">\n\n    <div class="modal-header">\n        <button type="button" class="close close-modal" data-dismiss="modal" aria-hidden="true">×</button>\n        <h3>Query builder</h3>\n    </div>\n\n    <div class="modal-body">\n        <ul class="nav nav-tabs">\n            <li class="active"><a href="#searchTab" data-toggle="tab">Search</a></li>\n            <li><a href="#savedSearchsTab" data-toggle="tab">Saved searches</a></li>\n        </ul>\n\n        <div class="tab-content">\n            <div class="tab-pane active" id="searchTab">\n                <div class="row-fluid">\n                    <form>\n                        <div class="row-fluid">\n                            <div class="span9">\n                                <input name="name" type="text" class="input-block-level search-name" placeholder="search name" value="' +
__e( obj.name ) +
'"/>\n                            </div>\n                            <div class="span3">\n                                <div class="btn-group pull-right">\n                                    <button type="button" class="save-button btn btn-success" disabled><i class="icon-white icon-ok"></i> Save</button>\n                                    <button type="button" class="clear-search btn btn-warning"><i class="icon-white icon-remove"></i> Clear</button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class="qc-clauses"></div>\n                    </form>\n                </div>\n            </div>\n\n            <div class="tab-pane" id="savedSearchsTab">\n                <div id="saved-searchs"></div>\n            </div>\n        </div>\n    </div>\n\n    <div class="modal-footer">\n        <button class="btn btn-default close-modal" data-dismiss="modal" aria-hidden="true">Close</button>\n        <button class="search btn btn-primary"><i class="icon-white icon-search"></i> Search</button>\n    </div>\n\n</div>';

}
return __p
};

this["JST"]["common/querycomponent/notSupportedClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span7">\n    <span><i class="icon-info-sign"></i> Not supported</span>\n</div>';

}
return __p
};

this["JST"]["common/querycomponent/numberClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="selectContainer span5">\n    <select class="input-block-level" name="op">\n        ' +
((__t = ( selectOptions(App.dict.querycomponent.numberOptions, { selected: (obj), noSelection: {id: '', name: '[Select operation]'} }) )) == null ? '' : __t) +
'\n    </select>\n</div>\n<div class="rangeStart span7">\n    <input class="input-block-level text-center" type="' +
__e( obj.type ) +
'" name="data" value="' +
__e( obj.data ) +
'"/>\n</div>\n<div class="rangeEnd hidden">\n    <input class="input-block-level text-center" type="' +
__e( obj.type ) +
'" name="rangeEnd" value="' +
__e( obj.rangeEnd ) +
'"/>\n</div>';

}
return __p
};

this["JST"]["common/querycomponent/optionClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span12">\n    <select class="input-block-level options" name="data">\n        ' +
((__t = ( selectOptions(opts, { selected: (obj), noSelection: {id: '', name: '[Select option]'} }) )) == null ? '' : __t) +
'\n    </select>\n</div>';

}
return __p
};

this["JST"]["common/querycomponent/queryFiltersApplied"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span12">\n        <strong>Query Applied:</strong>\n        <span id="queryFiltersApplied"></span>\n    </div>\n</div>';

}
return __p
};

this["JST"]["common/querycomponent/savedSearch"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid saved-search-row">\n    <div class="span11">\n        <a class="saved-search" href="javascript:void(0);" title=\'' +
__e( title ) +
'\'>' +
__e( obj.name ) +
'</a>\n    </div>\n    <div class="span1">\n        <a href="javascript:void(0);" type="button" class="remove" title="Delete search">\n            <i class="icon-remove"></i>\n        </a>\n    </div>\n</div>';

}
return __p
};

this["JST"]["common/querycomponent/savedSearchs"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="list saved-searchs-container"></div>\n<div class="pagination pagination-centered">\n    <ul>\n        <li class="previous"><a href="javascript:void(0);">Prev</a></li>\n        <li class="next"><a href="javascript:void(0);">Next</a></li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["common/querycomponent/textClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span12 row-fluid">\n    <div class="span5">\n        <select class="input-block-level" name="op">\n            ' +
((__t = ( selectOptions(App.dict.querycomponent.textOptions, { selected: (obj), noSelection: {id: '', name: '[Select operation]'} }) )) == null ? '' : __t) +
'\n        </select>\n    </div>\n    <div class="span7">\n        <input name="data" class="input-block-level" type=\'text\'/>\n    </div>\n</div>';

}
return __p
};

this["JST"]["common/rateplanassociation/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid" style="margin-left: 5px">\n    <div class="span4">\n        <div class="control-group">\n            <label class="control-label"><b>Active Start Date</b></label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Date from which the rate plan is active?" data-original-title="Active Start Date">?</span></a>\n            <div class="controls">\n                <input id="activeStartDate" class="span12 date" class="date input-block-level" name="activeStartDate" type="text" value="' +
__e( obj.activeStartDate ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span4">\n        <div class="control-group">\n            <label class="control-label"><b>Active End Date</b></label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Date until which the rate plan is active?" data-original-title="Active End Date">?</span></a>\n            <div class="controls">\n                <input id="activeEndDate" class="span12 date" class="date input-block-level" name="activeEndDate" type="text" value="' +
__e( obj.activeEndDate ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <div class="controls" style="margin-top:18px;">\n            <button class="btn btn-success" type="submit" id="save" value="save">Save</button>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["common/rateplancontainer/item"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="active-rateplan">\n    <div class="rateplan">\n\n    </div>\n    <hr />\n</div>';

}
return __p
};

this["JST"]["common/rateplancontainer/list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Active Rate Plans</h4>\n<div class="active-rateplans">\n\n</div>';

}
return __p
};

this["JST"]["common/rateplansummary/languagetier"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<dl class="dl-horizontal">\n    <dt>Base Tier</dt><dd>';
 if (obj.baseTier) { ;
__p += 'Yes';
 } else { ;
__p += ' No ';
 } ;
__p += '</dd>\n    <dt>Name</dt><dd>' +
__e( obj.name ? obj.name : "Base Tier" ) +
'</dd>\n    <dt>Split Min. Dur.</dt><dd>';
 if (obj.splitMinimumDuration) { ;
__p += ' Yes ';
 } else { ;
__p += ' No ';
 } ;
__p += '</dd>\n    <div class="service-tiers">\n\n    </div>\n    <!--\n    <dt>In Person</dt><dd>Std: ' +
__e( obj.inPersonStandard ) +
', Min: ' +
__e( obj.minHoursInPersonStandard ) +
', Pre ' +
__e( obj.inPersonPremium ) +
', Min: ' +
__e( obj.minHoursInPersonPremium ) +
', Plat: ' +
__e( obj.inPersonPlatinum ) +
', Min: ' +
__e( obj.minHoursInPersonPlatinum ) +
'</dd>\n    <dt>Phone</dt><dd>Std: ' +
__e( obj.phoneStandard ) +
', Min: ' +
__e( obj.minHoursPhoneStandard ) +
', Pre ' +
__e( obj.phonePremium ) +
', Min: ' +
__e( obj.minHoursPhonePremium ) +
', Plat: ' +
__e( obj.phonePlatinum ) +
', Min: ' +
__e( obj.minHoursPhonePlatinum ) +
'</dd>\n    <dt>Video</dt><dd>Std: ' +
__e( obj.videoStandard ) +
', Min: ' +
__e( obj.minHoursVideoStandard ) +
', Pre ' +
__e( obj.videoPremium ) +
', Min: ' +
__e( obj.minHoursVideoPremium ) +
', Plat: ' +
__e( obj.videoPlatinum ) +
', Min: ' +
__e( obj.minHoursVideoPlatinum ) +
'</dd>\n    -->\n    <dt>Rush Fees</dt><dd>&nbsp;\n    <ol>\n        ';
 _.each(obj.cancelFees, function(fee) { ;
__p += '\n        <li>' +
__e( fee.description ) +
';\n            ' +
__e( fee.applyToStandardRate ? "Use Std. Rt." : "Use Appl. Rt." ) +
';\n            ' +
__e( fee.applyToInPerson ? "&#x2713;" : "&#x2718" ) +
' In Person,\n            ' +
__e( fee.applyToPhone ? "&#x2713;" : "&#x2718" ) +
' Phone,\n            ' +
__e( fee.applyToVideo ? "&#x2713;" : "&#x2718" ) +
' Video\n        </li>\n        ';
 }); ;
__p += '\n    </ol>\n        &nbsp;\n    </dd>\n    <dt>Premium Tiers</dt><dd>\n        <span class="premium-tiers">\n\n        </span>\n    </dd>\n</dl>\n';

}
return __p
};

this["JST"]["common/rateplansummary/premiumtier"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<ol>\n    <li>\n        <strong>Name</strong>: ' +
__e( obj['criteria.name'] ) +
'\n        <dl>\n            <dt>Split Min. Dur.</dt><dd>';
 if (obj.splitMinimumDuration) { ;
__p += ' Yes ';
 } else { ;
__p += ' No ';
 } ;
__p += '</dd>\n            <div class="service-tiers">\n\n            </div>\n            <dt>In Person</dt><dd>Std: ' +
__e( obj.inPersonStandard ) +
', Min: ' +
__e( obj.minHoursInPersonStandard ) +
', Pre ' +
__e( obj.inPersonPremium ) +
', Min: ' +
__e( obj.minHoursInPersonPremium ) +
', Plat: ' +
__e( obj.phonePlatinum ) +
', Min: ' +
__e( obj.minHoursPhonePlatinum ) +
'</dd>\n            <dt>Phone</dt><dd>Std: ' +
__e( obj.phoneStandard ) +
', Min: ' +
__e( obj.minHoursPhoneStandard ) +
', Pre ' +
__e( obj.phonePremium ) +
', Min: ' +
__e( obj.minHoursPhonePremium ) +
', Plat: ' +
__e( obj.phonePlatinum ) +
', Min: ' +
__e( obj.minHoursPhonePlatinum ) +
'</dd>\n            <dt>Video</dt><dd>Std: ' +
__e( obj.videoStandard ) +
', Min: ' +
__e( obj.minHoursVideoStandard ) +
', Pre ' +
__e( obj.videoPremium ) +
', Min: ' +
__e( obj.minHoursVideoPremium ) +
', Plat: ' +
__e( obj.videoPlatinum ) +
', Min: ' +
__e( obj.minHoursVideoPlatinum ) +
'</dd>\n        </dl>\n    </li>\n</ol>\n&nbsp;';

}
return __p
};

this["JST"]["common/rateplansummary/servicetier"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<dt>' +
__e( obj["service.name"] ) +
'</dt><dd>Std: ' +
__e( obj.standard ) +
', Min: ' +
__e( obj.minHoursStandard ) +
', Pre ' +
__e( obj.premium ) +
', Min: ' +
__e( obj.minHoursPremium ) +
', Plat: ' +
__e( obj.platinum ) +
', Min: ' +
__e( obj.minHoursPlatinum ) +
'</dd>';

}
return __p
};

this["JST"]["common/rateplansummary/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div>\n    <ul>\n        <li><strong>Name</strong> ' +
__e( obj.name ) +
'</li>\n        <li><strong>Description</strong> ' +
__e( obj.description ) +
'</li>\n        <li><strong>Active Start Date: </strong> ';
 if (activeStartDate) { ;
__p += ' ' +
__e( activeStartDate ) +
' ';
 } else { ;
__p += ' N/A ';
 } ;
__p += '</li>\n        <li><strong>Active End Date: </strong> ';
 if (activeEndDate) { ;
__p += ' ' +
__e( activeEndDate ) +
' ';
 } else { ;
__p += ' N/A ';
 } ;
__p += '</li>\n        ';
 if (obj.override) { ;
__p += '\n        <li><strong>Override?</strong> Yes; Rate: ' +
__e( obj.rateOverride ? obj.rateOverride : "N/A" ) +
'; Duration: ' +
__e( obj.durationOverrideHrs ? obj.durationOverrideHrs : "N/A" ) +
'</li>\n        <li><strong>Message:</strong> ' +
__e( obj.message ? obj.message : "N/A" ) +
'</li>\n        ';
 } ;
__p += '\n        <li><strong>Type</strong> ' +
__e( getStatusAttributeById(App.dict.ratePlanType, obj['type.id'], "name") ) +
'</li>\n        <li><strong>Default Rate Plan?</strong> ';
 if (obj.defaultRatePlan) { ;
__p += ' Yes ';
 } else { ;
__p += ' No ';
 } ;
__p += '</li>\n        <li><strong>Override Rate Plan?</strong> ';
 if (obj.override) { ;
__p += ' Yes ';
 } else { ;
__p += ' No ';
 } ;
__p += '</li>\n        <li><strong>Split Charges?</strong> ';
 if (obj.splitCharges) { ;
__p += ' Yes ';
 } else { ;
__p += ' No ';
 } ;
__p += ', <strong>Enable Cliffs?</strong> ';
 if (obj.enableCliffs) { ;
__p += ' Yes ';
 } else { ;
__p += ' No ';
 } ;
__p += '</li>\n        <li><strong>Mileage</strong> ' +
__e( obj.mileage ) +
', Threshold: ' +
__e( obj.mileageThreshold ) +
', Pay In Full ' +
((__t = ( (obj.payMileageInFull ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
', Min: ' +
__e( obj.minMileage ) +
', Max: ' +
__e( obj.maxMileage ) +
'</li>\n        <li><strong>Billing Increments</strong> In Person: ' +
__e( obj.unitIncInPerson ) +
', Phone: ' +
__e( obj.unitIncPhone ) +
', Video: ' +
__e( obj.unitIncVideo ) +
'</li>\n        <li>\n            <strong>Cancellation Fees</strong>&nbsp;\n            <ol>\n                ';
 _.each(obj.cancelFees, function(fee) { ;
__p += '\n                <li>' +
((__t = ( fee.description )) == null ? '' : __t) +
';\n                    ' +
((__t = ( fee.applyToStandardRate ? "Use Std. Rt." : "Use Appl. Rt." )) == null ? '' : __t) +
';\n                    ' +
((__t = ( fee.applyToInPerson ? "&#x2713;" : "&#x2718" )) == null ? '' : __t) +
' In Person,\n                    ' +
((__t = ( fee.applyToPhone ? "&#x2713;" : "&#x2718" )) == null ? '' : __t) +
' Phone,\n                    ' +
((__t = ( fee.applyToVideo ? "&#x2713;" : "&#x2718" )) == null ? '' : __t) +
' Video\n                </li>\n                ';
 }); ;
__p += '\n            </ol>\n        </li>\n        <li>\n            <strong>Deductions</strong>&nbsp;\n            <ol>\n                ';
 _.each(obj.deductions, function(deduction) { ;
__p += '\n                <li>' +
((__t = ( deduction.description )) == null ? '' : __t) +
';\n                    ' +
((__t = ( deduction.aggregate ? "Aggregate" : "Per Line Item" )) == null ? '' : __t) +
';\n                    ' +
((__t = ( deduction.applyToInPerson ? "&#x2713;" : "&#x2718" )) == null ? '' : __t) +
' In Person,\n                    ' +
((__t = ( deduction.applyToPhone ? "&#x2713;" : "&#x2718" )) == null ? '' : __t) +
' Phone,\n                    ' +
((__t = ( deduction.applyToVideo ? "&#x2713;" : "&#x2718" )) == null ? '' : __t) +
' Video\n                </li>\n                ';
 }); ;
__p += '\n            </ol>\n        </li>\n\n        <li><strong>Language Tiers</strong>&nbsp;\n            <div class="language-tiers">\n\n            </div>\n        </li>\n\n    </ul>\n</div>\n\n\n\n\n';

}
return __p
};

this["JST"]["common/recurringbookinggroup/assign"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h5>Job #' +
__e( obj.id ) +
' (Recurring Job #' +
__e( obj.superBooking.id ) +
')</h5>\n<p>This job is part of a recurring booking. Please specify how you\'d like handle the interpreter assignment:</p>\n<form class="modal-form">\n    <label class="radio">\n        <input type="radio" name="applyTo" id="applyToThis" value="this" checked>\n        Assign interpreter to <strong> this</strong> job <strong>only</strong>\n    </label>\n    <label class="radio">\n        <input type="radio" name="applyTo" id="applyToFutureUnassigned" value="futureUnassigned">\n        Assign interpreter to <strong>this</strong> job <strong>and</strong> all <strong>future unassigned</strong> jobs in this recurring booking\n    </label>\n    <label class="radio">\n        <input type="radio" name="applyTo" id="applyToAllUnassigned" value="allUnassigned">\n        Assign interpreter to <strong> this</strong> job and <strong>all unassigned</strong> jobs (past, present and future) in this recurring booking\n    </label>\n    <hr />\n    <input type="checkbox" id="ignoreConflict" name="ignoreConflict" value="true"/> Ignore conflict arising from interpreter double booking as a result of this assignment.\n</form>\n\n\n\n';

}
return __p
};

this["JST"]["common/recurringbookinggroup/update"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close">&times;</a>\n    <h4>Booking #' +
__e( model.booking.id ) +
' (Recurring group #' +
__e( model.id ) +
')</h4>\n</div>\n<div class="modal-body">\n    <form>\n        <label class="radio">\n            <input type="radio" name="applyTo" id="applyToThis" value="this" checked>\n            <strong>ONLY</strong> apply my changes to this booking\n        </label>\n        <label class="radio">\n            <input type="radio" name="applyTo" id="applyToFuture" value="future">\n            Apply my changes to this booking <strong>AND</strong> all future bookings in this recurring group\n        </label>\n        <label class="radio">\n            <input type="radio" name="applyTo" id="applyToAll" value="all">\n            Apply my changes to <strong>ALL</strong> bookings (past, present and future) in this recurring group\n        </label>\n    </form>\n\n</div>\n<div class="modal-footer">\n    <button type="button" id="save" class="btn btn-primary">Save</button>\n    <button type="button" id="cancel" class="btn">Cancel</button>\n</div>\n';

}
return __p
};

this["JST"]["common/reference/autocomplete/criteria/qualification"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group span6">\n    <label class="control-label required" for="criteria">Qualification </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the criteria required for bookings for this customer." data-original-title="Criteria">?</a>\n    <div class="controls">\n        <select name="criteria" id="criteria" class="api-v2 input-block-level">\n            ' +
((__t = ( selectOptions(App.dict.qualifications, {selected: (obj.criteria ? obj.criteria.id : ''), noSelection: {id: '', name: '[Choose a Qualification]'}}) )) == null ? '' : __t) +
'\n        </select>\n        <p class="help-block">Required field.</p>\n    </div>\n</div>\n\n<div class="control-group span3">\n    <label class="control-label required" for="required">Required </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Specify if this criteria is a requirement or optional for bookings." data-original-title="Required">?</a>\n    <div class="controls">\n        <input type="checkbox" id="required" name="required" ';
 if (obj.required) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n    </div>\n</div>\n\n\n<div class="span3">\n    <label>&nbsp;</label>\n    <a class="deleteAutoCompleteQualification" href="javascript:void(0);" title="Delete Qualification"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n</div>';

}
return __p
};

this["JST"]["common/reference/autocomplete/criteria/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group span6">\n    <label class="control-label required" for="criteria">Criteria </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the criteria required for bookings for this customer." data-original-title="Criteria">?</a>\n    <div class="controls">\n        <select name="criteria" id="criteria" class="api-v2 input-block-level">\n            ' +
((__t = ( selectOptions(App.dict.criteria, {selected: (obj.criteria ? obj.criteria.id : ''), noSelection: {id: '', name: '[Choose a Criteria]'}}) )) == null ? '' : __t) +
'\n        </select>\n        <p class="help-block">Required field.</p>\n    </div>\n</div>\n\n<div class="control-group span3">\n    <label class="control-label required" for="required">Required </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Specify if this criteria is a requirement or optional for bookings." data-original-title="Required">?</a>\n    <div class="controls">\n        <input type="checkbox" id="required" name="required" ';
 if (obj.required) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n    </div>\n</div>\n\n\n<div class="span3">\n    <label>&nbsp;</label>\n    <a class="deleteAutoCompleteCriteriaConfig" href="javascript:void(0);" title="Delete Criteria"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n</div>';

}
return __p
};

this["JST"]["common/reference/autocomplete/edit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<!-- tab definition -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#edit-field-tab" data-toggle="tab">Edit Field Value - ' +
__e( value ? value : "(New Field Value)" ) +
'</a></li>\n    <li><a href="#dependent-criteria-tab" data-toggle="tab">Dependent Criteria</a></li>\n    <li><a href="#dependent-references-tab" data-toggle="tab">Dependent Reference Fields</a></li>\n</ul>\n\n<!-- tabs -->\n<div class="tab-content">\n    <div class="tab-pane active" id="edit-field-tab">\n        <div class="row-fluid">\n            <div class="span3">\n                <div class="control-group">\n                    <label class="control-label required" for="value">Value </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Value of the Auto Complete" data-original-title="Auto Complete Value">?</a>\n                    <div class="controls">\n                        <input type="text" id="value" name="value" value="' +
__e( value ) +
'"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="tab-pane" id="dependent-criteria-tab">\n        <h5>Eligibility Criteria</h5>\n        <div id="autoCompleteCriteria">\n\n        </div>\n        <div class="row-fluid">\n            <a href="javascript:void(0);" id="addAutoCompleteCriteria" class="span8"><i class="icon icon-plus-sign"></i>Add eligibility</a>\n        </div>\n\n        <h5>Interpreter Qualifications</h5>\n        <div id="autoCompleteQualifications">\n\n        </div>\n        <div class="row-fluid">\n            <a href="javascript:void(0);" id="addAutoCompleteQualification" class="span8"><i class="icon icon-plus-sign"></i>Add qualification</a>\n        </div>\n    </div>\n    <div class="tab-pane" id="dependent-references-tab">\n        <h5>Reference Codes</h5>\n        <div id="autoCompleteReferenceCodeConfigs">\n\n        </div>\n        <div class="row-fluid">\n            <a href="javascript:void(0);" id="addAutoCompleteReferenceCodeConfig" class="span8"><i class="icon icon-plus-sign"></i>Add reference code</a>\n        </div>\n    </div>\n</div>\n\n\n<div class="controls" style="margin-top:18px;">\n    <button class="btn btn-success" type="submit" id="saveAutoComplete" value="save">Save</button>\n    <button class="btn btn-primary" id="newAutoComplete" name="new" value="Add New" class="btn btn-success">New</button>\n</div>\n';

}
return __p
};

this["JST"]["common/reference/autocomplete/list/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12 search-filters" type="text" id="filterAutoComplete" placeholder="Search Field Values" />\n<ul id="auto-complete-values" class="list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous_a"><a href="#">Prev</a></li>\n        <li class="next_a"><a href="#">Next</a></li>\n    </ul>\n</div>';

}
return __p
};

this["JST"]["common/reference/autocomplete/listitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( value );

}
return __p
};

this["JST"]["common/reference/autocomplete/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span3">\n        <div id="auto-complete-control" class="compact">\n        </div>\n    </div>\n\n    <!-- content area -->\n    <div class="span9">\n        <div id="auto-complete-details">\n        </div>\n    </div> <!-- / content -->\n</div> <!-- / main display area -->\n';

}
return __p
};

this["JST"]["common/reference/autocomplete/referencecodeconfig/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 obj.uniqueDisplayIdentifier = _.uniqueId("referenceCodeConfig-") ;
__p += '\n<div class="control-group span6">\n    <label class="control-label required" for="' +
__e( obj.uniqueDisplayIdentifier ) +
'">Reference Code </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the criteria required for bookings for this customer." data-original-title="Criteria">?</a>\n    <div class="controls">\n        <select name="id" id="' +
__e( obj.uniqueDisplayIdentifier ) +
'" class="input-block-level">\n            ' +
__e( selectOptionsAsync("#" + obj.uniqueDisplayIdentifier, new $.core.ReferenceCodeConfigCollection(), {selected: obj.id, display: function(el) { return el.label + (el.customerName ? " [" + el.customerName + "]" : "") }, sord: 'asc', sidx: 'label', rows: -1, noSelection: {id: '', label: '[Choose a Reference Code]'}, filters: [{field: 'dependent', op: 'eq', data: 'true'}/*, {field: 'customer.id', op: 'eq', data: 'null'}*/]}) ) +
'\n        </select>\n        <p class="help-block">Required field.</p>\n    </div>\n</div>\n\n<div class="span3">\n    <label>&nbsp;</label>\n    <a class="deleteAutoCompleteReferenceCodeConfig" href="javascript:void(0);" title="Delete Reference Code"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n</div>';

}
return __p
};

this["JST"]["common/reference/config"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- config (' +
__e( id ) +
') -->\n<div class="row-fluid">\n\n    <div class="control-group span3">\n        <label class="control-label required" for="label">Reference Label </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The label to display for this reference field" data-original-title="Reference Label">?</a>\n        <div class="controls">\n            <input type="text" class="input-block-level" id="label" name="label" value="' +
__e( label ) +
'"/>\n            <p class="help-block">Required field</p>\n        </div>\n    </div>\n\n    <div class="control-group span2">\n        <label class="control-label" for="required">Required </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Is this a required reference field to be entered." data-original-title="Required">?</a>\n        <div class="controls">\n            <input type="checkbox" id="required" name="required" ';
 if (required) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n        </div>\n    </div>\n\n    <div class="control-group span2">\n        <label class="control-label" for="disabled">Disabled </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Disable this reference code." data-original-title="Disabled">?</a>\n        <div class="controls">\n            <input type="checkbox" id="disabled" name="disabled" ';
 if (disabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <label class="control-label" for="helpText">Help Text </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Help text to appear in the help bubbles for this reference." data-original-title="Help Text">?</a>\n        <div class="controls">\n            <input type="text" class="input-block-level" id="helpText" name="helpText" value="' +
__e( helpText ) +
'"/>\n        </div>\n    </div>\n\n\n    ';
 if (!id) { ;
__p += '\n    <div class="span1">\n        <label>&nbsp;</label>\n        <a class="deleteReferenceCodeConfig" href="javascript:void(0);" title="Remove Reference"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n    </div>\n    ';
 } else if (id) { ;
__p += '\n    <div class="span1">\n        <label>. . .</label>\n    </div>\n\n    <div class="span1">\n        <label>&nbsp;</label>\n        <a class="editReferenceCodeConfig" href="javascript:void(0);" title="Edit. See more configuration options."><i class="icon icon-pencil"></i></a>\n    </div>\n    ';
 } ;
__p += '\n\n</div>\n';

}
return __p
};

this["JST"]["common/reference/edit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label required" for="label">Reference Label </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The label to display for this reference field" data-original-title="Reference Label">?</a>\n            <div class="controls">\n                <input type="text" class="input-block-level" id="label" name="label" value="' +
__e( label ) +
'"/>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n    </div>\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="required">Required </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Is this a required reference field to be entered." data-original-title="Required">?</a>\n            <div class="controls">\n                <input type="checkbox" id="required" name="required" ';
 if (required) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="disabled">Disabled </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Disable this reference code." data-original-title="Disabled">?</a>\n            <div class="controls">\n                <input type="checkbox" id="disabled" name="disabled" ';
 if (disabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<div class="row-fluid">\n\n    <div class="control-group span4">\n        <label class="control-label" for="helpText">Help Text </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Help text to appear in the help bubbles for this reference." data-original-title="Help Text">?</a>\n        <div class="controls">\n            <input type="text" class="input-block-level" id="helpText" name="helpText" value="' +
__e( helpText ) +
'"/>\n        </div>\n    </div>\n\n    <div class="span4">\n        <div class="control-group">\n            <label class="control-label" for="defaultValue">Default Value </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Default Value for this Reference. Not applicable for List Fields. Ony used for free text fields." data-original-title="Default Value">?</a>\n            <div class="controls">\n                <input type="text" class="input-block-level" id="defaultValue" name="defaultValue" value="' +
__e( defaultValue ) +
'"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span4">\n        <div class="control-group">\n            <label class="control-label" for="regEx">Validation (RegEx) </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Regular expression to validate this field against" data-original-title="Validation Regular Expression">?</a>\n            <div class="controls">\n                <input type="text" class="input-block-level" id="regEx" name="regEx" value="' +
__e( regEx ) +
'"/>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<h5>General Settings</h5>\n<div class="row-fluid">\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="promote">Promote </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Promote this value to other parts of application. Setting this will mark this reference field as a primary reference field for a job and will show it on the label for the calendar." data-original-title="Promote">?</a>\n            <div class="controls">\n                <input type="checkbox" id="promote" name="promote" ';
 if (promote) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="masked">Masked </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Does this reference field contain sensitive information that should be partially masked." data-original-title="Masked">?</a>\n            <div class="controls">\n                <input type="checkbox" id="masked" name="masked" ';
 if (masked) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="masked">Hidden </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Hide this reference field when displayed in a list view of reference fields (e.g. invoice / payment / email)." data-original-title="Hide">?</a>\n            <div class="controls">\n                <input type="checkbox" id="hidden" name="hidden" ';
 if (hidden) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="dependent">Dependent </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="This indicates that this reference field is only to be shown based upon the value selected in another reference field. Marking it as dependent will exclude it from being shown by default." data-original-title="Dependent">?</a>\n            <div class="controls">\n                <input type="checkbox" id="dependent" name="dependent" ';
 if (dependent) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="collectAtClosing">Collect at Closing </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to indicate whether this reference code is to be collected during the closing process rather than during job entry." data-original-title="Collect at Closing">?</a>\n            <div class="controls">\n                <input type="checkbox" id="collectAtClosing" name="collectAtClosing" ';
 if (collectAtClosing) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="groupBy">Group By </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Group reference fields containing the same value on invoices. Must be used in combination with the Group By Reference hierarchy setting." data-original-title="Group By">?</a>\n            <div class="controls">\n                <input type="checkbox" disabled id="groupBy" name="groupBy" ';
 if (groupBy) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<h5>List Settings</h5>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="selectField">Select Field </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The value for this reference field is chosen from a list of possible values. By default this will be an autocomplete field where the user can type to select from one or more values. This should be used if there is a long list of values." data-original-title="Select Field">?</a>\n            <div class="controls">\n                <input type="checkbox" id="selectField" name="selectField" ';
 if (selectField) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="allowFreeText">Allow Free Text </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Allow requestor users to add new values to the list if they can\'t locate a value they are looking for. Enabled always for Internal Users." data-original-title="Allow Free Text">?</a>\n            <div class="controls">\n                <input type="checkbox" id="allowFreeText" name="allowFreeText" ';
 if (allowFreeText) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="enableDropdown">Enable Dropdown </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Convert the values for this reference field to a drop-down field. Takes precedence over Select Field setting if both are enabled." data-original-title="Enable Drop Down">?</a>\n            <div class="controls">\n                <input type="checkbox" id="enableDropdown" name="enableDropdown" ';
 if (enableDropdown) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<h5>Consumer Settings (Legacy Settings Only)</h5>\n<div class="row-fluid">\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label" for="consumerEnabled">Consumer Enabled </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Checking this will make this reference field to lookup consumers. NOTE: This section is only available for legacy uses. The new Consumer functionality should be used to track consumers. Please contact support for further information." data-original-title="Consumer Enabled">?</a>\n            <div class="controls">\n                <input type="checkbox" id="consumerEnabled" name="consumerEnabled" ';
 if (consumerEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label" for="customerSpecific">Customer Specific </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Checking this will make this field to filter consumers based on Customer." data-original-title="Customer Specific">?</a>\n            <div class="controls">\n                <input type="checkbox" id="customerSpecific" name="customerSpecific" ';
 if (customerSpecific) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n    </div>\n\n</div>\n\n<div class="controls" style="margin-top:18px;">\n    <button class="btn btn-success" type="submit" id="saveReferenceCodeConfig" value="save">Save</button>\n</div>\n';

}
return __p
};

this["JST"]["common/reference/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Edit Reference Field Configuration</h3>\n</div>\n\n<div class="modal-body">\n    <ul class="nav nav-tabs">\n        <li class="active"><a href="#details-tab" data-toggle="tab">Details</a></li>\n        <li class="auto-complete-tab-header"><a href="#auto-complete-tab" data-toggle="tab">List Values</a></li>\n    </ul>\n\n    <!-- tabs -->\n    <div class="tab-content">\n        <div class="tab-pane active" id="details-tab">\n            <div class="region-basics"></div>\n        </div>\n        <div class="tab-pane" id="auto-complete-tab">\n            <div class="region-auto-complete"></div>\n        </div>\n    </div>\n</div>\n\n<div class="modal-footer">\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>';

}
return __p
};

this["JST"]["common/reports/export/withRanges"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Exporting ' +
__e( obj.title ) +
' for Interpreters</h3>\n    <div id="errorContainer">\n    </div>\n    <div id="successContainer">\n    </div>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="control-group span3">\n                <label class="control-label required" for="from_date">From Date </label>\n\n                <div class="controls">\n                    <input id="from_date" class="input-block-level date" name="from_date" type="text" autocomplete="off" />\n                </div>\n            </div>\n            <div class="control-group span3">\n                <label class="control-label required" for="to_date">To Date </label>\n\n                <div class="controls">\n                    <input id="to_date" class="input-block-level date" name="to_date" type="text" autocomplete="off" />\n                </div>\n            </div>\n        </div>\n    </div>\n    <div id="format" class="controls">\n        <label class="control-label required" for="format">Format </label>\n        <div><input type="radio" name="format" value="xlsx" checked> Excel</div>\n        <div><input type="radio" name="format" value="csv"> CSV</div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Export</a>\n    <a href="#" class="btn widget-close" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["common/reports/selectattributes/list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#attributes-tab" data-toggle="tab">Select Attributes</a></li>\n    <li class="secured secured-comp"><a href="#quick-link-reports-tab" data-toggle="tab">Quick Links</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<div class="tab-content" style="padding: 0;">\n\n    <div class="tab-pane active" id="attributes-tab">\n\n        <h4>Choose those attributes that you want to see on the report</h4>\n        <div class="btn-group pull-right" data-toggle="buttons-radio">\n            <button class="btn selectAll" >&nbsp;&nbsp;&nbsp;All&nbsp;&nbsp;&nbsp;</button>\n            <button class="btn selectNone">None</button>\n        </div>\n        <br/>\n        <div class="row">\n            <div class="span5">\n                <div id="deactivation_reasons">\n\n                </div>\n            </div>\n        </div>\n\n    </div> <!-- / priority tab -->\n\n    <div class="tab-pane" id="quick-link-reports-tab">\n\n        <div class="row-fluid">\n            <div class="span12">\n                <ul>\n                    <li><a class="widget-unfilled-jobs-report" href="javascript:void(0);">Unfilled Jobs Report <i class="icon-external-link"></i></a></li>\n                    <li><a class="widget-accruals-jobs-report" href="javascript:void(0);">Accruals Jobs Report <i class="icon-external-link"></i></a></li>\n                    <li><a class="widget-consumer-jobs-report" href="javascript:void(0);">Consumer Jobs Report <i class="icon-external-link"></i></a></li>\n                    <li><a class="widget-billing-prep-report" href="javascript:void(0);">Billing Preparation Report <i class="icon-external-link"></i></a></li>\n                    <li><a class="widget-incidentals-report" href="javascript:void(0);">Incidentals Report <i class="icon-external-link"></i></a></li>\n                    <li><a class="widget-customer-vos-report" href="javascript:void(0);">Customer VoS Report <i class="icon-external-link"></i></a></li>\n                    <li><a class="widget-team-job-report" href="javascript:void(0);">Team Job Report <i class="icon-external-link"></i></a></li>\n                    <li><a class="widget-custom-job-report" href="javascript:void(0);">Custom Job Report (Beta) <i class="icon-external-link"></i></a></li>\n                    <li><a class="widget-custom-funded-report" href="javascript:void(0);">Custom Funded Report  <i class="icon-external-link"></i></a></li>\n                </ul>\n            </div>\n        </div>\n\n    </div> <!-- / priority tab -->\n\n</div>\n\n<div class="row-fluid">\n\n</div>\n\n<!--<div class="btn-group">-->\n    <!--<button class="btn btn-primary" type="button" id="checkAll" all_checked="true">Check/Uncheck All-->\n    <!--</button>-->\n<!--</div>-->\n';

}
return __p
};

this["JST"]["common/reports/selectattributes/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '    <label>\n        ' +
__e( obj.label ) +
'\n        <input name="' +
__e( obj.label ) +
'" class="attribute" type="checkbox" ' +
__e( obj.active ? "checked" : "" ) +
' value="' +
__e( obj.label ) +
'"/>\n    </label>\n';

}
return __p
};

this["JST"]["common/reports/user/changes"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Exporting Information changes for Interpreter: ' +
__e( obj.contactName ) +
'</h4>\n<div class="row-fluid">\n    <div class="span12">\n        <div class="control-group span3">\n            <label class="control-label required" for="from_date">From Date </label>\n\n            <div class="controls">\n                <input id="from_date" class="input-block-level date" name="from_date" type="text" autocomplete="off" />\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label required" for="to_date">To Date </label>\n\n            <div class="controls">\n                <input id="to_date" class="input-block-level date" name="to_date" type="text" autocomplete="off" />\n            </div>\n        </div>\n    </div>\n</div>\n<div id="format" class="controls">\n    <label class="control-label required" for="format">Format </label>\n\n    <div><input type="radio" name="format" value="xlsx" checked> Excel</div>\n    <div><input type="radio" name="format" value="csv"> CSV</div>\n</div>\n\n<div class="btn-group span4">\n    <button class="btn btn-primary" type="button" id="export_action" value="Export"\n            data-loading-text="Exporting ...">Export\n    </button>\n</div>\n';

}
return __p
};

this["JST"]["common/role/checkbox"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group">\n    ';
 if (role.authority != 'ROLE_CUST_ADMIN') { ;
__p += '\n    <input type="checkbox" id="' +
__e( role.uuid ) +
'" name="' +
__e( role.uuid ) +
'" class="role" value="' +
__e( role.uuid ) +
'" ' +
__e( _.find(obj.authorities, function(r) { return r.id === role.id; }) ? "checked" : "" ) +
'/>\n    <label for="' +
__e( role.uuid ) +
'">' +
__e( role.friendlyName ) +
'</label>\n    ';
 } else { ;
__p += '\n    <!-- rendering adjustment for customer admin role-->\n    <input type="checkbox" id="' +
__e( role.uuid ) +
'" name="' +
__e( role.uuid ) +
'" class="role" value="' +
__e( role.uuid ) +
'" ' +
__e( _.find(obj.authorities, function(r) { return r.id === role.id; }) ? "checked" : "" ) +
'/>\n    <label for="' +
__e( role.uuid ) +
'">View Organizations <span style="font-size:smaller;"><i>(only if configured at Company level)</i></span></label>\n    ';
 } ;
__p += '\n</div>\n';

}
return __p
};

this["JST"]["common/role/radio"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="control-group">\n    <input type="radio" id="' +
__e( role.uuid ) +
'" name="role" value="' +
__e( role.uuid ) +
'" class="role" ' +
__e( _.find(obj.authorities, function(r) { return r.id === role.id; }) ? "checked" : "" ) +
'/>\n    <label class="control-label" for="' +
__e( role.uuid ) +
'">' +
__e( role.friendlyName ) +
'</label>\n</div>\n';

}
return __p
};

this["JST"]["common/services/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="services-container">\n    <div class="services">\n\n    </div>\n    <a href="javascript:void(0);" class="widget-add-service"><i class="icon icon-plus-sign"></i>Add service</a>\n</div>';

}
return __p
};

this["JST"]["common/sidenav/calendar-context"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- how to optionally include / exclude the dates below -->\n<div class="portlet" id="date-container">\n\n    <div class="portlet-header">\n        <span class=\'timezone\' title=\'' +
__e( App.config.userData.tzLong ) +
'\'><i class=\'icon icon-time\'></i> ' +
__e( App.config.userData.tzLong ) +
' (' +
__e( App.config.userData.tz ) +
')</span>:\n        <span class="currentDate"></span>\n        <a style="outline: none; display: none;" href="javascript:void(0);" id="clearRange" tabindex="-1"\n           class="pull-right"><i class="icon icon-minus-sign"></i> Clear Dates</a>\n    </div>\n\n    <div id="calendarRange" style="display: none;">\n        <input type="text" value="" id="dateRange" placeholder="Select a date or range" autocomplete="off" />\n    </div>\n\n    <div id="calendar" class="portlet-body" style="display: none;"></div>\n</div>\n<h4>Quick Filters</h4>\n<div class="group">\n    <a href="javascript:void(0);" class="allJobs">All Jobs</a>\n    <a href="javascript:void(0);" class="newJobs">New Jobs</a>\n    <a href="javascript:void(0);" class="offersGreaterThan24">Offers (> 24 Hrs)</a>\n    <a href="javascript:void(0);" class="unconfirmedGreaterThan24">Unconfirmed (> 24 Hrs)</a>\n    <a href="javascript:void(0);" class="unassignedJobs">Unassigned Jobs</a>\n    <a href="javascript:void(0);" class="myJobs">My Jobs</a>\n</div>\n\n<br/>\n\n<h4>Custom Filters</h4>\n<div class="group">\n    <a class="querycomponent" href="#" data-toggle="modal"><i class="icon-filter"></i> Search . . .</a>\n</div>\n\n<a href="javascript:void(0);" class="closebtn pull-right">\n    <i class="icon-arrow-left"></i> Close\n</a>\n\n';

}
return __p
};

this["JST"]["common/sidenav/grid-context"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet" id="date-container">\n\n    <div class="portlet-header">\n        <span class=\'timezone\' title=\'' +
__e( App.config.userData.tzLong ) +
'\'><i class=\'icon icon-time\'></i> ' +
__e( App.config.userData.tzLong ) +
' (' +
__e( App.config.userData.tz ) +
')</span>:\n        <span class="currentDate"></span>\n        <a style="outline: none;" href="javascript:void(0);" id="clearRange" tabindex="-1" class="pull-right"><i\n                class="icon icon-minus-sign"></i> Clear Dates</a>\n    </div>\n\n    <div id="calendarRange">\n        <input type="text" value="" id="dateRange" placeholder="Select a date or range" autocomplete="off" />\n    </div>\n\n    <div id="calendar" class="portlet-body"></div>\n\n</div>\n<h4>Quick Filters</h4>\n<div class="group">\n    <a href="javascript:void(0);" class="allJobs">All Jobs</a>\n    <a href="javascript:void(0);" class="newJobs">New Jobs</a>\n    <a href="javascript:void(0);" class="offersGreaterThan24">Offers (> 24 Hrs)</a>\n    <a href="javascript:void(0);" class="unconfirmedGreaterThan24">Unconfirmed (> 24 Hrs)</a>\n    <a href="javascript:void(0);" class="unassignedJobs">Unassigned Jobs</a>\n    <a href="javascript:void(0);" class="myJobs">My Jobs</a>\n</div>\n\n<br/>\n\n<h4>Custom Filters</h4>\n\n<div class="group">\n    <a class="querycomponent" href="#" data-toggle="modal"><i class="icon-filter"></i> Search . . .</a>\n</div>\n\n<a href="javascript:void(0);" class="closebtn pull-right">\n    <i class="icon-arrow-left"></i> Close\n</a>\n\n';

}
return __p
};

this["JST"]["common/sms/adhoc"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Ad Hoc SMS: Job #' +
__e( interpreterJob.id ) +
'</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span9">\n            <div class="control-group">\n                <label>\n                    <span class="control-label"><span class="required">To:</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Who to send the SMS to. Choose from the dropdown to populate with appropriate number for convenience." data-original-title="To" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="recipient" value="' +
__e( obj.recipient ) +
'" />\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="span3">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Recipient:&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Choose the recipient you want to send the SMS to." data-original-title="Recipient" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <select name="recipientType" class="input-block-level">\n                            <option value="">[Recipient]</option>\n                            ' +
((__t = ( interpreterNumber ? '<option value="int">Interpreter</option>' : '' )) == null ? '' : __t) +
'\n                            ' +
((__t = ( requestorNumber ? '<option value="cus">Customer</option>' : '' )) == null ? '' : __t) +
'\n                            ' +
((__t = ( consumerNumber ? '<option value="con">Consumer</option>' : '' )) == null ? '' : __t) +
'\n                        </select>\n\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span12">\n            <div>\n                <label>\n                    <span class="control-label"><span class="required">Body:</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the message you would like to send via SMS." data-original-title="Body" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <textarea rows="4" name="body" class="input-block-level">' +
__e( obj.body ) +
'</textarea>\n                    </div>\n                    <div class="controls">\n                        <select name="templateNameKey" class="input-block-level">\n                            ' +
__e( selectOptionsAsync("[name=templateNameKey]", templates, {value: "nameKey", selected: "", noSelection: {id: '', name: '[Load Template]'}}) ) +
'\n                        </select>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <!--\n    <div class="row-fluid">\n        <div class="span3">\n            <div>\n                <label>\n                    <span class="control-label">Responses To:&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Choose where responses should be forwarded to. This is in addition to whatever is the default forwarding." data-original-title="Forward Type" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <select name="forwardType" class="input-block-level">\n                            <option value="">[Forward Type]</option>\n                            <option value="email">Email</option>\n                            <option value="phone">Phone</option>\n                        </select>\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="span9">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Forward To: <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The email address or phone number to send responses to." data-original-title="Forward To" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="forwardTo" value="' +
__e( obj.forwardTo ) +
'" />\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n    -->\n</div>\n<div class="modal-footer">\n    <button class="btn btn-primary cmd-widget-send">Send</button>\n    <button class="btn" data-dismiss="modal">Cancel</button>\n</div>\n';

}
return __p
};

this["JST"]["common/success/container/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="success" class="alert alert-success">\n    <a class="close" data-dismiss="alert" href="#">×</a>\n    <h4 class="alert-heading">Success!</h4>\n    <p>Your request was successfully processed</p>\n    ';
 if (obj["message"]) { ;
__p += '\n    <p>' +
((__t = ( obj["message"] )) == null ? '' : __t) +
'</p>\n    ';
 } ;
__p += '\n</div>\n';

}
return __p
};

this["JST"]["common/success/popup/job"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Success</h3>\n</div>\n<div class="modal-body">\n    <div class="alert alert-success">\n        <p>Job was successfully created</p>\n    </div>\n    <dl class="dl-horizontal">\n        <dt>Confirmation #</dt><dd>Booking #' +
__e( obj.superBooking.id ) +
' / Job #' +
__e( obj.jobContextId ) +
'</dd>\n        <dt>Language</dt><dd>' +
__e( obj.language.description ) +
'</dd>\n        <dt>Date</dt><dd><span class="format-datetime" data-timezone="' +
__e( obj.timeZone ) +
'">' +
__e( obj.expectedStartDate ) +
'</span></dd>\n        <dt>Duration</dt><dd><span class="format-duration" data-start="expectedStartDate" data-end="expectedEndDate">' +
__e( obj.expectedStartDate ) +
'</span></dd>\n        <dt>Customer</dt><dd>' +
__e( obj.customer.name ) +
'</dd>\n        <dt>Client</dt><dd>' +
__e( obj.client.name ) +
'</dd>\n        <dt>Location</dt><dd>' +
__e( obj.location.displayLabel ) +
'</dd>\n        <dt>Sublocation</dt><dd>' +
__e( obj.subLocation.displayLabel ) +
'</dd>\n    </dl>\n    ';
 if (obj["message"]) { ;
__p += '\n    <p>' +
((__t = ( obj["message"] )) == null ? '' : __t) +
'</p>\n    ';
 } ;
__p += '\n</div>\n<div class="modal-footer">\n    ';
 if (options.returnUrl) { ;
__p += '\n    <a href="' +
__e(options.returnUrl) +
'">Return to Previous Page</a>\n    ';
 } ;
__p += '\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["common/success/popup/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Success</h3>\n</div>\n<div class="modal-body">\n    <div class="alert alert-success">\n        <p>Your request was successfully processed.</p>\n    </div>\n    ';
 if (obj["message"]) { ;
__p += '\n    <p>' +
((__t = ( obj["message"] )) == null ? '' : __t) +
'</p>\n    ';
 } ;
__p += '\n</div>\n<div class="modal-footer">\n    ';
 if (options.returnUrl) { ;
__p += '\n    <a href="' +
__e(options.returnUrl) +
'">Return to Previous Page</a>\n    ';
 } ;
__p += '\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["common/verification/inline"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<td class="seq">' +
__e( obj.id ) +
'</td>\n<td class="desc">\n    ';
 if (obj.hasVos) { ;
__p += '\n        <b>Method of Verification</b>: Document\n        <br/>\n        <b>Filename</b>: ' +
__e( obj.fileName ) +
'\n    ';
 } else if (obj.hasSignature) { ;
__p += '\n        <b>Method of Verification</b>: Signature\n        <br/>\n        <b>Signatory</b>: ' +
__e( obj.signer ) +
'\n    ';
 } else { ;
__p += '\n        <b>Method of Verification</b>: None\n    ';
 } ;
__p += '\n</td>\n<td class="desc">\n    <div class="verification">\n        <div class="vos" style="display: none;">\n            <!-- optionally show link if vos required -->\n            <p><a href=\'' +
__e( App.config.context + obj.vosLink ) +
'\' target="_new">Verification of Service Form</a></p>\n        </div>\n\n        <div class="eSignature" style="display: none;" width="298" height="55">\n            <!-- depending on close mechanism this will be shown in view -->\n            <div class="sigPad" style="display: none;">\n                <div class="sig sigWrapper" style="display: inline-block;">\n                    <div class="typed"></div>\n                    <canvas class="pad"></canvas>\n                    <input type="hidden" name="signatureRaw" class="output"/>\n                </div>\n            </div>\n        </div>\n    </div>\n</td>\n\n\n\n\n';

}
return __p
};

this["JST"]["common/verification/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="vos" style="display: none;">\n    <h5>Verification of Service Document</h5>\n    <!-- optionally show link if vos required -->\n    <p><a href=\'' +
__e( App.config.context + obj.vosLink ) +
'\' target="_new">Verification of Service Form</a></p>\n</div>\n\n<h5>Electronic Signature</h5>\n<div class="eSignature" width="298" height="55">\n    <!-- depending on close mechanism this will be shown in view -->\n    <div class="sigPad" style="display: none;">\n        <div class="sig sigWrapper" style="display: inline-block;">\n            <div class="typed"></div>\n            <canvas class="pad"></canvas>\n            <input type="hidden" name="signatureRaw" class="output"/>\n        </div>\n    </div>\n    <div>\n        <strong>Signatory</strong>: ' +
__e( obj.signer ) +
'\n    </div>\n</div>\n\n\n';

}
return __p
};

this["JST"]["common/visitnotes/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span6">\n        <label>Booking Details</label>\n        <div>' +
((__t = ( obj.bookingDetails )) == null ? '' : __t) +
'</div>\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span6">\n        <div class="control-group">\n            <label>\n                <span class="control-label">Job Details&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any details specific to the job that might be useful to the interpreter." data-original-title="Job Details" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <textarea rows="4" name="notes" class="input-block-level wysiwyg">' +
__e( obj.notes ) +
'</textarea>\n                </div>\n            </label>\n        </div>\n    </div>\n    <span class="secured secured-comp secured-cont">\n        <div class="span6">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Job Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The job notes are optionally entered by the interpreter when the job has completed." data-original-title="Job Notes" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <textarea rows="4" name="visitNotes" class="input-block-level wysiwyg">' +
__e( obj.visitNotes ) +
'</textarea>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </span>\n</div>\n<div class="row-fluid">\n    <span class="secured secured-comp">\n        <div class="span6">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Billing Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the billing and payment." data-original-title="Billing Notes" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <textarea rows="4" name="billingNotes" class="input-block-level wysiwyg">' +
__e( obj.billingNotes ) +
'</textarea>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </span>\n    <span class="secured secured-comp">\n        <div class="span6">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Notes about Interpreter(s)&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the interpreter to be assigned to this job. These notes are for internal purposes only." data-original-title="Interpreter Notes" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <textarea rows="4" name="interpreterNotes" class="input-block-level wysiwyg">' +
__e( obj.interpreterNotes ) +
'</textarea>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </span>\n</div>\n\n<div class="btn-group">\n    <button class="btn btn-primary saveNotesCmd">Save Notes <i class="icon-check icon-file-alt"></i></button>\n</div>\n';

}
return __p
};

this["JST"]["common/vostemplate/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Verification of Service Form</h4>\n<dl class="dl-horizontal">\n    <dt>Created</dt><dd>' +
__e( (createdBy ? createdBy : "n/a") + " (" + (createdDate ? createdDate : "n/a") + ")" ) +
'</dd>\n    <dl><dt>Last Modified</dt><dd>' +
__e( (lastModifiedBy ? lastModifiedBy : "n/a") + " (" + (lastModifiedDate ? lastModifiedDate : "n/a") + ")" ) +
'</dd>\n    </dl>\n    <form>\n        <fieldset>\n            <div class="control-group">\n                <div class="controls">\n                    <textarea id="vos@= id @>" cols="4" rows="2" class="wysiwyg" style="height: 450px;" name="body" placeholder="Verification of Service Form">\n                        ' +
__e( body ) +
'\n                    </textarea>\n                </div>\n            </div>\n\n            <button class="btn btn-primary" type="button" id="saveTemplate" value="Save" data-loading-text="Saving ...">Save</button>\n            <button class="btn btn-success" type="button" id="previewTemplate" value="Preview">Preview</button>\n\n        </fieldset>\n    </form>\n</dl>\n';

}
return __p
};

this["JST"]["common/widget/billing-customer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="billing-customer control-group secured secured-comp secured-cust">\n    <label>\n        <span class="control-label"><span class="required">Bill To</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the customer which will be billed for this job." data-original-title=" Bill To Customer" tabindex="-1">?</a> </span>\n        <div class="controls">\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/billinglocation"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="secured secured-comp secured-cust">\n    <div class="billingLocation control-group">\n        <label>\n                <span class="control-label"><span class="required">Location Requesting Service</span>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The correct billing address will automatically appear here. This may differ from the location where service takes place and is used for reporting and invoicing purposes." data-original-title="Billing Address" tabindex="-1">?</a>\n                </span>\n            <div class="controls">\n            </div>\n        </label>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/client"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="client control-group">\n    <label>\n        <span class="control-label"><span class="required">Client</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the client that this booking is for." data-original-title="Client" tabindex="-1">?</a> </span>\n        <div class="controls">\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/consumer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="consumer control-group">\n    <label>\n        <span class="control-label"><span class="required">Consumer&nbsp;</span><a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the individual for whom the interpretation is being provided." data-original-title="Consumer" tabindex="-1">?</a> </span>\n        <span class="ivr-container-consumer"></span>\n        <div class="controls">\n        </div>\n        <div class="consumerDetailsContainer secured secured-comp secured-admin"></div>\n    </label>\n</div>\n<div class="consumer-alt control-group" style="display: none">\n    <label>\n        <span class="control-label"><span>Other consumer</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the individual for whom the interpretation is being provided." data-original-title="Other consumer" tabindex="-1">?</a></span>\n        <div class="controls">\n            ';
 if (!isView) { ;
__p += '\n            <input type="text" name="customConsumer" value="' +
__e( obj.customConsumer ) +
'" class="input-block-level"/>\n            ';
 } else { ;
__p += '\n            ' +
__e( obj.customConsumer ) +
'\n            ';
 } ;
__p += '\n        </div>\n    </label>\n</div>\n<div class="more-consumers control-group">\n    <div class="consumers-list-container"></div>\n</div>\n\n';

}
return __p
};

this["JST"]["common/widget/consumerslist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (!_.isEmpty(obj.consumers) || (obj.consumer && obj.consumer.id)) { ;
__p += '\n    <label>\n        <span class="control-label">Additional Consumers:</span>\n        <div class="controls">\n            <ul class="consumers-list"></ul>\n        </div>\n    </label>\n    ';
 if (!hideAddMore && !isView && (!_.isEmpty(obj.consumers) || (obj.consumer && obj.consumer.id))) { ;
__p += '\n    <div class="controls secured secured-comp secured-cust">\n        <a href="javascript:void(0);" class="widget-more-consumers"><i class="icon-plus-sign"></i> Add More Consumers ...</a>\n    </div>\n    ';
 } ;
__p += '\n';
 } ;
__p += '\n\n';

}
return __p
};

this["JST"]["common/widget/consumerslistitem"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.name );

}
return __p
};

this["JST"]["common/widget/consumerslistitemeditable"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.name ) +
'\n<a href="javascript:void(0);" class="widget-remove-consumer"><i class="icon-remove"></i></a>\n<a href="javascript:void(0);" class="widget-edit-consumer"><i class="icon-pencil"></i></a>';

}
return __p
};

this["JST"]["common/widget/customer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="customer control-group secured secured-comp secured-cust">\n    <label>\n        <span class="control-label"><span class="required">Customer</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the customer where the interpretation will take place." data-original-title="Customer" tabindex="-1">?</a> </span>\n        <div class="controls">\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/customer/client"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="client control-group">\n    <label>\n        <!--<span class="control-label"><span class="required">Client</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the client that this booking is for." data-original-title="Client" tabindex="-1">?</a> </span>-->\n        <div class="controls">\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/customer/customer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="customer control-group secured secured-comp secured-cust">\n    <label>\n        <!--<span class="control-label"><span class="required">Customer</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the customer that this booking is for." data-original-title="Customer" tabindex="-1">?</a> </span>-->\n        <div class="controls">\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/customer/language"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="language control-group">\n    <label>\n        <div class="controls">\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/customer/location"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="location control-group">\n    <label>\n        <!--<span class="control-label"><span class="required">Location</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the address of the venue for the booking." data-original-title="Location" tabindex="-1">?</a></span>-->\n        <div class="controls">\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/interpreter"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="interpreter">\n\n</div>\n';

}
return __p
};

this["JST"]["common/widget/language"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="language control-group">\n    <label>\n        <span class="control-label"><span class="required">Language</span>&nbsp;<a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="Language." data-original-title="Language" tabindex="-1">?</a>\n        </span>\n        <span class="ivr-container-language"></span>\n        <div class="controls">\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/location"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="location control-group">\n    <label>\n        <span class="control-label"><span class="required">Location</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the address of the venue for the booking." data-original-title="Location" tabindex="-1">?</a></span>\n        <span class="ivr-container-location"></span>\n        <div class="controls">\n        </div>\n    </label>\n</div>\n<div class="location-alt" style="display: none">\n    <div class="control-group" >\n        <label>\n            <span class="control-label"><span>Other location</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the location for the booking." data-original-title="Other location" tabindex="-1">?</a></span>\n            <div class="controls">\n                ';
 if (!isView) { ;
__p += '\n                <input type="text" name="customLocation" value="' +
__e( obj.customLocation ) +
'" class="input-block-level"/>\n                ';
 } else { ;
__p += '\n                ' +
__e( obj.customLocation ) +
'\n                ';
 } ;
__p += '\n            </div>\n        </label>\n    </div>\n    <div class="control-group" >\n        <label>\n            <span class="control-label"><span>Postal Code</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="You must at least enter the correct zip or postal code." data-original-title="Postal Code" tabindex="-1">?</a> ';
 if (obj.customLocationPostalCodeValid) { ;
__p += ' <i title="Postal code validated" class="icon icon-ok"></i> ';
 }  else { ;
__p += '<i title="Postal code needs validation" class="icon icon-warning-sign"></i>';
 } ;
__p += '<a href="javascript:void(0);" class="pull-right validatePostalCode"><i class="icon icon-map-marker"></i> Validate</a></span>\n            <div class="controls">\n                ';
 if (!isView) { ;
__p += '\n                <input type="text" name="customLocationPostalCode" value="' +
__e( obj.customLocationPostalCode ) +
'" class="input-block-level"/>\n                ';
 } else { ;
__p += '\n                ' +
__e( obj.customLocationPostalCode ) +
'\n                ';
 } ;
__p += '\n            </div>\n        </label>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["common/widget/pin"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="pin control-group secured secured-comp secured-cust">\n    <label>\n        <span class="control-label"><span class="required">' +
__e(obj.client ? obj.client.name : "Enter") +
' PIN</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="A PIN code is required before you can create the job." data-original-title="PIN" tabindex="-1">?</a> </span>\n        <div class="controls">\n            <input type="text" class="input-block-level" name="pinCode" value="' +
__e(obj.pinCode) +
'" />\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/preferredinterpreter"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="interpreter control-group">\n    <label>\n        <span class="control-label">Preferred Interpreter&nbsp;<a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="Optionally specify your preferred interpreter." data-original-title="Preferred Interpreter" tabindex="-1">?</a>\n        </span>\n        <div class="controls">\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/requestor"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="requestor control-group secured secured-comp secured-cust">\n    <label>\n        <span class="control-label"><span class="required">Requested By</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The name and contact information of the requestor." data-original-title="Requested By" tabindex="-1">?</a></span>\n        <span class="ivr-container-requestor"></span>\n        <div class="controls">\n        </div>\n    </label>\n</div>\n<div class="requestor-alt control-group" style="display: none">\n    <label>\n        <span class="control-label"><span>Other requestor</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the requestor for the booking." data-original-title="Other requestor" tabindex="-1">?</a></span>\n        <div class="controls">\n            ';
 if (!isView) { ;
__p += '\n            <input type="text" name="customRequestor" value="' +
__e( obj.customRequestor ) +
'" class="input-block-level"/>\n            ';
 } else { ;
__p += '\n            ' +
__e( obj.customRequestor ) +
'\n            ';
 } ;
__p += '\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["common/widget/specialinstructions"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="secured secured-comp">\n    ';
 if (!obj.isView) { ;
__p += '\n        <h4>Special Instructions&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="View and edit the special instructions for this job using the tabs." data-original-title="Special Instructions" tabindex="-1">?</a></h4>\n        <br/>\n        <ul class="nav nav-tabs" style="margin-top:1px;">\n            <li class="active">\n                <a href="#company-special-instructions-tab" data-toggle="tab" class="company-special-instructions-tab">Internal</a>\n            </li>\n            <li>\n                <a href="#customer-special-instructions-tab" data-toggle="tab" class="customer-special-instructions-tab">Customer</a>\n            </li>\n            <li>\n                <a href="#contact-special-instructions-tab" data-toggle="tab" class="contact-special-instructions-tab">Interpreter</a>\n            </li>\n        </ul>\n        <div class="tab-content">\n            <div id="company-special-instructions-tab" class="tab-pane active" >\n                <textarea style="width:100%" class="wysiwyg" id="companySpecialInstructions" name="companySpecialInstructions">' +
__e( obj.companySpecialInstructions ) +
'</textarea>\n            </div>\n            <div id="customer-special-instructions-tab" class="tab-pane">\n                <textarea style="width:100%" class="wysiwyg" id="customerSpecialInstructions" name="customerSpecialInstructions">' +
__e( obj.customerSpecialInstructions  ) +
'</textarea>\n            </div>\n            <div id="contact-special-instructions-tab" class="tab-pane">\n                <textarea style="width:100%" class="wysiwyg" id="contactSpecialInstructions" name="contactSpecialInstructions">' +
__e( obj.contactSpecialInstructions  ) +
'</textarea>\n            </div>\n        </div>\n    ';
 } else { ;
__p += '\n        <h4>Special Instructions&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="View and edit the special instructions for this job using the tabs." data-original-title="Special Instructions" tabindex="-1">?</a></h4>\n        <br/>\n        <ul class="nav nav-tabs" style="margin-top:1px;">\n            <li class="active">\n                <a href="#company-special-instructions-tab" data-toggle="tab" class="company-special-instructions-tab">Internal</a>\n            </li>\n            <li>\n                <a href="#customer-special-instructions-tab" data-toggle="tab" class="customer-special-instructions-tab">Customer</a>\n            </li>\n            <li>\n                <a href="#contact-special-instructions-tab" data-toggle="tab" class="contact-special-instructions-tab">Interpreter</a>\n            </li>\n        </ul>\n        <div class="tab-content">\n            <div id="company-special-instructions-tab" class="tab-pane active" >\n                <div class="controls well well-scroll">\n                    ' +
((__t = ( obj.companySpecialInstructions)) == null ? '' : __t) +
'\n                </div>\n            </div>\n            <div id="customer-special-instructions-tab" class="tab-pane">\n                <div class="controls well well-scroll">\n                    ' +
((__t = ( obj.customerSpecialInstructions)) == null ? '' : __t) +
'\n                </div>\n            </div>\n            <div id="contact-special-instructions-tab" class="tab-pane">\n                <div class="controls well well-scroll">\n                    ' +
((__t = ( obj.contactSpecialInstructions)) == null ? '' : __t) +
'\n                </div>\n            </div>\n        </div>\n\n    ';
 } ;
__p += '\n</div>\n<div class="secured secured-cust">\n    <div class="model-customerSpecialInstructions control-group">\n        <label>\n            <span class="control-label">Special Instructions</span>\n            <div id="customerRoleSpecialInstructions" class="controls well well-scroll">\n                ' +
((__t = ( obj.customerSpecialInstructions)) == null ? '' : __t) +
'\n            </div>\n        </label>\n    </div>\n</div>\n<div class="secured secured-cont">\n    <div class="model-contactSpecialInstructions control-group">\n        <label>\n            <span class="control-label">Special Instructions</span>\n            <div id="contactRoleSpecialInstructions" class="controls well well-scroll">\n                ' +
((__t = ( obj.contactSpecialInstructions)) == null ? '' : __t) +
'\n            </div>\n        </label>\n    </div>\n</div>\n<br/>\n\n\n\n\n';

}
return __p
};

this["JST"]["common/widget/sublocation"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="sublocation control-group">\n    <label>\n        <span class="control-label"><span class="required">Sublocation</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the sub-location within the venue." data-original-title="Sub-Location" tabindex="-1">?</a>\n        </span>\n        <span class="ivr-container-subLocation"></span>\n        <div class="controls">\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["company/booking/list/jobs-table"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8 filters">\n            <div class="row-fluid">\n                <div class="span12">\n                    <strong>' +
__e( App.config.company.name ) +
':</strong>\n                    ' +
__e( obj.title ) +
'\n                    ';
 if(obj.showRefreshSince === true) { ;
__p += '<span id="refreshSince"></span>';
 } ;
__p += '\n                    ';
 if(obj.showRefreshSince === true && obj.showNewJobsCount === true) { ;
__p += '-';
 } ;
__p += '\n                    ';
 if(obj.showNewJobsCount === true) { ;
__p += '<span class="new-bookings-count">0</span> <em>NEW</em> jobs found.';
 } ;
__p += '\n                    ';
 if(obj.showPrint === true) { ;
__p += '<a href="javascript:void(0);" class="printDailyCmd" title="Daily Jobs"><i class="icon-print"></i></a>';
 } ;
__p += '\n                    ';
 if(obj.showSidenav === true) { ;
__p += '<span class="openSideNav">&#9776; Filters</span>';
 } ;
__p += '\n                </div>\n            </div>\n            ';
 if(obj.showFiltersApplied === true) { ;
__p += '\n            <div id="queryFiltersAppliedView">\n                <div class="row-fluid">\n                    <div class="span12">\n                        <strong>Query Applied:</strong>\n                        <span id="queryFiltersApplied"></span>\n                    </div>\n                </div>\n            </div>\n            ';
 } ;
__p += '\n            <div class="row-fluid">\n                <div class="span12">\n                    <label class="control-label">\n                        <input type="checkbox" id="selectAll" class="selectAll" name="selectAll" />\n                        All jobs (with current filters applied)\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div class="span4">\n            <div class="btn-toolbar pull-right">\n                <div class="btn-group">\n                    <div class="job-bulk-actions"></div>\n                </div>\n                <div class="btn-group">\n                    <div class="filter"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["company/booking/mylist/jobs-table"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            ' +
__e( App.config.company.name ) +
' : My Jobs\n            <br/>\n            <label class="control-label"><input type="checkbox" id="selectAll" class="selectAll" name="selectAll"/> All jobs (with current filters applied)</label>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n            &nbsp;\n            <div class="job-bulk-actions pull-right">\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["company/booking/unassigned/jobs-table"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            ' +
__e( App.config.company.name ) +
' : Unassigned Jobs\n            <br/>\n            <label class="control-label"><input type="checkbox" id="selectAll" class="selectAll" name="selectAll"/> All jobs (with current filters applied)</label>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n            &nbsp;\n            <div class="job-bulk-actions pull-right">\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["company/config/actiongroup/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group span3">\n        <label class="control-label required" for="name">Group Name </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Action Group." data-original-title="Name">?</a>\n        <div class="controls">\n            <input class="span12" id="name" name="name" type="text" value="' +
__e( name ) +
'"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span3">\n        <label class="control-label required" for="description">Description </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Description of the action group." data-original-title="Description">?</a>\n        <div class="controls">\n            <input class="span12" id="description" name="description" type="text" value="' +
__e( description ) +
'"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label class="control-label required" for="enabled">Enabled </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable or disable this action group." data-original-title="Enabled">?</a>\n        <div class="controls">\n            <input id="enabled" name="enabled" type="checkbox" value="true" ';
 if (enabled) { ;
__p += 'checked';
 } ;
__p += '/>\n        </div>\n    </div>\n    <div class="span1">\n        <label>&nbsp;</label>\n        <a id="saveGroup" href="javascript:void(0);" title="Save Action Group"><i class="icon-save"></i> Save</a>\n    </div>\n    ';
 if (!id) { ;
__p += '\n    <div class="span1">\n        <label>&nbsp;</label>\n        <a id="deleteGroup" href="javascript:void(0);" title="Delete Action Group"><i class="icon-remove"></i> Delete</a>\n    </div>\n    ';
 } ;
__p += '\n</div>\n';

}
return __p
};

this["JST"]["company/config/availabilitytype/main"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Availability Type</h4>\n<div class="availabilities">\n\n</div>\n<a href="javascript:void(0);" class="model-add"><i class="icon-plus-sign"></i> Add Type</a>';

}
return __p
};

this["JST"]["company/config/availabilitytype/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group span2">\n        <label class="control-label required" for="name">Name </label>\n        <!--<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Name of the availability." data-original-title="Name">?</a>-->\n        <div class="controls">\n            <input class="span12" id="name" name="name" type="text" value="' +
__e( obj.name ) +
'" autocomplete="off"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label class="control-label required" for="description">Description </label>\n        <!--<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Description." data-original-title="Description">?</a>-->\n        <div class="controls">\n            <input class="span12" id="description" name="description" type="text" value="' +
__e( obj.description ) +
'" autocomplete="off"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label class="control-label required" for="nameKey">Friendly Name </label>\n        <!--<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Date of the holiday." data-original-title="Friendly Name">?</a>-->\n        <div class="controls">\n            <input class="span12" id="nameKey" name="nameKey" type="text" value="' +
__e( obj.nameKey ) +
'" autocomplete="off"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label class="control-label" for="colorHex">Color Hex </label>\n        <!--<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Optional description of the holiday." data-original-title="Color Hex">?</a>-->\n        <div class="controls">\n            <input class="span12" id="colorHex" name="colorHex" type="text" value="' +
__e( obj.colorHex ) +
'"/>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">Available? <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Default" data-original-title="Available" tabindex="-1">?</a></span>\n            <div class="controls">\n                <input type="checkbox" name="available" ' +
__e( obj.available ? "checked" : "" ) +
'/>\n            </div>\n        </label>\n    </div>\n    <div class="span1">\n        <label>&nbsp;</label>\n        <a class="saveAvailabilityType" href="javascript:void(0);" title="Save Availability"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-disk"></span>Save</a>\n    </div>\n    <div class="span1">\n        <label>&nbsp;</label>\n        <a class="deleteAvailabilityType" href="javascript:void(0);" title="Delete Availability"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["company/config/businessunit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span4">\n        <div class="control-group">\n            <label class="control-label required" for="name">Name </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Business unit name." data-original-title="Business Unit Name">?</a>\n            <div class="controls">\n                <input class="span12" id="name" name="name" type="text" value="' +
__e( name ) +
'"/>\n                <p class="help-block">Required</p>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label required" for="description">Description </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Business unit description." data-original-title="Business Unit Description">?</a>\n            <div class="controls">\n                <input class="span12" id="description" name="description" type="text" value="' +
__e( description ) +
'"/>\n                <p class="help-block">Required</p>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="contactNumber">Contact Number </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Contact phone number for this business unit." data-original-title="Contact Number">?</a>\n            <div class="controls">\n                <input class="span12" id="contactNumber" name="contactNumber" type="text" value="' +
__e( contactNumber ) +
'"/>\n                <p class="help-block">Required</p>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="contactEmail">Contact Email </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Contact email address for this business unit." data-original-title="Contact Email">?</a>\n            <div class="controls">\n                <input class="span12" id="contactEmail" name="contactEmail" type="text" value="' +
__e( contactEmail ) +
'"/>\n                <p class="help-block">Required</p>\n            </div>\n        </div>\n    </div>\n\n    <div class="span4">\n\n        <div class="control-group">\n            <label class="control-label" for="notificationFrom">Notification Email </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="From email address for notifications from this business unit. This email address must complete a verification process by the system administrator or emails will not be sent successfully." data-original-title="From Email">?</a>\n            <div class="controls">\n                <input class="span12" id="notificationFrom" name="notificationFrom" type="text" value="' +
__e( notificationFrom ) +
'"/>\n                <p class="help-block">Required</p>\n            </div>\n        </div>\n\n        <!-- splash message -->\n        <div class="control-group">\n            <label class="control-label" for="splashMessage">Splash Message </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Message to be displayed on the entry page for customers and interpreters after logging in.<p>Recommend to include emergency contact information for your business unit." data-original-title="Splash Message">?</a>\n            <div class="controls">\n                <textarea style="width:100%;" class="wysiwyg" name="splashMessage">' +
__e( splashMessage ) +
'</textarea>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n\n    </div>\n\n    <div class="span4">\n        <div class="span8">\n            <div class="control-group">\n                <label class="control-label" for="smsFrom">Notification Number </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="From phone number for notifications from this business unit. This phone number must complete a verification process by the system administrator or texts will not be sent successfully." data-original-title="Notification Number">?</a>\n                <div class="controls">\n                    <input class="span12" id="smsFrom" name="smsFrom" type="text" value="' +
__e( smsFrom ) +
'"/>\n                </div>\n            </div>\n        </div>\n        <div class="span4">\n            <div class="control-group">\n                <label class="control-label" for="enabled">Enabled </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Enable or disable this business unit for display purposes." data-original-title="Enabled">?</a>\n                <div class="controls">\n                    <input id="enabled" name="enabled" type="checkbox" value="true" ';
 if (enabled) { ;
__p += 'checked';
 } ;
__p += '/>\n                </div>\n            </div>\n        </div>\n\n        <div>\n            <label>&nbsp;</label>\n            <a id="saveBusinessUnit" href="javascript:void(0);" title="Save Business Unit"><i class="icon-save"></i> Save</a>\n        </div>\n        ';
 if (!id) { ;
__p += '\n        <div>\n            <label>&nbsp;</label>\n            <a id="deleteBusinessUnit" href="javascript:void(0);" title="Delete Business Unit"><i class="icon-remove"></i> Delete</a>\n        </div>\n        ';
 } ;
__p += '\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["company/config/cancellationreason/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group span3">\n        <label class="control-label required" for="name">Reason </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Cancellation reason." data-original-title="Name">?</a>\n        <div class="controls">\n            <input class="span12" id="name" name="name" type="text" value="' +
__e( name ) +
'"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span3">\n        <label class="control-label required" for="description">Description </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Description of the cancellation reason." data-original-title="Description">?</a>\n        <div class="controls">\n            <input class="span12" id="description" name="description" type="text" value="' +
__e( description ) +
'"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span3">\n        <label class="control-label" for="enabled">Enabled </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable or disable this cancellation reason." data-original-title="Description">?</a>\n        <div class="controls">\n            <input id="enabled" name="enabled" type="checkbox" value="true" ';
 if (enabled) { ;
__p += 'checked';
 } ;
__p += '/>\n        </div>\n    </div>\n</div>\n<div class="row-fluid">\n\n    <div class="control-group span2">\n        <label class="control-label" for="enabled">Enabled For Customer</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable or disable this cancellation reason to be shown for customers." data-original-title="Description">?</a>\n        <div class="controls">\n            <input id="enabledForCustomers" name="enabledForCustomers" type="checkbox" value="true" ';
 if (enabledForCustomers) { ;
__p += 'checked';
 } ;
__p += '/>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label class="control-label" for="enabled">Enabled For Interpreter</label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable or disable this cancellation reason to be shown for interpreters." data-original-title="Description">?</a>\n        <div class="controls">\n            <input id="enabledForInterpreters" name="enabledForInterpreters" type="checkbox" value="true" ';
 if (enabledForInterpreters) { ;
__p += 'checked';
 } ;
__p += '/>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label class="control-label" for="createInteraction">Create Interaction </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Create interaction?" data-original-title="Create interaction?">?</a>\n        <div class="controls">\n            <input id="createInteraction" name="createInteraction" type="checkbox" value="true" ';
 if (createInteraction) { ;
__p += 'checked';
 } ;
__p += '/>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label class="control-label" for="billable">Billable </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Selecting this cancellation reason will result in the job being marked billable?" data-original-title="Billable?">?</a>\n        <div class="controls">\n            <input id="billable" name="billable" type="checkbox" value="true" ';
 if (billable) { ;
__p += 'checked';
 } ;
__p += '/>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label class="control-label" for="billable">Payable </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Selecting this cancellation reason will result in the job being marked payable?" data-original-title="Payable?">?</a>\n        <div class="controls">\n            <input id="payable" name="payable" type="checkbox" value="true" ';
 if (payable) { ;
__p += 'checked';
 } ;
__p += '/>\n        </div>\n    </div>\n    <div class="span2">\n        <label>&nbsp;</label>\n        <a id="saveCancellationReason" href="javascript:void(0);" title="Save Cancellation Reason"><i class="icon-save"></i> Save</a>\n    </div>\n    ';
 if (!id) { ;
__p += '\n    <div class="span2">\n        <label>&nbsp;</label>\n        <a id="deleteCancellationReason" href="javascript:void(0);" title="Delete Cancellation Reason"><i class="icon-remove"></i> Delete</a>\n    </div>\n    ';
 } ;
__p += '\n</div>\n';

}
return __p
};

this["JST"]["company/config/companybranding/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4 xmlns="http://www.w3.org/1999/html">Branding</h4>\n<form class="form-vertical">\n    <fieldset>\n        <section>\n            <div class="row-fluid">\n                <!-- logo uri -->\n                <div class="control-group span3">\n                    <label class="control-label required" for="logoUri">Path to Logo </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="File path to your company logo that will be used throughout the site.<p>Contact your administrator if you have are unsure of the value for this field." data-original-title="Logo">?</a>\n                    <div class="controls">\n                        <input id="logoUri" name="logoUri" type="text" value="' +
__e( logoUri ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <img src="' +
__e( logoUri ) +
'"/>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <!-- logo uri high res -->\n                <div class="control-group span3">\n                    <label class="control-label required" for="logoUriHighRes">Path to High Res Logo </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="File path to a high res company logo that will be used on invoices and payments.<p>Contact your administrator if you have are unsure of the value for this field." data-original-title="High Res Logo">?</a>\n                    <div class="controls">\n                        <input id="logoUriHighRes" name="logoUriHighRes" type="text" value="' +
__e( logoUriHighRes ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <img src="' +
__e( logoUriHighRes ) +
'"/>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <!-- Privacy Policy text -->\n                <div class="control-group span3">\n                    <label class="control-label" for="privacyPolicyText"><strong>Privacy Policy Text </strong></label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="File path to a company privacy policy text that will be used on login page.<p>Contact your administrator if you have are unsure of the value for this field." data-original-title="Privacy Policy Link">?</a>\n                    <div class="controls">\n                        <input id="privacyPolicyText" name="privacyPolicyText" type="text" value="' +
__e( privacyPolicyText ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <!-- Privacy Policy link -->\n                <div class="control-group span3">\n                    <label class="control-label" for="privacyPolicyLink"><strong>Privacy Policy Link </strong></label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="File path to a company privacy policy that will be used on login page.<p>Contact your administrator if you have are unsure of the value for this field." data-original-title="Privacy Policy Link">?</a>\n                    <div class="controls">\n                        <input id="privacyPolicyLink" name="privacyPolicyLink" type="text" value="' +
__e( privacyPolicyLink ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <!-- Privacy Policy Document -->\n                <div class="control-group span4">\n                    <span>\n                        <a class="addPrivacyPolicyDocument" rel="tooltip" data-content="Add Privacy Policy Document" data-original-title="Add Privacy Policy Document" href="javascript:void(0);"><i class="icon icon-plus">&nbsp;&nbsp;Add Privacy Policy Document</i></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        <label class="privacyPolicyFileName">' +
__e( privacyPolicyDocument.fileName ) +
'</label></br>\n                        <a class="removePrivacyPolicyDocument" rel="tooltip" data-content="Remove Privacy Policy Document" data-original-title="Remove Privacy Policy Document" href="javascript:void(0);"><i class="icon icon-remove">&nbsp;&nbsp;Remove Privacy Policy Document</i></a>\n                    </span>\n                </div>\n            </div>\n        </section>\n    </fieldset>\n</form>';

}
return __p
};

this["JST"]["company/config/companyconfiguration/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<form class="form-vertical">\n    <fieldset>\n\n        <h4>Configuration: Interpreter Self Assignment</h4>\n\n        <section>\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="required">Enable Interpreter Self Assignment </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Allow interpreters to assign themselves to bookings from the Interpreter portal" data-original-title="Interpreter Assignment">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableAssignment" name="enableAssignment" ';
 if (enableAssignment) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="required">Confirm on Self Assignment </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Confirm bookings when interpreters assign themselves from the Interpreter portal" data-original-title="Interpreter Assignment">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableAutoConfirm" name="enableAutoConfirm" ';
 if (enableAutoConfirm) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span6">\n                    <label class="control-label" for="required"># Days for Self Assignment </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The number of days in advance that interpreters can see unassigned bookings." data-original-title="Assignment Window">?</a>\n                    <div class="controls">\n                        <input class="span12" id="assignmentWindow" name="assignmentWindow" type="text" value="' +
__e( assignmentWindow ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="required">Radius for Self Assignment </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="The default radius for interpreter self assignment." data-original-title="Assignment Radius">?</a>\n                    <div class="controls">\n                        <input class="span12" id="assignmentRadius" name="assignmentRadius" type="text" value="' +
__e( assignmentRadius ) +
'"/>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Configuration: Interpreter Manager</h4>\n\n            <div class="row-fluid">\n\n                <!-- new jobs window -->\n                <div class="control-group span6">\n                    <label class="control-label required" for="newJobsWindow">Interpreter Manager email </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The email of the interpreter manager" data-original-title="Interpreter Manager email">?</a>\n                    <div class="controls">\n                        <input class="span12" id="interpreterManagerEmail" name="interpreterManagerEmail" type="text" value="' +
__e( interpreterManagerEmail ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n            </div>\n\n            <h4>Configuration: New Jobs Window</h4>\n\n            <div class="row-fluid">\n\n                <!-- new jobs window -->\n                <div class="control-group span6">\n                    <label class="control-label required" for="newJobsWindow">New Jobs Window (Hours) </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The number of hours to show new and open jobs for in the new jobs table on various pages." data-original-title="New Jobs Window (Hours)">?</a>\n                    <div class="controls">\n                        <input class="span12" id="newJobsWindow" name="newJobsWindow" type="text" value="' +
__e( newJobsWindow ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n            </div>\n\n            <h4>Configuration: Priority Jobs Window</h4>\n\n            <div class="row-fluid">\n\n                <!-- priority configuration -->\n                <div class="control-group span6">\n                    <label class="control-label required" for="priorityPlus">Priority Plus (Hours) </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The number of hours to show after for the priority bookings on the company dashboard." data-original-title="Priority Plus (Hours)">?</a>\n                    <div class="controls">\n                        <input class="span12" id="priorityPlus" name="priorityPlus" type="text" value="' +
__e( priorityPlus ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <!-- priority configuration -->\n                <div class="control-group span6">\n                    <label class="control-label required" for="priorityMinus">Priority Minus (Hours) </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The number of hours to show in advance for the priority bookings on the company dashboard." data-original-title="Priority Minus (Hours)">?</a>\n                    <div class="controls">\n                        <input class="span12" id="priorityMinus" name="priorityMinus" type="text" value="' +
__e( priorityMinus ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="row-fluid">\n\n                <!-- unassigned window -->\n                <div class="control-group span6">\n                    <label class="control-label required" for="unassignedWindow">Unassigned Window (Days) </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The number of days to show unassigned bookings for on the dashboard." data-original-title="Unassigned Window (Days)">?</a>\n                    <div class="controls">\n                        <input class="span12" id="unassignedWindow" name="unassignedWindow" type="text" value="' +
__e( unassignedWindow ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n            </div>\n\n            <h4>Configuration: Availability / Double Booking Buffers</h4>\n\n            <div class="row-fluid">\n\n                <div class="control-group span6">\n                    <label class="control-label required" for="availabilityBuffer">Availability Buffer (Minutes) </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The number of minutes that will be added before and after start and end times respectively prior to filtering interpreters by their availability." data-original-title="Interpreter Availability Buffer (Minutes)">?</a>\n                    <div class="controls">\n                        <input class="span12" id="availabilityBuffer" name="availabilityBuffer" type="text" value="' +
__e( availabilityBuffer ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label required" for="doubleBookingBuffer">Double Booking Buffer (Minutes) </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The number of minutes that will be added before and after start and end times of bookings when testing for double bookings during interpreter assignment." data-original-title="Double Booking Buffer (Minutes)">?</a>\n                    <div class="controls">\n                        <input class="span12" id="doubleBookingBuffer" name="doubleBookingBuffer" type="text" value="' +
__e( doubleBookingBuffer ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span6">\n                    <label class="control-label required" for="minimumBookingAvailabilityDuration">Minimum Booking Availability Duration (Minutes) </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Minimum number of minutes the duration of the booking must be. This works in tandem with the Availability Buffer. The highest value among minimum duration and booking expected duration is added to the availability buffer arrive at the final end time including buffer." data-original-title="Minimum Booking Availability Duration (Minutes)">?</a>\n                    <div class="controls">\n                        <input class="span12" id="minimumBookingAvailabilityDuration" name="minimumBookingAvailabilityDuration" type="text" value="' +
__e( minimumBookingAvailabilityDuration ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Configuration: Customer</h4>\n\n            <div class="row-fluid">\n\n                <!-- require PIN -->\n                <div class="control-group span6">\n                    <label class="control-label" for="requirePINJobCreate">Require PIN for Job Creation </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether or not a PIN number is required to be entered prior to entering a job. The PIN must match a cost center on the location(s)." data-original-title="Require PIN">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="requirePINJobCreate" name="requirePINJobCreate" ';
 if (requirePINJobCreate) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( requirePINJobCreate ) +
'"/>\n                    </div>\n                </div>\n\n                <!-- require PIN minimum characters -->\n                <div class="control-group span6">\n                    <label class="control-label" for="requirePINMinimumCharacters">Minimum Characters Required for PIN </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether or not a PIN number is required to be entered prior to entering a job. The PIN must match a cost center on the location(s)." data-original-title="Require PIN">?</a>\n                    <div class="controls">\n                        <input id="requirePINMinimumCharacters" name="requirePINMinimumCharacters" type="text" value="' +
__e( requirePINMinimumCharacters ) +
'"/>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="row-fluid">\n\n                <!-- Allow Customer Cancel Jobs -->\n                <div class="control-group span6">\n                    <label class="control-label" for="allowCustomerCancel">Allow Customer Cancel Jobs </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether or not customers can cancel jobs." data-original-title="Allow Customer Cancel">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="allowCustomerCancel" name="allowCustomerCancel" ';
 if (allowCustomerCancel) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( allowCustomerCancel ) +
'"/>\n                    </div>\n                </div>\n\n                <!-- Number of hours prior to job that the customer can cancel a job -->\n                <div class="control-group span6">\n                    <label class="control-label" for="customerCancelHrs">Customer Cancel Hours </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The number of hours a customer can cancel a job, prior to the job start time." data-original-title="Customer Cancel Hours">?</a>\n                    <div class="controls">\n                        <input id="customerCancelHrs" name="customerCancelHrs" type="text" value="' +
__e( customerCancelHrs ) +
'"/>\n                    </div>\n                </div>\n\n            </div>\n\n            <h4>Configuration: Booking Report</h4>\n\n            <div class="row-fluid">\n\n                <!-- unassigned window -->\n                <div class="control-group span6">\n                    <label class="control-label required" for="unassignedWindow">Time Exceeded (Minutes)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Time in minutes to consider a job as a Long Time Job" data-original-title="Time Exceeded (Minutes)">?</a>\n                    <div class="controls">\n                        <input class="span12" id="timeExceeded" name="timeExceeded" type="text" value="' +
__e( timeExceeded ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n            </div>\n\n            <h4>Configuration: Interaction</h4>\n\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label required" for="interactionOverdueHrs">Interaction Overdue (Hours) </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The number of hours after which interaction will be highlighted in red." data-original-title="New Jobs Window (Hours)">?</a>\n                    <div class="controls">\n                        <input class="span12" id="interactionOverdueHrs" name="interactionOverdueHrs" type="text" value="' +
__e( interactionOverdueHrs ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n            </div>\n\n            <h4>Configuration: Financial</h4>\n\n            <div class="row-fluid">\n\n                <div class="control-group span4">\n                    <label class="control-label" for="billActuals">Bill Actuals?</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether to bill actuals versus scheduled time, where actuals is less than the scheduled time.<br/><br/>Company wide setting can be configured under company configuration page." data-original-title="Bill Actuals?">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="billActuals" name="billActuals" ';
 if (billActuals) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( billActuals ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="billMinimumCancellation">Bill Minimum Cancellation?</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether to bill minimum cancellation versus scheduled time.<br/><br/>Company wide setting can be configured under company configuration page." data-original-title="Bill Minimum Cancellation?">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="billMinimumCancellation" name="billMinimumCancellation" ';
 if (billMinimumCancellation) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( billMinimumCancellation ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="roundNearestNeighbor">Round Nearest Neighbor?</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether to round billing increments to the nearest neighbor i.e. up or down depending on the number of minutes into the subsequent increment." data-original-title="Round to Nearest Neighbor?">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="roundNearestNeighbor" name="roundNearestNeighbor" ';
 if (roundNearestNeighbor) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( roundNearestNeighbor ) +
'"/>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span4">\n                    <label class="control-label" for="enableGuaranteeTime">Enable Guarantee Time?</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether guaranteed time is tracked. Guaranteed time is used when a job is cancelled at short notice and the interpreter is to be reimbursed regardless. With this enabled, the gurantee time slots are automatically added." data-original-title="Enable Guarantee Time?">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableGuaranteeTime" name="enableGuaranteeTime" ';
 if (enableGuaranteeTime) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( enableGuaranteeTime ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="guaranteeTimeMaximumHours">Maximum Hours Guarantee Time?</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="The maximumu number of hours to place under guarantee if a recurring series of jobs are canceled with short notice" data-original-title="Maximum Hours Guarantee Time">?</a>\n                    <div class="controls">\n                        <input type="text" id="guaranteeTimeMaximumHours" name="guaranteeTimeMaximumHours" value="' +
__e( guaranteeTimeMaximumHours ) +
'"/>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span3">\n                    <label class="control-label required" for="invoiceGroupingHierarchyType.id">Invoice Grouping </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Specify the default grouping for invoices.<dl><dt>Combined</dt><dd>Combine all bookings</dd><dt>Individual</dt><dd>Every booking has an individual invoice</dd><dt>Hierarchy</dt><dd>Use the hierarchy defined in the hierarchy tab for grouping</dd><dt>Group by Reference</dt><dd>Group bookings by one of the reference fields defined below</dd><dl>" data-original-title="Invoice Grouping">?</a>\n                    <div class="controls">\n                        <select class="span12" name="invoiceGroupingHierarchyType.id">\n                            ' +
((__t = ( selectOptions(App.dict.groupingHierarchyType, {noSelection: {id: '', name: '[Choose a Grouping]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label" for="useInvoiceNumber">Use Invoice Number?</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether to use invoice number over job number when generating invoices grouped individually." data-original-title="Use Invoice Number?">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="useInvoiceNumber" name="useInvoiceNumber" ';
 if (useInvoiceNumber) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( useInvoiceNumber ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label required" for="paymentGroupingHierarchyType.id">Payment Grouping </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Specify the default grouping for payments.<dl><dt>Combined</dt><dd>Combine all bookings</dd><dt>Individual</dt><dd>Every booking has an individual invoice</dd><dt>Hierarchy</dt><dd>Use the hierarchy defined in the hierarchy tab for grouping</dd><dt>Group by Reference</dt><dd>Group bookings by one of the reference fields defined below</dd><dl>" data-original-title="Payment Grouping">?</a>\n                    <div class="controls">\n                        <select class="span12" name="paymentGroupingHierarchyType.id">\n                            ' +
((__t = ( selectOptions(App.dict.groupingHierarchyType, {noSelection: {id: '', name: '[Choose a Grouping]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label" for="usePaymentNumber">Use Payment Number?</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Flag to determine whether to use payment number over job number when generating payments grouped individually." data-original-title="Use Payment Number?">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="usePaymentNumber" name="usePaymentNumber" ';
 if (usePaymentNumber) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( usePaymentNumber ) +
'"/>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span4">\n                    <label class="control-label" for="includeCancelInformationInvoice">Include Cancel Information on Invoice </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Include cancellation information on invoice. Will include the reason and note added at cancellation time on the invoice." data-original-title="Include Cancel Information Invoice">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="includeCancelInformationInvoice" name="includeCancelInformationInvoice" ';
 if (includeCancelInformationInvoice) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="includeCancelInformationPayment">Include Cancel Information on Payment </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Include cancellation information on payment. Will include the reason and note added at cancellation time on payment." data-original-title="Include Cancel Information Payment">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="includeCancelInformationPayment" name="includeCancelInformationPayment" ';
 if (includeCancelInformationPayment) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="includeBillingNotes">Include Billing Notes in Memo </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Include notes from billing address in invoice memo field." data-original-title="Include Billing Notes">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="includeBillingNotes" name="includeBillingNotes" ';
 if (includeBillingNotes) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="invoiceIncludeInterpreter">Include Interpreter on Invoice </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Include interpreter name on invoice description for each job." data-original-title="Include Interpreter">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="invoiceIncludeInterpreter" name="invoiceIncludeInterpreter" ';
 if (invoiceIncludeInterpreter) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="paymentIncludeCustomer">Include Customer on Payment </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Include customer name on payment description for each job." data-original-title="Include Customer">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="paymentIncludeCustomer" name="paymentIncludeCustomer" ';
 if (paymentIncludeCustomer) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="includeRequestorInvoice">Include Requestor on Invoice </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Include requestor on invoice description for each job." data-original-title="Include Requestor Invoice">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="includeRequestorInvoice" name="includeRequestorInvoice" ';
 if (includeRequestorInvoice) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="includeRequestorPayment">Include Requestor on Payment </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Include requestor on payment description for each job." data-original-title="Include Requestor Payment">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="includeRequestorPayment" name="includeRequestorPayment" ';
 if (includeRequestorPayment) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="includeConsumerInvoice">Include Consumer on Invoice </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Include Consumer on invoice description for each job." data-original-title="Include Consumer Invoice">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="includeConsumerInvoice" name="includeConsumerInvoice" ';
 if (includeConsumerInvoice) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="includeConsumerPayment">Include Consumer on Payment </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Include Consumer on payment description for each job." data-original-title="Include Consumer Payment">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="includeConsumerPayment" name="includeConsumerPayment" ';
 if (includeConsumerPayment) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="enableInvoiceLandscape">Enable Invoice Landscape </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable landscape view for Invoice" data-original-title="Enable Invoice Landscape">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableInvoiceLandscape" name="enableInvoiceLandscape" ';
 if (enableInvoiceLandscape) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="enablePaymentLandscape">Enable Payment Landscape </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable landscape view for Payment" data-original-title="Enable Payment Landscape">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enablePaymentLandscape" name="enablePaymentLandscape" ';
 if (enablePaymentLandscape) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span6">\n                    <label class="control-label" for="prefixInvoiceNumber">Invoice Number Prefix </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Prefix to enter prior to invoice number for all invoices." data-original-title="Invoice Number Prefix">?</a>\n                    <div class="controls">\n                        <input class="span12" id="prefixInvoiceNumber" name="prefixInvoiceNumber" type="text" value="' +
__e( prefixInvoiceNumber ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="prefixConfirmationNumber">Payment Confirmation Number Prefix </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Prefix to enter prior to payment confirmation number for all payments created." data-original-title="Payment Confirmation Number Prefix">?</a>\n                    <div class="controls">\n                        <input class="span12" id="prefixConfirmationNumber" name="prefixConfirmationNumber" type="text" value="' +
__e( prefixConfirmationNumber ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="control-group span4">\n                    <label class="control-label" for="memo">Memo </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Memo that will be added to Invoice" data-original-title="Memo">?</a>\n                    <div class="controls">\n                        <textarea style="width:100%;" class="wysiwyg" id="memo" name="memo">' +
__e( memo ) +
'</textarea>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label required" for="billHoursUsing.id">Bill Hours Using </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Choose the default rule for billing hours in travel time and flat hours on rate plans. Default is to \'Use Average\'" data-original-title="Bill Hours Using">?</a>\n                    <div class="controls">\n                        <select class="span12" name="billHoursUsing.id" class="input-block-level">\n                            ' +
((__t = ( selectOptions(App.dict.billHoursUsing, {noSelection: {id: '', name: '[Choose a Rule]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="billHoursFlatRate">Bill Hours Flat Rate </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Flat rate to use if bill hours using flat rate is selected." data-original-title="Bill Hours Flat Rate">?</a>\n                    <div class="controls">\n                        <input class="span12" id="billHoursFlatRate" name="billHoursFlatRate" class="input-block-level" type="text" value="' +
__e( billHoursFlatRate ) +
'"/>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Configuration: Closing Configuration</h4>\n\n            <div class="row-fluid">\n\n                <div class="control-group span3">\n                    <label class="control-label" for="vosRequired">Enable VoS Required </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enforce upload of VoS while closing a job. This flag when checked enables VoS upload for all customers and a similar config value in Customer Config takes precedence. If unchecked, VoS is disabled for all." data-original-title="VoS Required">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="vosRequired" name="vosRequired" ';
 if (vosRequired) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label" for="eSignatureEnabled">Enable eSignature Required </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Applicable for mobile site only. Enforce eSignature while closing a job. This flag when checked enables eSignature for all customers and a similar config value in Customer Config takes precedence. If unchecked, eSignature is disabled for all." data-original-title="Enable eSignature Required">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="eSignatureEnabled" name="eSignatureEnabled" ';
 if (eSignatureEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label" for="eSignatureConfirmationEnabled">Enable eSignature Confirmation </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Applicable for mobile site only. Present confirmation details while collecting eSignature. " data-original-title="Enable eSignature Confirmation">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="eSignatureConfirmationEnabled" name="eSignatureConfirmationEnabled" ';
 if (eSignatureConfirmationEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label" for="eSignatureGracePeriod">eSignature Grace Period (Minutes) </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Applicable for mobile site only. The period in minutes that eSignatures are allowed after the actual end time of a job. If not set eSignatures are allowed at any time " data-original-title="eSignature Grace Period">?</a>\n                    <div class="controls">\n                        <input id="eSignatureGracePeriod" name="eSignatureGracePeriod" type="text" value="' +
__e( eSignatureGracePeriod ) +
'"/>\n                        <p class="help-block"></p>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span6">\n                    <label class="control-label" for="disclaimerEnabled">Enable Interpreter Disclaimer </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable display of disclaimer text to interpreters" data-original-title="Enable Interpreter Disclaimer">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="disclaimerEnabled" name="disclaimerEnabled" ';
 if (disclaimerEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="disclaimer">Interpreter Disclaimer </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Disclaimer text that needs to displayed to interpreters while closing a booking" data-original-title="Interpreter Disclaimer">?</a>\n                    <div class="controls">\n                        <textarea style="width:100%;" class="wysiwyg" id="disclaimer" name="disclaimer">' +
__e( disclaimer ) +
'</textarea>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span6">\n                    <label class="control-label" for="disclaimerCustomerEnabled">Enable Customer Disclaimer </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable display of disclaimer text to customer when signing on mobile" data-original-title="Enable Customer Disclaimer">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="disclaimerCustomerEnabled" name="disclaimerCustomerEnabled" ';
 if (disclaimerCustomerEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="disclaimerCustomer">Customer Disclaimer </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Disclaimer text that needs to displayed to customers while closing a booking" data-original-title="Customer Disclaimer">?</a>\n                    <div class="controls">\n                        <textarea style="width:100%;" class="wysiwyg" id="disclaimerCustomer" name="disclaimerCustomer">' +
__e( disclaimerCustomer ) +
'</textarea>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span6">\n                    <label class="control-label" for="enableCancelCheck">Enable Interpreter Cancellation </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable display of Cancelled on Arrival check box" data-original-title="Enable Cancel Check">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableCancelCheck" name="enableCancelCheck" ';
 if (enableCancelCheck) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="enableMinimumDurationCheck">Enable Minimum Duration Check </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable validation of minimum duration during job creation and update." data-original-title="Enable Minimum Duration Check">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableMinimumDurationCheck" name="enableMinimumDurationCheck" ';
 if (enableMinimumDurationCheck) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <!-- Flag to determine whether Close Start Time is Blank or Populated-->\n                <div class="control-group span6">\n                    <label class="control-label" for="enableBlankStartTimeClosing">Enable Blank Start Time on Job Close</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Determine whether start time and arrival time fields are blank or populated with expected start time for the close process." data-original-title="Enable blank start time for Close Process.">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableBlankStartTimeClosing" name="enableBlankStartTimeClosing" ';
 if (enableBlankStartTimeClosing) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n\n                <!-- Flag to determine whether a justification is required during closing when start time changes-->\n                <div class="control-group span6">\n                    <label class="control-label" for="enableJustificationOnChangeStartTime">Require Justification on Start Time Change</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="If the start time is changed during the closing process, this flag is used to require a justification in the notes fiels" data-original-title="Require Justification on Start Time Change.">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableJustificationOnChangeStartTime" name="enableJustificationOnChangeStartTime" ';
 if (enableJustificationOnChangeStartTime) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="row-fluid">\n                <!-- Flag to determine whether Contact Arrival Date is captured on Job Close-->\n                <div class="control-group span6">\n                    <label class="control-label" for="enableContactArrivalDate">Enable Contact Arrival Date tracking on Job Close</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Determine whether interpreter arrival time fields are tracked. Should not be used if interpreter late time tracking is on." data-original-title="Enable Interpreter arrival time for Close Process.">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableContactArrivalDate" name="enableContactArrivalDate" ';
 if (enableContactArrivalDate) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n\n                <!-- Flag to determine whether to track interpreter late time -->\n                <div class="control-group span6">\n                    <label class="control-label" for="enableContactLateTimeTracking">Enable Contact Late Time tracking on Job Close</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Determine whether interpreter late time is tracked on job close. Should not be used if interpreter arrival time tracking is on." data-original-title="Enable Interpreter late time.">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableContactLateTimeTracking" name="enableContactLateTimeTracking" ';
 if (enableContactLateTimeTracking) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Configuration: Job Offers</h4>\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="trackJobOffers">Track Job Offers</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Track which interpreters have been offered an open job" data-original-title="Track Job Offers">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="trackJobOffers" name="trackJobOffers" ';
 if (trackJobOffers) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n                <div class="control-group span6">\n                    <label class="control-label" for="jobOfferReminderHours">Job Offer Reminder Schedule</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Comma separated list of hours before a job that an open job offer should remind offered interpreters" data-original-title="Job Offer Reminder Schedule">?</a>\n                    <div class="controls">\n                        <input class="span12" type="text" id="jobOfferReminderHours" name="jobOfferReminderHours" value="' +
__e( jobOfferReminderHours ) +
'"/>\n                    </div>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="enableJobOfferPool">Enable Job Offer Pool</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable Job Offer Pool so that scheduler can choose an interpreter from a list of accepted offers." data-original-title="Enable Job Offer Pool">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableJobOfferPool" name="enableJobOfferPool" ';
 if (enableJobOfferPool) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n                <div class="control-group span6">\n                    <label class="control-label" for="jobOfferExcludeHrs">Auto Offer Exclude Hours</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Number of hours before to exclude in automated job offering. If set 24, all jobs that start in the next 24 hours will be excluded from auto offering." data-original-title="Job Offer Exclude Hours">?</a>\n                    <div class="controls">\n                        <input class="span12" type="text" id="jobOfferExcludeHrs" name="jobOfferExcludeHrs" value="' +
__e( jobOfferExcludeHrs ) +
'"/>\n                    </div>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="control-group span4">\n                    <label class="control-label" for="allowAssignedJobOffers">Allow Assigned Job Offers</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Allow job offers in the \'Assigned\' state to have job offers. Note that the interpreters will not be able to self-assign to these offers." data-original-title="Allow Assigned Job Offers">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="allowAssignedJobOffers" name="allowAssignedJobOffers" ';
 if (allowAssignedJobOffers) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n                <div class="control-group span4">\n                    <label class="control-label" for="enableAutoOffer">Enable Auto Offering</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enables automatic job offering." data-original-title="Enable Auto Offering">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableAutoOffer" name="enableAutoOffer" ';
 if (enableAutoOffer) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n                <div class="control-group span4">\n                    <label class="control-label" for="includeUnavailableInterpreters">Include Unavailable Interpreters</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Include Unavailable Interpreters during Auto Offer and Bulk Offer">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="includeUnavailableInterpreters" name="includeUnavailableInterpreters" ';
 if (includeUnavailableInterpreters) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="showCustomerOnOffer">Show Customer On Offers List View</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Show the customer name on the offers list view on web and mobile." data-original-title="Show Customer On Offers List View">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="showCustomerOnOffer" name="showCustomerOnOffer" ';
 if (showCustomerOnOffer) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n                <div class="control-group span6">\n                    <label class="control-label" for="showLocationOnOffer">Show Location On Offers List View</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Show the location on the offers list view on web and mobile." data-original-title="Show Location On Offers List View">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="showLocationOnOffer" name="showLocationOnOffer" ';
 if (showLocationOnOffer) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="control-group span4">\n                    <label class="control-label" for="enableOfferEmails">Enable Auto Job Offer Emails</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enables job offering and reminder emails sent to interpreters.">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableOfferEmails" name="enableOfferEmails" ';
 if (enableOfferEmails) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n                <div class="control-group span4">\n                    <label class="control-label" for="enableOfferActionSms">Enable Offer Actions via SMS</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enables whether an interpreter responding to an offer via SMS can take action directly on the offer by sending Yes or No.">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableOfferActionSms" name="enableOfferActionSms" ';
 if (enableOfferActionSms) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n                <div class="control-group span4">\n                    <label class="control-label" for="enableDailyOfferEmails">Enable Daily Job Offer Digest</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enables daily job offer emails in a digest format.">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableDailyOfferEmails" name="enableDailyOfferEmails" ';
 if (enableDailyOfferEmails) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Configuration: Sage Export Accounts / QuickBooks Online Integration / QuickBooks Desktop</h4>\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="accountsReceivableAccount">Receivable Account</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Accounts receivable account, used for Sage export and QuickBooks online integration" data-original-title="Receivable account">?</a>\n                    <div class="controls">\n                        <input class="span12" type="text" id="accountsReceivableAccount" name="accountsReceivableAccount" value="' +
__e( accountsReceivableAccount ) +
'"/>\n                    </div>\n                </div>\n                <div class="control-group span6">\n                    <label class="control-label" for="accountsPayableAccount">Payable Account</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Accounts payable account, used for Sage export and QuickBooks online integration" data-original-title="Payable account">?</a>\n                    <div class="controls">\n                        <input class="span12" type="text" id="accountsPayableAccount" name="accountsPayableAccount" value="' +
__e( accountsPayableAccount ) +
'"/>\n                    </div>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="accountsIntegrationDateFormat">Integration Date Format</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Accounts Integration Date Format, used for Sage export" data-original-title="Integration Date Format">?</a>\n                    <div class="controls">\n                        <input class="span12" type="text" id="accountsIntegrationDateFormat" name="accountsIntegrationDateFormat" value="' +
__e( accountsIntegrationDateFormat ) +
'"/>\n                    </div>\n                </div>\n                <div class="control-group span3">\n                    <label class="control-label" for="qbUseAccountingReferences">Use Accounting References</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Use customer and interpreter accounting references when integrating with QB online and QB desktop. The default is to use the customer and interpreter names directly." data-original-title="Use Accounting References">?</a>\n                    <div class="controls">\n                        <input class="span12" type="checkbox" id="qbUseAccountingReferences" name="qbUseAccountingReferences" ';
 if (qbUseAccountingReferences) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n                <div class="control-group span3">\n                    <label class="control-label" for="qbTimeActivityEnabled">Time Activity Enabled</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enabling this flag will create Time Activity records in QuickBooks instead of invoices and payments when pushing invoices and payment. When enabled invoices and payments will not be created, however a Time Activity will be created for each line item on the invoice or payment instead." data-original-title="Time Activity Enabled">?</a>\n                    <div class="controls">\n                        <input class="span12" type="checkbox" id="qbTimeActivityEnabled" name="qbTimeActivityEnabled" ';
 if (qbTimeActivityEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Configuration: Password Expiry</h4>\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="enablePasswordExpiry">Enable Password Expiry</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="User passwords will expire after password duration" data-original-title="Enable Password Expiry">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enablePasswordExpiry" name="enablePasswordExpiry" ';
 if (enablePasswordExpiry) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n                <div class="control-group span6">\n                    <label class="control-label" for="passwordDuration">Password duration (days)</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Days until a password expires" data-original-title="Password duration">?</a>\n                    <div class="controls">\n                        <input class="span12" type="text" id="passwordDuration" name="passwordDuration" value="' +
__e( passwordDuration ) +
'"/>\n                    </div>\n                </div>\n            </div>\n\n            <h4>Configuration: Miscellaneous</h4>\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label class="control-label" for="enableInclusiveRatingSearch">Enable Inclusive Rating Search</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable inclusive rating search" data-original-title="Enable Inclusive Rating Search">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="enableInclusiveRatingSearch" name="enableInclusiveRatingSearch" ';
 if (enableInclusiveRatingSearch) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n\n                <div class="control-group span6">\n                    <label class="control-label" for="showColInterpreterTimezone">Show Interpreter Time Column</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Show column with local time for the interpreter." data-original-title="Show Interpreter Time Column">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="showColInterpreterTimezone" name="showColInterpreterTimezone" ';
 if (showColInterpreterTimezone) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n\n        </section>\n\n\n        <h4>Configuration: Reference Fields</h4>\n\n        <div id="referenceCodeConfigs">\n\n        </div>\n        <div class="row-fluid">\n            <a href="javascript:void(0);" class="span8 addReferenceCodeConfig"><i class="icon icon-plus-sign"></i>Add Reference</a>\n        </div>\n\n    </fieldset>\n</form>\n\n';

}
return __p
};

this["JST"]["company/config/companyconsumers/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4>Consumer Configuration</h4>\n<br>\n<form class="form-vertical">\n    <fieldset>\n        <section>\n        <div class="row-fluid">\n\n            <div class="control-group span4">\n                <label class="control-label" for="enableConsumer">Enable Consumer</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Enable Consumers." data-original-title="Enable Consumers" tabindex="-1">?</a>\n                <div class="controls">\n                    <input id="enableConsumer" name="enableConsumer" type="checkbox" ';
 if (enableConsumer) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <div class="control-group span4">\n                <label class="control-label" for="customerSpecificConsumer"> Customer Specific? </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Customer specific Consumers." data-original-title="Enable Customer Specific Consumers" tabindex="-1">?</a>\n                <div class="controls">\n                    <input id="customerSpecificConsumer" name="customerSpecificConsumer" type="checkbox" ';
 if (customerSpecificConsumer) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <div class="control-group span4">\n                <label class="control-label" for="consumerCountEnabled">Enable Consumer Count</label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable Consumer Count for close process." data-original-title="Enable Consumer Count">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="consumerCountEnabled" name="consumerCountEnabled" ';
 if (consumerCountEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n        </div>\n        </section>\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["company/config/companydetails/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<section id="companyDetails">\n    <h4 class="well">Company Details</h4>\n    <!-- left column -->\n    <div class="row-fluid">\n        <div class="span6">\n            <!-- company name -->\n            <div class="control-group">\n                <label class="control-label required" for="name">Company Name </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The company name that will be used for all display purposes." data-original-title="Company Name">?</a>\n                <div class="controls">\n                    <input class="span12" id="name" name="name" type="text" value="' +
__e( name ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n\n            <!-- company extra information -->\n            <div class="control-group">\n                <label class="control-label" for="nameExtra">Additional Name Information</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Any additional information to be added to official paperwork to qualify the company name e.g. registered company name." data-original-title="Additional Name Information">?</a>\n                <div class="controls">\n                    <input class="span12" id="nameExtra" name="nameExtra" type="text" value="' +
__e( nameExtra ) +
'"/>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n\n            <!-- tax identifier -->\n            <div class="control-group">\n                <label class="control-label" for="taxId">Tax Identifier</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Registered tax number e.g. Employer Identify Number (EIN), VAT #." data-original-title="Tax Identifier">?</a>\n                <div class="controls">\n                    <input class="span12" id="taxId" name="taxId" type="text" value="' +
__e( taxId ) +
'"/>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n\n            <!-- description of tax identifier -->\n            <div class="control-group">\n                <label class="control-label" for="taxIdDescription">Tax Identifier Description</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Descriptive name for the tax identifier to appear on paperwork e.g. EIN, VAT#." data-original-title="Tax Identifier Name">?</a>\n                <div class="controls">\n                    <input class="span12" id="taxIdDescription" name="taxIdDescription" type="text" value="' +
__e( taxIdDescription ) +
'"/>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n\n        </div> <!-- / left column -->\n\n        <!-- right column -->\n        <div class="span6">\n\n            <!-- website -->\n            <div class="control-group">\n                <label class="control-label" for="website">Website</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Web address (URL) of your website." data-original-title="Website">?</a>\n                <div class="controls">\n                    <input class="span12" id="website" name="website" type="text" value="' +
__e( website ) +
'"/>\n                </div>\n            </div>\n\n            <!-- notes -->\n            <div class="control-group">\n                <label class="control-label" for="notes">Notes</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Miscellaneous company notes. For information purposes only, not currently used." data-original-title="Notes">?</a>\n                <div class="controls">\n                    <textarea class="span12" id="notes" name="notes">' +
__e( notes ) +
'</textarea>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n\n            <!-- splash message -->\n            <div class="control-group">\n                <label class="control-label required" for="splashMessage">Splash Message </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Message to be displayed on the entry page for customers and interpreters after logging in.<p>Recommend to include emergency contact information for your agency." data-original-title="Splash Message">?</a>\n                <div class="controls">\n                    <textarea style="width:100%;" class="wysiwyg" id="splashMessage" name="splashMessage">' +
__e( splashMessage ) +
'</textarea>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div> <!-- / right column -->\n    </div> <!-- / row -->\n    </section> <!-- / details -->\n\n    <section id="contact">\n    <h4 class="well">Contact Information</h4>\n    <!-- left column -->\n    <div class="row-fluid">\n        <div class="span6">\n            <div id="numbers">\n\n            </div>\n\n            <a href="javascript:void(0);" class="addNumber"><i class="icon icon-plus-sign"></i>Add phone number</a>\n\n        </div> <!-- / left column -->\n\n\n        <!-- right column -->\n        <div class="span6">\n            <div id="emails">\n\n            </div>\n\n            <a href="javascript:void(0);" class="addEmail"><i class="icon icon-plus-sign"></i>Add email address</a>\n\n        </div> <!-- / right column -->\n    </div> <!-- / row -->\n    </section> <!-- / contact -->\n\n    <section id="address">\n    <h4 class="well">Addresses</h4>\n    <!-- left column -->\n    <div class="row-fluid" id="addresses">\n\n    </div>\n\n    <a href="javascript:void(0);" class="addAddress"><i class="icon icon-plus-sign"></i>Add address</a>\n</section> <!-- / address -->\n';

}
return __p
};

this["JST"]["company/config/companynotifications/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4>Notifications</h4>\n<form class="form-vertical">\n    <fieldset>\n        <section>\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="notifySystem">Enable System Audit Notifications</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable system audit notifications." data-original-title="System Notifications">?</a>\n                <div class="controls">\n                    <input id="notifySystem" name="notifySystem" type="checkbox" ';
 if (notifySystem) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <!-- email notifications -->\n            <div class="control-group span3">\n                <label class="control-label required" for="notificationEmail">System Audit Notifications </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Email address to send all system level audit notifications for changes to bookings, contacts and customers." data-original-title="System Notifications">?</a>\n                <div class="controls">\n                    <input id="notificationEmail" name="notificationEmail" type="text" value="' +
__e( notificationEmail ) +
'"/>\n                    <p class="help-block">A valid email address is required</p>\n                </div>\n            </div>\n\n        </div>\n\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="notifyCompany">Enable Company Notifications</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable agency email notifications. All notifications are also sent to the Company Cc email address" data-original-title="Company Notifications">?</a>\n                <div class="controls">\n                    <input id="notifyCompany" name="notifyCompany" type="checkbox" ';
 if (notifyCompany) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <!-- cc for company email notifications -->\n            <div class="control-group span3">\n                <label class="control-label required" for="notificationCcEmail">Cc Email </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Email address to Cc for all company notifications." data-original-title="Cc Email">?</a>\n                <div class="controls">\n                    <input id="notificationCcEmail" name="notificationCcEmail" type="text" value="' +
__e( notificationCcEmail ) +
'"/>\n                    <p class="help-block">A valid email address is required</p>\n                </div>\n            </div>\n\n            <!-- cc for company email notifications -->\n            <div class="control-group span3">\n                <label class="control-label required" for="notificationBccEmail">Bcc Email </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Email address to Bcc for all company notifications." data-original-title="Bcc Email">?</a>\n                <div class="controls">\n                    <input id="notificationBccEmail" name="notificationBccEmail" type="text" value="' +
__e( notificationBccEmail ) +
'"/>\n                    <p class="help-block">A valid email address is required</p>\n                </div>\n            </div>\n\n        </div>\n\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="notifyCustomers">Enable Customer Notifications</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable customer email notifications." data-original-title="Customer Notifications">?</a>\n                <div class="controls">\n                    <input id="notifyCustomers" name="notifyCustomers" type="checkbox" ';
 if (notifyCustomers) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <!-- reply to for email notifications -->\n            <div class="control-group span3">\n                <label class="control-label required" for="notificationReplyTo">Reply To Email </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Email address to be used as \'Reply To\' address for all notifications. Otherwise defaults to the currently logged in users\' email address." data-original-title="Reply To Email">?</a>\n                <div class="controls">\n                    <input id="notificationReplyTo" name="notificationReplyTo" type="text" value="' +
__e( notificationReplyTo ) +
'"/>\n                    <p class="help-block">A valid email address is required</p>\n                </div>\n            </div>\n\n        </div>\n\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="notifyContacts">Enable Contact Notifications</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable contact email notifications." data-original-title="Contact Notifications">?</a>\n                <div class="controls">\n                    <input id="notifyContacts" name="notifyContacts" type="checkbox" ';
 if (notifyContacts) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <!-- bcc email address for quotation notifications -->\n            <div class="control-group span3">\n                <label class="control-label required" for="quotationBcc">Bcc for Quotation </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Email address to be notified by Bcc for quotation emails." data-original-title="Quotation Bcc">?</a>\n                <div class="controls">\n                    <input id="quotationBcc" name="quotationBcc" type="text" value="' +
__e( quotationBcc ) +
'"/>\n                    <p class="help-block">A valid email address is required</p>\n                </div>\n            </div>\n\n            <!-- bcc email address for invoice notifications -->\n            <div class="control-group span3">\n                <label class="control-label required" for="invoiceBcc">Bcc for Invoice </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Email address to be notified by Bcc for invoice emails." data-original-title="Invoice Bcc">?</a>\n                <div class="controls">\n                    <input id="invoiceBcc" name="invoiceBcc" type="text" value="' +
__e( invoiceBcc ) +
'"/>\n                    <p class="help-block">A valid email address is required</p>\n                </div>\n            </div>\n\n\n\n        </div>\n\n        <div class="row-fluid">\n            <div class="control-group span3">\n                <label class="control-label" for="enableJobCompleteEmails">Enable Job Complete Emails</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Notify requestor and interpreter manager when the job has been verified / completed." data-original-title="Notify Job Complete">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="enableJobCompleteEmails" name="enableJobCompleteEmails" ';
 if (enableJobCompleteEmails) { ;
__p += ' checked ';
 } ;
__p += ' value=""/>\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="enableConfirmationEmails">Enable Confirmation Emails</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable or disable all confirmation emails across the system. This must be enabled and at least one option to send confirmation emails on assign or confirm before any confirmation emails will be sent." data-original-title="Enable Confirmation Emails">?</a>\n                <div class="controls">\n                    <input id="enableConfirmationEmails" name="enableConfirmationEmails" type="checkbox" ';
 if (enableConfirmationEmails) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <div class="control-group span3">\n                <label class="control-label" for="confirmOnAssignment">Send Confirmation Emails on Assignment</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Send Confirmation Emails on Assignment. Enable Confirmation Emails must be checked." data-original-title="Confirm on Assignment.">?</a>\n                <div class="controls">\n                    <input id="confirmOnAssignment" name="confirmOnAssignment" type="checkbox" ';
 if (confirmOnAssignment) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <div class="control-group span3">\n                <label class="control-label" for="confirmOnConfirm">Send Confirmation Emails on Interpreter Confirmation</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Send Confirmation Emails on Interpreter Confirmation. Enable Confirmation Emails must be checked." data-original-title="Confirm on Interpreter Confirmation">?</a>\n                <div class="controls">\n                    <input id="confirmOnConfirm" name="confirmOnConfirm" type="checkbox" ';
 if (confirmOnConfirm) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n        </div>\n\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="vosAttachmentEnabled">Enable VoS Attachment </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable VoS to be sent as attachment in confirmation email" data-original-title="Enable VoS attachment">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="vosAttachmentEnabled" name="vosAttachmentEnabled" ';
 if (vosAttachmentEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <div class="control-group span3">\n                <label class="control-label" for="vosAttachmentEnabled">Enable ics Attachment </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable Calendar event ics to be sent as attachment in confirmation email" data-original-title="Enable ics attachment">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="icsAttachmentEnabled" name="icsAttachmentEnabled" ';
 if (icsAttachmentEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <div class="control-group span3">\n                <label class="control-label" for="notifyImportantUpdates">Enable Important Updates Notifications</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Send notifications on important updates, which are configured for your agency." data-original-title="Important Updates Notifications">?</a>\n                <div class="controls">\n                    <input id="notifyImportantUpdates" name="notifyImportantUpdates" type="checkbox" ';
 if (notifyImportantUpdates) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="remindConfirmBookings">Remind Confirm Bookings?</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Send email to interpreters to remind about unconfirmed bookings." data-original-title="Remind confirm bookings">?</a>\n                <div class="controls">\n                    <input id="remindConfirmBookings" name="remindConfirmBookings" type="checkbox" ';
 if (remindConfirmBookings) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <div class="control-group span6">\n                <label class="control-label" for="confirmReminderDays">Number of days, in the future, from today for Confirmation Reminders </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Number of subsequent days from today to be included for booking confirmation reminders." data-original-title="Subsequent days for confirmation reminders">?</a>\n                <div class="controls">\n                    <input id="confirmReminderDays" name="confirmReminderDays" type="text" value="' +
__e( confirmReminderDays ) +
'"/>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="remindUpcomingBookings">Remind Upcoming Bookings?</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Send email to interpreters to remind about upcoming bookings a day before." data-original-title="Remind upcoming bookings">?</a>\n                <div class="controls">\n                    <input id="remindUpcomingBookings" name="remindUpcomingBookings" type="checkbox" ';
 if (remindUpcomingBookings) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <div class="control-group span6">\n                <label class="control-label" for="upcomingReminderDays">Number of days, in the future, from today for Upcoming Reminders </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Number of subsequent days from today to be included for upcoming booking reminders." data-original-title="Subsequent days for upcoming reminders">?</a>\n                <div class="controls">\n                    <input id="upcomingReminderDays" name="upcomingReminderDays" type="text" value="' +
__e( upcomingReminderDays ) +
'"/>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="remindCloseBookings">Remind to Close Bookings?</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Send email to interpreters to remind to close bookings." data-original-title="Remind close bookings">?</a>\n                <div class="controls">\n                    <input id="remindCloseBookings" name="remindCloseBookings" type="checkbox" ';
 if (remindCloseBookings) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <div class="control-group span6">\n                <label class="control-label" for="closeReminderDays">Number of days, in the past, from today for Close Reminders </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Number of prior days to be included for booking close reminders. " data-original-title="Prior days for close reminders">?</a>\n                <div class="controls">\n                    <input id="closeReminderDays" name="closeReminderDays" type="text" value="' +
__e( closeReminderDays ) +
'"/>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="enableEmailToSmsSupport">Enable Email to SMS </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Convert HTML notifications to plain text for SMS support" data-original-title="Enable Email to SMS Support">?</a>\n                <div class="controls">\n                    <input type="checkbox" id="enableEmailToSmsSupport" name="enableEmailToSmsSupport" ';
 if (enableEmailToSmsSupport) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n\n            <div class="control-group span3">\n                <label class="control-label" for="daysPrior">Days prior to expiration notice (Employment Eligibility) </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Number of days before email notification is sent to contact reminding about employment eligibility expiration." data-original-title="Days prior notice (Employment Eligibility)">?</a>\n                <div class="controls">\n                    <input id="daysPrior" name="daysPrior" type="text" value="' +
__e( daysPrior ) +
'"/>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n\n            <div class="control-group span3">\n                <label class="control-label" for="closeReminderAgeDays">Age (days) of bookings reminded to be closed </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Number days after which the booking becomes eligible to be reminded for closure. " data-original-title="Age days for close reminder">?</a>\n                <div class="controls">\n                    <input id="closeReminderAgeDays" name="closeReminderAgeDays" type="text" value="' +
__e( closeReminderAgeDays ) +
'"/>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n\n        </div>\n\n        <div class="row-fluid">\n\n            <div class="control-group span3">\n                <label class="control-label" for="scheduledVideoReadyMinutesPrior"># Minutes Prior for Scheduled Video Reminder </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Number of minutes prior to a scheduled video call to send the video ready reminder email. " data-original-title="Minutes Prior Video Ready">?</a>\n                <div class="controls">\n                    <input id="scheduledVideoReadyMinutesPrior" name="scheduledVideoReadyMinutesPrior" type="text" value="' +
__e( scheduledVideoReadyMinutesPrior ) +
'"/>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n\n            <div class="control-group span3">\n                <label class="control-label" for="scheduledPhoneReadyMinutesPrior"># Minutes Prior for Scheduled Phone Reminder </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Number of minutes prior to a scheduled phone call to send the phone ready reminder email. " data-original-title="Minutes Prior Phone Ready">?</a>\n                <div class="controls">\n                    <input id="scheduledPhoneReadyMinutesPrior" name="scheduledPhoneReadyMinutesPrior" type="text" value="' +
__e( scheduledPhoneReadyMinutesPrior ) +
'"/>\n                    <p class="help-block"></p>\n                </div>\n            </div>\n\n        </div>\n\n        </section>\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["company/config/deactivationreason/list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Deactivation Reasons</h4>\n<br/>\n<div id="deactivation_reason_container">\n    <ul id="deactivation_reasons" class="deactivations unstyled">\n\n    </ul>\n    <!-- / tab-content -->\n</div>\n\n<div>\n    <label>&nbsp;</label>\n    <a id="add_deactivation_reason" href="javascript:void(0);" title="Add Deactivation Reason"><span\n            style="display: inline-block; vertical-align: middle;"\n            class="icon ui-icon ui-icon-circle-plus"></span>Add Deactivation Reason</a>\n</div>\n';

}
return __p
};

this["JST"]["company/config/deactivationreason/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group span3">\n        <label class="control-label required" for="name">Reason </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"\n           data-content="Deactivation reason." data-original-title="Name">?</a>\n\n        <div class="controls span12">\n            <input class="input-block-level" id="name" name="name" type="text" value="' +
__e( obj.name ) +
'"/>\n\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span3">\n        <div class="span8">\n            <label class="control-label" for="interactionEnabled">Interaction Enabled </label>\n\n            <div class="controls">\n                <input id="interactionEnabled" name="interactionEnabled" type="checkbox"\n                       value="' +
__e( obj.interactionEnabled ) +
'" ';
 if (obj.interactionEnabled) { ;
__p += 'checked';
 } ;
__p += '/>\n            </div>\n        </div>\n        <div class="span3">\n            <label class="control-label" for="interactionEnabled">Enabled</label>\n\n            <div class="controls">\n                <input id="enabled" name="enabled" type="checkbox"\n                       value="' +
__e( obj.enabled ) +
'" ';
 if (obj.enabled) { ;
__p += 'checked';
 } ;
__p += '/>\n            </div>\n        </div>\n    </div>\n    <div class="span1">\n        <label>&nbsp;</label>\n        <a id="saveDeactivation" href="javascript:void(0);" title="Save Deactivation Reason"><i class="icon-save"></i>\n            Save</a>\n    </div>\n    ';
 if (!obj.id) { ;
__p += '\n    <div class="span1">\n        <label>&nbsp;</label>\n        <a id="deleteDeactivation" href="javascript:void(0);" title="Delete Deactivation Reason"><i\n                class="icon-remove"></i> Delete</a>\n    </div>\n    ';
 } ;
__p += '\n</div>\n';

}
return __p
};

this["JST"]["company/config/helptext/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<section id="help-text">\n    <div class="row-fluid">\n        <div class="span12">\n            <!-- help text closing -->\n            <div class="control-group">\n                <label class="control-label" for="helpTextClosing">Closing Help Text</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Add help text to describe the closing process for your organization." data-original-title="Closing Help Text">?</a>\n                <div class="controls">\n                    <textarea class="span12 wysiwyg-advanced" id="helpTextClosing" name="helpTextClosing">' +
__e( obj.helpTextClosing ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n    </div>\n</section> <!-- / help-text -->\n';

}
return __p
};

this["JST"]["company/config/holiday/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group span2">\n        <label class="control-label required" for="name">Name </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Name of the holiday." data-original-title="Name">?</a>\n        <div class="controls">\n            <input class="span12" id="name" name="name" type="text" value="' +
__e( name ) +
'"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label class="control-label required" for="date">Date </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Date of the holiday." data-original-title="Date">?</a>\n        <div class="controls">\n            <input class="span12" name="date" type="text" value="' +
__e( date ) +
'"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span3">\n        <label class="control-label" for="description">Description </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Optional description of the holiday." data-original-title="Description">?</a>\n        <div class="controls">\n            <input class="span12" id="description" name="description" type="text" value="' +
__e( description ) +
'"/>\n        </div>\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span1">\n        <label>&nbsp;</label>\n        <a class="saveHoliday" href="javascript:void(0);" title="Save Holiday"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-disk"></span>Save</a>\n    </div>\n    <div class="span1">\n        <label>&nbsp;</label>\n        <a class="deleteHoliday" href="javascript:void(0);" title="Delete Holiday"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["company/config/organizationlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Organizations</h3>\n<p>Organizations are used to provide an alias for customers with a common parent accounting reference.</p>\n<div class="list-container"></div>\n<div class="pagination span8">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n\n<h4 class="span8">Create new organization</h4>\n<form class="form-horizontal well well-small span8 new-organization">\n    <div class="control-group">\n        <!-- TODO figure out a way to wrap the input in the label -->\n        <label class="control-label">Name</label>\n        <div class="controls">\n            <input type="text" name="name" value="" placeholder="Name">\n        </div>\n    </div>\n    <div class="control-group">\n        <!-- TODO figure out a way to wrap the input in the label -->\n        <label class="control-label">Contract</label>\n        <div class="controls">\n            <input type="text" name="contract" value="" placeholder="Contract">\n        </div>\n    </div>\n    <div class="control-group">\n        <!-- TODO figure out a way to wrap the input in the label -->\n        <label class="control-label">Accounting Reference</label>\n        <div class="controls">\n            <input type="text" name="accountingReference" value="" placeholder="Accounting Reference">\n        </div>\n    </div>\n    <div class="control-group">\n        <div class="controls">\n            <button class="btn btn-primary js-create">Create</button>\n        </div>\n    </div>\n</form>\n';

}
return __p
};

this["JST"]["company/config/organizationlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<form class="form-horizontal well well-small span8">\n    <div class="control-group">\n        <!-- TODO figure out a way to wrap the input in the label -->\n        <label class="control-label">Name</label>\n        <div class="controls">\n            <input type="text" name="name" value="' +
__e(name) +
'" placeholder="Name">\n        </div>\n    </div>\n    <div class="control-group">\n        <!-- TODO figure out a way to wrap the input in the label -->\n        <label class="control-label">Contract</label>\n        <div class="controls">\n            <input type="text" name="contract" value="' +
__e(contract) +
'" placeholder="Contract">\n        </div>\n    </div>\n    <div class="control-group">\n        <!-- TODO figure out a way to wrap the input in the label -->\n        <label class="control-label">Accounting Reference</label>\n        <div class="controls">\n            <input type="text" name="accountingReference" value="' +
__e(accountingReference) +
'" placeholder="Accounting Reference">\n        </div>\n    </div>\n    <div class="control-group">\n        <div class="controls">\n            <button class="btn btn-primary js-update">Update</button>\n            <button class="btn btn-danger js-delete">Delete</button>\n        </div>\n    </div>\n</form>\n';

}
return __p
};

this["JST"]["company/config/privacypolicydocument/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Add File</h4>\n<br/>\n<div class="span5">\n    <div id="errorContainer">\n    </div>\n    <div id="successContainer">\n    </div>\n    <form action="' +
__e(App.config.context) +
'/upload/file" method="post" name="fileUpload" enctype="multipart/form-data" id="fileUpload">\n        <fieldset>\n            <div class="hidden-params">\n                <input type="hidden" id="company.id" name="company.id" value="' +
__e( App.config.company.id ) +
'"/>\n                <input type="hidden" id="parentEntityType" name="parentEntityType" value="CompanyConfig"/>\n                <input type="hidden" id="parentEntityClass" name="parentEntityClass" value="com.ngs.id.model.CompanyConfig"/>\n                <input type="hidden" id="parentEntityId" name="parentEntityId" value="' +
__e( id ) +
'"/>\n                <input type="hidden" id="type.id" name="type.id" value="' +
__e( App.dict.documentType['misc'].id ) +
'"/>\n                <input type="hidden" id="isIE" name="isIE" value="false"/>\n            </div>\n            <div class="row">\n                <div class="span4">\n                    <label>Select file to upload</label>\n                    <div class="input-append customfile">\n                        <input type="file" class="input-xlarge" name="theFile" id="theFile" />\n                    </div>\n                </div>\n            </div>\n\n            <div class="progress progress-success active">\n                <div class="bar" style="width: 0%;"></div>\n            </div>\n\n            <div class="row">\n                <div class="span4">\n                    <br>\n                    <button class="btn btn-primary" type="submit" id="upload" value="upload" data-loading-text="Uploading File ...">Upload File</button>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>';

}
return __p
};

this["JST"]["company/config/referencecode/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!--\nLEGACY! Can be REMOVED, once confirmed\n-->\n<!-- config (' +
__e( id ) +
') -->\n<div class="control-group span2">\n    <label class="control-label required" for="label">Reference Label </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The label to display for this reference field" data-original-title="Reference Label">?</a>\n    <div class="controls">\n        <input type="text" id="label" name="label" value="' +
__e( label ) +
'"/>\n        <p class="help-block">Required field</p>\n    </div>\n</div>\n\n<div class="control-group span2">\n    <label class="control-label" for="regEx">Validation (RegEx) </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Regular expression to validate this field against" data-original-title="Validation Regular Expression">?</a>\n    <div class="controls">\n        <input type="text" id="regEx" name="regEx" value="' +
__e( regEx ) +
'"/>\n    </div>\n</div>\n\n<div class="control-group span1">\n    <label class="control-label" for="required">Required </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Is this a required reference field to be entered." data-original-title="Required">?</a>\n    <div class="controls">\n        <input type="checkbox" id="required" name="required" ';
 if (required) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n    </div>\n</div>\n\n<div class="control-group span1">\n    <label class="control-label" for="masked">Masked </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Does this reference field contain sensitive information that should be partially masked." data-original-title="Masked">?</a>\n    <div class="controls">\n        <input type="checkbox" id="masked" name="masked" ';
 if (masked) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n    </div>\n</div>\n\n<div class="control-group span1">\n    <label class="control-label" for="masked">Hidden </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Hide this reference field when displayed in a list view of reference fields (e.g. invoice / payment / email)." data-original-title="Hide">?</a>\n    <div class="controls">\n        <input type="checkbox" id="hidden" name="hidden" ';
 if (hidden) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n    </div>\n</div>\n\n<div class="control-group span1">\n    <label class="control-label" for="groupBy">Group By </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Group reference fields containing the same value on invoices. Must be used in combination with the Group By Reference hierarchy setting." data-original-title="Group By">?</a>\n    <div class="controls">\n        <input type="checkbox" id="groupBy" name="groupBy" ';
 if (groupBy) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n    </div>\n</div>\n\n<div class="control-group span2">\n    <label class="control-label" for="helpText">Help Text </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Help text to appear in the help bubbles for this reference." data-original-title="Help Text">?</a>\n    <div class="controls">\n        <input type="input" class="input-block-level" id="helpText" name="helpText" value="' +
__e( helpText ) +
'"/>\n    </div>\n</div>\n\n';
 if (!id) { ;
__p += '\n<div class="span1">\n    <label>&nbsp;</label>\n    <a class="deleteReferenceCodeConfig" href="javascript:void(0);" title="Delete Field"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n</div>\n';
 } ;
__p += '\n\n';

}
return __p
};

this["JST"]["company/config/region/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- reference (' +
__e( obj.id ) +
') -->\n<div class="form-inline">\n    <div class="control-group">\n\n        <label class="control-label required" for="name">Name </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Name of the region. If the region is specific to a customer, considering prefixing with customer name." data-original-title="Region Name">?</a>\n        <div class="controls">\n            <input id="name" name="name" type="text" value="' +
__e( obj.name ) +
'"/>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <label class="control-label required" for="enabled">Enabled </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable or disable this region. Disabled regions will not appear for selection." data-original-title="Enabled">?</a>\n        <div class="controls">\n            <input id="enabled" name="enabled" type="checkbox" value="true" ';
 if (enabled) { ;
__p += 'checked';
 } ;
__p += '/>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <label class="control-label required" for="isBilling">Billing? </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Is this region used for billing purposes." data-original-title="Is Billing?">?</a>\n        <div class="controls">\n            <input id="isBilling" name="isBilling" type="checkbox" value="true" ';
 if (isBilling) { ;
__p += 'checked';
 } ;
__p += '/>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <a href="javascript:void(0);" id="saveRegion"><i class="icon icon-save"></i> Save</a>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["company/config/regions/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Regions</h4>\n<form>\n    <div class="regions">\n\n    </div>\n\n    <div class="btn-group">\n        <button class="btn btn-primary model-add" type="button" value="Add Region">Add Region</button>\n    </div>\n</form>\n';

}
return __p
};

this["JST"]["company/config/snippet/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="span6">\n                <div class="control-group">\n                    <label class="control-label" for="invoiceDescriptionSnippet">Invoice Description</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for invoice description" data-original-title="Invoice Description" tabindex="-1">?</a>\n                    <div class="controls">\n                        <textarea style="width:100%;" rows=5 class="input-block-level" id="invoiceDescriptionSnippet" name="invoiceDescriptionSnippet">' +
__e( invoiceDescriptionSnippet ) +
'</textarea>\n                    </div>\n                </div>\n            </div>\n\n            <div class="span6">\n                <div class="control-group">\n                    <label class="control-label" for="jobDescriptionSnippet">Job Description</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for job description in interpreter portal" data-original-title="Job Description" tabindex="-1">?</a>\n                    <div class="controls">\n                        <textarea style="width:100%;" rows=5 class="input-block-level" id="jobDescriptionSnippet" name="jobDescriptionSnippet">' +
__e( jobDescriptionSnippet ) +
'</textarea>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n\n<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="paymentDescriptionSnippet">Payment Description</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for payment description" data-original-title="Payment Description" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea style="width:100%;" class="input-block-level" id="paymentDescriptionSnippet" name="paymentDescriptionSnippet">' +
__e( paymentDescriptionSnippet ) +
'</textarea>\n                </div>\n            </div>\n            <div class="control-group span6">\n                <label class="control-label" for="paymentSplitDescriptionSnippet">Split Payment Description</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for split payment description" data-original-title="Split Payment Description" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea style="width:100%;" class="input-block-level" id="paymentSplitDescriptionSnippet" name="paymentSplitDescriptionSnippet">' +
__e( paymentSplitDescriptionSnippet ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n\n<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="invoiceSplitDescriptionSnippet">Split Invoice Description</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for split invoice description" data-original-title="Split Invoice Description" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="invoiceSplitDescriptionSnippet" name="invoiceSplitDescriptionSnippet">' +
__e( invoiceSplitDescriptionSnippet ) +
'</textarea>\n                </div>\n            </div>\n            <div class="control-group span6">\n                <label class="control-label" for="invoiceOrderSnippet">Invoice Order</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for invoice order. Use a and b as variables for comparison." data-original-title="Invoice Order" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="invoiceOrderSnippet" name="invoiceOrderSnippet">' +
__e( invoiceOrderSnippet ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n\n<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="invoiceGroupHeadingSnippet">Invoice Header</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for invoice header. This is used with Invoice Order to separate the invoice groupings apart from each other. For example, ${client?.accountingReference} - ${client?.name}" data-original-title="Invoice Header" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="invoiceGroupHeadingSnippet" name="invoiceGroupHeadingSnippet">' +
__e( invoiceGroupHeadingSnippet ) +
'</textarea>\n                </div>\n            </div>\n            <div class="control-group span6">\n                <label class="control-label" for="jobOfferDigestSnippet">Job Offer Digest Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for job offer digest email." data-original-title="Job Offer Digest Snippet" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="jobOfferDigestSnippet" name="jobOfferDigestSnippet">' +
__e( jobOfferDigestSnippet ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n\n<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="customerConfirmationSnippet">Customer Confirmation Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for customer confirmation digest email." data-original-title="Customer Confirmation" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="customerConfirmationSnippet" name="customerConfirmationSnippet">' +
__e( customerConfirmationSnippet ) +
'</textarea>\n                </div>\n            </div>\n            <div class="control-group span6">\n                <label class="control-label" for="contactConfirmationSnippet">Interpreter Confirmation Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for contact confirmation digest email." data-original-title="Contact Confirmation" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="contactConfirmationSnippet" name="contactConfirmationSnippet">' +
__e( contactConfirmationSnippet ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n\n<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="contactBookingCloseReminderSnippet">Interpreter Booking Close Reminder Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for interpreter close booking reminder digest email." data-original-title="Interpreter CLose Reminder" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="contactBookingCloseReminderSnippet" name="contactBookingCloseReminderSnippet">' +
__e( contactBookingCloseReminderSnippet ) +
'</textarea>\n                </div>\n            </div>\n            <div class="control-group span6">\n                <label class="control-label" for="contactBookingUpcomingReminderSnippet">Interpreter Booking Upcoming Reminder Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for interpreter upcoming reminder digest email." data-original-title="Interpreter Upcoming Reminder" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="contactBookingUpcomingReminderSnippet" name="contactBookingUpcomingReminderSnippet">' +
__e( contactBookingUpcomingReminderSnippet ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n\n<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="contactBookingConfirmReminderSnippet">Interpreter Confirmation Reminder Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for interpreter confirmation reminder digest email." data-original-title="Interpreter Confirmation Reminder" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="contactBookingConfirmReminderSnippet" name="contactBookingConfirmReminderSnippet">' +
__e( contactBookingConfirmReminderSnippet ) +
'</textarea>\n                </div>\n            </div>\n\n            <div class="control-group span6">\n                <label class="control-label" for="customerNewBookingSnippet">Customer New Booking Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for customer new booking digest email." data-original-title="Booking New (Customer)" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="customerNewBookingSnippet" name="customerNewBookingSnippet">' +
__e( customerNewBookingSnippet ) +
'</textarea>\n                </div>\n            </div>\n    </fieldset>\n</form>\n\n<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="contactUnassignSnippet">Interpreter Unassign Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for interpreter unassign digest email." data-original-title="Interpreter Unassign" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="contactUnassignSnippet" name="contactUnassignSnippet">' +
__e( contactUnassignSnippet ) +
'</textarea>\n                </div>\n            </div>\n\n            <div class="control-group span6">\n                <label class="control-label" for="customerUnassignSnippet">Customer Unassign Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for customer unassign digest email." data-original-title="Customer Unassign" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="customerUnassignSnippet" name="customerUnassignSnippet">' +
__e( customerUnassignSnippet ) +
'</textarea>\n                </div>\n            </div>\n    </fieldset>\n</form>\n\n<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="jobStatusUpdateSnippet">Job Status Update Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for Job Status update digest email." data-original-title="Job Status Update" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="jobStatusUpdateSnippet" name="jobStatusUpdateSnippet">' +
__e( jobStatusUpdateSnippet ) +
'</textarea>\n                </div>\n            </div>\n\n            <div class="control-group span6">\n                <label class="control-label" for="customerJobCompleteSnippet">Customer Job Complete Snippet</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for customer job complete digest email." data-original-title="Customer Job Complete" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="customerJobCompleteSnippet" name="customerJobCompleteSnippet">' +
__e( customerJobCompleteSnippet ) +
'</textarea>\n                </div>\n            </div>\n\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["company/config/unfulfilledreason/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group span3">\n        <label class="control-label required" for="name">Reason </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Unfulfilled reason." data-original-title="Name">?</a>\n        <div class="controls">\n            <input class="span12" id="name" name="name" type="text" value="' +
__e( name ) +
'"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span3">\n        <label class="control-label required" for="description">Description </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Description of the unfulfilled reason." data-original-title="Description">?</a>\n        <div class="controls">\n            <input class="span12" id="description" name="description" type="text" value="' +
__e( description ) +
'"/>\n            <p class="help-block">Required</p>\n        </div>\n    </div>\n    <div class="control-group span3">\n        <label class="control-label" for="enabled">Enabled </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable or disable this unfulfilled reason." data-original-title="Description">?</a>\n        <div class="controls">\n            <input id="enabled" name="enabled" type="checkbox" value="true" ';
 if (enabled) { ;
__p += 'checked';
 } ;
__p += '/>\n        </div>\n    </div>\n    <div class="span2">\n        <label>&nbsp;</label>\n        <a id="saveUnfulfilledReason" href="javascript:void(0);" title="Save Unfulfilled Reason"><i class="icon-save"></i> Save</a>\n    </div>\n    ';
 if (!id) { ;
__p += '\n    <div class="span2">\n        <label>&nbsp;</label>\n        <a id="deleteUnfulfilledReason" href="javascript:void(0);" title="Delete Unfulfilled Reason"><i class="icon-remove"></i> Delete</a>\n    </div>\n    ';
 } ;
__p += '\n</div>';

}
return __p
};

this["JST"]["company/dashboard/diary-table"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            Job Diary (<span class="currentDate"></span>) <a href="javascript:void(0);" class="printDailyCmd" title="Daily Jobs"><i class="icon-print"></i></a>\n            <br/>\n            <label class="control-label"><input type="checkbox" id="selectAll" class="selectAll" name="selectAll"/> All jobs (with current filters applied)</label>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n            &nbsp;\n            <div class="job-bulk-actions pull-right">\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n\n<div id="calendar" class="portlet-body"></div>\n';

}
return __p
};

this["JST"]["company/dashboard/export"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group-wrapper" style="margin-top: 5px; margin-right: 5px; width:inherit;">\n    <div class="btn-group">\n        <button class="btn dropdown-toggle" data-toggle="dropdown" href="#"> Export\n            <span class="caret"></span>\n        </button>\n        <ul class="dropdown-menu">\n            <!-- dropdown menu links -->\n            <li>\n                <a href="javascript:void(0);"><i class="icon-download"></i> Export Bookings <i class="icon-arrow-right"></i></a>\n                <ul class="dropdown-menu sub-menu" style="left: auto; right: 0;">\n                    <li><a class="exportCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n                    <li><a class="exportCmd" href="javascript:void(0);" data-format="csv"><i class="icon-file-alt"></i> CSV</a></li>\n                </ul>\n            </li>\n        </ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["company/dashboard/filter"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 obj.classes = " "; if (obj.roles && obj.roles.length > 0){ for(var i=0; i < obj.roles.length; i++){ obj.classes += "secured-" + obj.roles[i] + " "; } } ;
__p += '\n\n';
 if (obj.filterable === true && obj.renderable === true) {;
__p += '\n<li class="secured ' +
__e(obj.classes) +
'" ><a class="column"><input type="checkbox" class="coluddmn" name="' +
__e( obj.id ) +
'" id="' +
__e( obj.id ) +
'" checked><label for="' +
__e( obj.id ) +
'"> ' +
__e( obj.label ) +
'</label></a></li>\n';
 } else if(obj.filterable){ ;
__p += '\n<li class="secured ' +
__e(obj.classes ) +
'" ><a class="column"><input type="checkbox" class="colccumn" name="' +
__e( obj.id ) +
'" id="' +
__e( obj.id ) +
'"><label for="' +
__e( obj.id ) +
'"> ' +
__e( obj.label ) +
'</label></a></li>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["company/dashboard/important-updates"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-error">\n    <h4 class="alert-heading">Important Job Updates</h4>\n    <span class="badge badge-important">' +
__e( total ) +
'</span> <a href="' +
__e( App.config.context ) +
'/booking/updates"><strong>Pending Review</strong></a>\n</div>\n';

}
return __p
};

this["JST"]["company/dashboard/job-selector"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    <div class="modal-header">\n        <button type="button" class="close close-modal" data-dismiss="modal" aria-hidden="true">×</button>\n        <h3>Select job</h3>\n    </div>\n\n    <div class="modal-body">\n        <div class="job-selector input-append">\n            <input id="job" type="text">\n            <button class="btn cmd-widget-clear-job">\n                <i class="icon-remove"></i>\n            </button>\n        </div>\n    </div>\n\n    <div class="modal-footer">\n        <button class="btn btn-default close-modal" data-dismiss="modal" aria-hidden="true">Close</button>\n        <button class="btn btn-primary accept" disabled><i class="icon-ok"></i> Accept</button>\n    </div>\n\n</div>';

}
return __p
};

this["JST"]["company/dashboard/list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '';

}
return __p
};

this["JST"]["company/dashboard/offers-table"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            Job Offers (> 24 Hours)\n            <br/>\n            <label class="control-label"><input type="checkbox" id="selectAll" class="selectAll" name="selectAll"/> All jobs (with current filters applied)</label>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n            &nbsp;\n            <div class="job-bulk-actions pull-right">\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["company/dashboard/priority-table"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            Priority Jobs (+' +
__e(App.config.company.config.priorityPlus) +
'/-' +
__e(App.config.company.config.priorityMinus) +
' hours)\n            <br/>\n            <label class="control-label"><input type="checkbox" id="selectAll" class="selectAll" name="selectAll"/> All jobs (with current filters applied)</label>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n            &nbsp;\n            <div class="job-bulk-actions pull-right">\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["company/dashboard/select"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group reset-columns-container">\n    <button class="btn preset">Reset Columns</button>\n    <button class="btn dropdown-toggle list" data-toggle="dropdown">\n        <span class="caret"></span>\n    </button>\n    <ul class="dropdown-menu select-list" style="left: auto; right: 0;">\n\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["company/dashboard/sms-inbox-header"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span2">\n        <div><strong>' +
((__t = ( App.config.company.config.smsNumber )) == null ? '' : __t) +
'</strong></div>\n        <div class="muted font-sm">(Messages in last ' +
__e( App.config.smsinbox.daysWindow ) +
' days)</div>\n    </div>\n    <div class="span1 text-right">\n        <button class="btn btn-refresh" type="submit">\n            <i class="icon-refresh"></i>\n        </button>\n    </div>\n    <div class="span9">\n        <div class="pull-right">\n\n            <form class="form-inline">\n                <button type="button" class="btn mx-10 d-inline widget-send-adhoc-sms">\n                    <i class="icon-mobile-phone"></i> Send Ad Hoc SMS\n                </button>\n\n                <div class="input-append mx-10 d-inline">\n                    <input name="searchstring" type="text" placeholder="interpreter / job / sender">\n                    <button class="btn sms-search" type="submit">\n                        <i class="icon-search"></i>\n                    </button>\n                </div>\n\n                <div class="mx-10 d-inline">\n                    <label>Group by: </label>\n                    <select name="group">\n                        <option value="job">job</option>\n                        <option value="interpreter">interpreter</option>\n                        <option value="sender">sender</option>\n                    </select>\n                </div>\n            </form>\n\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["company/dashboard/sms-inbox-no-messages"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid sms-inbox-no-messages">\n    <div class="span12">\n        <div class="sms-inbox-no-messages-icon-container">\n            <i class="icon-inbox"></i>\n        </div>\n        <h2>No messages available</h2>\n    </div>\n</div>';

}
return __p
};

this["JST"]["company/dashboard/sms-inbox"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="sms-inbox">\n    <div class="row-fluid">\n        <div id="header" class="span12"></div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <div id="sidebar">\n                <div id="sidebarcontainer"></div>\n            </div>\n        </div>\n        <div id="messages" class="span9"></div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["company/dashboard/sms-message"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="sms-message arrow_box ' +
((__t = ( smsE164 == obj.e164To ? 'yours' : 'mine' )) == null ? '' : __t) +
'">\n    <div class="sms-message-text">\n        <div class="sms-message-parts">\n            <div class="sms-message-to" ' +
__e( name !== obj.e164To ? 'title=' + obj.e164To : '' ) +
'>\n                <strong>\n                    ' +
__e( toName ) +
'\n                </strong>\n            </div>\n\n            <div class="sms-job-context">\n                <strong>\n                    Job #' +
__e( obj.parentEntityId ) +
'\n                </strong>\n            </div>\n\n            <div class="sms-message-from" ' +
__e( name !== obj.e164From ? 'title=' + obj.e164From : '' ) +
'>\n                <strong>\n                    ' +
__e( fromName ) +
'\n                </strong>\n            </div>\n        </div>\n        <div class="sms-message-body">\n            ' +
((__t = ( obj.body )) == null ? '' : __t) +
'\n        </div>\n        ';
 if (obj.status && obj.status.id !== 1) { ;
__p += '\n        <div>\n            <span class="label label-important">Error: ' +
__e( obj.statusMessage ) +
'</span> ' +
__e( obj.providerStatusMessage ? obj.providerStatusMessage + " (" + obj.providerStatus + ")" : "" ) +
'\n        </div>\n        ';
 } ;
__p += '\n        ';
 if (obj.conversationStatus === "ambiguous") { ;
__p += '\n        <div>\n            <i class="icon-warning-sign"></i> <span class="label label-important">Ambiguous Reply. Multiple Potential Jobs.</span>\n        </div>\n        ';
 } ;
__p += '\n        <div class="message-timestamp format-datetime" data-timezone="' +
__e( App.config.user.timeZone ) +
'">\n            ' +
__e( obj.createdDate ) +
'\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["company/dashboard/sms-messages"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4 class="conversation-title">' +
((__t = ( name )) == null ? '' : __t) +
'</h4>\n\n<div class="sms-messages-container">\n    <div class="sms-messages-fade"></div>\n    <div class="sms-messages"></div>\n</div>\n\n<div class="row-fluid bottom">\n    <form class="form-horizontal">\n        <div class="options">\n\n            <div class="control-group">\n                <label class="control-label required">Job</label>\n                <div class="controls">\n                    <div class="job-selector input-append">\n                        <input id="job" type="text">\n                        <button class="btn btn-mini cmd-widget-clear-job right-transparent-button">\n                            <i class="icon-remove"></i>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label">Recipient</label>\n                <div class="controls">\n                    <select name="recipientType" class="recipient" ' +
__e( obj.fixedRecipient ? "disabled" : "" ) +
'>\n                    <option>[Recipient]</option>\n                    ' +
((__t = ( interpreterNumber ? '<option value="int">Interpreter</option>' : '' )) == null ? '' : __t) +
'\n                    ' +
((__t = ( requestorNumber ? '<option value="cus">Customer</option>' : '' )) == null ? '' : __t) +
'\n                    ' +
((__t = ( consumerNumber ? '<option value="con">Consumer</option>' : '' )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label required">To</label>\n                <div class="controls">\n                    <input name="recipient" class="to" type="text" ' +
__e( obj.fixedRecipient ? "disabled" : "" ) +
'/>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <label class="control-label">Template</label>\n                <div class="controls">\n                    <select name="templateNameKey"></select>\n                </div>\n            </div>\n\n        </div>\n\n        <div class="message">\n            <div class="composite-input">\n                <textarea placeholder="Enter SMS Content" rows="4" name="body" type="text"></textarea>\n                <div class="actions-container text-right">\n                    <button id="send" class="btn btn-send" disabled>SEND</button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>';

}
return __p
};

this["JST"]["company/dashboard/sms-sidebar-item"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="sidebar-item">\n    <div class="row-fluid">\n        <div class="span10">\n            <div class="row-fluid">\n                <div class="span12">\n                    <a class="itemdata">\n                        <strong class="sidebar-item-title">' +
((__t = ( obj.title )) == null ? '' : __t) +
'</strong> <span class="muted">' +
((__t = ( (obj.unread > 0 ? " (" + obj.unread + " unread)" : "") )) == null ? '' : __t) +
'</span>\n                    </a>\n                </div>\n            </div>\n        </div>\n\n        <div class="span2">\n            <div class="btn-group pull-right actions-dropdown">\n                <a class="btn btn-mini dropdown-toggle" data-toggle="dropdown" href="#">\n                    <span class="caret"></span>\n                </a>\n                <ul class="dropdown-menu">\n                    <li>\n                        <a href="javascript:void(0);" class="widget-view-more">\n                            <i class="icon-eye-open"></i> View Job\n                        </a>\n                    </li>\n                    <li class="hidden">\n                        <a href="#" id="viewinterpreterschedule">\n                            <i class="icon-calendar"></i> View interpreter schedule\n                        </a>\n                    </li>\n                    <li class="hidden">\n                        <a href="#" id="assigntojob">\n                            <i class="icon-hand-right"></i> Assign to job\n                        </a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid sidebar-item-time">\n        <div class="span7">\n            <span class="extra ' +
__e( obj.languageName ? 'label label-default' : '' ) +
'">' +
__e( obj.languageName ? obj.languageName : "" ) +
'</span>\n        </div>\n        <div class="span5 format-datetime text-right">\n            ' +
((__t = ( obj.createdDate )) == null ? '' : __t) +
'\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["company/dashboard/table"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            New Jobs <span id="refreshSince"></span> - <span class="new-bookings-count">0</span> <em>NEW</em> jobs found.\n            <br/>\n            <label class="control-label"><input type="checkbox" id="selectAll" class="selectAll" name="selectAll"/> All jobs (with current filters applied)</label>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n            &nbsp;\n            <div class="job-bulk-actions pull-right">\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["company/dashboard/unassigned-jobs"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-error">\n    <h4 class="alert-heading">Unassigned Jobs</h4>\n    <span class="badge badge-important">' +
__e( total ) +
'</span> <a href="' +
__e( App.config.context ) +
'/booking/unassigned"><strong> Unassigned Next ' +
__e( days ) +
' Day(s)</strong></a>\n</div>\n';

}
return __p
};

this["JST"]["company/dashboard/unconfirmed-table"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            Unconfirmed Jobs (> 24 Hours)\n            <br/>\n            <label class="control-label"><input type="checkbox" id="selectAll" class="selectAll" name="selectAll"/> All jobs (with current filters applied)</label>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n            &nbsp;\n            <div class="job-bulk-actions pull-right">\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["consumer/criteria/criteria-item"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span12">\n        <h4>' +
__e( obj.name ) +
'</h4>\n        <div>' +
__e( obj.description ) +
'</div>\n        <div>\n            <a href="javascript:void(0);" class="widget-remove-criteria"><i class="icon icon-minus-sign"></i>Remove criteria</a>\n            <br/>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["consumer/criteria/criteria"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4 class="well">Add Criteria</h4>\n\n<input class="search-criteria"/> <a href="javascript:void(0);" class="widget-add-criteria"><i class="icon icon-plus-sign"></i>Add criteria</a>\n\n<br/>\n&nbsp;\n\n<h4 class="well">Consumer Criteria</h4>\n<div class="container">\n\n</div>\n';

}
return __p
};

this["JST"]["consumer/customer/customer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form consumer">\n    <input type="text" id="search-customer-consumer" placeholder="Search Customer"/>\n    <button class="btn btn-default" id="addCustomer" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["consumer/customer/grid"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="customers">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["consumer/exclusions/addContactExclusion"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-exclusion-contact" placeholder="Search Interpreter"/>\n    <textarea rows="3" cols="50" id="exclusion-notes-consumer-contact" placeholder="Notes"/>\n    <button class="btn btn-default" id="addContactExclusion" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["consumer/exclusions/addContactPreference"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-preference-contact" placeholder="Search Interpreter"/>\n    <textarea rows="3" cols="50" id="preference-notes-consumer-contact" placeholder="Notes"/>\n    <button class="btn btn-default" id="addContactPreference" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["consumer/exclusions/exclusiongrid"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="booking-list excluded-grid">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["consumer/generaledit/quickadd"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- TODO: to be refactored. this is the view used in the consumer reference field. I believe it is loaded in colorbox. -->\n<!-- add customer from booking screen -->\n<div id="popupErrorContainer" class="msg-modal hide">\n</div>\n<div id="popupSuccessContainer" class="msg-modal hide">\n</div>\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Create Consumer</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="row-fluid">\n                <!-- first name -->\n                <div class="control-group span5">\n                    <label class="control-label required" for="firstName">First Name </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s first name." data-original-title="First Name" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input class="input-block-level" id="firstName"  name="firstName" type="text" value="' +
__e( firstName ) +
'"/>\n                    </div>\n                </div>\n\n                <!-- middle name -->\n                <div class="control-group span2">\n                    <label class="control-label" for="middleName">Middle </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s middle name." data-original-title="Middle Name" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input id="middleName" class="input-block-level" name="middleName" type="text" value="' +
__e( middleName ) +
'"/>\n                    </div>\n                </div>\n\n                <!-- Last name -->\n                <div class="control-group span5">\n                    <label class="control-label required" for="lastName">Last Name </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s last name." data-original-title="Last Name" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input id="lastName" class="input-block-level" name="lastName" type="text" value="' +
__e( lastName ) +
'"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="email">Phone Number </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s phone number." data-original-title="Phone Number" tabindex="-1">?</a>\n            <div class="controls">\n                <input id="phoneNumber" class="input-block-level" name="phoneNumber" type="text" value="' +
__e( phoneNumber ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="email">Email </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s email." data-original-title="Email" tabindex="-1">?</a>\n            <div class="controls">\n                <input id="email" class="input-block-level" name="email" type="text" value="' +
__e( email ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span2">\n            <label class="control-label" for="dateOfBirth">D.O.B</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Date of Birth" data-original-title="Date of Birth" tabindex="-1">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="dateOfBirth" name="dateOfBirth" type="text" value="' +
__e( dateOfBirth ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span2">\n            <label class="control-label" for="gender.id">Gender </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the contact\'s gender" data-original-title="Gender">?</a>\n            <div class="controls">\n                <select class="input-block-level" name="gender.id">\n                    ' +
((__t = ( selectOptions(App.dict.gender, {noSelection: {id: '', name: '[Choose a gender]'}}) )) == null ? '' : __t) +
'\n                </select>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="recordNumber">Record Number</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Consumer record number or identifier e.g. Patient ID, Medical Record Number, Legal Aid Number" data-original-title="Record Number" tabindex="-1">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="recordNumber" name="recordNumber" type="text" value="' +
__e( recordNumber ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="payor">Responsible Payor </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Party responsible for payment" data-original-title="Responsible Payor">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="payor" name="payor" type="text" value="' +
__e( payor ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="payor">Payor Record Number </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Record number or identifier for consumer at party responsible for payment" data-original-title="Payor Record Number">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="payorRecordNumber" name="payorRecordNumber" type="text" value="' +
__e( payorRecordNumber ) +
'"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="claimNumber">Claim Number</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Claim number to track claims associated with this consumer" data-original-title="Claim Number" tabindex="-1">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="claimNumber" name="claimNumber" type="text" value="' +
__e( obj.claimNumber ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="dateOfInjury">Date of Injury</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Date of Injury" data-original-title="Date of Injury" tabindex="-1">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="dateOfInjury" name="dateOfInjury" type="text" value="' +
__e( obj.dateOfInjury ) +
'"/>\n            </div>\n        </div>\n\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="accountingReference">Accounting Reference </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The accounting reference to third party system for this consumer." data-original-title="Accounting Reference" tabindex="-1">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="accountingReference" name="accountingReference" type="text" value="' +
__e( accountingReference ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="businessUnit.id">Business Unit</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The business unit this consumer falls under." data-original-title="Business Unit" tabindex="-1">?</a>\n            <div class="controls">\n                <select class="input-block-level" name="businessUnit.id">\n                    ' +
((__t = ( selectOptions(App.dict.businessUnit, {noSelection: {id: '', name: '[Choose a Unit]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </div>\n\n        <div class="control-group span2">\n            <label class="control-label" for="active">Active? </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Active?" data-original-title="Active?" tabindex="-1">?</a>\n            <div class="controls">\n                <input type="checkbox" id="active" name="active" ';
 if (active) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n\n    </div>\n\n</div>\n<div class="span4" style="margin-top: 50px;">\n    <div style="text-align: center;">\n        <a class="btn btn-primary" id="save" href="javascript:void(0);">Save Consumer</a>\n        <a class="btn" id="close" href="javascript:void(0);">Close Window</a>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["consumer/generaledit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<form class="form-vertical">\n    <fieldset>\n        <section id="details">\n            <h4 class="well">Consumer Details</h4>\n            <div id="consumerName" class="row-fluid">\n                <div class="span12">\n                    <div class="row-fluid">\n                        <!-- first name -->\n                        <div class="control-group span5">\n                            <label class="control-label required" for="firstName">First Name </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s first name." data-original-title="First Name" tabindex="-1">?</a>\n                            <div class="controls">\n                                <input class="input-block-level" id="firstName"  name="firstName" type="text" value="' +
__e( firstName ) +
'"/>\n                            </div>\n                        </div>\n\n                        <!-- middle name -->\n                        <div class="control-group span2">\n                            <label class="control-label" for="middleName">Middle </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s middle name." data-original-title="Middle Name" tabindex="-1">?</a>\n                            <div class="controls">\n                                <input id="middleName" class="input-block-level" name="middleName" type="text" value="' +
__e( middleName ) +
'"/>\n                            </div>\n                        </div>\n\n                        <!-- Last name -->\n                        <div class="control-group span5">\n                            <label class="control-label required" for="lastName">Last Name </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s last name." data-original-title="Last Name" tabindex="-1">?</a>\n                            <div class="controls">\n                                <input id="lastName" class="input-block-level" name="lastName" type="text" value="' +
__e( lastName ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span4">\n                    <label class="control-label" for="email">Phone Number </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s phone number." data-original-title="Phone Number" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input id="phoneNumber" class="input-block-level" name="phoneNumber" type="text" value="' +
__e( phoneNumber ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="email">Email </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s email." data-original-title="Email" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input id="email" class="input-block-level" name="email" type="text" value="' +
__e( email ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span2">\n                    <label class="control-label" for="dateOfBirth">D.O.B</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Date of Birth" data-original-title="Date of Birth" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input class="input-block-level" id="dateOfBirth" name="dateOfBirth" type="text" value="' +
__e( dateOfBirth ) +
'"/>\n                    </div>\n                </div>\n                <div class="control-group span2">\n                    <label class="control-label" for="gender.id">Gender </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the contact\'s gender" data-original-title="Gender">?</a>\n                    <div class="controls">\n                        <select class="input-block-level" name="gender.id">\n                            ' +
((__t = ( selectOptions(App.dict.gender, {noSelection: {id: '', name: '[Choose a gender]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span4">\n                    <label class="control-label" for="recordNumber">Record Number</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Consumer record number or identifier e.g. Patient ID, Medical Record Number, Legal Aid Number" data-original-title="Record Number" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input class="input-block-level" id="recordNumber" name="recordNumber" type="text" value="' +
__e( recordNumber ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="payor">Responsible Payor </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Party responsible for payment" data-original-title="Responsible Payor">?</a>\n                    <div class="controls">\n                        <input class="input-block-level" id="payor" name="payor" type="text" value="' +
__e( payor ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="payor">Payor Record Number </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Record number or identifier for consumer at party responsible for payment" data-original-title="Payor Record Number">?</a>\n                    <div class="controls">\n                        <input class="input-block-level" id="payorRecordNumber" name="payorRecordNumber" type="text" value="' +
__e( payorRecordNumber ) +
'"/>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span4">\n                    <label class="control-label" for="claimNumber">Claim Number</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Claim number to track claims associated with this consumer" data-original-title="Claim Number" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input class="input-block-level" id="claimNumber" name="claimNumber" type="text" value="' +
__e( obj.claimNumber ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="dateOfInjury">Date of Injury</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Date of Injury" data-original-title="Date of Injury" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input class="input-block-level" id="dateOfInjury" name="dateOfInjury" type="text" value="' +
__e( obj.dateOfInjury ) +
'"/>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="row-fluid">\n\n                <div class="control-group span4">\n                    <label class="control-label" for="accountingReference">Accounting Reference </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The accounting reference to third party system for this consumer." data-original-title="Accounting Reference" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input class="input-block-level" id="accountingReference" name="accountingReference" type="text" value="' +
__e( accountingReference ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span4">\n                    <label class="control-label" for="businessUnit.id">Business Unit</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The business unit this consumer falls under." data-original-title="Business Unit" tabindex="-1">?</a>\n                    <div class="controls">\n                        <select class="input-block-level" name="businessUnit.id">\n                            ' +
((__t = ( selectOptions(App.dict.businessUnit, {noSelection: {id: '', name: '[Choose a Unit]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                </div>\n\n                <div class="control-group span2">\n                    <label class="control-label" for="active">Active? </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Active?" data-original-title="Active?" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input type="checkbox" id="active" name="active" ';
 if (active) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n\n            </div>\n\n        </section>\n\n        <section id="notesSection">\n            <h4 class="well">Notes</h4>\n            <div class="row-fluid">\n                <div class="span6"> <!-- Left Column -->\n                    <div class="control-group">\n                        <label class="control-label" for="notes">Notes</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Enter any notes related to the consumer\'s requirements." data-original-title="Notes" tabindex="-1">?</a>\n                        <div class="controls">\n                            <textarea id="notes" class="wysiwyg" style="width:100%;" name="notes">' +
__e( notes ) +
'</textarea>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span6"> <!-- Right Column -->\n                    <div class="control-group">\n                        <label class="control-label" for="comments">Comments</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Enter any comments that will help schedulers." data-original-title="Comments" tabindex="-1">?</a>\n                        <div class="controls">\n                            <textarea id="comments" class="wysiwyg" style="width:100%;" name="comments">' +
__e( comments ) +
'</textarea>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n\n        </section>\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["consumer/quickadd"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- add consumer from booking screen -->\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>';
 if (obj.id) { ;
__p += 'Edit Existing Consumer';
 } else {;
__p += 'Create New Consumer';
 } ;
__p += '</h3>\n</div>\n<div class="modal-body">\n\n    ';
 if (obj.id) { ;
__p += '\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing consumer. This will update <strong>all bookings</strong>\n        that are already associated with this consumer. If you want to enter a new consumer, click on the\n        <span class="label label-info">Create New</span> button below and enter the new consumer information.\n    </div>\n    ';
 } ;
__p += '\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="row-fluid">\n                <!-- first name -->\n                <div class="control-group span5">\n                    <label class="control-label required" for="firstName">First Name </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s first name." data-original-title="First Name" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input class="input-block-level" id="firstName"  name="firstName" type="text" value="' +
__e( obj.firstName ) +
'"/>\n                    </div>\n                </div>\n\n                <!-- middle name -->\n                <div class="control-group span2">\n                    <label class="control-label" for="middleName">Middle </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s middle name." data-original-title="Middle Name" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input id="middleName" class="input-block-level" name="middleName" type="text" value="' +
__e( obj.middleName ) +
'"/>\n                    </div>\n                </div>\n\n                <!-- Last name -->\n                <div class="control-group span5">\n                    <label class="control-label required" for="lastName">Last Name </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s last name." data-original-title="Last Name" tabindex="-1">?</a>\n                    <div class="controls">\n                        <input id="lastName" class="input-block-level" name="lastName" type="text" value="' +
__e( obj.lastName ) +
'"/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="email">Phone Number </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s phone number." data-original-title="Phone Number" tabindex="-1">?</a>\n            <div class="controls">\n                <input id="phoneNumber" class="input-block-level" name="phoneNumber" type="text" value="' +
__e( obj.phoneNumber ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="email">Email </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The consumer\'s email." data-original-title="Email" tabindex="-1">?</a>\n            <div class="controls">\n                <input id="email" class="input-block-level" name="email" type="text" value="' +
__e( obj.email ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span2">\n            <label class="control-label" for="dateOfBirth">D.O.B</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Date of Birth" data-original-title="Date of Birth" tabindex="-1">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="dateOfBirth" name="dateOfBirth" type="text" value="' +
__e( obj.dateOfBirth ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span2">\n            <label class="control-label" for="gender.id">Gender </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the contact\'s gender" data-original-title="Gender">?</a>\n            <div class="controls">\n                <select class="input-block-level" name="gender.id">\n                    ' +
((__t = ( selectOptions(App.dict.gender, {noSelection: {id: '', name: '[Choose a gender]'}}) )) == null ? '' : __t) +
'\n                </select>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="recordNumber">Record Number</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Consumer record number or identifier e.g. Patient ID, Medical Record Number, Legal Aid Number" data-original-title="Record Number" tabindex="-1">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="recordNumber" name="recordNumber" type="text" value="' +
__e( obj.recordNumber ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="payor">Responsible Payor </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Party responsible for payment" data-original-title="Responsible Payor">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="payor" name="payor" type="text" value="' +
__e( obj.payor ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="payor">Payor Record Number </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Record number or identifier for consumer at party responsible for payment" data-original-title="Payor Record Number">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="payorRecordNumber" name="payorRecordNumber" type="text" value="' +
__e( obj.payorRecordNumber ) +
'"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="claimNumber">Claim Number</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Claim number to track claims associated with this consumer" data-original-title="Claim Number" tabindex="-1">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="claimNumber" name="claimNumber" type="text" value="' +
__e( obj.claimNumber ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="dateOfInjury">Date of Injury</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Date of Injury" data-original-title="Date of Injury" tabindex="-1">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="dateOfInjury" name="dateOfInjury" type="text" value="' +
__e( obj.dateOfInjury ) +
'"/>\n            </div>\n        </div>\n\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="accountingReference">Accounting Reference </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The accounting reference to third party system for this consumer." data-original-title="Accounting Reference" tabindex="-1">?</a>\n            <div class="controls">\n                <input class="input-block-level" id="accountingReference" name="accountingReference" type="text" value="' +
__e( obj.accountingReference ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="businessUnit.id">Business Unit</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="The business unit this consumer falls under." data-original-title="Business Unit" tabindex="-1">?</a>\n            <div class="controls">\n                <select class="input-block-level" name="businessUnit.id">\n                    ' +
((__t = ( selectOptions(App.dict.businessUnit, {noSelection: {id: '', name: '[Choose a Unit]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </div>\n\n        <div class="control-group span2">\n            <label class="control-label" for="active">Active? </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Active?" data-original-title="Active?" tabindex="-1">?</a>\n            <div class="controls">\n                <input type="checkbox" id="active" name="active" ';
 if (obj.active) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n\n    </div>\n\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary widget-save-consumer">Save Consumer</a>\n    <a href="javascript:void(0);" class="btn btn-primary widget-create-consumer hidden">Create New</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["contact/activation/grid"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="status_events">\n\n</div>\n\n<div class="status_events_paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["contact/activation/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="span12">\n    <div class="row-fluid span5">\n        <div class="control-group">\n            <label class="control-label" for="inductionDate">Induction Date </label>\n\n            <div class="controls">\n                <input id="inductionDate" class="date input-block-level" name="inductionDate" type="text"\n                       value="' +
__e( inductionDate ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="activationDate">Activation Date </label>\n\n            <div class="controls">\n                <input id="activationDate" class="date input-block-level" name="activationDate" type="text"\n                       value="' +
__e( activationDate ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="originalStartDate">Original Start Date </label>\n\n            <div class="controls">\n                <input id="originalStartDate" class="date input-block-level" name="originalStartDate" type="text"\n                       value="' +
__e( originalStartDate ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="re_activation_date">Re-Activation Date </label>\n\n            <div class="controls">\n                <input id="re_activation_date" class="date input-block-level" name="reActivationDate" type="text"\n                       value="' +
__e( reActivationDate ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="datePhotoSentToPrinter">ID Badge Expiry Date </label>\n\n            <div class="controls">\n                <input id="datePhotoSentToPrinter" class="date input-block-level" name="datePhotoSentToPrinter"\n                       type="text"\n                       value="' +
__e( datePhotoSentToPrinter ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="datePhotoSentToInterpreter">Date ID Badge Sent to Interpreter </label>\n\n            <div class="controls">\n                <input id="datePhotoSentToInterpreter" class="date input-block-level" name="datePhotoSentToInterpreter" type="text"\n                       value="' +
__e( datePhotoSentToInterpreter ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n    </div>\n    <!-- / row -->\n\n    <!-- Dates -->\n    <div class="row-fluid span5">\n        <div class="control-group">\n            <label class="control-label" for="iolNrcpdNumber">Licence/IOL/NRCPD Number </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"\n                data-content="IOL/NRCPD Number." data-original-title="IOL/NRCPD Number">?</a>\n\n            <div class="controls">\n                <input class="input-block-level" id="iolNrcpdNumber" name="iolNrcpdNumber" type="text"\n                       value="' +
__e( iolNrcpdNumber ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="referralSource">Referral Source </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"\n                data-content="Referral Source." data-original-title="Referral Source">?</a>\n\n            <div class="controls">\n                <input class="input-block-level" id="referralSource" name="referralSource" type="text"\n                       value="' +
__e( referralSource ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="refereeSourceName">Referee Source Name </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"\n                data-content="Referee Source Name."\n               data-original-title="Referee Source Name">?</a>\n\n            <div class="controls">\n                <input class="input-block-level" id="refereeSourceName" name="refereeSourceName" type="text"\n                       value="' +
__e( refereeSourceName ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="recruiterName">Recruiter Name </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"\n                data-content="Recruiter Name." data-original-title="Recruiter Name">?</a>\n\n            <div class="controls">\n                <input class="input-block-level" id="recruiterName" name="recruiterName" type="text"\n                       value="' +
__e( recruiterName ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group">\n            <label class="control-label" for="taleoId">Taleo Id </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"\n                data-content="Taleo Id." data-original-title="Taleo Id">?</a>\n\n            <div class="controls">\n                <input class="input-block-level" id="taleoId" name="taleoId" type="text" value="' +
__e( taleoId ) +
'"/>\n            </div>\n        </div>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="isSynchronized">Is Synchronized? </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Whether this contact has been synchronized with an external system." data-original-title="Is Synchronized">?</a>\n                <div class="controls">\n                    <input id="isSynchronized" name="isSynchronized" type="checkbox" ';
 if (isSynchronized) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                </div>\n            </div>\n            <div class="control-group span6">\n                <label class="control-label" for="lastSynchronizedDate">Last Synchronized Date? </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The date the last synchronization took place." data-original-title="Last Synchronized Date">?</a>\n                <div class="controls">\n                    <input id="lastSynchronizedDate" class="date input-block-level" name="lastSynchronizedDate" type="text"\n                           value="' +
__e( lastSynchronizedDate ) +
'" disabled autocomplete="off"/>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<br/>\n<div class="row-fluid">\n    <h4>Status Events</h4>\n    <br/>\n\n    <div id="status_event"></div>\n</div>\n';

}
return __p
};

this["JST"]["contact/availability/list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="booking-list assignment-criteria-grid">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["contact/availability/selection"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">Interpreter:</span>\n\n            <div class="controls">\n                <input id="interpreter-filter" type="text" name="interpreter" class="input-block-level"/>\n            </div>\n        </label>\n    </div>\n    <div class="model-startDate control-group span2">\n        <label>\n            <span class="control-label">Start Date (No date is current date)</span>\n\n            <div class="controls">\n                <input type="text" id="startDate" name="startDate" data-timezone="' +
__e(obj.timezone) +
'"\n                       class="input-block-level format-date" value="' +
__e(obj.startDate) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="model-startTime control-group span2" style="display: none">\n        <div class="controls">\n            <input id="startTime" type="text" name="startDate" data-timezone="' +
__e(obj.timezone) +
'"\n                   class="input-block-level format-time" value="' +
__e(obj.startDate) +
'" autocomplete="off"/>\n        </div>\n    </div>\n    <div class="model-startDate control-group span2">\n        <label>\n            <span class="control-label">End Date (No date will only retrieve information for start date)</span>\n\n            <div class="controls">\n                <input type="text" id="endDate" name="endDate" data-timezone="' +
__e(obj.timezone) +
'"\n                       class="input-block-level format-date" value="' +
__e(obj.endDate) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="model-startTime control-group span2" style="display: none">\n        <div class="controls">\n            <input id="endTime" type="text" name="endDate" data-timezone="' +
__e(obj.timezone) +
'"\n                   class="input-block-level format-time" value="' +
__e(obj.endDate) +
'" autocomplete="off"/>\n        </div>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <br/>\n\n            <button class="btn btn-default" id="get-availabilities" style="margin-bottom: 9px;">Refresh</button>\n        </label>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <br/>\n\n            <button class="btn btn-default" id="export-non-availability" style="margin-bottom: 9px;">Export Non Availability</button>\n        </label>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["contact/bareview/contactaddressview/contactaddresslistitemview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if(obj){ ;
__p += '\n<!-- address ' +
__e( obj.id ) +
'-->\n<dl class="dl-horizontal">\n    ';
 if (obj.description) { ;
__p += '<dt>Description</dt><dd>' +
__e( obj.description ) +
'</dd> ';
 } else { ;
__p += '<dd></dd> ';
 } ;
__p += '\n    ';
 if (obj.aptUnit) { ;
__p += '<dt>Apt / Unit</dt><dd>' +
__e( obj.aptUnit ) +
'</dd> ';
 } else { ;
__p += '<dd></dd> ';
 } ;
__p += '\n    ';
 if (obj.preamble) { ;
__p += '<dt>Place / Building Name</dt><dd>' +
__e( obj.preamble ) +
'</dd> ';
 } else { ;
__p += '<dd></dd> ';
 } ;
__p += '\n    ';
 if (obj.addrEntered) { ;
__p += '<dt>Address</dt><dd>' +
__e( obj.addrEntered ) +
'</dd> ';
 } else { ;
__p += '<dd></dd> ';
 } ;
__p += '\n    ';
 if (obj["type.id"]) { ;
__p += '<dt>Type</dt><dd>' +
__e( getStatusAttributeById(App.dict.addressType, obj["type.id"], "name") ) +
'</dd> ';
 } else { ;
__p += '<dd></dd> ';
 } ;
__p += '\n</dl>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["contact/bareview/contactaddressview/contactaddresslistview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="contact-addresses">\n    <!-- JST Template: contact/bareview/contactaddresseslistitemview/show.jst -->\n</div>\n';

}
return __p
};

this["JST"]["contact/bareview/contactaddressview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n    <div class="span8">\n\n        <h4>Address(es)</h4>\n        <div class="contact-address-list">\n            <!-- JST Template: contact/bareview/contactaddresslistview/show.jst -->\n        </div>\n\n    </div> <!-- / left column -->\n\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["contact/bareview/contactdetailsview/contacttypelistitemview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.name ) +
'\n';

}
return __p
};

this["JST"]["contact/bareview/contactdetailsview/contacttypelistview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="contact-types">\n    <!-- JST Template: contact/bareview/barecontacttypelistitemview/show.jst -->\n</div>\n';

}
return __p
};

this["JST"]["contact/bareview/contactdetailsview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span5">\n\n        <!-- contact -->\n        <div class="row-fluid">\n            <h5>Contact Name</h5>\n            <div>\n                <p>' +
__e( (obj) ? obj.salutation : "" ) +
' ' +
__e( (obj) ? obj.firstName : "" ) +
' ' +
__e( (obj) ? obj.middleName : "" ) +
' ' +
__e( (obj) ? obj.lastName : "" ) +
' ' +
__e( (obj) ? obj.suffix : "" ) +
'</p>\n                <p>' +
__e( (obj) ? ((obj.nickName) ? "Nickname: "+obj.nickName : "") : "" ) +
'</p>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <h5>Gender</h5>\n            <div>\n                ' +
__e( (obj) ? ((obj["gender.id"]) ? ((obj["gender.id"] == 1) ? "Male" : "Female") : "") : "" ) +
'\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <h5>Region</h5>\n            ';
 if(obj) { ;
__p += '\n                ';
 if(obj.mode === "edit-region"){ ;
__p += '\n                    <div class="span1">\n                        <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                    </div>\n                    <div class="control-group span5">\n                        <div class="controls">\n                            <input type="text" name="region" value="' +
__e( obj.region ) +
'"/>\n                        </div>\n                    </div>\n                ';
 } else { ;
__p += '\n                    <div id="edit-region" class="edit" style="display: inline;">' +
__e( (obj.region) ? obj.region : "Click to edit" ) +
'</div>\n                ';
 } ;
__p += '\n            ';
 } ;
__p += '\n        </div>\n\n\n        <div class="row-fluid">\n            <h5>Residence</h5>\n            ';
 if(obj) { ;
__p += '\n                ';
 if(obj.mode === "edit-residence"){ ;
__p += '\n                    <div class="span1">\n                        <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                    </div>\n                    <div class="control-group span5">\n                        <div class="controls">\n                            <input type="text" name="countryOfResidence" value="' +
__e( obj.countryOfResidence ) +
'"/>\n                        </div>\n                    </div>\n                ';
 } else { ;
__p += '\n                    <div id="edit-residence" class="edit" style="display: inline;">' +
__e( (obj.countryOfResidence) ? obj.countryOfResidence : "Click to edit" ) +
'</div>\n                ';
 } ;
__p += '\n            ';
 } ;
__p += '\n        </div>\n\n        <div class="row-fluid">\n            <h5>Origin</h5>\n            ';
 if(obj) { ;
__p += '\n                ';
 if(obj.mode === "edit-origin"){ ;
__p += '\n                <div class="span1">\n                    <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                </div>\n                <div class="control-group span5">\n                    <div class="controls">\n                        <input type="text" name="countryOfOrigin" value="' +
__e( obj.countryOfOrigin ) +
'"/>\n                    </div>\n                </div>\n                ';
 } else { ;
__p += '\n                    <div id="edit-origin" class="edit" style="display: inline;">' +
__e( (obj.countryOfOrigin) ? obj.countryOfOrigin : "Click to edit" ) +
'</div>\n                ';
 } ;
__p += '\n            ';
 } ;
__p += '\n        </div>\n\n        <div  class="row-fluid">\n            <h5>Company Name</h5>\n            <div>\n                ';
 if(obj) { ;
__p += '\n                    ';
 if(obj.mode === "edit-company-name"){ ;
__p += '\n                        <div class="span1">\n                            <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                        </div>\n                        <div class="control-group span5">\n                            <div class="controls">\n                                <input type="text" name="companyName" value="' +
__e( obj.companyName ) +
'"/>\n                            </div>\n                        </div>\n                    ';
 } else { ;
__p += '\n                        <div id="edit-company-name" class="edit" style="display: inline;">' +
__e( (obj.companyName) ? obj.companyName : "Click to edit" ) +
'</div>\n                    ';
 } ;
__p += '\n                ';
 } ;
__p += '\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <h5>Website</h5>\n            <div>\n                ';
 if(obj) { ;
__p += '\n                    ';
 if(obj.mode === "edit-website"){ ;
__p += '\n                        <div class="span1">\n                            <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                        </div>\n                        <div class="control-group span5">\n                            <div class="controls">\n                                <input type="text" name="website" value="' +
__e( obj.website ) +
'"/>\n                            </div>\n                        </div>\n                    ';
 } else { ;
__p += '\n                        <div id="edit-website" class="edit" style="display: inline;">' +
__e( (obj.website) ? obj.website : "Click to edit" ) +
'</div>\n                    ';
 } ;
__p += '\n                ';
 } ;
__p += '\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <h5>Date of Birth</h5>\n            <div data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="format-datetime">\n                ' +
__e( (obj) ? ((obj.dateOfBirth) ? obj.dateOfBirth : "" ) : "" ) +
'\n            </div>\n        </div>\n\n    </div> <!-- / left column -->\n\n    <div class="span5">\n\n        <div class="row-fluid">\n            <h5>Contact Type</h5>\n            <div class="contact-type-list">\n                <!-- JST Template: contact/bareview/barecontacttypelistview/show.jst -->\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <h5>Status</h5>\n            <div>\n                ' +
__e( (obj) ? ((obj.status) ? obj.status.name : "") : "" ) +
'\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <h5>Active Notes</h5>\n            <div>\n                ';
 if(obj) { ;
__p += '\n                    ';
 if(obj.mode === "edit-active-notes"){ ;
__p += '\n                        <div class="span1">\n                            <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                        </div>\n                        <div class="control-group span5">\n                            <div class="controls">\n                                <textarea name="activeNote" row=\'5\' style="height:74px; margin-bottom:0 !important;">' +
__e( obj.activeNote ) +
'</textarea>\n                            </div>\n                        </div>\n                    ';
 } else { ;
__p += '\n                        <div id="edit-active-notes" class="edit" style="display: inline;">' +
__e( (obj.activeNote) ? obj.activeNote : "Click to edit" ) +
'</div>\n                    ';
 } ;
__p += '\n                ';
 } ;
__p += '\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <h5>Availability</h5>\n            <div>\n                ';
 if(obj) { ;
__p += '\n                    ';
 if(obj.mode === "edit-availability"){ ;
__p += '\n                        <div class="span1">\n                            <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                        </div>\n                        <div class="control-group span5">\n                            <div class="controls">\n                                <textarea name="availability" row=\'5\' style="height:74px; margin-bottom:0 !important;">' +
__e( obj.availability ) +
'</textarea>\n                            </div>\n                        </div>\n                    ';
 } else { ;
__p += '\n                        <div id="edit-availability" class="edit" style="display: inline;">' +
__e( (obj.availability) ? obj.availability : "Click to edit" ) +
'</div>\n                    ';
 } ;
__p += '\n                ';
 } ;
__p += '\n            </div>\n        </div>\n\n\n        <div class="row-fluid">\n            <h5>Experience</h5>\n            <div>\n                ';
 if(obj) { ;
__p += '\n                    ';
 if(obj.mode === "edit-experience"){ ;
__p += '\n                        <div class="span1">\n                            <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                        </div>\n                        <div class="control-group span5">\n                            <div class="controls">\n                                <textarea name="experience" row=\'5\' style="height:74px; margin-bottom:0 !important;">' +
__e( obj.experience ) +
'</textarea>\n                            </div>\n                        </div>\n                    ';
 } else { ;
__p += '\n                        <div id="edit-experience" class="edit" style="display: inline;">' +
__e( (obj.experience) ? obj.experience : "Click to edit" ) +
'</div>\n                    ';
 } ;
__p += '\n                ';
 } ;
__p += '\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <h5>Has Transportation?</h5>\n            <div>\n                ' +
__e( (obj) ? ((obj.hasTransportation) ? "Yes" : "No") : "Not Specified" ) +
'\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <h5>Has Children?</h5>\n            <div>\n                ' +
__e( (obj) ? ((obj.hasChildren) ? "Yes" : "No") : "Not Specified" ) +
'\n            </div>\n        </div>\n\n    </div> <!-- / right column -->\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["contact/bareview/contactfinancialview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="secured secured-comp secured-fina">\n    <div class="row-fluid">\n        <div class="span4">\n\n            <div class="row-fluid">\n                <h5>Tax Identifier</h5>\n                <div>\n                    ';
 if(obj){ ;
__p += '\n                        ';
 if(obj.mode === "edit-taxIdentifier"){ ;
__p += '\n                            <div class="span1">\n                                <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                            </div>\n                            <div class="control-group span3">\n                                <div class="controls">\n                                    <input type="text" name="registeredTaxId" value="' +
__e( obj.registeredTaxId ) +
'"/>\n                                </div>\n                            </div>\n                        ';
 } else { ;
__p += '\n                            <div id="edit-taxIdentifier" class="edit" style="display: inline;">' +
__e( (obj.registeredTaxId) ? obj.registeredTaxId : "Click to Edit" ) +
'</div>\n                        ';
 } ;
__p += '\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <h5>Payment Method</h5>\n                <div>\n                    ';
 if(obj){ ;
__p += '\n                        ';
 if(obj.mode === "edit-paymentMethod"){ ;
__p += '\n                            <div class="span1">\n                                <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                            </div>\n                            <div class="control-group span3">\n                                <div class="controls">\n                                    <!--' +
((__t = ( selectOptions(App.dict.employmentEligibilityStates, {selected: obj.state ? obj.state.id : 'invalid', display:'name'}) )) == null ? '' : __t) +
'-->\n                                    <select id="payment-method" name="paymentMethod.id">\n                                        ' +
((__t = ( selectOptions(App.dict.paymentMethod, {selected: obj["paymentMethod.id"] ? obj["paymentMethod.id"] : "", noSelection: {id: '', name: '[Choose a Payment Method]'}, display: 'name'}) )) == null ? '' : __t) +
'\n                                    </select>\n                                </div>\n                            </div>\n                        ';
 } else { ;
__p += '\n                            <div id="edit-paymentMethod" class="edit" style="display: inline;">' +
__e( (obj["paymentMethod.id"]) ? getStatusAttributeById(App.dict.paymentMethod, obj["paymentMethod.id"], "name") : "Click to edit" ) +
'</div>\n                        ';
 } ;
__p += '\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <h5>Bank Account</h5>\n                <div>\n                    ';
 if(obj){ ;
__p += '\n                        ';
 if(obj.mode === "edit-bankAccount"){ ;
__p += '\n                        <div class="span1">\n                            <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                        </div>\n                        <div class="control-group span3">\n                            <div class="controls">\n                                <input type="text" name="bankAccount" value="' +
__e( obj.bankAccount ) +
'"/>\n                            </div>\n                        </div>\n                        ';
 } else { ;
__p += '\n                            <div id="edit-bankAccount" class="edit" style="display: inline;">' +
__e( (obj.bankAccount) ? obj.bankAccount : "Click to edit" ) +
'</div>\n                        ';
 } ;
__p += '\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <h5>Bank Branch</h5>\n                <div>\n                    ';
 if(obj){ ;
__p += '\n                    ';
 if(obj.mode === "edit-bankBranch"){ ;
__p += '\n                    <div class="span1">\n                        <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                    </div>\n                    <div class="control-group span3">\n                        <div class="controls">\n                            <input type="text" name="bankBranch" value="' +
__e( obj.bankBranch ) +
'"/>\n                        </div>\n                    </div>\n                    ';
 } else { ;
__p += '\n                    <div id="edit-bankBranch" class="edit" style="display: inline;">' +
__e( (obj.bankBranch) ? obj.bankBranch : "Click to edit" ) +
'</div>\n                    ';
 } ;
__p += '\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <h5>Sort Code</h5>\n                <div>\n                    ';
 if(obj){ ;
__p += '\n                        ';
 if(obj.mode === "edit-sortCode"){ ;
__p += '\n                            <div class="span1">\n                                <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                            </div>\n                            <div class="control-group span3">\n                                <div class="controls">\n                                    <input type="text" name="sortCode" value="' +
__e( obj.sortCode ) +
'"/>\n                                </div>\n                            </div>\n                        ';
 } else { ;
__p += '\n                            <div id="edit-sortCode" class="edit" style="display: inline;">' +
__e( (obj.sortCode) ? obj.sortCode : "Click to edit" ) +
'</div>\n                        ';
 } ;
__p += '\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n\n        </div> <!-- / left column -->\n\n        <div class="span6">\n\n            <div class="row-fluid">\n                <h5>IBAN</h5>\n                <div>\n                    ';
 if(obj){ ;
__p += '\n                        ';
 if(obj.mode === "edit-iban"){ ;
__p += '\n                            <div class="span1">\n                                <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                            </div>\n                            <div class="control-group span5">\n                                <div class="controls">\n                                    <input type="text" name="iban" value="' +
__e( obj.iban ) +
'"/>\n                                </div>\n                            </div>\n                        ';
 } else { ;
__p += '\n                            <div id="edit-iban" class="edit" style="display: inline;">' +
__e( (obj.iban) ? obj.iban : "Click to edit" ) +
'</div>\n                        ';
 } ;
__p += '\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <h5>SWIFT</h5>\n                <div>\n                    ';
 if(obj){ ;
__p += '\n                        ';
 if(obj.mode === "edit-swift"){ ;
__p += '\n                            <div class="span1">\n                                <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                            </div>\n                            <div class="control-group span5">\n                                <div class="controls">\n                                    <input type="text" name="swift" value="' +
__e( obj.swift ) +
'"/>\n                                </div>\n                            </div>\n                        ';
 } else { ;
__p += '\n                            <div id="edit-swift" class="edit" style="display: inline;">' +
__e( (obj.swift) ? obj.swift : "Click to edit" ) +
'</div>\n                        ';
 } ;
__p += '\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n\n        </div> <!-- / right column -->\n    </div> <!-- / row -->\n\n</div>\n';

}
return __p
};

this["JST"]["contact/bareview/contacthistoryview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n    <div class="span2">\n        <h5>Created Date</h5>\n        <div data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="format-datetime">\n            ' +
__e( obj.createdDate ) +
'\n        </div>\n    </div>\n\n    <div class="span4">\n        <h5>Created By</h5>\n        <div>\n            ' +
__e( obj.createdBy ) +
'\n        </div>\n    </div>\n\n    <div class="span2">\n\n        <h5>Last Modified Date</h5>\n        <div data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="format-datetime">\n            ' +
__e( obj.lastModifiedDate ) +
'\n        </div>\n    </div>\n\n    <div class="span4">\n        <h5>Last Modified By</h5>\n        <div>\n            ' +
__e( obj.lastModifiedBy ) +
'\n        </div>\n    </div>\n</div>\n<div class="row-spacer">\n</div>\n<div class="row">\n    <div class="span12">\n        <h4>History</h4>\n        <div class="history">\n            <!-- Audit History common view  -->\n        </div>\n    </div>\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["contact/bareview/contactinfoview/contactemaillistitemview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if(obj){ ;
__p += '\n<!-- Email: ' +
__e( obj.id ) +
'-->\n    <div class="row-fluid">\n        ';
 if(obj.mode === "edit-email"){ ;
__p += '\n            <div class="span1">\n                <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n            </div>\n            <div class="control-group span3">\n                <div class="controls">\n                    <input type="text" name="emailAddress" value="' +
__e( obj.emailAddress ) +
'"/>\n                </div>\n            </div>\n        ';
 } else { ;
__p += '\n            <strong>' +
__e( getStatusAttributeById(App.dict.emailType, obj["type.id"], "name") ) +
' : </strong>\n            <div id="edit-email" class="edit" style="display: inline;">' +
__e( (obj.primaryEmail) ? obj.emailAddress+" (primary)" : emailAddress ) +
'</div>\n        ';
 } ;
__p += '\n    </div>\n';
 } ;
__p += '\n\n\n\n\n\n\n<!--<strong>' +
__e( getStatusAttributeById(App.dict.emailType, obj["type.id"], "name") ) +
'</strong>-->\n<!--<span id="emailAddress-' +
__e( obj.id ) +
'" class="edit_email">' +
__e( obj.emailAddress ) +
'</span> ' +
__e( (obj.primaryEmail) ? " (primary)" : "" ) +
'-->\n';

}
return __p
};

this["JST"]["contact/bareview/contactinfoview/contactemaillistview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="contact-emails">\n    <!-- JST Template: contact/bareview/contactemaillistitemview/show.jst -->\n</div>\n';

}
return __p
};

this["JST"]["contact/bareview/contactinfoview/contactnumberlistitemview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if(obj) { ;
__p += '\n<!-- Number ' +
__e( obj.id ) +
'-->\n    <div class="row-fluid">\n        ';
 if(obj.mode === "edit-number"){ ;
__p += '\n            <div class="span1">\n                <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n            </div>\n            <div class="control-group span3">\n                <div class="controls">\n                    <input type="text" name="parsedNumber" value="' +
__e( obj.parsedNumber ) +
'"/>\n                </div>\n            </div>\n        ';
 } else { ;
__p += '\n            <strong>' +
__e( getStatusAttributeById(App.dict.numberType, obj["type.id"], "name") ) +
' : </strong>\n            <div id="edit-number" class="edit" style="display: inline;">' +
__e( (obj.primaryNumber) ? obj.parsedNumber+" (primary)" : parsedNumber ) +
'</div>\n        ';
 } ;
__p += '\n    </div>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["contact/bareview/contactinfoview/contactnumberlistview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="contact-numbers">\n    <!-- JST Template: contact/bareview/contactnumberlistitemview/show.jst -->\n</div>\n';

}
return __p
};

this["JST"]["contact/bareview/contactinfoview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n    <div class="span4">\n\n        <h4>Contact Numbers</h4>\n        <div class="contact-number-list">\n            <!-- JST Template: contact/bareview/contactnumberlistview/show.jst -->\n        </div>\n\n    </div> <!-- / left column -->\n\n    <div class="span6">\n\n        <div>\n            <h4>Emails</h4>\n            <div class="contact-email-list">\n                <!-- JST Template: contact/bareview/contactemaillistview/show.jst -->\n            </div>\n        </div>\n\n    </div> <!-- / right column -->\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["contact/bareview/contactlanguageview/contactlanguagelistitemview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if(obj) { ;
__p += '\n<!-- Language ' +
__e( obj.id ) +
'-->\n<dl class="dl-horizontal">\n    ';
 if (obj.language) { ;
__p += '<dt><dt>Language</dt><dd>' +
__e( obj.language.description + ((obj.language.alias) ? (' / '+obj.language.alias) : "") ) +
'</dd> ';
 } else { ;
__p += '<dd></dd> ';
 } ;
__p += '\n    ';
 if (obj.rating) { ;
__p += '<dt><dt>Rating</dt><dd>' +
__e( obj.rating ) +
'</dd> ';
 } else { ;
__p += '<dd></dd> ';
 } ;
__p += '\n    ';
 if (obj.language) { ;
__p += '<dt><dt>ISO Code</dt><dd>' +
__e( obj.language.iso639_3Tag ) +
'</dd> ';
 } else { ;
__p += '<dd></dd> ';
 } ;
__p += '\n</dl>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["contact/bareview/contactlanguageview/contactlanguagelistview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="contact-languages">\n    <!-- JST Template: contact/bareview/contactlanguageview/contactlanguagelistitemview/show.jst -->\n</div>\n';

}
return __p
};

this["JST"]["contact/bareview/contactlanguageview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n    <div class="span6">\n\n        <h5>Languages</h5>\n        <div class="contact-language-list">\n            <!-- JST Template: contact/bareview/contactlanguageview/contactlanguagelistview/show.jst -->\n        </div>\n\n    </div> <!-- / left column -->\n\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["contact/bareview/contactmainlayoutview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#details" data-toggle="tab">Overview</a></li>\n    <li><a href="#contact" data-toggle="tab">Contact Information</a></li>\n    <li><a href="#languages" data-toggle="tab">Languages</a></li>\n    <li><a href="#addresses" data-toggle="tab">Addresses</a></li>\n    <li><a href="#notes" data-toggle="tab">Notes</a></li>\n    <li class="secured secured-comp secured-fina"><a href="#financial" data-toggle="tab">Financial</a></li>\n    <li><a href="#history" data-toggle="tab">Audit History</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<div class="tab-content">\n\n    <div class="tab-pane active" id="details">\n        <!-- JST Template: contact/bareview/contactdetailsview/show.jst -->\n    </div> <!-- / tab details -->\n\n    <div class="tab-pane" id="contact">\n        <!-- JST Template: contact/bareview/contactinfoview/show.jst -->\n    </div> <!-- / tab contact -->\n\n    <div class="tab-pane" id="languages">\n        <!-- JST Template: contact/bareview/contactlanguageview/show.jst -->\n    </div> <!-- / languages -->\n\n    <div class="tab-pane" id="addresses">\n        <!-- JST Template: contact/bareview/contactaddressview/show.jst -->\n    </div> <!-- / addresses -->\n\n    <div class="tab-pane" id="notes">\n        <!-- JST Template: contact/bareview/contactnotesview/show.jst -->\n    </div> <!-- / notes -->\n\n    <div class="tab-pane" id="financial">\n        <!-- JST Template: contact/bareview/contactfinancialview/show.jst -->\n    </div><!-- / financial -->\n\n    <div class="tab-pane" id="history">\n        <!-- JST Template: contact/bareview/contacthistoryview/show.jst -->\n    </div> <!-- / history -->\n</div> <!-- / tabs -->\n';

}
return __p
};

this["JST"]["contact/bareview/contactnotesview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n\n        <h5>Notes</h5>\n        ';
 if (obj){ ;
__p += '\n            ';
 if(obj.mode === "edit-notes"){ ;
__p += '\n                <div class="span1">\n                    <a href="javascript:void(0);" title="Save"><i class="icon icon-save"></i></a>\n                </div>\n                <div class="control-group span4">\n                    <div class="controls">\n                        <textarea id="notes" name="notes" row=\'5\' class="span12" style="height:74px; margin-bottom:0 !important;">' +
__e( obj.notes ) +
'</textarea>\n                    </div>\n                </div>\n            ';
 } else { ;
__p += '\n                <div id="edit-notes" class="edit" style="display: inline;">' +
__e( (obj.notes) ? obj.notes : "Click to edit" ) +
'</div>\n            ';
 } ;
__p += '\n        ';
 } ;
__p += '\n\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["contact/compliance/documents/supporting/main"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Employment Eligibility</h4>\n<div class="row-fluid" id="employmentEligibilities">\n\n</div>\n\n<br />\n\n<h4>Qualifications</h4>\n<div class="row-fluid" id="qualifications">\n\n</div>\n';

}
return __p
};

this["JST"]["contact/compliance/documents/supporting/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="info" class="alert ';
 if (validatedStatus == 'pass' || validatedStatus == '') { ;
__p += ' alert-success ';
 } else if (validatedStatus == 'warning') { ;
__p += ' alert-warning ';
 } else { ;
__p += ' alert-error ';
 } ;
__p += '">\n    <!-- <a class="close" data-dismiss="alert" href="#" id="deleteEligibility" title="Delete eligibility">( × )</a> -->\n\n    <div class="row-fluid">\n        <div class="span6">\n            <h4 class="alert-heading"><i title="Qualification / Certification"></i> ' +
__e( name + (enforcementPolicy ? " (" + enforcementPolicy + ")" : "" )) +
'</h4>\n            ' +
__e( description ) +
'\n            <p><strong>Validated By: </strong>' +
__e( state.nameKey == "valid" ? validatedBy: "n/a" ) +
'</p>\n            <p><strong>Validated Since: </strong>' +
__e( state.nameKey == "valid" ? stateDateSince : "n/a" ) +
'</p>\n            <p><strong>Validated Until: </strong>' +
__e( state.nameKey == "valid" ? stateDateUntil : "n/a" ) +
'</p>\n        </div>\n        <div class="span6">\n            <h5>Supporting Documents</h5>\n            <ul id="support-documents" class="thumbnails row">\n\n            </ul>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["contact/compliance/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="contacts-list">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["contact/contacttype/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="control-group">\n    <label class="control-label required" for="id">Contact Type </label> <a href="javascript:void(0);" class="pull-right deleteContactType"><i class="icon icon-minus-sign"></i>Delete</a>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the type of contact. Add as many types as are needed for this contact" data-original-title="Contact Type">?</a>\n    <div class="controls">\n        <select class="span12" name="id">\n            ' +
((__t = ( selectOptions(App.dict.contactType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n        </select>\n        <p class="help-block">Required field</p>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["contact/employment/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<form class="form-vertical">\n    <fieldset>\n        <section>\n        <h4>Employment Status</h4>\n\n        <div class="row-fluid">\n            <div class="control-group required span5">\n                <label class="control-label" for="employmentType">Employment Category </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Select the employment category this contact falls under" data-original-title="Employment Category">?</a>\n                <div class="controls">\n                    <select class="span12" name="employmentCategory.id">\n                        ' +
((__t = ( selectOptions(App.dict.employmentCategory, {noSelection: {id: '', name: '[Employment]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n            </div>\n\n            <div class="control-group required span5">\n                <label class="control-label" for="assignmentPreference">Automated Assignment </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Select the contact should be considered for automated assignments. Default is \'Contractor\'" data-original-title="Automated Assignment">?</a>\n                <div class="controls">\n                    <select class="span12" name="assignmentTier.id">\n                        ' +
((__t = ( selectOptions(App.dict.assignmentTiers, {noSelection: {id: '', name: '[Assignment]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n            </div>\n        </div> <!-- / row -->\n        </section>\n\n        <h4>Employment Eligibility</h4>\n        <div class="row-fluid" id="employmentEligibilities">\n\n        </div>\n        <div><a href="javascript:void(0);" class="addEligibility"><i class="icon icon-plus-sign"></i>Add eligibility</a></div>\n\n        <h4>Qualifications</h4>\n        <div class="row-fluid" id="qualifications">\n\n        </div>\n\n        <div><a href="javascript:void(0);" class="addQualification"><i class="icon icon-plus-sign"></i>Add qualification</a></div>\n\n        <h4>Criteria Hierarchy</h4>\n            <div class="row-fluid" id="hierarchies">\n        </div>\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["contact/employmenteligibility/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="info" class="alert ';
 if (!id) { ;
__p += ' alert-success ';
 } else if (validatedStatus == 'pass') { ;
__p += ' alert-success ';
 } else if (validatedStatus == 'warning') { ;
__p += ' alert-warning ';
 } else { ;
__p += ' alert-error ';
 } ;
__p += '">\n     <!-- @= validatedStatus @-->\n    <!-- <a class="close" data-dismiss="alert" href="#" id="deleteEligibility" title="Delete eligibility">( × )</a> -->\n\n    <div class="row-fluid">\n        <div class="span6">\n            <h4 class="alert-heading"><i title="Qualification / Certification" class="icon icon-check"></i>\n                ';
 if (name.length > 0) { ;
__p +=
__e( name + (enforcementPolicy ? "(" + enforcementPolicy + ")" : "" ) );
 } else { ;
__p += '\n                <select name="criteria.id" id="criteria.id">\n                    ' +
((__t = ( selectOptions(_.sortBy(App.dict.criteria, function(obj) { return obj.name }), {noSelection: {id: '', name: '[Choose a Criteria]'}}) )) == null ? '' : __t) +
'\n                </select>\n                ';
 } ;
__p += '\n                <a class="save" href="javascript:void(0);" title="Save criteria"><i class="icon icon-ok"></i></a>\n                <a class="undo" href="javascript:void(0);" title="Undo changes"><i class="icon icon-hand-left"></i></a>\n                <a id="delete" href="javascript:void(0);" title="Delete criteria"><i class="secured secured-admin icon icon-remove"></i></a>\n                </span></h4>\n            ' +
__e( description ) +
' (Applies to ' +
__e( customerSpecific ? "select" : "all" ) +
' customers).\n            <p><textarea name="notes">' +
__e( notes ) +
'</textarea></p>\n            Supporting Information\n            <p><textarea name="supportingInformation">' +
__e( supportingInformation ) +
'</textarea></p>\n            Language\n            <a href="javascript:void(0);" class="clearLanguage" style="padding-left: 130px;"><i class="icon icon-minus-sign"></i>Clear</a>\n            <input id="language-selection" name="language-selection" class="language span7" type="text" value="' +
__e( (languageLabel ? languageLabel : "") ) +
'"/>\n            <p class="help-block">Required field</p>\n\n            <!--<h5>Supporting Documents</h5>-->\n        </div>\n\n        <div class="span6">\n            <dl class="dl-horizontal">\n                <dt>State</dt>\n                <dd>\n                    <select name="state" class="input-block-level eligibility-state">\n                        <!--' +
((__t = ( selectOptions(App.dict.employmentEligibilityStates, {selected: obj.state ? obj.state.id : 'invalid', display:'name'}) )) == null ? '' : __t) +
'-->\n                    </select>\n                </dd>\n                <dt>Validated On</dt><dd><input type="text" class="datepicker" name="stateDateSince" value="' +
__e( stateDateSince ) +
'" autocomplete="off"/></dd>\n                <dt>Valid Until</dt><dd><input type="text" class="datepicker" name="stateDateUntil" value="' +
__e( stateDateUntil ) +
'" autocomplete="off"/></dd>\n                <dt></dt><dd><button type="button" ' +
__e( id ? "" : "disabled" ) +
' class="addFile btn btn-success">Add Backing Document</button></dd>\n            </dl>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <ul class="documents" style="list-style: none;"></ul>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["contact/employmenteligibility/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- ' +
__e( id ) +
' -->\n\n<div id="info" class="alert ';
 if (validatedStatus == 'pass' || validatedStatus == '') { ;
__p += ' alert-success ';
 } else if (validatedStatus == 'warning') { ;
__p += ' alert-warning ';
 } else { ;
__p += ' alert-error ';
 } ;
__p += '">\n    <!-- <a class="close" data-dismiss="alert" href="#" id="deleteEligibility" title="Delete eligibility">( × )</a> -->\n\n    <div class="row-fluid">\n        <div class="span6">\n            <h4 class="alert-heading"><i title="Qualification / Certification" class="icon icon-check"></i> ' +
__e( name + (enforcementPolicy ? "(" + enforcementPolicy + ")" : "" )) +
'  <span id="controls">';
 if (criteriaType != "hierarchy") { ;
__p += '<a class="edit" href="javascript:void(0);" title="Edit criteria"><i class="icon icon-pencil"></i></a>';
 } ;
__p += '</span></h4>\n            ' +
__e( description ) +
' (Applies to ' +
__e( customerSpecific ? "select" : "all" ) +
' customers).\n            <p><strong>Notes:</strong> ' +
__e( notes ) +
'</p>\n            <p><strong>Supporting Information:</strong> ' +
__e( supportingInformation ) +
'</p>\n            <p><strong>Language:</strong> ' +
__e( (languageLabel ? languageLabel : "") ) +
'</p>\n            <h5>Supporting Document</h5>\n\n            <!-- TODO: make this a view. -->\n            <div class="documents">\n                <div class="row-fluid">\n                    <ul class="documents" style="list-style: none;"></ul>\n                </div>\n                <span>' +
__e( (documents.length == 0) ? "No Backing Documents" : "" ) +
'</span>\n            </div>\n        </div>\n\n        <div class="span\n            <dl class="dl-horizontal">\n                <dt>State</dt><dd>' +
__e( state ? state.name : "Invalid" ) +
'</dd>\n                <dt>Validated On / Until</dt><dd>' +
__e( state.nameKey == "valid" ? stateDateSince : "n/a" ) +
' - ' +
__e( state.nameKey == "valid" ? stateDateUntil : "n/a" ) +
'</dd>\n                <dt>Validated By</dt><dd>' +
__e( state.nameKey == "valid" ? validatedBy: "n/a" ) +
'</dd>\n            </dl>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["contact/exclusions/addConsumerExclusion"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-exclusion-consumer" placeholder="Search Consumer"/>\n    <textarea rows="3" cols="50" id="exclusion-notes-contact-consumer" placeholder="Notes"/>\n    <button class="btn btn-default" id="addConsumerExclusion" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["contact/exclusions/addConsumerPreference"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-preference-consumer" placeholder="Search Consumer"/>\n    <textarea rows="3" cols="50" id="preference-notes-contact-consumer" placeholder="Notes"/>\n    <button class="btn btn-default" id="addConsumerPreference" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["contact/exclusions/addCustomerExclusion"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-exclusion-customer" placeholder="Search Customer"/>\n    <input type="text" id="search-exclusion-client" placeholder="Search Client"/>\n    <input type="text" id="search-exclusion-location" placeholder="Search Location"/>\n    <textarea rows="3" cols="50" id="exclusion-notes-contact-customer" placeholder="Notes"/>\n    <button class="btn btn-default" id="addCustomerExclusion" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["contact/exclusions/addCustomerPreference"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-preference-customer" placeholder="Search Customer"/>\n    <input type="text" id="search-preference-client" placeholder="Search Client"/>\n    <input type="text" id="search-preference-location" placeholder="Search Location"/>\n    <textarea rows="3" cols="50" id="preference-notes-contact-customer" placeholder="Notes"/>\n    <button class="btn btn-default" id="addCustomerPreference" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["contact/exclusions/exclusiongrid"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="booking-list excluded-grid">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["contact/generaledit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<form class="form-vertical">\n    <fieldset>\n        <section id="details">\n            <h4 class="well">\n                Contact Details\n                <span class="pull-right view-jobs icon icon-calendar">\n                    <a href="#" title="' +
__e( name ) +
' Schedule">View Schedule</a>\n                </span>\n            </h4>\n            <div id="contactName" class="row-fluid">\n                <!-- salutation -->\n                <div class="row-fluid">\n                    <div class="span12">\n                        <div class="control-group span1">\n                            <label class="control-label" for="salutation">Sal. </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The preferred salutation for this contact." data-original-title="Salutation">?</a>\n                            <div class="controls">\n                                <input id="salutation" class="input-mini" name="salutation" type="text" value="' +
__e( salutation ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div class="span10">\n                        <div class="row-fluid">\n                            <!-- first name -->\n                            <div class="control-group required span4">\n                                <label class="control-label required" for="firstName">First Name </label>\n                                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The contact\'s first name." data-original-title="First Name">?</a>\n                                <div class="controls">\n                                    <input id="firstName" class="span12" name="firstName" type="text" value="' +
__e( firstName ) +
'" required="required"/>\n                                    <p class="help-block">Required field.</p>\n                                </div>\n                            </div>\n\n                            <!-- middle name -->\n                            <div class="control-group span2">\n                                <label class="control-label" for="middleName">MI</label>\n                                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The contact\'s middle name." data-original-title="Middle Name">?</a>\n                                <div class="controls">\n                                    <input id="middleName" class="span12" name="middleName" type="text" value="' +
__e( middleName ) +
'"/>\n                                    <p class="help-block"></p>\n                                </div>\n                            </div>\n\n                            <!-- last name -->\n                            <div class="control-group required span6">\n                                <label class="control-label required" for="lastName">Last Name</label>\n                                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The contact\'s last name." data-original-title="Last Name">?</a>\n                                <div class="controls">\n                                    <input id="lastName" class="span12" name="lastName" type="text" value="' +
__e( lastName ) +
'" required="required"/>\n                                    <p class="help-block">Required field.</p>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class="row-fluid">\n                            <div class="control-group required span3">\n                                <label class="control-label" for="nickName">Nick Name</label>\n                                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The contact\'s nick name." data-original-title="Nick Name">?</a>\n                                <div class="controls">\n                                    <input id="nickName" class="span12" name="nickName" type="text" value="' +
__e( nickName ) +
'"/>\n                                </div>\n                            </div>\n                            <!-- suffix -->\n                            <div class="control-group span3">\n                                <label class="control-label" for="suffix">Suffix</label>\n                                <!--<a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The contact\'s preferred suffix" data-original-title="Suffix">?</a>-->\n                                <div class="controls">\n                                    <input id="suffix" class="span12" name="suffix" type="text" value="' +
__e( suffix ) +
'"/>\n                                </div>\n                            </div>\n\n                            <!-- timeZone -->\n                            <div class="control-group span6">\n                                <label class="control-label" for="timeZone">Time Zone</label>\n                                <div class="controls">\n                                    <select name="timeZone" class="input-block-level">\n                                        ' +
((__t = ( selectOptions(App.dict.timeZones, {selected: obj.timeZone, display:'gmtOffset', noSelection: {id: '', gmtOffset: '[Choose a time zone]'}}) )) == null ? '' : __t) +
'\n                                    </select>\n                                </div>\n                            </div>\n                        </div> <!-- / name (row) -->\n                    </div> <!-- / name (span8) -->\n                    <div class="span2">\n                        <div class="control-group">\n                            <img src="' +
__e( imagePath ) +
'" alt="Contact Photo" /><br>\n                            <a class="addPhoto" rel="tooltip" data-content="Add Photo" data-original-title="Add Photo" href="javascript:void(0);"><i class="icon icon-plus"></i></a>&nbsp;&nbsp;&nbsp;&nbsp;\n                            <a class="removePhoto" rel="tooltip" data-content="Remove Photo" data-original-title="Remove Photo" href="javascript:void(0);"><i class="icon icon-remove"></i></a>\n                        </div>\n                    </div> <!-- / photo (span2) -->\n                </div>\n\n            </div> <!-- / row -->\n            ';
 if(timeWorked !== "") { ;
__p += '\n                <div class="row-fluid">\n                    ' +
__e( timeWorked ) +
'\n                </div>\n            ';
 } ;
__p += '\n        </section> <!-- details -->\n\n        <section id="classifications">\n            <div class="row-fluid">\n                <!-- left column -->\n                <div class="span4">\n                    <h5>Classifications</h5>\n                    <div class="row-fluid">\n                        <div class="control-group span5">\n                            <label class="control-label required" for="gender.id">Gender </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the contact\'s gender" data-original-title="Gender">?</a>\n                            <div class="controls">\n                                <select class="span12" name="gender.id">\n                                    ' +
((__t = ( selectOptions(App.dict.gender, {noSelection: {id: '', name: '[Choose a gender]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n\n                        <div class="control-group span7">\n                            <label class="control-label" for="dateOfBirth">D.O.B. </label>\n                            <!--<a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the contact\'s date of birth" data-original-title="Date of Birth">?</a>-->\n                            <div class="controls">\n                                <input id="dateOfBirth" class="span12" name="dateOfBirth" type="text" value="' +
__e( dateOfBirth ) +
'"/>\n                            </div>\n                        </div>\n                    </div> <!-- / row (left col) -->\n                    <div class="row-fluid">\n                        <div class="control-group span12">\n                            <label class="control-label" for="businessUnit.id">Business Unit</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The business unit this contact falls under." data-original-title="Business Unit">?</a>\n                            <div class="controls">\n                                <select class="span12" name="businessUnit.id">\n                                    ' +
((__t = ( selectOptions(App.dict.businessUnit, {noSelection: {id: '', name: '[Choose a Unit]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div id="contactTypes" class="row-fluid">\n\n                    </div>\n\n                    <a href="javascript:void(0);" class="addContactType"><i class="icon icon-plus-sign"></i>Add contact type</a>\n\n                </div> <!-- / left column -->\n\n                <!-- right column -->\n                <div class="span8">\n                    <h5>Miscellaneous</h5>\n                    <div class="row-fluid">\n\n                        <div class="control-group span3">\n                            <label class="control-label" for="hasTransportation">Transport?</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Does the contact have access to transportation to travel." data-original-title="Has Transportation">?</a>\n                            <div class="controls">\n                                <input id="hasTransportation" name="hasTransportation" type="checkbox" ';
 if (hasTransportation) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span3">\n                            <label class="control-label" for="hasChildren">Children?</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Does the contact have children." data-original-title="Has Children">?</a>\n                            <div class="controls">\n                                <input id="hasChildren" name="hasChildren" type="checkbox" ';
 if (hasChildren) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span2">\n                            <div class="controls">\n                                <b>Status: </b>';
 if (status) { ;
__p += ' ' +
__e( status.name );
 } ;
__p += '\n                                <p class="help-block"></p>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="region">Region </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter a comma separated list of regions this contact is available to service." data-original-title="Region">?</a>\n                            <div class="controls">\n                                <input class="span12" id="region" name="region" type="text" value="' +
__e( region ) +
'"/>\n                            </div>\n                        </div>\n\n                    </div> <!-- / 1st row (right col) -->\n\n                    <div class="row-fluid">\n                        <div class="control-group span4">\n                            <label class="control-label" for="countryOfResidence">Residence </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Select the contact\'s current country of residence." data-original-title="Country of Residence">?</a>\n                            <div class="controls">\n                                <select class="span12" name="countryOfResidence">\n                                    ' +
((__t = ( selectOptions(App.dict.countries, {noSelection: {id: '', name: '-Country of Residence-'}}) )) == null ? '' : __t) +
'\n                                </select>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="countryOfOrigin">Origin </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Select the contact\'s country of origin." data-original-title="Country of Origin">?</a>\n                            <div class="controls">\n                                <select class="span12" name="countryOfOrigin">\n                                    ' +
((__t = ( selectOptions(App.dict.countries, {noSelection: {id: '', name: '-Country of Origin-'}}) )) == null ? '' : __t) +
'\n                                </select>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="countryOfNationality">Nationality </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Select the contact\'s country of nationality." data-original-title="Country of Nationality">?</a>\n                            <div class="controls">\n                                <select class="span12" name="countryOfNationality">\n                                    ' +
((__t = ( selectOptions(App.dict.countries, {noSelection: {id: '', name: '-Country of Nationality-'}}) )) == null ? '' : __t) +
'\n                                </select>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n                    </div> <!-- / 2nd row (right col) -->\n\n                    <div class="row-fluid">\n                        <div class="control-group span4">\n                            <label class="control-label" for="ethnicity">Ethnicity </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter the contact\'s ethnicity."  data-original-title="Ethnicity">?</a>\n                            <div class="controls">\n                                <input class="span12" id="ethnicity" name="ethnicity" type="text" value="' +
__e( ethnicity ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row-fluid">\n                        <div class="control-group span6">\n                            <label class="control-label" for="companyName">Company </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter the contact\'s company name."  data-original-title="Company">?</a>\n                            <div class="controls">\n                                <input class="span12" id="companyName" name="companyName" type="text" value="' +
__e( companyName ) +
'"/>\n                            </div>\n                        </div><!-- 3rd row (right col) -->\n\n                        <div class="control-group span6">\n                            <label class="control-label" for="website">Website </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter the contact\'s website address" data-original-title="Website">?</a>\n                            <div class="controls">\n                                <input class="span12" id="website" name="website" type="text" value="' +
__e( website ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n                    <div class="row-fluid">\n                        <div class="control-group span4">\n                            <label class="control-label" for="disableConfirmReminder">Disable Confirm Booking Reminders?</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Disable sending email reminder about confirming bookings a day before. Disables a similar value in company configuration." data-original-title="Disable upcoming bookings reminder">?</a>\n                            <div class="controls">\n                                <input id="disableConfirmReminder" name="disableConfirmReminder" type="checkbox" ';
 if (disableConfirmReminder) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="disableUpcomingReminder">Disable Upcoming Booking Reminders?</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Disable sending email reminder about upcoming bookings a day before. Disables a similar value in company configuration." data-original-title="Disable upcoming bookings reminder">?</a>\n                            <div class="controls">\n                                <input id="disableUpcomingReminder" name="disableUpcomingReminder" type="checkbox" ';
 if (disableUpcomingReminder) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="disableCloseReminder">Disable Close Booking Reminders?</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Disable sending email reminder to close bookings. Disables a similar value in company configuration." data-original-title="Disable close bookings reminder">?</a>\n                            <div class="controls">\n                                <input id="disableCloseReminder" name="disableCloseReminder" type="checkbox" ';
 if (disableCloseReminder) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                            </div>\n                        </div>\n                    </div><!-- 4th row (right col) -->\n\n                    <div class="row-fluid">\n                        <div class="control-group span4">\n                            <label class="control-label" for="disableConfirmationEmails">Disable Confirmation Emails?</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Disable sending email about job confirmations." data-original-title="Disable confirmation emails">?</a>\n                            <div class="controls">\n                                <input id="disableConfirmationEmails" name="disableConfirmationEmails" type="checkbox" ';
 if (disableConfirmationEmails) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="disableOfferEmails">Disable Auto Job Offer Emails?</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Disable sending email about job offers including reminders." data-original-title="Disable offer emails">?</a>\n                            <div class="controls">\n                                <input id="disableOfferEmails" name="disableOfferEmails" type="checkbox" ';
 if (disableOfferEmails) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="disableAutoOffers">Exclude from Auto Job Offer?</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Exclude interpreter from receiving automated job offers." data-original-title="Disable auto offers">?</a>\n                            <div class="controls">\n                                <input id="disableAutoOffers" name="disableAutoOffers" type="checkbox" ';
 if (disableAutoOffers) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                            </div>\n                        </div>\n                    </div>\n\n                </div> <!-- / right column -->\n            </div> <!-- / row -->\n        </section> <!-- / classifications -->\n\n        <section id="languages">\n            <h4 class="well">Languages</h4>\n            <div id="languageMappings" class="row-fluid">\n                <div class="span12">\n                    <div id="languageContainer">\n\n                    </div>\n                </div>\n            </div>\n\n            <a href="javascript:void(0);" class="addLanguageMapping"><i class="icon icon-plus-sign"></i>Add language</a>\n\n        </section> <!-- / languages -->\n\n        <section id="contact">\n            <h4 class="well">Contact Information</h4>\n            <!-- left column -->\n            <div class="row-fluid">\n                <div class="span6">\n                    <div id="numbers">\n\n                    </div>\n\n                    <a href="javascript:void(0);" class="addNumber"><i class="icon icon-plus-sign"></i>Add phone number</a>\n\n                </div> <!-- / left column -->\n\n\n                <!-- right column -->\n                <div class="span6">\n                    <div id="emails">\n\n                    </div>\n\n                    <a href="javascript:void(0);" class="addEmail"><i class="icon icon-plus-sign"></i>Add email address</a>\n\n                </div> <!-- / right column -->\n            </div> <!-- / row -->\n        </section> <!-- / contact -->\n\n        <section id="address">\n            <h4 class="well">Addresses</h4>\n            <!-- left column -->\n            <div class="row-fluid" id="addresses">\n                <div class="span12">\n                    <div id="addressContainer">\n\n                    </div>\n                </div>\n            </div>\n            <a href="javascript:void(0);" class="addAddress"><i class="icon icon-plus-sign"></i>Add address</a>\n        </section> <!-- / address -->\n\n        <section id="notesSection">\n            <h4 class="well">Notes</h4>\n            <div class="row-fluid">\n                <!-- left column -->\n                <div class="span6">\n\n                    <div class="control-group">\n                        <label class="control-label" for="activeNote">Active Note</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter any notes related to the contact\'s active status e.g. years of service. These notes will appear on the list views when searching for contacts." data-original-title="Active Note">?</a>\n                        <div class="controls">\n                            <textarea id="activeNote" style="width:100%;" class="wysiwyg" name="activeNote">' +
__e( activeNote ) +
'</textarea>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n                        <label class="control-label" for="experience">Experience</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter any notes related to the contact\'s experience e.g. court certified. These notes will appear on the list views when searching for contacts." data-original-title="Experience">?</a>\n                        <div class="controls">\n                            <textarea id="experience" style="width:100%;" class="wysiwyg" name="experience">' +
__e( experience ) +
'</textarea>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n                        <label class="control-label" for="availability">Availability</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter any notes related to the contact\'s availability e.g. M-F 8-5. These notes will appear on the list views when searching for contacts." data-original-title="Availability">?</a>\n                        <div class="controls">\n                            <textarea id="availability" style="width:100%;" class="wysiwyg" name="availability">' +
__e( availability ) +
'</textarea>\n                        </div>\n                    </div>\n                </div> <!-- / left column -->\n\n                <!-- right column -->\n                <div class="span6">\n                    <div class="control-group">\n                        <label class="control-label" for="notes">Notes</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Full notes on this contact." data-original-title="Notes">?</a>\n                        <div class="controls">\n                            <textarea id="notes" style="width:100%;" class="wysiwyg" name="notes">' +
__e( notes ) +
'</textarea>\n                        </div>\n                    </div>\n                </div> <!-- / right column -->\n            </div> <!-- / row -->\n        </section> <!-- / notes -->\n\n        <!-- secured -->\n        <section id="financial" class="secured secured-int_mgr secured-fina">\n            <h4 class="well">Financial</h4>\n            <div class="row-fluid">\n                <!-- left column -->\n                <div class="span6">\n                    <div class="row-fluid">\n                        <div class="control-group span12">\n                            <label class="control-label" for="bankAccount">Bank Account </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter the contact\'s bank account number." data-original-title="Bank Account">?</a>\n                            <div class="controls">\n                                <input class="span12" id="bankAccount" name="bankAccount" type="text" value="' +
__e( bankAccount ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row-fluid">\n                        <div class="control-group span12">\n                            <label class="control-label" for="bankAccountDescription">Bank Account Description</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Contact\'s bank account description." data-original-title="Bank Account Description">?</a>\n                            <div class="controls">\n                                <input class="span12" id="bankAccountDescription" name="bankAccountDescription" type="text" value="' +
__e( bankAccountDescription ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row-fluid">\n                        <div class="control-group span12">\n                            <label class="control-label" for="bankAccountReference">Bank Account Reference </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Bank Account Reference." data-original-title="Bank Account Reference">?</a>\n                            <div class="controls">\n                                <input class="span12" id="bankAccountReference" name="bankAccountReference" type="text" value="' +
__e( bankAccountReference ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row-fluid">\n                        <div class="control-group span12">\n                            <label class="control-label" for="iban">IBAN </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="International Bank Account Number (IBAN)." data-original-title="IBAN">?</a>\n                            <div class="controls">\n                                <input class="span12" id="iban" name="iban" type="text" value="' +
__e( iban ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n\n                </div> <!-- / left column -->\n\n                <!-- right column -->\n                <div class="span6">\n                    <div class="control-group span6">\n                        <label class="control-label" for="bankBranch">Bank Branch </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter the contact\'s bank branch number." data-original-title="Bank Branch">?</a>\n                        <div class="controls">\n                            <input class="span12" id="bankBranch" name="bankBranch" type="text" value="' +
__e( bankBranch ) +
'"/>\n                        </div>\n                    </div>\n                    <div class="control-group span6">\n                        <label class="control-label" for="sortCode">Sort/Routing/Transit </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter the contact\'s routing number or sort code or transit number for their bank account." data-original-title="Sort / Routing">?</a>\n                        <div class="controls">\n                            <input class="span12" id="sortCode" name="sortCode" type="text" value="' +
__e( sortCode ) +
'"/>\n                        </div>\n                    </div>\n\n                    <div class="row-fluid">\n                        <div class="control-group span6">\n                            <label class="control-label" for="paymentMethod.id">Payment Method </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enter the contact\'s method of payment." data-original-title="Payment Method">?</a>\n                            <div class="controls">\n                                <select id="paymentMethod.id" class="span12" name="paymentMethod.id">\n                                    ' +
((__t = ( selectOptions(App.dict.paymentMethod, {noSelection: {id: '', name: '[Choose a Method]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                            </div>\n                        </div>\n\n                        <div class="control-group span6">\n                            <label class="control-label" for="eft.id">EFT </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Whether payment is made to this contact via Electronic Funds Transfer (EFT)." data-original-title="EFT">?</a>\n                            <div class="controls">\n                                <select id="eft.id" class="span12" name="eft.id">\n                                    ' +
((__t = ( selectOptions(App.dict.yesNoType, {noSelection: {id: '', name: '[EFT Enabled]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row-fluid">\n                        <div class="control-group span12">\n                            <label class="control-label" for="paymentAccount">Payment Account </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Payment account for use to store paypal or other online account for payment." data-original-title="Payment Account">?</a>\n                            <div class="controls">\n                                <input class="span12" id="paymentAccount" name="paymentAccount" type="text" value="' +
__e( paymentAccount ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row-fluid">\n                        <div class="control-group span12">\n                            <label class="control-label" for="accountingReference">Accounting Reference </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The accounting reference to external system for this contact." data-original-title="Accounting Reference">?</a>\n                            <div class="controls">\n                                <input class="span12" id="accountingReference" name="accountingReference" type="text" value="' +
__e( accountingReference ) +
'"/>\n                            </div>\n                        </div>\n                    </div>\n                </div> <!-- / right column -->\n            </div> <!-- / row -->\n            <div class="row-fluid">\n                <div class="span4">\n                    <div class="control-group">\n                        <label class="control-label" for="currencyCode.id">Currency Code</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Currency code for Contact." data-original-title="Currency Code">?</a>\n                        <div class="controls">\n                            <select class="input-block-level" name="currencyCode.id">\n                                ' +
((__t = ( selectOptions(App.dict.currencyCode, {noSelection: {id: '', name: '[Choose a Unit]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span2">\n                    <div class="control-group">\n                        <label>Currency Symbol</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Currency symbol for Contact." data-original-title="Currency Symbol">?</a>\n                        <input type="text" id="currencySymbol" class="input-block-level" name="currencySymbol" value="' +
__e( currencySymbol ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="span4">\n                    <div class="control-group">\n                        <label class="control-label" for="swift">Swift </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Swift number to identify international bank accounts." data-original-title="Swift">?</a>\n                        <div class="controls">\n                            <input class="span12" id="swift" name="swift" type="text" value="' +
__e( swift ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- / row -->\n\n            <!-- tax registration -->\n            <div class="row-fluid">\n                <div class="span2">\n                    <div class="control-group">\n                        <label class="control-label" for="registeredTax">Registered for Tax? </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Whether this contact is registered for tax e.g. VAT" data-original-title="Registered for Tax">?</a>\n                        <div class="controls">\n                            <input id="registeredTax" name="registeredTax" type="checkbox" ';
 if (registeredTax) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span3">\n                    <div class="control-group">\n                        <label class="control-label" for="registeredTaxId">Registered Tax ID </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Registered tax identifier." data-original-title="Registered Tax Id">?</a>\n                        <div class="controls">\n                            <input class="span12" id="registeredTaxId" name="registeredTaxId" type="text" value="' +
__e( registeredTaxId ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span3">\n                    <div class="control-group">\n                        <label class="control-label" for="registeredTaxIdDescription">Registered Tax ID Description </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Description for registered tax identifier e.g. VAT." data-original-title="Registered Tax Id Description">?</a>\n                        <div class="controls">\n                            <input class="span12" id="registeredTaxIdDescription" name="registeredTaxIdDescription" type="text" value="' +
__e( registeredTaxIdDescription ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span3">\n                    <div class="control-group">\n                        <label class="control-label" for="registeredTaxRate">Registered Tax Rate (%) </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="The tax rate that applies for this interpreter across all taxable items." data-original-title="Registered Tax Rate">?</a>\n                        <div class="controls">\n                            <input class="span12" id="registeredTaxRate" name="registeredTaxRate" type="text" value="' +
__e( registeredTaxRate ) +
'"/>\n                        </div>\n                    </div>\n                </div>\n            </div> <!-- / row -->\n\n        </section> <!-- / financial -->\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["contact/languagemapping/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- language mapping (' +
__e( obj.id ) +
') -->\n<div class="span6">\n    <div class="control-group span6">\n        <label class="control-label required" for="language-select">Language </label> <a href="javascript:void(0);" class="pull-right deleteLanguageMapping"><i class="icon icon-minus-sign"></i>Delete</a>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Start typing the language and select it from the list. Click on the \'-\' to delete this language." data-original-title="Language">?</a>\n        <div class="controls">\n            <input id="language-select" name="language-select" class="language span12" type="text" value="' +
((__t = ( (obj.language ? obj.language.label : "") )) == null ? '' : __t) +
'"/>\n            <p class="help-block">Required field</p>\n        </div>\n    </div>\n    <!-- rating -->\n    <div class="control-group span4">\n        <label class="control-label required" for="rating">Rating </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter a subjective rating of your likelihood to use the interpreter for this language. A value of 1 is the highest rating." data-original-title="Type">?</a>\n        <div class="controls">\n            <select class="span12" name="rating">\n                ' +
((__t = ( selectOptions(App.dict.ratingScale, {noSelection: {id: '', name: '[Choose a Rating]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field</p>\n        </div>\n    </div>\n\n    <!-- iso code -->\n    <div class="control-group pull-right">\n        <label class="control-label" for="iso639">ISO</label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="ISO 639 Code." data-original-title="ISO 639">?</a>\n        <div class="controls">\n            <a id="iso" href="javascript:void(0);">' +
__e( obj['language.iso639_3Tag'] ) +
'</a>\n        </div>\n    </div>\n</div> <!-- / language mapping -->\n';

}
return __p
};

this["JST"]["contact/manage/assessment"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="assessmentErrorContainer"></div>\n<h3>Assessment</h3>\n<br/>\n<div class="span6">\n    <div class="control-group span6">\n        <label class="control-label">\n            <span class="control-label required">Assessor</span>\n            <input type="text" id="search-interpreter" placeholder="Search Interpreter"\n                   class="api-v2 api-delegate" value="';
 if (obj.assessor) { ;
__p += ' ' +
__e( obj.assessor.name ) +
' ';
 } ;
__p += '"/>\n        </label>\n    </div>\n\n    <div class="control-group span2">\n        <label>\n            <span class="control-label required">Request Date</span>\n\n            <div class="controls">\n                <input type="text" name="requestDate" data-timezone="' +
__e(obj.timezone) +
'"\n                       class="input-block-level format-date" value="' +
__e(obj.requestDate) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label required">Request Time</span>\n\n            <div class="controls">\n                <input type="text" name="requestDate" data-timezone="' +
__e(obj.timezone) +
'"\n                       class="input-block-level format-time" value="' +
__e(obj.requestDate) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n\n    <div class="control-group span2">\n        <label>\n            <span class="control-label required">Date to be paid by</span>\n\n            <div class="controls">\n                <input type="text" name="dateToBePaidBy" data-timezone="' +
__e(obj.timezone) +
'"\n                       class="input-block-level format-date" value="' +
__e(obj.dateToBePaidBy) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n\n    <div class="control-group span6">\n        <label class="control-label">\n            <span class="control-label required">Conducted By</span>\n\n            <input type="text" name="conductedBy" class="input-block-level"\n                   value="' +
__e( obj.conductedBy ) +
'"/>\n        </label>\n    </div>\n\n    <div class="control-group span6">\n        <label class="control-label">\n            <span class="control-label required">Candidate Details</span>\n            <input type="text" name="candidateDetails" class="input-block-level"\n                   value="' +
__e( obj.candidateDetails ) +
'"/>\n        </label>\n    </div>\n\n    <div class="span3">\n        <label>\n            <span class="control-label required">Assessment Type: </span>\n\n            <select class="input-block-level api-v2" name="type">\n                ';
 if (obj.type) { ;
__p += '\n                    ' +
((__t = ( selectOptions(App.dict.assessmentType, {selected: obj.type.id, noSelection: {id: '', name: '[Choose one Assessment Type]'}}) )) == null ? '' : __t) +
'\n                ';
 } else {;
__p += '\n                    ' +
((__t = ( selectOptions(App.dict.assessmentType, { noSelection: {id: '', name: '[Choose one Assessment Type]'}}) )) == null ? '' : __t) +
'\n                ';
 } ;
__p += '\n            </select>\n        </label>\n    </div>\n\n    <div class="control-group span6">\n        <label class="control-label" for="notes">Notes </label>\n\n        <textarea id="notes" name="notes">' +
__e( obj.notes ) +
'</textarea>\n    </div>\n\n    <div class="span3">\n        <label>\n            <span class="control-label required">Payment Tier: </span>\n\n            <select class="input-block-level api-v2" name="paymentTier">\n                ';
 if (obj.paymentTier) { ;
__p += '\n                    ' +
((__t = ( selectOptions(App.dict.paymentTier, {selected: obj.paymentTier.id, noSelection: {id: '', name: '[Choose one Payment Tier]'}}) )) == null ? '' : __t) +
'\n                ';
 } else {;
__p += '\n                    ' +
((__t = ( selectOptions(App.dict.paymentTier, { noSelection: {id: '', name: '[Choose one Payment Tier]'}}) )) == null ? '' : __t) +
'\n                ';
 } ;
__p += '\n            </select>\n        </label>\n    </div>\n\n    <div class="btn-group span4">\n        <button class="btn btn-primary" type="button" id="save" value="Save"\n                data-loading-text="Saving ...">Save\n        </button>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["contact/manage/assessments"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    <div class="btn-group">\n        <a class="with_button btn btn-primary" type="button" id="new_assessment" href="#assessment_view">\n            <button class="btn btn-primary" type="button" value="Save" data-loading-text="Saving ...">\n                New\n            </button>\n        </a>\n\n        <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown" type="button" value="more">\n            Export <span class="caret"></span>\n        </button>\n        <ul class="dropdown-menu">\n            <li><a class="exportCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i>\n                Excel</a>\n            </li>\n            <li><a class="exportCmd" href="javascript:void(0);" data-format="csv"><i class="icon-ms-excel"></i>\n                CSV</a>\n            </li>\n        </ul>\n        <div class="span6">\n            <label for="all_assessments">All assessments (with current filters applied)</label>\n            <input id="all_assessments" type="checkbox"/>\n        </div>\n    </div>\n    <br/>\n\n    <div id="assessments_grid">\n\n    </div>\n\n    <div id="assessment_view">\n\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["contact/manage/assessments_grid"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="assessments_grid">\n\n</div>\n\n<div class="assessments_paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["contact/manage/employmentEligibilityClause"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span12 extraClauses">\n    <ul style="list-style-type: none">\n        <li>\n            <label>\n                Criteria\n                <input class="criteria" type="text"/>\n            </label>\n        </li>\n        <li>\n            <label>\n                State\n                <select class="employmentEligibilityState">\n                    ' +
((__t = ( selectOptions(App.dict.employmentEligibilityStates, {display:'name'}) )) == null ? '' : __t) +
'\n                </select>\n            </label>\n        </li>\n        <li>\n            <label>\n                Language\n                <input class="language" type="text"/>\n            </label>\n        </li>\n        <li>\n            <div class="span3">\n                <label>\n                    State date since\n                    <input class="stateDateSince input-block-level date" type=\'text\' value=\'\'/>\n                </label>\n            </div>\n            <div class="span3">\n                <label>\n                    State date until\n                    <input class="stateDateUntil input-block-level date" type=\'text\' value=\'\'/>\n                </label>\n            </div>\n        </li>\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["contact/manage/jobOffers"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Interpreter Job Offers for <span class="contactName"></span></h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span2">\n            <input name="periodStart" type="text" class="input-block-level periodStart" value="" placeholder="Period Start"/>\n        </div>\n\n        <div class="span2">\n            <input name="periodEnd" type="text" class="input-block-level periodEnd" value="" placeholder="Period End"/>\n        </div>\n\n        <div class="span6">\n            Filter offers based on Expected Start Date\n        </div>\n    </div>\n\n    <div class="jobOffers-list">\n\n    </div>\n\n    <div class="jobOffers-paginator">\n\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["contact/manage/list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group">\n    <button class="btn btn-primary secured secured-int_mgr" type="button" id="send_message" value="Save" data-loading-text="Saving ...">Send\n        Message\n    </button>\n    <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown" type="button" value="more">\n        Export <span class="caret"></span>\n    </button>\n    <ul class="dropdown-menu">\n        <li><a href="javascript:void(0);"><i class="icon-download"></i> Export Contacts<i class="icon-arrow-right"></i></a>\n            <ul class="dropdown-menu sub-menu">\n                <li><a class="exportCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n            </ul>\n        </li>\n        <li><a href="javascript:void(0);"><i class="icon-download"></i> Export Employment Eligibilities<i class="icon-arrow-right"></i></a>\n            <ul class="dropdown-menu sub-menu">\n                <li><a class="exportEligibilitiesCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n            </ul>\n        </li>\n        <li><a href="javascript:void(0);"><i class="icon-download"></i> Export Interpreters Retention<i class="icon-arrow-right"></i></a>\n            <ul class="dropdown-menu sub-menu">\n                <li><a class="exportInterpreterRetentionCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n            </ul>\n        </li>\n        <li><a class="exportAvailabilityCmd" href="#export_availability"><i class="icon-download"></i> Export Availability</a>\n        </li>\n        <li><a class="exportStatusEventsCmd" href="#export_status_events"><i class="icon-download"></i> Export Status Events</a>\n        </li>\n        <li><a class="exportInterpreterProfile" href="#export_interpreter_profile"><i class="icon-download"></i> Export Interpreter Profile</a>\n        </li>\n        <li><a class="exportInterpreterHours" href="#export_interpreter_hours"><i class="icon-download"></i> Export Interpreter Hours</a>\n        </li>\n        <li><a class="exportInterpreterCensusCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-download"></i> Export Interpreter Census</a></li>\n        </li>\n        <li><a class="exportInterpreterPerformanceCmd" href="#export_interpreter_performance" data-format="xlsx"><i class="icon-download"></i> Export Interpreter Performance</a></li>\n        </li>\n    </ul>\n    <div class="span6">\n        <label for="all_interpreters">Export all contacts (with current filters applied)</label>\n        <input id="all_interpreters" type="checkbox"/>\n    </div>\n</div>\n<br/>\n<div class="row-fluid">\n\n    <div class="span12">\n\n        <div class="portlet">\n            <div class="portlet-header">\n                <div class="portlet-header-title"></div>\n                <div id="queryFiltersAppliedView"></div>\n            </div>\n\n            <div class="portlet-body">\n                <table id="contact-list">\n                    <tr>\n                        <td></td>\n                    </tr>\n                </table>\n                <div id="contact-list-pager"></div>\n            </div>\n        </div>\n\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["contact/miscellaneousfiles/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Miscellaneous Files</h4>\n\n<div class="row-fluid">\n\n    <form action="' +
__e( App.config.context ) +
'/upload/file" name="fileUpload" id="fileUpload" method="post" enctype="multipart/form-data">\n        <fieldset>\n            <div class="span6">\n                <input type="hidden" id="company.id" name="company.id" value="' +
__e( obj['company.id'] || '' ) +
'">\n                <input type="hidden" id="parentEntityType" name="parentEntityType" value="' +
__e( obj['parentEntityType'] || '' ) +
'"/>\n                <input type="hidden" id="parentEntityClass" name="parentEntityClass" value="' +
__e( obj['parentEntityClass'] || '' ) +
'"/>\n                <input type="hidden" name="parentEntityId" value="' +
__e( obj.id ) +
'" />\n                <input type="hidden" name="interpreter.id" value="' +
__e( obj.id ) +
'" />\n                <input type="hidden" class="isIE" name="isIE" value="false" />\n\n                <div class="row-fluid">\n                    <div class="span12">\n                        <label>Select file to upload</label>\n                        <input type="file" class="input-xlarge" name="theFile" id="theFile" />\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div class="span12">\n                        <label>Description</label>\n                        <textarea class="span12" id="description" name="description" placeholder="Enter a short description of the file being uploaded"></textarea>\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div class="span6">\n                        <label>Select the type of file</label>\n                        <select class="miscellaneous-documentTypes span12" name="type.id">\n                            ' +
((__t = ( selectOptions(App.dict.documentType, {selected: (obj ? obj["type.id"] : ''), noSelection: {id: '', name: '[Choose a File Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                    <div class="control-group span2">\n                        <label>Public?</label>\n                        <div class="controls">\n                            <input type="checkbox" id="allowPublicView" name="allowPublicView" />\n                        </div>\n                    </div>\n                    <div class="span4">\n                        <br/>\n                        <button class="btn btn-primary span12" style="margin-left: 0;" type="submit" id="upload" value="upload" data-loading-text="Uploading File ...">Upload File</button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n\n</div> <!-- / row -->\n\n\n<ul id="documents" class="thumbnails row">\n</ul>\n';

}
return __p
};

this["JST"]["contact/photo/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Add Photo</h4>\n<br/>\n<div class="span5">\n    <div id="errorContainer">\n    </div>\n    <div id="successContainer">\n    </div>\n    <form action="' +
__e(App.config.context) +
'/upload/file" method="post" name="fileUpload" enctype="multipart/form-data" id="fileUpload">\n        <fieldset>\n            <div class="hidden-params">\n                <input type="hidden" id="company.id" name="company.id" value="' +
__e( App.config.company.id ) +
'"/>\n                <input type="hidden" id="parentEntityType" name="parentEntityType" value="Contact"/>\n                <input type="hidden" id="parentEntityClass" name="parentEntityClass" value="com.ngs.id.model.Contact"/>\n                <input type="hidden" id="parentEntityId" name="parentEntityId" value="' +
__e( id ) +
'"/>\n                <input type="hidden" id="interpreter.id" name="interpreter.id" value="' +
__e( id ) +
'"/>\n                <input type="hidden" id="type.id" name="type.id" value="' +
__e( App.dict.documentType['image'].id ) +
'"/>\n                <input type="hidden" id="isIE" name="isIE" value="false"/>\n            </div>\n            <div class="row">\n                <div class="span4">\n                    <label>Select file to upload</label>\n                    <div class="input-append customfile">\n                        <input type="file" class="input-xlarge" name="theFile" id="theFile" />\n                    </div>\n                </div>\n            </div>\n\n            <div class="progress progress-success active">\n                <div class="bar" style="width: 0%;"></div>\n            </div>\n\n            <div class="row">\n                <div class="span4">\n                    <br>\n                    <button class="btn btn-primary" type="submit" id="upload" value="upload" data-loading-text="Uploading File ...">Upload File</button>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n';

}
return __p
};

this["JST"]["contact/qualification/edit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="info" class="alert alert-info">\n    <!-- ' +
__e( id ) +
' -->\n    <!-- <a class="close" data-dismiss="alert" href="#" id="deleteQualification" title="Delete qualification">( × )</a> -->\n\n    <div class="row-fluid">\n        <div class="span6">\n            <h4 class="alert-heading"><i title="Qualification / Certification" class="icon icon-bookmark"></i>\n                ';
 if (name.length > 0) { ;
__p +=
__e( name );
 } else { ;
__p += '\n                <select name="criteria.id" id="criteria.id">\n                    ' +
((__t = ( selectOptions(_.sortBy(App.dict.qualifications, function(obj) { return obj.name }), {noSelection: {id: '', name: '[Choose a Qualification]'}}) )) == null ? '' : __t) +
'\n            </select> ';
 } ;
__p += '\n                <a class="save" href="javascript:void(0);" title="Save criteria"><i class="icon icon-ok"></i></a>\n                <a class="undo" href="javascript:void(0);" title="Undo changes"><i class="icon icon-hand-left"></i></a>\n                <a id="delete" href="javascript:void(0);" title="Delete criteria"><i class="secured secured-admin icon icon-remove"></i></a>\n                </span></h4>\n            ' +
__e( description ) +
' (Applies to ' +
__e( customerSpecific ? "select" : "all" ) +
' customers).\n            <p><textarea name="notes">' +
__e( notes ) +
'</textarea></p>\n            Supporting Information\n            <p><textarea name="supportingInformation">' +
__e( supportingInformation ) +
'</textarea></p>\n            Language\n            <a href="javascript:void(0);" class="clearLanguage" style="padding-left: 130px;"><i class="icon icon-minus-sign"></i>Clear</a>\n            <input id="language-selection" name="language-selection" class="language span7" type="text" value="' +
__e( (languageLabel ? languageLabel : "") ) +
'"/>\n            <p class="help-block">Required field</p>\n\n            <!--<h5>Supporting Documents</h5>-->\n        </div>\n\n        <div class="span6">\n            <dl class="dl-horizontal">\n                <dt>Qualification State</dt>\n                <dd> <select name="state" class="input-block-level qualification-state"></select> </dd>\n                <dt>Confirmed On</dt><dd><input type="text" class="datepicker" name="stateDateSince" value="' +
__e( stateDateSince ) +
'" autocomplete="off"/></dd>\n                <dt>Valid Until</dt><dd><input type="text" class="datepicker" name="stateDateUntil" value="' +
__e( stateDateUntil ) +
'" autocomplete="off"/></dd>\n                <dt></dt><dd><button type="button" ' +
__e( id ? "" : "disabled" ) +
' class="addFile btn btn-success">Add Backing Document</button></dd>\n            </dl>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["contact/qualification/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="info" class="alert ';
 if (validatedStatus == 'pass' || validatedStatus == '' ) { ;
__p += ' alert-info ';
 } else if (validatedStatus == 'warning') { ;
__p += ' alert-warning ';
 } else { ;
__p += ' alert-error ';
 } ;
__p += '">\n    <!-- ' +
__e( id ) +
' -->\n    <!-- <a class="close" data-dismiss="alert" href="#" id="deleteQualification" title="Delete qualification">( × )</a> -->\n\n    <div class="row-fluid">\n        <div class="span6">\n            <h4 class="alert-heading"><i title="Qualification / Certification" class="icon icon-bookmark"></i>\n                ' +
__e( name ) +
' <span id="controls"><a class="edit" href="javascript:void(0);" title="Edit qualification"><i class="icon icon-pencil"></i></a><!--<a class="delete" href="javascript:void(0);" title="Delete qualification"><i class="icon icon-remove"></i></a>--></span></h4>\n            ' +
__e( description ) +
' (Applies to ' +
__e( customerSpecific ? "select" : "all" ) +
' customers).\n            <p><strong>Notes:</strong> ' +
__e( notes ) +
'</p>\n            <p><strong>Supporting Information:</strong> ' +
__e( supportingInformation ) +
'</p>\n            <p><strong>Language:</strong> ' +
__e( (languageLabel ? languageLabel : "") ) +
'</p>\n            <h5>Supporting Document</h5>\n\n            <!-- TODO: make this a view. -->\n            <div class="documents">\n                <div class="row-fluid">\n                    <ul class="documents" style="list-style: none;"></ul>\n                </div>\n                <span>' +
__e( (documents.length == 0) ? "No Backing Documents" : "" ) +
'</span>\n            </div>\n        </div>\n\n        <div class="span6">\n            <dl class="dl-horizontal">\n                <dt>Confirmed Qualification</dt><dd>' +
__e( state ? state.name : "Invalid" ) +
'</dd>\n                <dt>Confirmed On / Until</dt><dd>' +
__e( state.nameKey == "valid" ? stateDateSince : "n/a" ) +
' - ' +
__e( state.nameKey == "valid" ? stateDateUntil : "n/a" ) +
'</dd>\n                <dt>Validated By</dt><dd>' +
__e( validated ? validatedBy : "n/a" ) +
'</dd>\n            </dl>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["contact/rateplanassociations/item"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid" style="margin-left: 5px">\n    <div class="control-group span3">\n        <label class="control-label" for="ratePlan"><b>Rate Plan</b></label>\n        <a href="javascript:void(0);" class="clearRatePlan pull-right"><i class="icon icon-remove-sign"></i> Clear</a>\n        <div class="controls">\n            <input class="api-v2 api-delegate input-block-level" type="text" id="ratePlan" name="ratePlan" value="';
 if ( obj.ratePlan ) { ;
__p +=
__e( obj.ratePlan.name );
 } ;
__p += '" />\n        </div>\n    </div>\n\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label">Active Start Date</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Date from which the rate plan is active?" data-original-title="Active Start Date">?</span></a>\n            <div class="controls">\n                <input class="span12 date" class="date input-block-level" name="activeStartDate" type="text" value="' +
__e( obj.activeStartDate ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label">Active End Date</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Date until which the rate plan is active?" data-original-title="Active End Date">?</span></a>\n            <div class="controls">\n                <input class="span12 date" class="date input-block-level" name="activeEndDate" type="text" value="' +
__e( obj.activeEndDate ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <div class="controls" style="margin-top:25px;">\n            <a href="javascript:void(0);" id="saveRatePlan"><i class="icon icon-save"></i> Save</a>\n            <a href="javascript:void(0);" id="deleteRatePlan"><i class="icon icon-minus-sign"></i> Delete</a>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["contact/rateplanassociations/list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Rate Plan Associations</h4>\n<div class="associations">\n\n</div>\n<br/>\n<div class="btn-group">\n    <button class="btn btn-primary model-add" type="button" value="Add Association">Add Association</button>\n</div>';

}
return __p
};

this["JST"]["contact/services/layout"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4>Services</h4>\n<br/>\n<div class="row-fluid">\n    <div class="control-group span3">\n        <label class="control-label" for="enableAllServices">Enable All Services?</label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enable all services for the interpreters?" data-original-title="Enable all Services?">?</a>\n        <div class="controls">\n            <input id="enableAllServices" name="enableAllServices" type="checkbox" ';
 if (enableAllServices) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n        </div>\n    </div>\n</div>\n<br/>\n<div id="services-list">\n\n</div>';

}
return __p
};

this["JST"]["customer/addresscontainer/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Service Location (Add New / Edit)</h4>\n<!-- nav tabs locations -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#edit-tab" data-toggle="tab">Add / Edit</a></li>\n    <li><a href="#sublocations-tab" data-toggle="tab">Sublocations</a></li>\n</ul>\n<!-- / nav tabs locations -->\n\n<div class="tab-content">\n    <div class="tab-pane active" id="edit-tab">\n\n        <!--<form>\n            <div id="addressBaseContainer" class="row-fluid">\n                <div id="addressContainer">\n\n                </div>\n\n\n                <div id="controls">\n                    <button class="btn btn-success" type="button" id="new" value="New Address">New Address</button>\n                    <button class="btn btn-primary" type="button" id="save" value="Save Address" data-loading-text="Saving address ...">Save Address</button>\n                </div>\n\n            </div>\n        </form>-->\n        <div class="location">\n            <div class="well">Please save the customer before adding a new service location</div>\n        </div>\n\n        <button class="btn btn-primary widget-save">Save</button>\n        <button class="btn widget-new">New</button>\n        <!--<button class="btn widget-delete">Delete</button>-->\n\n        <hr/>\n\n        <h4>Service Locations</h4>\n\n        <div class="locations"></div>\n\n    </div> <!-- / addEdit -->\n\n    <div class="tab-pane" id="sublocations-tab">\n\n        <!-- sub locations displayed here -->\n        <div class="sublocations"></div>\n\n    </div> <!-- / subLocations -->\n\n</div> <!-- / tab-content locations -->\n';

}
return __p
};

this["JST"]["customer/addresslistview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="locations-list"></div>\n';

}
return __p
};

this["JST"]["customer/advancedsearch/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div id="clauses_manage" class="filters">\n\n</div>\n<br/>\n<div class="btn-group">\n\n    <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown" type="button" value="more">\n        Export <span class="caret"></span>\n    </button>\n    <ul class="dropdown-menu">\n        <li><a href="javascript:void(0);"><i class="icon-download"></i>Export Customers<i class="icon-arrow-right"></i></a>\n            <ul class="dropdown-menu sub-menu">\n                <li><a class="exportCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n                <li><a class="exportCmd" href="javascript:void(0);" data-format="csv"><i class="icon-ms-excel"></i>CSV</a></li>\n            </ul>\n        </li>\n        <li><a href="javascript:void(0);"><i class="icon-download"></i>Export Contact Person<i class="icon-arrow-right"></i></a>\n            <ul class="dropdown-menu sub-menu">\n                <li><a class="exportContactPersonCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n                <li><a class="exportContactPersonCmd" href="javascript:void(0);" data-format="csv"><i class="icon-ms-excel"></i>CSV</a></li>\n            </ul>\n        </li>\n        <li><a href="javascript:void(0);"><i class="icon-download"></i>Export Addresses<i class="icon-arrow-right"></i></a>\n            <ul class="dropdown-menu sub-menu">\n                <li><a class="exportAddressesCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n                <li><a class="exportAddressesCmd" href="javascript:void(0);" data-format="csv"><i class="icon-ms-excel"></i>CSV</a></li>\n            </ul>\n        </li>\n        <li><a href="javascript:void(0);"><i class="icon-download"></i>Export Customer Hierarchy<i class="icon-arrow-right"></i></a>\n            <ul class="dropdown-menu sub-menu">\n                <li><a class="exportCustomerHierarchyCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n                <li><a class="exportCustomerHierarchyCmd" href="javascript:void(0);" data-format="csv"><i class="icon-ms-excel"></i>CSV</a></li>\n            </ul>\n        </li>\n        <li><a class="exportJobsCmd" href="#export_jobs"><i class="icon-download"></i> Export Jobs</a></li>\n        <li><a class="exportInvoicesCmd" href="#export_invoices"><i class="icon-download"></i> Export Invoices</a></li>\n        <li><a class="exportAllClientBookingMethodCmd" href="#export_all_client"><i class="icon-download"></i> Export All Client Booking Method</a></li>\n    </ul>\n    <div class="span6">\n        <label for="all_customers">All customers (with current filters applied)</label>\n        <input id="all_customers" type="checkbox"/>\n    </div>\n</div>\n<br/>\n';

}
return __p
};

this["JST"]["customer/clientcontainer/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Client (Add New / Edit)</h4>\n<div class="client">\n    <div class="well">Please save the customer before adding a new client</div>\n</div>\n\n<button class="btn btn-primary widget-save">Save</button>\n<button class="btn widget-new">New</button>\n<!--<button class="btn widget-delete">Delete</button>-->\n\n<hr/>\n\n<h4>Clients</h4>\n<div class="clients"></div>\n';

}
return __p
};

this["JST"]["customer/clientlistview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="clients-list"></div>\n';

}
return __p
};

this["JST"]["customer/config/criteria/hierarchy"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group span6">\n    <label class="control-label required" for="criteria.id">Hierarchy Criteria </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the hierarchy criteria required for bookings for this customer." data-original-title="Criteria">?</a>\n    <div class="controls">\n        <select class="span12" name="criteria.id">\n            ' +
((__t = ( selectOptions(App.dict.hierarchy, {noSelection: {id: '', name: '[Choose a Hierarchy Criteria]'}}) )) == null ? '' : __t) +
'\n        </select>\n        <p class="help-block">Required field</p>\n    </div>\n</div>\n\n<div class="control-group span3">\n    <label class="control-label required" for="required">Required </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Specify if this hierarchy criteria is a requirement or optional for bookings." data-original-title="Required">?</a>\n    <div class="controls">\n        <input type="checkbox" id="required" name="required" ';
 if (required) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n    </div>\n</div>\n\n\n<div class="span3">\n    <label>&nbsp;</label>\n    <a class="deleteCustomerCriteriaConfig" href="javascript:void(0);" title="Delete Hierarchy Criteria"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n</div>\n';

}
return __p
};

this["JST"]["customer/config/criteria/qualification"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group span6">\n    <label class="control-label required" for="criteria.id">Qualification </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the criteria required for bookings for this customer." data-original-title="Criteria">?</a>\n    <div class="controls">\n        <select class="span12" name="criteria.id">\n            ' +
((__t = ( selectOptions(App.dict.qualifications, {noSelection: {id: '', name: '[Choose a Qualification]'}}) )) == null ? '' : __t) +
'\n        </select>\n        <p class="help-block">Required field</p>\n    </div>\n</div>\n\n<div class="control-group span3">\n    <label class="control-label required" for="required">Required </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Specify if this criteria is a requirement or optional for bookings." data-original-title="Required">?</a>\n    <div class="controls">\n        <input type="checkbox" id="required" name="required" ';
 if (required) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n    </div>\n</div>\n\n\n<div class="span3">\n    <label>&nbsp;</label>\n    <a class="deleteCustomerCriteriaConfig" href="javascript:void(0);" title="Delete Qualification"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n</div>\n';

}
return __p
};

this["JST"]["customer/config/criteria/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group span6">\n    <label class="control-label required" for="criteria.id">Criteria </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the criteria required for bookings for this customer." data-original-title="Criteria">?</a>\n    <div class="controls">\n        <select class="span12" name="criteria.id">\n            ' +
((__t = ( selectOptions(App.dict.criteria, {noSelection: {id: '', name: '[Choose a Criteria]'}}) )) == null ? '' : __t) +
'\n        </select>\n        <p class="help-block">Required field</p>\n    </div>\n</div>\n\n<div class="control-group span3">\n    <label class="control-label required" for="required">Required </label>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Specify if this criteria is a requirement or optional for bookings." data-original-title="Required">?</a>\n    <div class="controls">\n        <input type="checkbox" id="required" name="required" ';
 if (required) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n    </div>\n</div>\n\n\n<div class="span3">\n    <label>&nbsp;</label>\n    <a class="deleteCustomerCriteriaConfig" href="javascript:void(0);" title="Delete Criteria"><span style="display: inline-block; vertical-align: middle;" class="icon ui-icon ui-icon-circle-minus"></span>Delete</a>\n</div>\n';

}
return __p
};

this["JST"]["customer/config/customerassignmentcriteriagrid/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="booking-list assignment-criteria-grid">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["customer/config/customerconfig/addAssignmentCriteria"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-employment-criteria" placeholder="Search Employment Criteria"/>\n    <button class="btn btn-default" id="addAssignmentCriteria" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["customer/config/customerconfig/addConsumerExclusion"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-exclusion-customer-consumer-consumer" placeholder="Search Consumer"/>\n    <input type="text" id="search-exclusion-customer-consumer-interpreter" placeholder="Search Interpreter"/>\n    <textarea rows="3" cols="50" id="exclusion-customer-consumer-notes" placeholder="Notes"/>\n    <button class="btn btn-default" id="addConsumerExclusion" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["customer/config/customerconfig/addConsumerPreference"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-preference-customer-consumer-consumer" placeholder="Search Consumer"/>\n    <input type="text" id="search-preference-customer-consumer-interpreter" placeholder="Search Interpreter"/>\n    <textarea rows="3" cols="50" id="preference-customer-consumer-notes" placeholder="Notes"/>\n    <button class="btn btn-default" id="addConsumerPreference" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["customer/config/customerconfig/addExclusion"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-exclusion-interpreter" placeholder="Search Interpreter"/>\n    <input type="text" id="search-exclusion-client" placeholder="Search Client"/>\n    <input type="text" id="search-exclusion-location" placeholder="Search Location"/>\n    <textarea rows="3" cols="50" id="exclusion-notes-customer" placeholder="Notes"/>\n    <button class="btn btn-default" id="addExclusion" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["customer/config/customerconfig/addPreference"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-preference-interpreter" placeholder="Search Interpreter"/>\n    <input type="text" id="search-preference-client" placeholder="Search Client"/>\n    <input type="text" id="search-preference-location" placeholder="Search Location"/>\n    <textarea rows="3" cols="50" id="preference-customer-notes" placeholder="Notes"/>\n    <button class="btn btn-default" id="addPreference" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["customer/config/customerconfig/assignmentCheck"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<label>\n    <input id="assignmentCheck" type="checkbox" name="enableAssignments"> Enable Assignments<br>\n</label>\n';

}
return __p
};

this["JST"]["customer/config/customerconfig/assignmentOperator"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    <label class="control-label required" for="assignmentOperator">Operator </label>\n\n    <div id="assignmentOperator" class="span12">\n        <div class="span1"><input type="radio" class="assignmentOperator" name="assignmentOperator" value="OR"> OR</div>\n        <div class="span1"><input type="radio" class="assignmentOperator" name="assignmentOperator" value="AND"> AND\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["customer/config/customerconfig/internalprofileview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4>Configuration</h4>\n<!-- Lite configuration view on customer portal for internals -->\n<div class="row-fluid">\n    <div class="span12">\n        <div class="control-group">\n            <label>Enable Auto Offering?</label>\n            <input type="checkbox" id="enableAutoOffer" name="enableAutoOffer" ';
 if (obj.enableAutoOffer) { ;
__p += ' checked ';
 } ;
__p += ' />\n        </div>\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span12">\n        <div class="control-group">\n            <button class="btn btn-primary widget-save">Save</button>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["customer/config/customerconfig/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div style="text-align: center;"><h4 class="customerName">' +
__e( name ) +
'</h4></div>\n\n<form>\n    <h4 class="well">General Configuration</h4>\n    <div class="row-fluid">\n\n        <div class="control-group">\n            <label class="control-label" for="timeZone">Time Zone </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the default timezone for this customer.<p>The timezone is used to set the local timezone for customer bookings." data-original-title="Time Zone">?</a>\n            <div class="controls">\n                <select class="span12" name="timeZone">\n                    ' +
((__t = ( selectOptions(App.dict.timeZones, {noSelection: {id: '', gmtOffset: '[Select a Timezone/Override Company Timezone]'}, selected: (obj.timeZone ? obj.timeZone : ''), display:'gmtOffset'}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </div>\n\n        <div class="control-group">\n            <label class="control-label required" for="searchRadius">Radius for Automated Assignment </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the radius for automated search and interpreter selection." data-original-title="Search Radius">?</a>\n            <div class="controls">\n                <input class="span12" type="text" id="searchRadius" name="searchRadius" value="' +
__e( searchRadius ) +
'"/>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label>Enable Sublocations? <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Show sublocation option for this customer" data-original-title="Show Sublocation?">?</a>\n                <input type="checkbox" id="sublocationsEnabled" name="sublocationsEnabled"  ';
 if (sublocationsEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </label>\n        </div>\n\n        <div class="control-group span4">\n            <label>Enable VoS Required? <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Require a VoS form when closing a job for this customer." data-original-title="Require VoS?">?</a>\n                <input type="checkbox" id="vosRequired" name="vosRequired" ';
 if (vosRequired) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n\n        <div class="control-group span4">\n            <label>Enable eSignature Required? <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Require an eSignature when closing a job via the mobile application for this customer" data-original-title="Require eSignature">?</a>\n                <input type="checkbox" id="esignatureRequired" name="esignatureRequired" ';
 if (esignatureRequired) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n    </div>\n\n    <h4 class="well">Financial Configuration</h4>\n\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label required" for="groupingHierarchyType.id">Invoice / Report Grouping </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Specify the default grouping for invoices and reports.<dl><dt>Combined</dt><dd>Combine all bookings</dd><dt>Individual</dt><dd>Every booking has an individual invoice</dd><dt>Hierarchy</dt><dd>Use the hierarchy defined in the hierarchy tab for grouping</dd><dt>Group by Reference</dt><dd>Group bookings by one of the reference fields defined below</dd><dl>" data-original-title="Invoice Grouping">?</a>\n            <div class="controls">\n                <select class="span12" name="groupingHierarchyType.id">\n                    ' +
((__t = ( selectOptions(App.dict.groupingHierarchyType, {noSelection: {id: '', name: '[Choose a Grouping]'}}) )) == null ? '' : __t) +
'\n                </select>\n                <p class="help-block">Required field</p>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="enableInvoiceLandscape">Enable Invoice Landscape </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable landscape view for Invoice" data-original-title="Enable Invoice Landscape">?</a>\n            <div class="controls">\n                <input type="checkbox" id="enableInvoiceLandscape" name="enableInvoiceLandscape" ';
 if (enableInvoiceLandscape) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n                <p class="help-block"></p>\n            </div>\n        </div>\n\n    </div>\n\n    <h4 class="well">Customer Notifications</h4>\n\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label>Enable email notifications?\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Turn on or off email notifications for this customer" data-original-title="Enable Email Notifications">?</a>\n            <input type="checkbox" id="notificationsEnabled" name="notificationsEnabled"  ';
 if (notificationsEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </label>\n        </div>\n\n        <div class="control-group span4">\n            <label>Notify Creators? <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Cc the creators of a job when for all job notifications" data-original-title="Notify Creators">?</a>\n            <input type="checkbox" id="notifyCreators" name="notifyCreators" ';
 if (notifyCreators) { ;
__p += ' checked ';
 } ;
__p += ' value=""/>\n            </label>\n        </div>\n        <div class="control-group span4">\n            <label>Notify Job Complete? <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Notify requestor and interpreter manager when the job has been verified / completed." data-original-title="Notify Job Complete">?</a>\n                <input type="checkbox" id="enableJobCompleteEmails" name="enableJobCompleteEmails" ';
 if (enableJobCompleteEmails) { ;
__p += ' checked ';
 } ;
__p += ' value=""/>\n            </label>\n        </div>\n\n    </div>\n    <div class="row-fluid">\n\n        <div class="span4">\n            <label>Cc Email Address for Notifications\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Email address to Cc on all customer notifications" data-original-title="Cc Email Address">?</a>\n            </label>\n            <input class="span12" type="text" name="notificationEmail" id="notificationEmail" value="' +
__e( notificationEmail ) +
'" placeholder="Email"/>\n        </div>\n    </div>\n\n    <h4 class="well">Module Settings</h4>\n\n    <div class="row-fluid">\n        <div class="control-group span3">\n            <label class="control-label" for="ivrEnabled">IVR Enabled?</label> <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable Interactive Voice Response (IVR) support for this customer. Must be first enabled for your agency." data-original-title="Interactive Voice Respose (IVR)">?</a>\n            <div class="controls">\n                <input type="checkbox" id="ivrEnabled" name="ivrEnabled" ';
 if (ivrEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( ivrEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="vriEnabled">VRI Enabled?</label> <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable Video Remote Interpretation (VRI) support for this customer. Must be first enabled for your agency." data-original-title="Video Remote Interpretation (VRI)">?</a>\n            <div class="controls">\n                <input type="checkbox" id="vriEnabled" name="vriEnabled" ';
 if (vriEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( vriEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="opiEnabled">OPI Enabled?</label> <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable Over the Phone Interpretation (OPI) support for this customer. Must be first enabled for your agency." data-original-title="Over the Phone Interpretation (OPI)">?</a>\n            <div class="controls">\n                <input type="checkbox" id="opiEnabled" name="opiEnabled" ';
 if (opiEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( opiEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="dispatchEnabled">Dispatch Enabled?</label> <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable real-time dispatch support for this customer. Must be first enabled for your agency." data-original-title="Dispatch">?</a>\n            <div class="controls">\n                <input type="checkbox" id="dispatchEnabled" name="dispatchEnabled" ';
 if (dispatchEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( dispatchEnabled ) +
'"/>\n            </div>\n        </div>\n    </div>\n\n    <h4 class="well">Customer Portal</h4>\n    <div class="row-fluid">\n        <div class="control-group span6">\n            <label>Enable portal access? <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enable / disable customer portal access." data-original-title="Enable Portal Access">?</a>\n            <input type="checkbox" id="portalAccess" name="portalAccess" ';
 if (portalAccess) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </label>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span6">\n            <label>Create Enabled\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Allow customers to create new jobs on the customer portal." data-original-title="Create Job Enabled">?</a>\n                <input type="checkbox" id="jobCreateEnabled" name="jobCreateEnabled" ';
 if (jobCreateEnabled) { ;
__p += ' checked ';
 } ;
__p += '  value="true"/>\n            </label>\n        </div>\n        <div class="control-group span6">\n            <label>Update Enabled\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Allow customers to update jobs on the customer portal." data-original-title="Update Job Enabled">?</a>\n                <input type="checkbox" id="jobUpdateEnabled" name="jobUpdateEnabled" ';
 if (jobUpdateEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n            </label>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label>Allow customer creation\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Allow customers to create new customer bill accounts on the customer portal." data-original-title="Create Customer Enabled">?</a>\n                <input type="checkbox" id="customerCreateEnabled" name="customerCreateEnabled" ';
 if (customerCreateEnabled) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n        <div class="control-group span4">\n            <label>Allow client creation\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Allow customers to create new clients on the customer portal." data-original-title="Create Client Enabled">?</a>\n                <input type="checkbox" id="clientCreateEnabled" name="clientCreateEnabled" ';
 if (clientCreateEnabled) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n        <div class="control-group span4">\n            <label>Allow requestor creation\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Allow customers to create new requestors on the customer portal." data-original-title="Create Requestor Enabled">?</a>\n                <input type="checkbox" id="requestorCreateEnabled" name="requestorCreateEnabled" ';
 if (requestorCreateEnabled) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label>Allow location creation\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Allow customers to create new locations on the customer portal." data-original-title="Create Location Enabled">?</a>\n            <input type="checkbox" id="locationCreateEnabled" name="locationCreateEnabled" ';
 if (locationCreateEnabled) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n        <div class="control-group span4">\n            <label>Allow sublocation creation\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Allow customers to create new sublocations on the customer portal." data-original-title="Create Sublocation Enabled">?</a>\n            <input type="checkbox" id="sublocationCreateEnabled" name="sublocationCreateEnabled" ';
 if (sublocationCreateEnabled) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n        <div class="control-group span4">\n            <label>SLA reporting enabled\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enabling this option forces interpreters to enter outbound travel time during booking close." data-original-title="SLA Reporting Enabled">?</a>\n                <input type="checkbox" id="slaReportingEnabled" name="slaReportingEnabled" ';
 if (slaReportingEnabled) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label>Track Travel Time?\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enabling this option forces interpreters to enter both inbound outbound travel time during booking close." data-original-title="Track Travel Time?">?</a>\n            <input type="checkbox" id="enableTimeTracking" name="enableTimeTracking" ';
 if (enableTimeTracking) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n        <div class="control-group span4">\n            <label>Enable Auto Offering?</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enables automatic job offering." data-original-title="Enable Auto Offering">?</a>\n            <input type="checkbox" id="enableAutoOffer" name="enableAutoOffer" ';
 if (enableAutoOffer) { ;
__p += ' checked ';
 } ;
__p += ' />\n        </div>\n        <div class="control-group span4">\n            <label>Enable Job Offer Pool</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Enable Job Offer Pool so that scheduler can choose an interpreter from a list of accepted offers." data-original-title="Enable Job Offer Pool">?</a>\n            <input type="checkbox" id="enableJobOfferPool" name="enableJobOfferPool" ';
 if (enableJobOfferPool) { ;
__p += ' checked ';
 } ;
__p += ' />\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span6">\n            <label>Enable Margin Threshold Check?\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enabling this option will take into account the margin threshold during auto-offer. Once enabled the auto offer process will take into account the margin threshold set when determining if a job is offered to an intepreter during the auto-offer process." data-original-title="Enable Margin Threshold?">?</a>\n                <input type="checkbox" id="enableMarginThreshold" name="enableMarginThreshold" ';
 if (enableMarginThreshold) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n        <div class="control-group span6">\n            <label>Margin Threshold</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="When the margin threshold is enabled the threshold is set in this field. The treshold is the margin that must be achieved when determining whether a job should be offered to an interpreter. If the margin falls below this threshold the job will not be offered to the interprter. If the margin is equal to or better than this value, the job will be offered to the interpreter." data-original-title="Margin Threshold">?</a>\n            <input class="span12" type="text" name="marginThreshold" value="' +
__e( marginThreshold ) +
'"></input>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label>Enable Booking Freeze?</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the booking creation freeze timespan.<p>This customer will not be able to create a new booking within this number of hours of the start time." data-original-title="Create booking freeze">?</a>\n            <input type="checkbox" id="bookingFreezeEnabled" name="bookingFreezeEnabled" ';
 if (bookingFreezeEnabled) { ;
__p += ' checked ';
 } ;
__p += ' />\n        </div>\n        <div class="control-group span4">\n            <label>Create freeze span</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the booking creation freeze timespan.<p>This customer will not be able to create a new booking within this number of hours of the start time." data-original-title="Create booking freeze">?</a>\n            <input class="span12" type="text" name="bookingCreateFreezeHours" value="' +
__e( bookingCreateFreezeHours ) +
'"></input>\n        </div>\n        <div class="control-group span4">\n            <label>Edit freeze span</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the booking editing freeze timespan.<p>This customer will not be able to edit a new booking within this number of hours of the start time." data-original-title="Edit booking freeze">?</a>\n            <input class="span12" type="text" name="bookingEditFreezeHours" value="' +
__e( bookingEditFreezeHours ) +
'"></input>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="currencyCode.id">Currency Code</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Currency code for Customer." data-original-title="Currency Code">?</a>\n            <div class="controls">\n                <select name="currencyCode.id">\n                    ' +
((__t = ( selectOptions(App.dict.currencyCode, {noSelection: {id: '', name: '[Choose a Unit]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label>Currency Symbol</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Currency symbol for Customer." data-original-title="Currency Symbol">?</a>\n            <input type="text" id="currencySymbol" class="input-block-level" name="currencySymbol" value="' +
__e( currencySymbol ) +
'"/>\n        </div>\n    </div>\n\n    <h4 class="well">Consumer Configuration</h4>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label>Consumer enable\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Consumer enabled on booking create" data-original-title="Consumer Enabled">?</a>\n                <input type="checkbox" id="enableConsumer" name="enableConsumer" ';
 if (enableConsumer) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n        <div class="control-group span4">\n            <label> Customer Specific Consumer? </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Customer specific Consumers." data-original-title="Enable Customer Specific Consumers" tabindex="-1">?</a>\n            <div class="controls">\n                <input id="customerSpecificConsumer" name="customerSpecificConsumer" type="checkbox" ';
 if (customerSpecificConsumer) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label>Allow consumer creation\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Allow customers to create new consumers on the customer portal." data-original-title="Create Consumer Enabled">?</a>\n                <input type="checkbox" id="consumerCreateEnabled" name="consumerCreateEnabled" ';
 if (consumerCreateEnabled) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label>Enable Consumer Count\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Track the number of consumers during booking close." data-original-title="Consumer Count Enabled">?</a>\n                <input type="checkbox" id="consumerCountEnabled" name="consumerCountEnabled" ';
 if (consumerCountEnabled) { ;
__p += ' checked ';
 } ;
__p += ' />\n            </label>\n        </div>\n    </div>\n\n    <h4 class="well">Reference Field Configuration</h4>\n    <div class="row-fluid">\n        <div class="span6">\n            <label>Display Size</label>\n            <input class="span12" type="text" id="referenceListSize" name="referenceListSize" value="' +
__e( referenceListSize ) +
'">\n        </div>\n        <div class="span6">\n            <label>Allow Other References</label>\n            <input type="checkbox" id="allowMoreReferenceCodes" name="allowMoreReferenceCodes" ';
 if (allowMoreReferenceCodes) { ;
__p += ' checked ';
 } ;
__p += ' value="true"></input>\n        </div>\n    </div>\n    <div id="referenceCodeConfigs">\n\n    </div>\n    <div class="row-fluid">\n        <a href="javascript:void(0);" id="addReferenceCodeConfig" class="span8"><i class="icon icon-plus-sign"></i>Add Reference</a>\n    </div>\n    <!-- / field configuration -->\n\n    <h4 class="well">Booking Requirements</h4>\n    <h5>Eligibility Criteria</h5>\n    <div id="criteria">\n\n    </div>\n    <div class="row-fluid">\n        <a href="javascript:void(0);" id="addCriteria" class="span8"><i class="icon icon-plus-sign"></i>Add eligibility</a>\n    </div>\n\n    <h5>Interpreter Qualifications</h5>\n    <div id="qualifications">\n\n    </div>\n    <div class="row-fluid">\n        <a href="javascript:void(0);" id="addQualification" class="span8"><i class="icon icon-plus-sign"></i>Add qualification</a>\n    </div>\n\n    <h5>Hierarchy Criteria</h5>\n    <div id="hierarchy">\n\n    </div>\n    <div class="row-fluid">\n        <a href="javascript:void(0);" id="addHierarchyCriteria" class="span8"><i class="icon icon-plus-sign"></i>Add Hierarchy Criteria</a>\n    </div>\n\n</form>\n';

}
return __p
};

this["JST"]["customer/config/customerlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p +=
__e( name );
 if (accountingReference) { ;
__p += ' (<strong>' +
__e( accountingReference ) +
'</strong>) ';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["customer/config/customerpreferencesgrid/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="booking-list excluded-grid">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["customer/config/nodelocation/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h1>NodeLocationTemplate</h1>\n<li>' +
__e( location["addrEntered"] );
 if (location["description"]) { ;
__p += ' (<strong>' +
__e( location["description"] ) +
'</strong>) ';
 } ;
__p += '</li>';

}
return __p
};

this["JST"]["customer/config/snippet/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="span6">\n                <div class="control-group">\n                    <label class="control-label" for="invoiceDescriptionSnippet">Invoice Description</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for invoice description" data-original-title="Invoice Description" tabindex="-1">?</a>\n                    <div class="controls">\n                        <textarea style="width:100%;" rows=5 class="input-block-level" id="invoiceDescriptionSnippet" name="invoiceDescriptionSnippet">' +
__e( invoiceDescriptionSnippet ) +
'</textarea>\n                    </div>\n                </div>\n            </div>\n            <div class="control-group span6">\n                <label class="control-label" for="invoiceSplitDescriptionSnippet">Split Invoice Description</label>\n                <a href="javascript:void(0);" class="input-block-level helptext badge badge-info" rel="popover" data-content="Code snippet for split invoice description" data-original-title="Split Invoice Description" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="invoiceSplitDescriptionSnippet" name="invoiceSplitDescriptionSnippet">' +
__e( invoiceSplitDescriptionSnippet ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n\n<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="invoiceOrderSnippet">Invoice Order</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for invoice order. Use a and b as variables for comparison." data-original-title="Invoice Order" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea  class="input-block-level" rows=5 id="invoiceOrderSnippet" name="invoiceOrderSnippet">' +
__e( invoiceOrderSnippet ) +
'</textarea>\n                </div>\n            </div>\n            <div class="control-group span6">\n                <label class="control-label" for="invoiceGroupHeadingSnippet">Invoice Header</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for invoice header. This is used with Invoice Order to separate the invoice groupings apart from each other. For example, ${client?.accountingReference} - ${client?.name}" data-original-title="Invoice Header" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea class="input-block-level" rows=5 id="invoiceGroupHeadingSnippet" name="invoiceGroupHeadingSnippet">' +
__e( invoiceGroupHeadingSnippet ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n\n<form class="form-vertical">\n    <fieldset>\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label class="control-label" for="invoiceOrderSnippet">Job Description</label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Code snippet for job description in interpreter portal" data-original-title="Job Description" tabindex="-1">?</a>\n                <div class="controls">\n                    <textarea  class="input-block-level" rows=5 id="jobDescriptionSnippet" name="jobDescriptionSnippet">' +
__e( jobDescriptionSnippet ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["customer/consumer/consumer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="config-form customer">\n    <input type="text" id="search-consumer-customer" placeholder="Search Consumer"/>\n    <button class="btn btn-default" id="addConsumer" style="margin-bottom: 9px;">Add</button>\n</div>\n';

}
return __p
};

this["JST"]["customer/consumer/grid"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="consumers">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["customer/customer/bareview/customeraddressesview/customeraddresslistitemview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- address ' +
__e( obj.id ) +
' -->\n<div>\n    <dl class="dl-horizontal">\n        ';
 if(obj.description){ ;
__p += '\n        <dt>Description</dt><dd>' +
__e( obj.description ) +
'</dd>\n        ';
 } ;
__p += '\n        ';
 if(obj.aptUnit){ ;
__p += '\n        <dt>Apt / Unit</dt><dd>' +
__e( obj.aptUnit ) +
'</dd>\n        ';
 } ;
__p += '\n        ';
 if(obj.preamble){ ;
__p += '\n        <dt>Place / Building Name</dt><dd>' +
__e( obj.preamble ) +
'</dd>\n        ';
 } ;
__p += '\n        ';
 if(obj.addrEntered){ ;
__p += '\n        <dt>Address</dt><dd>' +
__e( obj.addrEntered ) +
'</dd>\n        ';
 } ;
__p += '\n        ';
 if(obj["type.id"]){ ;
__p += '\n        <dt>Type</dt><dd>' +
__e( getStatusAttributeById(App.dict.addressType, obj["type.id"], "name") ) +
' ' +
__e( (obj.primaryAddress) ? "(primary)" : "" ) +
'</dd>\n        ';
 } ;
__p += '\n    </dl>\n</div>\n';

}
return __p
};

this["JST"]["customer/customer/bareview/customeraddressesview/customeraddresslistview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="customer-addresses">\n    <!-- JST Template: customer/customer/bareview/customeraddressesview/customeraddresslistitemview/show.jst -->\n</div>\n';

}
return __p
};

this["JST"]["customer/customer/bareview/customeraddressesview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n\n    <div class="span8">\n\n        <h4>Billing Address(es)</h4>\n        <div class="billing-address-list">\n            <!-- JST template customer/customer/bareview/customeraddressesview/customeraddresslistview/show -->\n            <!-- JST template barebillingaddressview/show.jst -->\n        </div>\n    </div>\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["customer/customer/bareview/customerdetailsview/customercategorylistitemview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.name ) +
'\n';

}
return __p
};

this["JST"]["customer/customer/bareview/customerdetailsview/customercategorylistview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="customer-categories">\n    <!-- JST Template: customer/customer/bareview/customerdetailsview/customercategorylistitemview/show.jst -->\n</div>\n';

}
return __p
};

this["JST"]["customer/customer/bareview/customerdetailsview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n    <div class="span4">\n\n        <!-- customer -->\n        <div>\n            <h5>Customer</h5>\n            <div>\n                ' +
__e( obj.name ) +
'\n            </div>\n        </div>\n\n        <!-- ref number -->\n        <div>\n            <h5>Accounting Reference Number</h5>\n            <div>\n                ' +
__e( obj.accountingReference ) +
'\n            </div>\n        </div>\n\n        <!-- parent ref number -->\n        <div>\n            <h5>Parent Accounting Reference Number</h5>\n            <div>\n                ' +
__e( obj.parentAccountingReference ) +
'\n            </div>\n        </div>\n\n        <!-- start date / time -->\n        <div>\n            <h5>Contact Person</h5>\n            <div>' +
__e( (obj.contactName) ? (obj.contactName) : "" ) +
'</div>\n            <h5>Contact Email</h5>\n            <div>' +
__e( (obj.primaryEmail) ? (obj.primaryEmail.emailAddress) : "" ) +
'</div>\n            <h5>Contact Phone</h5>\n            <div>' +
__e( (obj.primaryNumber) ? (obj.primaryNumber.parsedNumber) : "" ) +
'</div>\n        </div>\n    </div> <!-- / left column -->\n\n    <div class="span4">\n\n        <!-- end date / time -->\n        <div>\n            <h5>Website</h5>\n            <div>\n                ' +
__e( (obj.website) ? (obj.website) : "" ) +
'\n            </div>\n\n        </div>\n\n        <div>\n            <h5>Status</h5>\n            <div>\n                ' +
__e( getStatusAttributeById(App.dict.customerStatus, obj["status.id"], "name") ) +
'\n            </div>\n        </div>\n\n        <div>\n            <h5>Categories</h5>\n            <div class="customer-category-list">\n                <!-- JST template customer/customer/bareview/customerdetailsview/customercategorylistview/show.jst -->\n            </div>\n        </div>\n\n        <div>\n            <h5>Notes</h5>\n            <div>' +
__e( obj.notes ) +
'</div>\n        </div>\n\n    </div> <!-- / right column -->\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["customer/customer/bareview/customerhistoryview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n    <div class="span2">\n        <h5>Created Date</h5>\n        <div data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="format-datetime">\n            ' +
__e( obj.createdDate ) +
'\n        </div>\n    </div>\n\n    <div class="span3">\n        <h5>Created By</h5>\n        <div>\n            ' +
__e( obj.createdBy ) +
'\n        </div>\n    </div>\n\n    <div class="span2">\n\n        <h5>Last Modified Date</h5>\n        <div data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="format-datetime">\n            ' +
__e( obj.lastModifiedDate ) +
'\n        </div>\n    </div>\n\n    <div class="span3">\n        <h5>Last Modified By</h5>\n        <div>\n            ' +
__e( obj.lastModifiedBy ) +
'\n        </div>\n    </div>\n</div>\n<div class="row-spacer">\n</div>\n<div class="row">\n    <div class="span10">\n        <h4>History</h4>\n        <div class="history">\n            <!-- Audit History common view  -->\n        </div>\n    </div>\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["customer/customer/bareview/customermainlayoutview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#details" data-toggle="tab">Customer Information</a></li>\n    <li><a href="#addresses" data-toggle="tab">Addresses</a></li>\n    <li><a href="#history" data-toggle="tab">Audit History</a></li>\n</ul>\n<!-- / nav tabs -->\n\n\n<div class="tab-content">\n    <!-- Details Tab -->\n    <div class="tab-pane active" id="details">\n        <!-- JST template customer/customer/bareview/customerdetailsview/show -->\n    </div> <!-- / tab details -->\n\n    <!-- Addresses Tab -->\n    <div class="tab-pane" id="addresses">\n        <!-- JST template customer/customer/bareview/customerdetailsview/show -->\n    </div> <!-- / addresses -->\n\n    <!-- Audit History Tab -->\n    <div class="tab-pane" id="history">\n        <!-- JST template customer/customer/bareview/customerhistoryview/show -->\n    </div> <!-- / history -->\n</div> <!-- / tabs -->\n';

}
return __p
};

this["JST"]["customer/customer/categoryview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="control-group">\n    <label class="control-label required" for="customerCategory.id">Category </label> <a href="javascript:void(0);" id="deleteCategory" class="pull-right"><i class="icon icon-minus-sign"></i>Delete</a>\n    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Select the category this customer can be associated with it. More than one category can be selected" data-original-title="Customer Category">?</a>\n    <div class="controls">\n        <select class="span12" name="id">\n            ' +
((__t = ( selectOptions(App.dict.customerCategory, {noSelection: {id: '', name: '[Choose a Category]'}}) )) == null ? '' : __t) +
'\n        </select>\n        <p class="help-block">Required field</p>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["customer/customer/customerview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<form class="form-vertical">\n    <fieldset>\n        <section id="details">\n            <h4 class="well">Customer Details</h4>\n            <div class="row-fluid">\n                <!-- left column -->\n                <div class="span6">\n                    <div class="row-fluid">\n                        <!-- name -->\n                        <div class="control-group">\n                            <label class="control-label required" for="name">Name </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The customer name." data-original-title="Customer Name">?</a>\n                            <div class="controls">\n                                <input class="span12" id="name" name="name" type="text" value="' +
__e( name ) +
'"/>\n                                <p class="help-block">Required field.</p>\n                            </div>\n                        </div>\n                    </div> <!-- / row-->\n\n                    <div class="row-fluid">\n                        <div class="control-group">\n                            <label class="control-label" for="accountingReference">Accounting Reference </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="A reference number or code to identify this customer in other systems." data-original-title="Accounting Reference">?</a>\n                            <div class="controls">\n                                <input class="span12" id="accountingReference" name="accountingReference" type="text" value="' +
__e( accountingReference ) +
'"/>\n                            </div>\n                        </div>\n                    </div> <!-- / row-->\n                    <div class="secured secured-comp secured-admin">\n                        <div class="row-fluid">\n                            <div class="control-group">\n                                <label class="control-label" for="parentAccountingReference">Parent Accounting Reference </label>\n                                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="<p>A reference number or code to group multiple customers together.</p><p>This allows some level of separation between related entities while providing future support for an aggregated view during reporting.</p><p>This field is only available to administrators.</p>" data-original-title="Parent Accounting Reference">?</a>\n                                <div class="controls">\n                                    <input class="span12" id="parentAccountingReference" name="parentAccountingReference" type="text" value="' +
__e( parentAccountingReference ) +
'"/>\n                                </div>\n                            </div>\n                        </div> <!-- / row-->\n                    </div>\n\n                    <div class="row-fluid">\n                        <div class="control-group">\n                            <label class="control-label" for="contactName">Contact Name </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The contact person for this customer account. This is a legacy field. New contact information should be added under the contact information section." data-original-title="Contact Name">?</a>\n                            <div class="controls">\n                                <input class="span12" id="contactName" name="contactName" type="text" value="' +
__e( contactName ) +
'"/>\n                            </div>\n                        </div>\n                    </div> <!-- / row-->\n\n                    <div class="row-fluid">\n                        <div class="control-group span4">\n                            <label class="control-label" for="accountExecutive">Account Executive </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The name of the Account Executive or Sales Rep associated with this customer account." data-original-title="Account Executive">?</a>\n                            <div class="controls">\n                                <input class="span12" id="accountExecutive" name="accountExecutive" type="text" value="' +
__e( accountExecutive ) +
'"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="billingAccount">Billing Account </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The billing account number for this customer. The billing account number can be used to reference an external system in a similar way to accounting reference or parent accounting reference." data-original-title="Billing Account">?</a>\n                            <div class="controls">\n                                <input class="span12" id="billingAccount" name="billingAccount" type="text" value="' +
__e( billingAccount ) +
'"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="umbrellaNumber">Umbrella Number </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The umbrella number for this customer. The umbrella account number can be used to reference an external system in a similar way to accounting reference or parent accounting reference." data-original-title="Umbrella Number">?</a>\n                            <div class="controls">\n                                <input class="span12" id="umbrellaNumber" name="umbrellaNumber" type="text" value="' +
__e( umbrellaNumber ) +
'"/>\n                            </div>\n                        </div>\n                    </div> <!-- / row-->\n\n\n                </div> <!-- / left column -->\n\n                <!-- right column -->\n                <div class="span6">\n                    <div class="row-fluid">\n                        <div class="control-group">\n                            <label class="control-label" for="website">Website </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The website for this customer." data-original-title="Website">?</a>\n                            <div class="controls">\n                                <input class="span12" id="website" name="website" type="text" value="' +
__e( website ) +
'"/>\n                            </div>\n                        </div>\n                    </div> <!-- / row-->\n\n                    <div class="row-fluid">\n                        <div class="control-group">\n                            <label class="control-label" for="notes">Notes </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Notes related to the customer. These will appear for internal review on the booking screens." data-original-title="Notes">?</a>\n                            <div class="controls">\n                                <textarea style="width:100%" class="wysiwyg" name="notes">' +
__e( notes ) +
'</textarea>\n                            </div>\n                        </div>\n                    </div> <!-- / row-->\n\n                    <div class="row-fluid">\n                        <div class="control-group span12">\n                            <label class="control-label" for="accountingSickLeaveCode">Accounting Sick Leave Code </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="An accounting code to represent sick leave for the Customer" data-original-title="Accounting Sick Leave Code">?</a>\n                            <div class="controls">\n                                <input class="span12" id="accountingSickLeaveCode" name="accountingSickLeaveCode" type="text" value="' +
__e( accountingSickLeaveCode ) +
'"/>\n                            </div>\n                        </div>\n                    </div> <!-- / row-->\n                </div> <!-- / right column -->\n            </div> <!-- / row-->\n        </section> <!-- / details -->\n\n        <section id="special-instructions">\n            <h4 class="well">Special Instructions</h4>\n                <div class="row-fluid">\n                    <div class="control-group span4">\n                        <label class="control-label" for="customerSpecialInstructions">Customer Special Instructions </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Special Instructions related to the customer. These will appear on the customer booking screens." data-original-title="Customer Special Instructions">?</a>\n                        <div class="controls">\n                            <textarea style="width:100%" class="wysiwyg" name="customerSpecialInstructions">' +
__e( customerSpecialInstructions ) +
'</textarea>\n                        </div>\n                    </div>  <!-- Customer Special Instructions -->\n                    <div class="control-group span4">\n                        <label class="control-label" for="contactSpecialInstructions">Interpreter Special Instructions </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Special Instructions related to the interpreter. These will appear on the interpreter booking screens." data-original-title="Interpreter Special Instructions">?</a>\n                        <div class="controls">\n                            <textarea style="width:100%" class="wysiwyg" name="contactSpecialInstructions">' +
__e( contactSpecialInstructions ) +
'</textarea>\n                        </div>\n                    </div>  <!-- Interpreter Special Instructions -->\n                    <div class="control-group span4">\n                        <label class="control-label" for="companySpecialInstructions">Internal Special Instructions </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Special Instructions related to the internal admin user. These will appear on the admin booking screens." data-original-title="Internal Special Instructions">?</a>\n                        <div class="controls">\n                            <textarea style="width:100%" class="wysiwyg" name="companySpecialInstructions">' +
__e( companySpecialInstructions ) +
'</textarea>\n                        </div>\n                    </div>  <!-- Admin / Internal Special Instructions -->\n                </div> <!-- / row-->\n        </section> <!-- / special instructions -->\n\n        <section id="classifications">\n            <h4 class="well">Classifications</h4>\n            <div class="row-fluid">\n                <!-- left column -->\n                <div class="span6">\n\n                    <div class="row-fluid">\n                        <div class="control-group">\n                            <label class="control-label required" for="contractType.id">Contract Type </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The type of relationship with this customer.<p>This field determines the initial status for new bookings." data-original-title="Contract Type">?</a>\n                            <div class="controls">\n                                <select name="contractType.id" class="span12">\n                                    ' +
((__t = ( selectOptions(App.dict.contractType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row-fluid">\n                        <div class="control-group">\n                            <label class="control-label required" for="status.id">Status </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Customer status" data-original-title="Status">?</a>\n                            <div class="controls">\n                                <select name="status.id" class="span12">\n                                    ' +
((__t = ( selectOptions(App.dict.customerStatus, {noSelection: {id: '', name: '[Choose a Status]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                                <p class="help-block">Required field</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="row-fluid">\n                        <div class="control-group">\n                            <label class="control-label" for="businessUnit.id">Business Unit</label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The business unit this customer falls under." data-original-title="Business Unit">?</a>\n                            <div class="controls">\n                                <select name="businessUnit.id" class="span-12">\n                                    ' +
((__t = ( selectOptions(App.dict.businessUnit, {noSelection: {id: '', name: '[Choose a Unit]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div> <!-- / left column -->\n\n                <!-- right column -->\n                <div class="span6">\n                    <div id="categories" class="row-fluid">\n\n                    </div>\n\n                    <a href="javascript:void(0);" id="addCategory"><i class="icon icon-plus-sign"></i>Add customer category</a>\n\n                </div> <!-- / right column -->\n            </div <!-- / row-->\n        </section> <!-- / classifications -->\n\n        <section id="billingTerms">\n            <h4 class="well">Billing Terms</h4>\n            <div class="row-fluid">\n                <!-- left column -->\n                <div class="span6">\n\n                    <div class="row-fluid">\n                        <div class="control-group span4">\n                            <label class="control-label" for="billingMethod">Billing Method </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Billing method to be used for this customer." data-original-title="Billing Method">?</a>\n                            <div class="controls">\n                                <select name="billingMethod.id" class="span-12">\n                                    ' +
((__t = ( selectOptions(App.dict.billingMethod, {noSelection: {id: '', name: '[Choose a Method]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="paymentDaysDue">Days Due </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Number of days within which payment is due. Used for past due stamp." data-original-title="Payment Days Due">?</a>\n                            <div class="controls">\n                                <input id="paymentDaysDue" name="paymentDaysDue" class="span12" type="text" value="' +
__e( paymentDaysDue ) +
'"/>\n                            </div>\n                        </div>\n\n                        <div class="control-group span4">\n                            <label class="control-label" for="purchaseOrderNumber">PO Number </label>\n                            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Current purchase order number for this customer." data-original-title="PO Number">?</a>\n                            <div class="controls">\n                                <input id="purchaseOrderNumber" name="purchaseOrderNumber" class="span12" type="text" value="' +
__e( purchaseOrderNumber ) +
'"/>\n                            </div>\n                        </div>\n                    </div> <!-- / row-->\n\n                </div> <!-- / left column -->\n\n                <!-- right column -->\n                <div class="span6">\n\n                    <div class="control-group">\n                        <label class="control-label" for="paymentTerms">Payment Terms </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Payment terms for this customer. Will appear by default on the memo for new invoices." data-original-title="Payment Terms">?</a>\n                        <div class="controls">\n                            <textarea class="span12" id="paymentTerms" name="paymentTerms">' +
__e( paymentTerms ) +
'</textarea>\n                        </div>\n                    </div>\n\n                </div> <!-- / right column -->\n            </div <!-- / row-->\n        </section> <!-- / billing terms -->\n\n        <section id="billing">\n            <h4 class="well">Billing Information</h4>\n            <div id="billingAddresses" class="row-fluid">\n\n            </div>\n\n            <a href="javascript:void(0);" id="addAddress"><i class="icon icon-plus-sign"></i>Add address</a>\n\n        </section> <!-- / billing -->\n\n        <section id="contact">\n            <h4 class="well">Contact Information</h4>\n            <!-- left column -->\n            <div class="row-fluid">\n                <div class="span6">\n                    <div id="numbers">\n\n                    </div>\n\n                    <a href="javascript:void(0);" id="addNumber"><i class="icon icon-plus-sign"></i>Add phone number</a>\n\n                </div> <!-- / left column -->\n\n\n                <!-- right column -->\n                <div class="span6">\n                    <div id="emails">\n\n                    </div>\n\n                    <a href="javascript:void(0);" id="addEmail"><i class="icon icon-plus-sign"></i>Add email address</a>\n\n                </div> <!-- / right column -->\n            </div> <!-- / row-->\n        </section> <!-- / contact -->\n\n        <!--\n    <section id="contactPersons">\n      <h4 class="well">Contact Persons</h4>\n      <!-- left column - - >\n      <div id="contacts" class="row">\n\n      </div>\n\n      <a href="javascript:void(0);" id="addContact"><i class="icon icon-plus-sign"></i>Add contact person</a>\n    </section> <!-- / contact -->\n\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["customer/dashboard/association"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div>\n    <div class="pull-left">\n        <img src="' +
__e( App.config.company.config.logoUri ) +
'" style="padding-right: 10px;"/>\n    </div>\n    <div class="pull-left">\n        <h3>';
 if (obj.customer) { ;
__p +=
__e( obj.customer.name );
 } else { ;
__p += '[All Customers]';
 } ;
__p += '</h3>\n        <h4>';
 if (obj.client) { ;
__p +=
__e( obj.client.name );
 } else { ;
__p += '[All Clients]';
 } ;
__p += '</h4>\n        <h5>';
 if (obj.location) { ;
__p +=
__e( obj.location.displayLabel );
 } else { ;
__p += '[All Locations]';
 } ;
__p += '</h5>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["customer/dashboard/bookingsTable"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            <strong>' +
__e( obj.title ) +
'</strong>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n        </div>\n    </div>\n    ';
 if(obj.showFiltersApplied === true) { ;
__p += '\n    <div id="queryFiltersAppliedView">\n        <div class="row-fluid">\n            <div class="span12">\n                <strong>Query Applied:</strong>\n                <span id="queryFiltersApplied-bookingsTable"></span>\n            </div>\n        </div>\n    </div>\n    ';
 } ;
__p += '\n</div>\n<div class="grid">\n\n</div>\n<div class="row">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["customer/import/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="well span3">\n        <ul class="nav nav-list">\n            <li class="nav-header">\n                Import\n            </li>\n            <li>\n                Import data by selecting the file (Excel 97 - 2004) and clicking on the appropriate upload button.\n            </li>\n            <li class="divider"></li>\n            <li>\n                <div class="progress progress-success active">\n                    <div class="bar" style="width: 0%;"></div>\n                </div>\n            </li>\n            <li id="basics">\n            </li>\n        </ul>\n    </div> <!-- / #sidebar -->\n    <div class="offset3 span8 content">\n        <div class="row-fluid">\n            <div class="span12">\n                <h4>Bookings</h4>\n                <form name="bookings" action="' +
__e(App.config.context) +
'/upload/bookings" method="post" enctype="multipart/form-data">\n                    <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                    <input type="hidden" class="isIE" name="isIE" value="false">\n\n                    <div class="control-group">\n                        <label class="control-label" for="bookingsFile">Bookings Import </label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Use this field to upload bookings." data-original-title="Bookings Import">?</a>\n\n                        <div class="controls">\n                            <input type="file" name="theFile" class="fileInput" id="bookingsFile" />\n                            <p class="help-block">Required. Please select a file of type .xls.</p>\n                        </div>\n\n                        <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["customer/quickadd"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- add customer from booking screen -->\n<div id="popupErrorContainer" class="msg-modal hide">\n</div>\n<div id="popupSuccessContainer" class="msg-modal hide">\n</div>\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>';
 if (obj.id) { ;
__p += 'Edit Existing Customer';
 } else {;
__p += 'Create New Customer';
 } ;
__p += '</h3>\n</div>\n<div class="modal-body">\n    ';
 if (obj.id) { ;
__p += '\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing customer. This will update <strong>all bookings</strong>\n        that are already associated with this customer. If you want to enter a new customer, click on the\n        <span class="label label-info">Create New</span> button below and enter the new customer information.\n    </div>\n    ';
 } ;
__p += '\n    <div class="row-fluid">\n        <div class="span6">\n            <div class="control-group">\n                <label class="control-label required" for="name">Name </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The customer name." data-original-title="Customer Name">?</a>\n                <div class="controls">\n                    <input id="name" name="name" type="text" value="' +
__e( obj.name ) +
'"/>\n                    <p class="help-block">Required field.</p>\n                </div>\n            </div>\n        </div>\n        <div class="span6">\n            <div class="control-group">\n                <label class="control-label required" for="contractType.id">Contract Type </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The type of relationship with this customer.<p>This field determines the initial status for new bookings." data-original-title="Contract Type">?</a>\n                <div class="controls">\n                    <select name="contractType.id">\n                        ' +
((__t = ( selectOptions(App.dict.contractType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                    <p class="help-block">Required field</p>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span6">\n            <div class="control-group">\n                <label class="control-label" for="contactName">Contact Name </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The contact person for this customer account. This is a legacy field. New contact information should be added under the contact information section." data-original-title="Contact Name">?</span></a>\n                <div class="controls">\n                    <input id="contactName" name="contactName" type="text" value="' +
__e( obj.contactName ) +
'"/>\n                </div>\n            </div>\n        </div>\n\n        <div class="span6">\n            <div class="control-group span5">\n                <label class="control-label" for="notes">Notes </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Notes related to the customer. These will appear for internal review on the booking screens." data-original-title="Notes">?</a>\n                <div class="controls">\n                    <textarea id="notes" class="wysiwyg" style="height: 150px;" name="notes">' +
__e( notes ) +
'</textarea>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid" id="billingAddresses">\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary widget-save-customer">Save Customer</a>\n    <a href="javascript:void(0);" class="btn btn-primary widget-create-customer hidden">Create New</a>\n    <a href="javascript:void(0);" class="btn widget-close-customer" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["customer/rateplanassociations/item"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid" style="margin-left: 5px">\n    <div class="control-group span3">\n        <label class="control-label" for="ratePlan"><b>Rate Plan</b></label>\n        <a href="javascript:void(0);" class="clearRatePlan pull-right"><i class="icon icon-remove-sign"></i> Clear</a>\n        <div class="controls">\n            <input class="api-v2 api-delegate input-block-level" type="text" id="ratePlan" name="ratePlan" value="';
 if ( obj.ratePlan ) { ;
__p +=
__e( obj.ratePlan.name );
 } ;
__p += '" />\n        </div>\n    </div>\n\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label"><b>Active Start Date</b></label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Date from which the rate plan is active?" data-original-title="Active Start Date">?</span></a>\n            <div class="controls">\n                <input class="span12 date" class="date input-block-level" name="activeStartDate" type="text" value="' +
__e( obj.activeStartDate ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label"><b>Active End Date</b></label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Date until which the rate plan is active?" data-original-title="Active End Date">?</span></a>\n            <div class="controls">\n                <input class="span12 date" class="date input-block-level" name="activeEndDate" type="text" value="' +
__e( obj.activeEndDate ) +
'" autocomplete="off"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <div class="controls" style="margin-top:25px;">\n            <a href="javascript:void(0);" id="saveRatePlan"><i class="icon icon-save"></i> Save</a>\n            <a href="javascript:void(0);" id="deleteRatePlan"><i class="icon icon-minus-sign"></i> Delete</a>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["customer/rateplanassociations/list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Rate Plan Associations</h4>\n<div class="associations">\n\n</div>\n<br/>\n<div class="btn-group">\n    <button class="btn btn-primary model-add" type="button" value="Add Association">Add Association</button>\n</div>';

}
return __p
};

this["JST"]["customer/services/layout"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4>Services</h4>\n<br/>\n<div class="row-fluid">\n    <div class="control-group span3">\n        <label class="control-label" for="enableAllServices">Enable All Services?</label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"  data-content="Enable all services for the interpreters?" data-original-title="Enable all Services?">?</a>\n        <div class="controls">\n            <input id="enableAllServices" name="enableAllServices" type="checkbox" ';
 if (enableAllServices) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n        </div>\n    </div>\n</div>\n<br/>\n<div id="services-list">\n\n</div>';

}
return __p
};

this["JST"]["employment/eligibility/employmenteligibilitylist/applied"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Applied Employment Eligibility</h3>\n<div class="applied-eligibility-list">\n</div>\n';

}
return __p
};

this["JST"]["employment/eligibility/employmenteligibilitylist/missing"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Missing Employment Eligibility</h3>\n<div class="missing-eligibility-list">\n</div>\n';

}
return __p
};

this["JST"]["employment/eligibility/employmenteligibilitylist/preset"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Preset Employment Eligibility</h3>\n<div class="preset-eligibility-list">\n</div>\n';

}
return __p
};

this["JST"]["employment/eligibility/employmenteligibilitylistitem/missing"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.mode === "edit") { ;
__p += '\n<div class="row-fluid">\n\t<div id=\'action\' class="span1"><a id="save" href="javascript:void(0);" title="Save Eligibility"><i class="icon icon-save"></i></a> <a id="remove" href="javascript:void(0);" title="Remove Eligibility"><i class="icon icon-remove"></i></a></div>\n\t<div id=\'criteria\' class="span4"><b>' +
__e( obj.criteria.name ) +
'</b> (' +
__e( obj.enforcementPolicy? obj.enforcementPolicy : "" ) +
')<br/>';
 if(obj.language.id != "") { ;
__p += '<strong>Language:</strong> ' +
__e( obj.language.id != "" ) +
'<br/>';
 } ;
__p +=
__e( obj.criteria.description ) +
'<br><b>Validated By:</b> ' +
__e( obj.validatedBy ) +
'</div>\n\t<div id=\'validatedContainer\' class="control-group span1">\n\t\t<div class="controls">\n            <select name="state" class="input-block-level eligibility-state">\n            </select>\n\t\t\t<p class="help-block">Required field.</p>\n\t\t</div>\n\t</div>\n\t<div id=\'validatedDateContainer\' class="control-group span1">\n\t\t<div class="controls">\n\t\t\t<input id="stateDateSince" name="stateDateSince" data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date" type=\'text\' readonly value=\'' +
__e( obj.stateDateSince ) +
'\'/>\n\t\t</div>\n\t</div>\n\t<div id=\'validUntilContainer\' class="control-group span1">\n\t\t<div class="controls">\n\t\t\t<input id="stateDateUntil" name="stateDateUntil" data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date" type=\'text\' readonly value=\'' +
__e( obj.stateDateUntil ) +
'\'/>\n\t\t</div>\n\t</div>\n\t<div id=\'notes\' class="control-group span4">\n\t\t<div class="controls">\n\t\t\t<textarea id="notes" name="notes" row=\'5\' class="span12" style="height:74px; margin-bottom:0 !important;">' +
__e( obj.notes ) +
'</textarea>\n\t\t</div>\n\t</div>\n</div>\n';
 } else { ;
__p += '\n\n<div class="row-fluid">\n    <div id=\'action\' class="span1"><a id="edit" href="javascript:void(0);" title="Edit Eligibility"><i class="icon icon-pencil"></i></a> <a id="remove" href="javascript:void(0);" title="Remove Eligibility"><i class="icon icon-remove"></i></a></div>\n    <div id=\'criteria\' class="span4"><b>' +
__e( obj.criteria.name ) +
'</b> (' +
__e( obj.enforcementPolicy? obj.enforcementPolicy : "" ) +
')<br/>';
 if(obj.language.id != "") { ;
__p += '<strong>Language:</strong> ' +
__e( obj.language.displayName ) +
'<br/>';
 } ;
__p +=
__e( obj.criteria.description ) +
'<br><b>Validated By:</b> ' +
__e( obj.validatedBy ) +
'</div>\n    <div id=\'validatedContainer\' class="span1">' +
__e( obj.state ? obj.state.name : "" ) +
'</div>\n    <div id=\'validatedDateContainer\' data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span1 format-date">' +
__e( obj.stateDateSince ) +
'</div>\n    <div id=\'validUntilContainer\' data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span1 format-date">' +
__e( obj.stateDateUntil ) +
'</div>\n    <div id=\'notes\' class="span4">' +
__e( obj.notes ) +
'</div>\n</div>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["employment/eligibility/employmenteligibilitylistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.mode === "edit") { ;
__p += '\n<div id="info" class="alert ';
 if (validatedStatus == 'pass' || validatedStatus == '') { ;
__p += ' alert-success ';
 } else if (validatedStatus == 'warning') { ;
__p += ' alert-warning ';
 } else { ;
__p += ' alert-error ';
 } ;
__p += '">\n    <div class="row-fluid">\n        <div id=\'action\' class="span1"><a id="save" href="javascript:void(0);" title="Save Eligibility"><i class="icon icon-save"></i></a> <a id="remove" href="javascript:void(0);" title="Remove Eligibility"><i class="icon icon-remove"></i></a></div>\n        <div id=\'criteria\' class="span4"><b>' +
__e( obj.criteria.name ) +
'</b> (' +
__e( obj.enforcementPolicy? obj.enforcementPolicy : "" ) +
')<br/>';
 if(obj.language.id != "") { ;
__p += '<strong>Language:</strong> ' +
__e( obj.language.id != "" ) +
'<br/>';
 } ;
__p +=
__e( obj.criteria.description ) +
'<br><b>Validated By:</b> ' +
__e( obj.validatedBy ) +
'</div>\n        <div id=\'validatedContainer\' class="control-group span1">\n            <div class="controls">\n                <select name="state" class="input-block-level eligibility-state">\n                </select>\n                <p class="help-block">Required field.</p>\n            </div>\n        </div>\n        <div id=\'validatedDateContainer\' class="control-group span1">\n            <div class="controls">\n                <input id="stateDateSince" name="stateDateSince" data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date" type=\'text\' readonly value=\'' +
__e( obj.stateDateSince ) +
'\'/>\n            </div>\n        </div>\n        <div id=\'validUntilContainer\' class="control-group span1">\n            <div class="controls">\n                <input id="stateDateUntil" name="stateDateUntil" data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date" type=\'text\' readonly value=\'' +
__e( obj.stateDateUntil ) +
'\'/>\n            </div>\n        </div>\n        <div id=\'notes\' class="control-group span4">\n            <div class="controls">\n                <textarea id="notes" name="notes" row=\'5\' class="span12" style="height:74px; margin-bottom:0 !important;">' +
__e( obj.notes ) +
'</textarea>\n            </div>\n        </div>\n    </div>\n</div>\n\n';
 } else { ;
__p += '\n<div id="info" class="alert ';
 if (validatedStatus == 'pass' || validatedStatus == '') { ;
__p += ' alert-success ';
 } else if (validatedStatus == 'warning') { ;
__p += ' alert-warning ';
 } else { ;
__p += ' alert-error ';
 } ;
__p += '">\n    <div class="row-fluid">\n        <div id=\'action\' class="span1"><a id="edit" href="javascript:void(0);" title="Edit Eligibility"><i class="icon icon-pencil"></i></a> <a id="remove" href="javascript:void(0);" title="Remove Eligibility"><i class="icon icon-remove"></i></a></div>\n        <div id=\'criteria\' class="span4"><b>' +
__e( obj.criteria.name ) +
'</b> (' +
__e( obj.enforcementPolicy? obj.enforcementPolicy : "" ) +
')<br/>';
 if(obj.language.id != "") { ;
__p += '<strong>Language:</strong> ' +
__e( obj.language.displayName ) +
'<br/>';
 } ;
__p +=
__e( obj.criteria.description ) +
'<br><b>Validated By:</b> ' +
__e( obj.validatedBy ) +
'</div>\n        <div id=\'validatedContainer\' class="span1">' +
__e( obj.state ? obj.state.name : "" ) +
'</div>\n        <div id=\'validatedDateContainer\' data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span1 format-date">' +
__e( obj.stateDateSince ) +
'</div>\n        <div id=\'validUntilContainer\' data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span1 format-date">' +
__e( obj.stateDateUntil ) +
'</div>\n        <div id=\'notes\' class="span4">' +
__e( obj.notes ) +
'</div>\n    </div>\n</div>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["financial/common/bookingpopup/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<dl class="">\n    <dt>ID</dt><dd>' +
__e( obj.id ) +
'</dd>\n    <dt>Requesting Location</dt><dd>' +
__e( obj["billingLocation.label"] ) +
'</dd>\n    <dt>Requested By</dt><dd>' +
__e( obj["requestor.label"] ) +
'</dd>\n    <dt>Billing Notes</dt><dd>' +
__e( obj.billingNotes ? obj.billingNotes : "&nbsp;" ) +
'</dd>\n    <dt>Interpreter</dt><dd>' +
__e( obj["interpreter.label"] ) +
'</dd>\n    <dt>Expected Duration</dt><dd>' +
__e( obj.expectedDuration ) +
'</dd>\n    <dt>Actual Duration</dt><dd>' +
__e( obj.actualDuration ) +
'</dd>\n    <dt>Interpretation Type</dt><dd>' +
__e( obj["bookingMode.label"] ) +
'</dd>\n    <dt>Notes</dt><dd>' +
__e( obj.notes ) +
'</dd>\n</dl>\n';

}
return __p
};

this["JST"]["financial/common/creditmemo/downloadpdf/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Download PDF</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="control-group">\n                <div class="controls">\n                    <input type="checkbox" id="regeneratePdf" class="regeneratePdf" name="regeneratePdf"/>\n                    <label class="control-label" for="regeneratePdf">Regenerate PDF</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Regenerate PDF even if the PDF was previously generated. This should be used if updates have been made." data-original-title="Regenerate PDF">?</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Download</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["financial/common/creditmemo/payableitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<td>\n    ' +
__e( obj.parentEntityId ) +
'\n</td>\n<td>\n    ' +
__e( obj.type ? getStatusAttributeById(App.dict.payableItemType, obj.type.id, 'name') : "N/A" ) +
'\n    <br/>\n    ' +
__e( obj.rateType ? getStatusAttributeById(App.dict.rateZoneType, obj.rateType.id, 'name') : "N/A" ) +
'\n</td>\n<td>\n    ' +
((__t = ( obj.description )) == null ? '' : __t) +
'\n</td>\n<td>\n    ' +
__e( obj.quantity ) +
'\n</td>\n<td>\n    <!-- show three decimal places for mileage -->\n    ';
 if (obj.type.id == App.dict.payableItemType.mileage.id) { ;
__p += '\n    ' +
__e( formatMoney(obj.unitCost * -1, 3) ) +
'\n    ';
 } else { ;
__p += '\n    ' +
__e( formatMoney(obj.unitCost * -1) ) +
'\n    ';
 } ;
__p += '\n</td>\n<td>\n    <!--';
 if (obj.isDeduction || obj.isDeductionService) { ;
__p += ' ' +
__e( "(" + formatMoney(obj.totalCost * -1) + ")" ) +
' ';
 } else { ;
__p += ' ' +
__e( formatMoney(obj.totalCost * -1) ) +
' ';
 } ;
__p += '<!-- totalCost -->\n    ' +
__e( formatMoney(obj.totalCost * -1) ) +
'\n</td>\n';

}
return __p
};

this["JST"]["financial/common/downloadpdf/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Download PDF</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n\n            <div class="control-group">\n                <div class="controls">\n                    <input type="checkbox" id="includeVos" class="includeVos" name="includeVos"/>\n                    <label class="control-label" for="includeVos">Include VoS forms</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include VoS forms with download." data-original-title="Include VoS Forms">?</a>\n                </div>\n            </div>\n\n            <fieldset class="group-container hide" disabled>\n                <legend>Include VoS Forms</legend>\n                <div style="margin-bottom: 10px;">\n                    <strong>NOTE</strong>: many files over a certain size will be blocked by email providers. This may prevent large documents from being received when VoS forms are included.\n                </div>\n                <div class="control-group">\n                    <div class="controls">\n                        <label class="control-label">\n                            <input type="radio" name="mergePdfBulkEmail" idddd="mergePdfBulkEmail" class="mergePdfBulkEmail" value="false" checked/> Include VoS forms in a zip file\n                        </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include uploaded VoS forms in zip file with download. To ensure each VoS form has a unique name, all entries in the zip file will be prefixed with a timestamp." data-original-title="Include VoS (Zip)">?</a>\n                    </div>\n                </div>\n\n                <div class="control-group">\n                    <div class="controls">\n                        <label class="control-label">\n                            <input type="radio" name="mergePdfBulkEmail" iddd="mergePdfBulkEmail" class="mergePdfBulkEmail" value="true"/> Merge VoS forms in a single PDF document\n                        </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include uploaded VoS forms and embed in the generated PDF. Only VoS forms on PDF type will be merged, all others will be skipped e.g. png, jpge, gif." data-original-title="Include VoS (PDF)">?</a>\n                    </div>\n                </div>\n            </fieldset>\n\n            <div class="control-group">\n                <div class="controls">\n                    <input type="checkbox" id="regeneratePdf" class="regeneratePdf" name="regeneratePdf"/>\n                    <label class="control-label" for="regeneratePdf">Regenerate PDF</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Regenerate PDF even if the PDF was previously generated. This should be used if updates have been made." data-original-title="Regenerate PDF">?</a>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Download</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["financial/common/payableitem/print"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.edit) {  ;
__p += '\n\n';
 if (obj.isFee) { ;
__p += '\n<td class="seq">\n    ' +
__e( obj.parentEntityId ) +
'\n    <div class="pi-controls">\n        <div><a href="javascript:void(0);" id="savePayableItem"><i class="icon-check"></i></a></div>\n        <div><a href="javascript:void(0);" id="showBooking"><i class="icon-eye-open"></i></a></div>\n        <div><a href="javascript:void(0);" id="addPayableItem"><i class="icon-plus-sign"></i></a></div>\n        <div><a href="javascript:void(0);" id="deletePayableItem"><i class="icon-minus-sign"></i></a></div>\n    </div>\n</td>\n<td class="seq" colspan=\'2\'>\n    <div class="control-group">\n        <div class="controls">\n            <g:select name="type.id" from="${payableItemTypes}" optionKey="id" optionValue="name" value="" noSelection="[\'\': \'[Choose a Type]\']" />\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="desc" colspan=\'2\'>\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="description" id="description" value="' +
__e( obj.description ) +
'" placeholder="Description"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="qty">\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="quantity" id="quantity" value="' +
__e( obj.quantity ) +
'" placeholder="Quantity"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="unit-price">\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="unitCost" id="unitCost" value="' +
__e( obj.unitCost ) +
'" placeholder="Unit Cost"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="line-total">' +
__e( obj.totalCost ) +
'<!-- totalCost --></td>\n';
 } else if (obj.isIncidental) { ;
__p += '\n<td class="seq">\n    ' +
__e( obj.parentEntityId ) +
'\n    <div class="pi-controls">\n        <div><a href="javascript:void(0);" id="savePayableItem"><i class="icon-check"></i></a></div>\n        <div><a href="javascript:void(0);" id="showBooking"><i class="icon-eye-open"></i></a></div>\n        <div><a href="javascript:void(0);" id="addPayableItem"><i class="icon-plus-sign"></i></a></div>\n        <div><a href="javascript:void(0);" id="deletePayableItem"><i class="icon-minus-sign"></i></a></div>\n    </div>\n</td>\n<td class="seq" colspan=\'2\'>\n    <div class="control-group">\n        <div class="controls">\n            <g:select name="type.id" from="${payableItemTypes}" optionKey="id" optionValue="name" value="" noSelection="[\'\': \'[Choose a Type]\']" />\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="desc" colspan=\'2\'>\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="description" id="description" value="' +
__e( obj.description ) +
'" placeholder="Description"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="qty">\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="quantity" id="quantity" value="' +
__e( obj.quantity ) +
'" placeholder="Quantity"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="unit-price">\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="unitCost" id="unitCost" value="' +
__e( obj.unitCost ) +
'" placeholder="Unit Cost"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="line-total">' +
__e( obj.totalCost ) +
'<!-- totalCost --></td>\n';
 } else if (obj.isService) { ;
__p += '\n<td class="seq">\n    ' +
__e( obj.parentEntityId ) +
'\n    <div class="pi-controls">\n        <div><a href="javascript:void(0);" id="savePayableItem"><i class="icon-check"></i></a></div>\n        <div><a href="javascript:void(0);" id="showBooking"><i class="icon-eye-open"></i></a></div>\n        <div><a href="javascript:void(0);" id="addPayableItem"><i class="icon-plus-sign"></i></a></div>\n        <div><a href="javascript:void(0);" id="deletePayableItem"><i class="icon-minus-sign"></i></a></div>\n    </div>\n</td>\n<td class="seq">' +
__e( obj.start ) +
'</td>\n<td class="seq">' +
__e( obj.end ) +
'</td>\n<td class="qty">\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="quantity" id="quantity" value="' +
__e( obj.quantity ) +
'" placeholder="Quantity"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="qty">' +
__e( obj.languageCode ) +
'</td>\n<td class="desc">\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="description" id="description" value="' +
__e( obj.description ) +
'" placeholder="Description"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="unit-price">\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="unitCost" id="unitCost" value="' +
__e( obj.unitCost ) +
'" placeholder="Unit Cost"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="line-total">' +
__e( accounting.formatMoney(obj.unitCost * obj.quantity, { symbol: companyConfig.currencySymbol }) ) +
'<!-- totalCost --></td>\n\n';
 } else { ;
__p += '\n\n<td class="seq">\n    ' +
__e( obj.parentEntityId ) +
'\n    <div class="pi-controls">\n        <div><a href="javascript:void(0);" id="savePayableItem"><i class="icon-check"></i></a></div>\n        <div><a href="javascript:void(0);" id="showBooking"><i class="icon-eye-open"></i></a></div>\n        <div><a href="javascript:void(0);" id="addPayableItem"><i class="icon-plus-sign"></i></a></div>\n        <div><a href="javascript:void(0);" id="deletePayableItem"><i class="icon-minus-sign"></i></a></div>\n    </div>\n</td>\n<td class="seq" colspan=\'2\'>\n    <div class="control-group">\n        <div class="controls">\n            <g:select name="type.id" from="${payableItemTypes}" optionKey="id" optionValue="name" value="" noSelection="[\'\': \'[Choose a Type]\']" />\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="desc" colspan=\'2\'>\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="description" id="description" value="' +
__e( obj.description ) +
'" placeholder="Description"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="qty">\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="quantity" id="quantity" value="' +
__e( obj.quantity ) +
'" placeholder="Quantity"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="unit-price">\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="unitCost" id="unitCost" value="' +
__e( obj.unitCost ) +
'" placeholder="Unit Cost"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td class="line-total">' +
__e( obj.totalCost ) +
'<!-- totalCost --></td>\n\n\n';
 } ;
__p += '\n\n';
 } else {  ;
__p += '\n\n';
 if (obj.isFee) { ;
__p += '\n<td class="seq">\n    ' +
__e( obj.parentEntityId ) +
'\n    <div class="pi-controls">\n        <div><a href="javascript:void(0);" id="editPayableItem"><i class="icon-edit"></i></a></div>\n        <div><a href="javascript:void(0);" id="showBooking"><i class="icon-eye-open"></i></a></div>\n        <div><a href="javascript:void(0);" id="addPayableItem"><i class="icon-plus-sign"></i></a></div>\n        <div><a href="javascript:void(0);" id="deletePayableItem"><i class="icon-minus-sign"></i></a></div>\n    </div>\n</td>\n<td class="seq" colspan=\'2\'>Fees & Charges</td>\n<td class="desc" colspan=\'3\'>' +
__e( obj.description ) +
'</td>\n<td class="unit-price">' +
__e( obj.unitCostDescription ? obj.unitCostDescription : accounting.formatMoney(obj.unitCost, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n<td class="line-total">' +
__e( accounting.formatMoney(obj.unitCost * obj.quantity, { symbol: companyConfig.currencySymbol }) ) +
'<!-- totalCost --></td>\n';
 } else if (obj.isIncidental) { ;
__p += '\n<td class="seq">\n    ' +
__e( obj.parentEntityId ) +
'\n    <div class="pi-controls">\n        <div><a href="javascript:void(0);" id="editPayableItem"><i class="icon-edit"></i></a></div>\n        <div><a href="javascript:void(0);" id="showBooking"><i class="icon-eye-open"></i></a></div>\n        <div><a href="javascript:void(0);" id="addPayableItem"><i class="icon-plus-sign"></i></a></div>\n        <div><a href="javascript:void(0);" id="deletePayableItem"><i class="icon-minus-sign"></i></a></div>\n    </div>\n</td>\n<td class="seq" colspan=\'2\'>Billable Expense (' +
__e( getStatusAttributeById(App.dict.payableItemType, obj["type.id"], 'name') + "(" + obj.quantity + ")" ) +
')</td>\n<td class="desc" colspan=\'3\'>' +
__e( obj.description ) +
'</td>\n<td class="unit-price">' +
__e( obj.unitCostDescription ? obj.unitCostDescription : accounting.formatMoney(obj.unitCost, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n<td class="line-total">' +
__e( accounting.formatMoney(obj.unitCost * obj.quantity, { symbol: companyConfig.currencySymbol }) ) +
'<!-- totalCost --></td>\n';
 } else if (obj.isService) { ;
__p += '\n<td class="seq">\n    ' +
__e( obj.parentEntityId ) +
'\n    <div class="pi-controls">\n        <div><a href="javascript:void(0);" id="editPayableItem"><i class="icon-edit"></i></a></div>\n        <div><a href="javascript:void(0);" id="showBooking"><i class="icon-eye-open"></i></a></div>\n        <div><a href="javascript:void(0);" id="addPayableItem"><i class="icon-plus-sign"></i></a></div>\n        <div><a href="javascript:void(0);" id="deletePayableItem"><i class="icon-minus-sign"></i></a></div>\n    </div>\n</td>\n<td class="seq">' +
__e( obj.start ) +
'</td>\n<td class="seq">' +
__e( obj.end ) +
'</td>\n<td class="qty">' +
__e( obj.quantityDescription ) +
'</td>\n<td class="qty">' +
__e( obj.languageCode ) +
'</td>\n<td class="desc">' +
__e( obj.description ) +
'</td>\n<td class="unit-price">' +
__e( accounting.formatMoney(obj.unitCost, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n<td class="line-total">' +
__e( accounting.formatMoney(obj.unitCost * obj.quantity, { symbol: companyConfig.currencySymbol }) ) +
'<!-- totalCost --></td>\n';
 } else { ;
__p += '\n<td class="seq">\n    ' +
__e( obj.parentEntityId ) +
'\n    <div class="pi-controls">\n        <div><a href="javascript:void(0);" id="editPayableItem"><i class="icon-edit"></i></a></div>\n        <div><a href="javascript:void(0);" id="showBooking"><i class="icon-eye-open"></i></a></div>\n        <div><a href="javascript:void(0);" id="addPayableItem"><i class="icon-plus-sign"></i></a></div>\n        <div><a href="javascript:void(0);" id="deletePayableItem"><i class="icon-minus-sign"></i></a></div>\n    </div>\n</td>\n<td class="seq" colspan=\'2\'>' +
__e( getStatusAttributeById(App.dict.payableItemType, obj["type.id"], 'name') + "(" + obj.quantity + ")" ) +
'</td>\n<td class="desc" colspan=\'3\'>' +
__e( obj.description ) +
'</td>\n<td class="unit-price">' +
__e( obj.unitCostDescription ? obj.unitCostDescription : accounting.formatMoney(obj.unitCost, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n<td class="line-total">' +
__e( accounting.formatMoney(obj.unitCost * obj.quantity, { symbol: companyConfig.currencySymbol }) ) +
'<!-- totalCost --></td>\n';
 } ;
__p += '\n\n';
 }  ;
__p += '\n';

}
return __p
};

this["JST"]["financial/common/payableitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.edit) {  ;
__p += '\n\n<td>\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="parentEntityId" id="parentEntityId" class="input-block-level" value="' +
__e( obj.parentEntityId ) +
'" placeholder="Ref"/>\n        </div>\n    </div>\n</td>\n<td>\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="onDate" class="input-block-level format-date" value="' +
__e( obj.onDate ) +
'" placeholder="On Date" autocomplete="off"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <div class="controls">\n            <select name="type" id="type" class="api-v2 input-block-level">\n                ' +
((__t = ( selectOptions(App.dict.payableItemType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n\n    ';
 if (obj.type && obj.type.id == App.dict.payableItemType['serviceint'].id) { ;
__p += '\n    <div class="control-group">\n        <div class="controls">\n            <select name="rateType" id="rateType" class="api-v2 input-block-level">\n                ' +
((__t = ( selectOptions(App.dict.rateZoneType, {noSelection: {id: '', name: '[Rate Type]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n    ';
 } ;
__p += '\n\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="accountsClassification" class="input-block-level" value="' +
__e( obj.accountsClassification ) +
'" autocomplete="off"/>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <label class="control-label" for="taxable">Taxable? </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover" data-content="Whether this line item is taxable. This is a convenience to modify this setting if required. It does not remove any taxes already added for this item." data-original-title="Taxable?">?</a>\n        <div class="controls">\n            <input type="checkbox" id="taxable" name="taxable" ';
 if (obj.taxable) { ;
__p += ' checked ';
 } ;
__p += ' value="true"/>\n        </div>\n    </div>\n</td>\n<td>\n    <div class="control-group">\n        <div class="controls">\n            <!--<input type="text" name="description" id="description" class="input-block-level" value="' +
__e( obj.description ) +
'" placeholder="Description"/>-->\n            <textarea rows="4" name="description" class="input-block-level wysiwyg">' +
__e( obj.description ) +
'</textarea>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n    <div class="pi-controls pull-right">\n        <span><a href="javascript:void(0);" tabindex="-1" id="savePayableItem" title="Save Payable Item"><i class="icon-save"></i></a></span>\n        <span><a href="javascript:void(0);" tabindex="-1" id="undoPayableItem" title="Undo Changes"><i class="icon-undo"></i></a></span>\n        <span><a href="javascript:void(0);" tabindex="-1" id="showBooking" title="Show Booking"><i class="icon-eye-open"></i></a></span>\n        <!-- <span><a href="javascript:void(0);" tabindex="-1" id="addPayableItem"><i class="icon-plus-sign"></i></a></span> -->\n        <span><a href="javascript:void(0);" tabindex="-1" id="deletePayableItem" title="Delete Payable Item"><i class="icon-remove"></i></a></span>\n    </div>\n</td>\n<td>\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="quantity" id="quantity" class="input-block-level" value="' +
__e( obj.quantity ) +
'" placeholder="Quantity"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td>\n    <div class="control-group">\n        <div class="controls">\n            <input type="text" name="unitCost" id="unitCost" class="input-block-level" value="' +
__e( obj.unitCost ) +
'" placeholder="Unit Cost"/>\n            <p class="help-block">Invalid</p>\n        </div>\n    </div>\n</td>\n<td>\n    &nbsp;\n</td>\n\n';
 } else {  ;
__p += '\n\n<td>\n    ' +
__e( obj.parentEntityId ) +
'\n</td>\n<td>\n    ' +
__e( obj.type ? getStatusAttributeById(App.dict.payableItemType, obj.type.id, 'name') : "N/A" ) +
'\n    <br/>\n    ' +
__e( obj.rateType ? getStatusAttributeById(App.dict.rateZoneType, obj.rateType.id, 'name') : "N/A" ) +
'\n</td>\n<td>\n    ' +
((__t = ( obj.description )) == null ? '' : __t) +
'\n        <span class="pi-controls pull-right">\n            <span><a href="javascript:void(0);" tabindex="-1" id="editPayableItem" title="Edit Payable Item"><i class="icon-edit"></i></a></span>\n            <span><a href="javascript:void(0);" tabindex="-1" id="showBooking" title="Show Booking"><i class="icon-eye-open"></i></a></span>\n            <!-- <span><a href="javascript:void(0);" tabindex="-1" id="addPayableItem"><i class="icon-plus-sign"></i></a></span> -->\n            <span><a href="javascript:void(0);" tabindex="-1" id="deletePayableItem" title="Delete Payable Item"><i class="icon-remove"></i></a></span>\n        </span>\n</td>\n<td>\n    ' +
__e( obj.quantity ) +
'\n</td>\n<td>\n    <!-- show three decimal places for mileage -->\n    ';
 if (obj.type.id == App.dict.payableItemType.mileage.id) { ;
__p += '\n    ' +
__e( formatMoney(obj.unitCost, 3) ) +
'\n    ';
 } else { ;
__p += '\n    ' +
__e( formatMoney(obj.unitCost) ) +
'\n    ';
 } ;
__p += '\n</td>\n<td>\n    ';
 if (obj.isDeduction || obj.isDeductionService) { ;
__p += ' ' +
__e( "(" + formatMoney(obj.totalCost) + ")" ) +
' ';
 } else { ;
__p += ' ' +
__e( formatMoney(obj.totalCost) ) +
' ';
 } ;
__p += '<!-- totalCost -->\n</td>\n\n';
 }  ;
__p += '\n';

}
return __p
};

this["JST"]["financial/common/statistics/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span4 booking-statistics"></div>\n    <div class="span4 invoice-statistics"></div>\n    <div class="span4 payment-statistics"></div>\n</div>\n';

}
return __p
};

this["JST"]["financial/consolidated/bookingdetails/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- booking details -->\n<div class="row-fluid">\n    <div class="control-group span4">\n        <label>\n            <span class="control-label"><span class="required">Status</span></span>\n            <div class="controls">\n                <select name="status" class="input-block-level api-v2">\n                    ' +
((__t = ( selectOptions(App.dict.bookingStatus, {selected: (obj.status ? obj.status.id : ''), noSelection: {id: '', name: '[Status]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </label>\n    </div>\n\n    <div class="control-group span4">\n        <label>\n                <span class="control-label"><span class="required">Invoice Status</span></span>\n                <div class="controls">\n                    <select name="invoiceStatus" class="input-block-level api-v2">\n                        ' +
((__t = ( selectOptions(App.dict.invoiceStatus, {selected: (obj.invoiceStatus ? obj.invoiceStatus.id : ''), noSelection: {id: '', name: '[Invoice Status]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n        </label>\n    </div>\n\n    <div class="control-group span4">\n        <label>\n                <span class="control-label"><span class="required">Payment Status</span></span>\n                <div class="controls">\n                    <select name="paymentStatus" class="input-block-level api-v2">\n                        ' +
((__t = ( selectOptions(App.dict.paymentStatus, {selected: (obj.paymentStatus ? obj.paymentStatus.id : ''), noSelection: {id: '', name: '[Payment Status]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n        </label>\n    </div>\n</div>\n\n<h4>Expected</h4>\n<!-- expected start dates -->\n<div class="row-fluid">\n    <div class="model-startDate control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Expected Start Date</span></span>\n            <div class="controls">\n                ' +
__e( formatDate(obj.expectedStartDate, obj.timeZone) ) +
'\n                <!--<input type="text" name="expectedStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e(obj.expectedStartDate) +
'"/>-->\n            </div>\n        </label>\n    </div>\n    <div class="model-startTime control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Expected Start Time</span></span>\n            <div class="controls">\n                ' +
__e( formatTime(obj.expectedStartDate, obj.timeZone) ) +
'\n                <!--<input type="text" name="expectedStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time" value="' +
__e(obj.expectedStartDate) +
'" autocomplete="off"/>-->\n            </div>\n        </label>\n    </div>\n    <div class="model-expectedDurationHrs control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Duration (Hours)</span></span>\n            <div class="controls">\n                ' +
__e( millisecondsToStr(obj.expectedDurationMins * 60 * 1000) ) +
'\n                <!--<input type="text" name="expectedDurationHrs" data-start="expectedStartDate" data-end="expectedEndDate" class="input-block-level format-duration" value="' +
__e(obj.expectedDurationHrs) +
'"/>-->\n            </div>\n        </label>\n    </div>\n    <div class="model-timeZone control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Time Zone</span></span>\n            <div class="controls">\n                ' +
__e( obj.timeZone ) +
'\n                <!--<select name="timeZone" class="input-block-level">\n                    ' +
((__t = ( selectOptions(App.dict.timeZones, {selected: obj.timeZone, display:'gmtOffset'}) )) == null ? '' : __t) +
'\n                </select>-->\n            </div>\n        </label>\n    </div>\n</div>\n\n<h4>Actuals <a href="javascript:void(0);" class="copyTimes"><i class="icon-double-angle-down"></i> Copy Times</a></h4>\n<!-- actual duration -->\n<div class="row-fluid">\n    <div class="model-actualDurationHrs control-group span12">\n        <label>\n            <span class="control-label">Actual Duration</span>\n            <div class="controls">\n                ' +
__e( obj.actualDurationMins ? millisecondsToStr(obj.actualDurationMins * 60 * 1000) : "N/A" ) +
'\n                <!--<input type="text" name="expectedDurationHrs" data-start="expectedStartDate" data-end="expectedEndDate" class="input-block-level format-duration" value="' +
__e(obj.expectedDurationHrs) +
'"/>-->\n            </div>\n        </label>\n    </div>\n</div>\n';
 if (App.config.company.config.enableContactArrivalDate || App.config.company.config.enableContactLateTimeTracking || App.config.company.config.consumerCountEnabled) { ;
__p += '\n    <!-- arrival time -->\n    <div class="row-fluid">\n        ';
 if (App.config.company.config.enableContactArrivalDate) { ;
__p += '\n        <div class="model-arrivalDate control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Arrival Date</span></span>\n                <div class="controls">\n                    <input type="text" name="contactArrivalDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date arrivalDate" value="' +
__e(obj.contactArrivalDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-arrivalTime control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Time</span></span>\n                <div class="controls">\n                    <input type="text" name="contactArrivalDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time arrivalTime" value="' +
__e(obj.contactArrivalDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        ';
 } ;
__p += '\n        ';
 if (App.config.company.config.enableContactLateTimeTracking) { ;
__p += '\n        <div class="control-group span3">\n            <label>\n                <span class="control-label">Minutes Late&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-placement="right" data-content="Enter the number of minutes the interpreter was late." data-original-title="Minutes Late" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <input type="text" name="contactLateMins" class="input-block-level" value="' +
__e(obj.contactLateMins? obj.contactLateMins:0) +
'"/>\n                </div>\n            </label>\n        </div>\n        ';
 } ;
__p += '\n        ';
 if (obj.consumerCountEnabled) { ;
__p += '\n        <div class="control-group span3">\n            <label>\n                <span class="control-label">Consumer Count&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-placement="right" data-content="Enter the number of consumers at this appointment." data-original-title="Consumer Count" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <input type="text" name="consumerCount" class="input-block-level" value="' +
__e(obj.consumerCount? obj.consumerCount:0) +
'"/>\n                </div>\n            </label>\n        </div>\n        ';
 } ;
__p += '\n    </div>\n';
 } ;
__p += '\n<!-- actuals start dates -->\n<div class="row-fluid">\n    <div class="model-startDate control-group span2">\n        <label>\n            <span class="control-label"><span class="required">Start Date</span></span>\n            <div class="controls">\n                <input type="text" name="actualStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date startDate" value="' +
__e(obj.actualStartDate) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="model-startTime control-group span2">\n        <label>\n            <span class="control-label"><span class="required">Time</span></span>\n            <div class="controls">\n                <input type="text" name="actualStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time startTime" value="' +
__e(obj.actualStartDate) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="model-startDate control-group span2">\n        <label>\n            <span class="control-label"><span class="required">End Date</span></span>\n            <div class="controls">\n                <input type="text" name="actualEndDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date endDate" value="' +
__e(obj.actualEndDate) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="model-startTime control-group span2">\n        <label>\n            <span class="control-label"><span class="required">Time</span></span>\n            <div class="controls">\n                <input type="text" name="actualEndDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time endTime" value="' +
__e(obj.actualEndDate) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <!--\n    <div class="model-actualDurationHrs control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Duration</span></span>\n            <div class="controls">\n                <input type="text" name="actualDurationHrs" data-start="actualStartDate" data-end="actualEndDate" class="input-block-level format-duration" value="' +
__e(obj.actualDurationHrs) +
'" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    -->\n    <div class="model-timeZone control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Time Zone</span></span>\n            <div class="controls">\n                <select name="timeZone" class="input-block-level">\n                    ' +
((__t = ( selectOptions(App.dict.timeZones, {selected: obj.timeZone, display:'gmtOffset'}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </label>\n    </div>\n</div>\n\n';
 if (obj.slaReportingEnabled || obj.timeTrackingEnabled) { ;
__p += '\n<div class="sla_information">\n    <h4>Assignment</h4>\n    <div class="row-fluid">\n        <div class="model-timeAssignmentDateDate control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Date </span></span>\n                <div class="controls">\n                    <input type="text" name="assignmentDate" class="input-block-level format-date secured secured-disabled secured-comp" value="' +
__e(obj.assignmentDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-timeAssignmentDateTime control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Time </span></span>\n                <div class="controls">\n                    <input type="text" name="assignmentDate" class="input-block-level format-time secured secured-disabled secured-comp" value="' +
__e(obj.assignmentDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n    </div>\n\n    <h4>Outbound Times</h4>\n    <div class="row-fluid">\n        <div class="model-timeInterpreterDepartedOutbound control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Departed </span></span>\n                <div class="controls">\n                    <input type="text" name="timeInterpreterDepartedOutbound" class="input-block-level format-date secured secured-disabled secured-comp" value="' +
__e(obj.timeInterpreterDepartedOutbound) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-timeInterpreterDepartedOutbound control-group span2">\n            <label>\n                <span class="control-label">&nbsp;</span>\n                <div class="controls">\n                    <input type="text" name="timeInterpreterDepartedOutbound" class="input-block-level format-time secured secured-disabled secured-comp" value="' +
__e(obj.timeInterpreterDepartedOutbound) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-timeInterpreterArrivedOutbound control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Arrived </span></span>\n                <div class="controls">\n                    <input type="text" name="timeInterpreterArrivedOutbound" class="input-block-level format-date secured secured-disabled secured-comp" value="' +
__e(obj.timeInterpreterArrivedOutbound) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-timeInterpreterArrivedOutbound control-group span2">\n            <label>\n                <span class="control-label">&nbsp;</span>\n                <div class="controls">\n                    <input type="text" name="timeInterpreterArrivedOutbound" class="input-block-level format-time secured secured-disabled secured-comp" value="' +
__e(obj.timeInterpreterArrivedOutbound) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n    </div>\n</div>\n';
 } ;
__p += '\n\n';
 if (obj.timeTrackingEnabled) { ;
__p += '\n<div class="time_information">\n    <h4>Inbound Times</h4>\n    <div class="row-fluid">\n        <div class="model-timeInterpreterDepartedInbound control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Departed </span></span>\n                <div class="controls">\n                    <input type="text" name="timeInterpreterDepartedInbound" class="input-block-level format-date secured secured-disabled secured-comp" value="' +
__e(obj.timeInterpreterDepartedInbound) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-timeInterpreterDepartedTimeInbound control-group span2">\n            <label>\n                <span class="control-label">&nbsp;</span>\n                <div class="controls">\n                    <input type="text" name="timeInterpreterDepartedInbound" class="input-block-level format-time secured secured-disabled secured-comp" value="' +
__e(obj.timeInterpreterDepartedInbound) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-timeInterpreterArrivedInbound control-group span2">\n            <label>\n                <span class="control-label"><span class="required">Arrived </span></span>\n                <div class="controls">\n                    <input type="text" name="timeInterpreterArrivedInbound" class="input-block-level format-date secured secured-disabled secured-comp" value="' +
__e(obj.timeInterpreterArrivedInbound) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-timeInterpreterArrivedInbound control-group span2">\n            <label>\n                <span class="control-label">&nbsp;</span>\n                <div class="controls">\n                    <input type="text" name="timeInterpreterArrivedInbound" class="input-block-level format-time secured secured-disabled secured-comp" value="' +
__e(obj.timeInterpreterArrivedInbound) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n    </div>\n</div>\n';
 } ;
__p += '\n\n<div class="row-fluid">\n    <div class="model-finalNotes control-group span6">\n        <label>\n            <span class="control-label">Notes at Closing&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Notes entered at closing" data-original-title="Closing Notes" tabindex="-1">?</a></span>\n            <div class="controls">\n                <textarea name="finalNotes" class="input-block-level">' +
__e( obj.finalNotes ) +
'</textarea>\n            </div>\n        </label>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <span>\n        <div class="model-bookingDate control-group span4">\n            <label>\n                <span class="control-label"><span class="required">Booking Date</span></span>\n                <div class="controls">\n                    <input type="text" name="bookingDate" class="input-block-level format-date secured secured-disabled secured-comp" value="' +
__e(obj.bookingDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-bookingTime control-group span4">\n            <label>\n                <span class="control-label"><span class="required">Booking Time</span></span>\n                <div class="controls">\n                    <input type="text" name="bookingDate" class="input-block-level format-time secured secured-disabled secured-comp" value="' +
__e(obj.bookingDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="control-group span4">\n            <label>\n                <span class="control-label"><span class="required">Mileage</span></span>\n                <div class="controls">\n                    <input type="text" name="mileage" class="input-block-level secured secured-disabled secured-comp" value="' +
__e(obj.mileage) +
'"/>\n                </div>\n            </label>\n        </div>\n    </span>\n</div>\n\n';
 if (obj.status.id === App.dict.bookingStatus["cancelled"].id) { ;
__p += '\n<div class="row-fluid">\n    <div class="model-cancellationReason control-group span6">\n        <label>\n            <span class="control-label"><span class="required">Cancellation Reason</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Cancellation reason for the job." data-original-title="Cancellation Reason" tabindex="-1">?</a></span>\n            <div class="controls">\n                <select class="input-block-level api-v2" name="cancellationReason">\n                    ' +
((__t = ( selectOptions(App.dict.cancellationReasons, {selected: (obj.cancellationReason ? obj.cancellationReason.id : ''), noSelection: {id: '', name: '[Choose a Cancellation Reason]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </label>\n    </div>\n    <div class="model-cancellationNotes control-group span6">\n            <label>\n                <span class="control-label">Notes at Cancellation&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Notes entered at cancellation" data-original-title="Cancellation Notes" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <textarea name="finalNotes" class="input-block-level">' +
__e( obj.finalNotes ) +
'</textarea>\n                </div>\n            </label>\n    </div>\n</div>\n<div class="row-fluid">\n        <div class="model-cancellationDate control-group span6">\n            <label>\n                <span class="control-label"><span class="required">Cancellation Date</span></span>\n                <div class="controls">\n                    <input type="text" name="cancellationDate" class="input-block-level format-date secured secured-disabled secured-comp" value="' +
__e(obj.cancellationDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-cancellationTime control-group span6">\n            <label>\n                <span class="control-label"><span class="required">Cancellation Time</span></span>\n                <div class="controls">\n                    <input type="text" name="cancellationDate" class="input-block-level format-time secured secured-disabled secured-comp" value="' +
__e(obj.cancellationDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n    </div>\n</div>\n';
 } ;
__p += '\n\n';
 if (obj.status.id === App.dict.bookingStatus["declined"].id) { ;
__p += '\n<div class="row-fluid">\n    <div>\n        <span><strong>Unfulfilled Reason</strong>: ' +
__e( obj.unfulfilledReason ? obj.unfulfilledReason.name + " (" + obj.unfulfilledReason.description + ")" : "None" ) +
'</span>\n    </div>\n    <div>\n        <div class="control-group">\n            <label>\n                <span class="control-label">Unfulfilled Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Notes entered when unfulfilled" data-original-title="Unfulfilled Notes" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <textarea name="finalNotes" class="input-block-level">' +
__e( obj.finalNotes ) +
'</textarea>\n                </div>\n            </label>\n        </div>\n    </div>\n    <div>\n        <div class="model-unfulfilledDate control-group span4">\n            <label>\n                <span class="control-label"><span class="required">Unfulfilled Date</span></span>\n                <div class="controls">\n                    <input type="text" name="unfulfilledDate" class="input-block-level format-date secured secured-disabled secured-comp" value="' +
__e(obj.unfulfilledDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n        <div class="model-unfulfilledTime control-group span4">\n            <label>\n                <span class="control-label"><span class="required">Unfulfilled Time</span></span>\n                <div class="controls">\n                    <input type="text" name="unfulfilledDate" class="input-block-level format-time secured secured-disabled secured-comp" value="' +
__e(obj.unfulfilledDate) +
'" autocomplete="off"/>\n                </div>\n            </label>\n        </div>\n    </div>\n</div>\n';
 } ;
__p += '\n\n\n<div class="row-fluid">\n    <div class="span6">\n        <div class="control-group">\n            <label>\n                <span class="control-label">Job Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The job notes are optionally entered by the interpreter when the job has completed." data-original-title="Job Notes" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <textarea name="visitNotes" class="input-block-level">' +
__e( obj.visitNotes ) +
'</textarea>\n                </div>\n            </label>\n        </div>\n    </div>\n    ';
 if (obj.notes) { ;
__p += '\n    <div class="span6">\n        <div class="control-group">\n            <label>\n                <span class="control-label">Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Internal notes about the job / interpreter combination. See \'Notes\' tab for billing notes etc." data-original-title="Notes" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <textarea name="notes" class="input-block-level">' +
__e( obj.notes ) +
'</textarea>\n                </div>\n            </label>\n        </div>\n    </div>\n    ';
 } ;
__p += '\n</div>\n\n';
 if (App.config.company.config.disclaimerEnabled) { ;
__p += '\n<h4>Disclaimer</h4>\n<div class="row-fluid">\n    <div class="span4 control-group">\n        <label>\n            <span class="control-label"><span class="required">Disclaimer Accepted?</span></span>\n            <div class="controls">\n                ' +
__e( obj.disclaimerAccepted ? "Yes" : "No" ) +
'\n            </div>\n        </label>\n    </div>\n    <div class="span4 control-group">\n        <label>\n            <span class="control-label"><span class="required">Disclaimer Accepted Initials</span></span>\n            <div class="controls">\n                ' +
__e( obj.disclaimerAcceptedInitials ? obj.disclaimerAcceptedInitials : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n    <div class="span4 control-group">\n        <label>\n            <span class="control-label"><span class="required">Disclaimer Accepted Date</span></span>\n            <div class="controls">\n                ' +
__e( obj.disclaimerAcceptedDate ? formatDateTime(obj.disclaimerAcceptedDate, obj.timeZone) : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n</div>\n';
 } ;
__p += '\n\n\n';
 if (obj.flagForFinance) { ;
__p += '\n<h4>Interpreter Overrides</h4>\n<div class="row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label">Rate Plan</span>\n            <div class="controls">\n                ' +
__e(obj.ratePlanOverride ? obj.ratePlanOverride.name : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">Duration (Minutes)</span>\n            <div class="controls">\n                ' +
__e( obj.durationOverrideHrs ? obj.durationOverrideHrs + " Mins" : obj.ratePlanOverride ? (obj.ratePlanOverride.durationOverrideHrs ? obj.ratePlanOverride.durationOverrideHrs + " Mins" : "N/A") : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">Rate (p/h)</span>\n            <div class="controls">\n                ' +
__e( obj.ratePlanOverride ? (obj.ratePlanOverride.rateOverride ? formatMoney(obj.ratePlanOverride.rateOverride) : "N/A") : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">Zone</span>\n            <div class="controls">\n                ' +
__e( obj.rateZoneOverride ? obj.rateZoneOverride.name : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label">Message</span>\n            <div class="controls">\n                ' +
__e(obj.ratePlanOverride ? (obj.ratePlanOverride.message ? obj.ratePlanOverride.message : "N/A") : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n</div>\n\n<h4>Customer Overrides</h4>\n<div class="row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label">Rate Plan</span>\n            <div class="controls">\n                ' +
__e(obj.customerRatePlanOverride ? obj.customerRatePlanOverride.name : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">Duration (Mins)</span>\n            <div class="controls">\n                ' +
__e( obj.customerDurationOverrideHrs ? obj.customerDurationOverrideHrs + " Mins" : obj.customerRatePlanOverride ? (obj.customerRatePlanOverride.durationOverrideHrs ? obj.customerRatePlanOverride.durationOverrideHrs + " Mins" : "N/A") : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">Rate (p/h)</span>\n            <div class="controls">\n                ' +
__e( obj.customerRatePlanOverride ? (obj.customerRatePlanOverride.rateOverride ? formatMoney(obj.customerRatePlanOverride.rateOverride, null, obj.currencySymbol, obj.currencyCode) : "N/A") : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n    <div class="control-group span2">\n        <label>\n            <span class="control-label">Zone</span>\n            <div class="controls">\n                ' +
__e( obj.customerRateZoneOverride ? obj.customerRateZoneOverride.name : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label">Message</span>\n            <div class="controls">\n                ' +
__e(obj.customerRatePlanOverride ? (obj.customerRatePlanOverride.message ? obj.customerRatePlanOverride.message : "N/A") : "N/A" ) +
'\n            </div>\n        </label>\n    </div>\n</div>\n';
 } ;
__p += '\n\n<div class="btn-toolbar nav" style="min-height: 250px; height: 250px;">\n    <div class="btn-group">\n        <button class="btn btn-primary verifyCmd">Save & Verify <i class="icon-check icon-white"></i></button>\n    </div>\n    <div class="btn-group">\n        <button class="btn saveCmd">Save Changes <i class="icon-save"></i></button>\n        <button class="btn dropdown-toggle" data-toggle="dropdown">\n            <span class="caret"></span>\n        </button>\n        <ul class="dropdown-menu">\n            <!-- dropdown menu links -->\n            <li>\n                <a class="unverifyCmd" href="javascript:void(0);"><i class="icon-undo"></i> Unverify</a>\n            </li>\n            <li>\n                <a class="closeCmd" href="javascript:void(0);"><i class="icon-time"></i> Close</a>\n            </li>\n            <li class="nav-header">\n                Invoice\n            </li>\n            <li>\n                <a class="prepareInvoiceCmd" href="javascript:void(0);"><i class="icon-chevron-left"></i> Prepare Invoice</a>\n            </li>\n            <li>\n                <a class="previewInvoiceCmd" href="javascript:void(0);"><i class="icon-eye-open"></i> Preview Invoice</a>\n            </li>\n            <li class="divider"></li>\n            <li class="nav-header">\n                Payment\n            </li>\n            <li>\n                <a class="preparePaymentCmd" href="javascript:void(0);"><i class="icon-chevron-right"></i> Prepare Payment</a>\n            </li>\n            <li>\n                <a class="previewPaymentCmd" href="javascript:void(0);"><i class="icon-eye-open"></i> Preview Payment</a>\n            </li>\n        </ul>\n    </div>\n</div>\n\n\n\n';

}
return __p
};

this["JST"]["financial/consolidated/bookinglist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span3">\n        <div class="span12 filter" style="float:left; margin-bottom: 5px">\n\n        </div>\n    </div>\n    <div class="span5">\n        <button class="btn previewInvoiceCmd">Preview Invoice</button>\n        <button class="btn previewPaymentCmd">Preview Payment</button>\n        <button class="btn updateBulkCmd">Update</button>\n    </div>\n    <div class="span4">\n        <label class="checkbox">\n            <input type="checkbox" class="selectAll" name="selectAll"> All jobs (with current filters applied)\n         </label>\n    </div>\n</div>\n\n<div class="bookings-list">\n    <div class="grid">\n\n    </div>\n</div>\n\n<div class="paginator">\n</div>\n';

}
return __p
};

this["JST"]["financial/consolidated/bookingpanel/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#time" data-toggle="tab">Time Record ' +
__e( obj.id ? '(#' + obj.id + ')' : '' ) +
'</a></li>\n    <li ><a href="#notes-tab" data-toggle="tab">Notes</a></li>\n    <li ><a href="#incidentals" data-toggle="tab">Incidentals</a></li>\n    <li ><a href="#billables" data-toggle="tab">Billable / Payable</a></li>\n    <li><a href="#ratePlan" data-toggle="tab">Rate Plan</a></li>\n    <li><a href="#vos" data-toggle="tab">VoS / Documents</a></li>\n    <li><a href="#audit" data-toggle="tab">Audit History</a></li>\n    <li><a href="#notifications" data-toggle="tab">Notification History</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n\n    <div class="tab-pane active" id="time">\n\n        ';
 if (!obj.id) { ;
__p += '\n\n        <div style="text-align: center;">\n            <h2>Select a Job</h2>\n        </div>\n\n        ';
 } ;
__p += '\n\n        <div class="details"></div>\n\n    </div> <!-- / time -->\n\n    <div class="tab-pane" id="notes-tab">\n\n\n\n    </div> <!-- / notes -->\n\n    <div class="tab-pane" id="incidentals">\n\n\n\n    </div> <!-- / incidentals -->\n\n    <div class="tab-pane" id="billables">\n\n\n\n    </div> <!-- / billables / payables -->\n\n    <div class="tab-pane" id="ratePlan">\n\n        <div class="tabbable tabs-right">\n            <!-- rate plan nav tabs -->\n            <ul class="nav nav-tabs">\n                <li class="active"><a href="#customerRatePlanTab" data-toggle="tab">Customer</a></li>\n                <li><a href="#interpreterRatePlanTab" data-toggle="tab">Interpreter</a></li>\n                <li><a href="#customerOverrideTab" data-toggle="tab">Customer (Override)</a></li>\n                <li><a href="#interpreterOverrideTab" data-toggle="tab">Interpreter (Override)</a></li>\n            </ul>\n            <!-- / nav tabs -->\n\n            <!-- tabs -->\n            <div class="tab-content">\n\n                <div class="tab-pane active" id="customerRatePlanTab">\n                    <h5>Customer</h5>\n                    <div class="customerRatePlan"></div>\n                </div>\n\n                <div class="tab-pane" id="interpreterRatePlanTab">\n                    <h5>Interpreter</h5>\n                    <div class="interpreterRatePlan"></div>\n                </div>\n\n                <div class="tab-pane" id="customerOverrideTab">\n                    <h5>Customer</h5>\n                    <div class="customerOverride"></div>\n                </div>\n\n                <div class="tab-pane" id="interpreterOverrideTab">\n                    <h5>Interpreter</h5>\n                    <div class="interpreterOverride"></div>\n                </div>\n\n            </div>\n        </div>\n\n    </div> <!-- / rate plan -->\n\n    <div class="tab-pane" id="vos">\n\n        <h4>Verification of Service</h4>\n        <div class="verification">\n\n        </div>\n\n        <div class="documents-container">\n            <div class="job-documents"></div>\n            <hr/>\n            <div class="booking-documents"></div>\n        </div>\n\n        <!--<h4>Miscellaneous Documents</h4>\n        <ul id="documents" class="thumbnails row">\n\n        </ul>-->\n\n    </div> <!-- / vos -->\n\n    <div class="tab-pane" id="audit">\n\n        <h4>Audit History</h4>\n        <div class="audit">\n\n        </div>\n\n    </div> <!-- / audit -->\n\n    <div class="tab-pane" id="notifications">\n\n        <h4>Notifications History</h4>\n        <div class="notifications-region">\n\n        </div>\n\n    </div> <!-- / audit -->\n\n</div>\n';

}
return __p
};

this["JST"]["financial/consolidated/bulkupdate/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="control-group">\n    <label class="control-label required" for="status">Invoice Status </label>\n    <div class="controls">\n        <select name="status" class="status api-v2 input-medium">\n            <option>[Choose a verification status]</option>\n            <option value="false">Not verified</option>\n            <option value="true">Verified</option>\n        </select>\n        <p class="help-block">Required field.</p>\n    </div>\n</div>\n\n<div class="span4">\n    <br>\n    <button class="btn btn-primary save" type="submit" value="save" disabled>Save</button>\n</div>\n';

}
return __p
};

this["JST"]["financial/consolidated/exceptionbookinglist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <select class="autoVerifyFilter">\n        <option value="all"></option>\n        <!--<option value="autoVerifyDuration">Duration exceeds expected value</option>-->\n        <!--<option value="autoVerifyIncidentals">Incidentals on booking</option>-->\n        <option value="interpreterUsesDefaultRatePlan">Interpreter uses default rate plan</option>\n        <option value="interpreterUsesOverrideRatePlan">Interpreter uses Override rate plan</option>\n        <option value="customerUsesDefaultRatePlan">Customer uses default rate plan</option>\n        <option value="customerUsesOverrideRatePlan">Customer uses Override rate plan</option>\n\n        <option value="lateStart">Late start</option>\n\n        <option value="actualDurationsDifferFromExpected">Actual duration greater than expected</option>\n\n        <option value="timeExceeded">Duration Exceeded Configured Max</option>\n\n        <option value="highlightIncidentalsAboveCertainCap">Highlight incidentals above certain cap</option>\n\n        <option value="highlightJobWithIncidentals">Highlight job with incidentals</option>\n        <option value="highlightJobWithNoIncidentals">Highlight job with no incidentals</option>\n        <option value="highlightJobWithModifiedIncidentals">Highlight job with modified incidentals</option>\n        <option value="highlightJobWithMissingMileageIncidental">Highlight job with missing mileage incidental</option>\n        <option value="highlightJobsWithOverlappingTimes">Highlight job with overlapping start/end times</option>\n        <option value="highlightJobsWithBackToBackTimes">Highlight job with back to back start/end times</option>\n        <option value="highlightJobsWithCloseNotes">Highlight job with close notes</option>\n        <option value="highlightJobsWithMileageGreaterThan50">Highlight job with mileage greater than 50</option>\n        <option value="highlightJobsWithCancelMarked">Highlight job cancelled on arrival</option>\n\n        <option value="cancelled">Cancelled (All)</option>\n        <option value="improperlyCancelled">Improperly cancelled</option>\n        <option value="nonBillable">Cancellations (Non-billable)</option>\n        <option value="nonPayable">Cancellations (Non-payable)</option>\n\n        <option value="newCustomers">New Customers</option>\n        <option value="newContacts">New Contacts</option>\n\n        <option value="documentNotUploadedWhereRequired">Closed jobs missing verification</option>\n        <option value="interpreterSubmittedVosClosed">Closed jobs VoS submitted by interpreter</option>\n        <option value="eSignatureClosed">Closed jobs by eSignature</option>\n        <option value="interpreterSubmittedVos">Ass./Conf. jobs VoS submitted by interpreter</option>\n        <option value="incidentalsBillableNotPayable">Incidentals billable but not payable</option>\n        <option value="incidentalsPayableNotBillable">Incidentals payable but not billable</option>\n        <option value="customerMissingAccountingReference">Customer missing account reference / uses default</option>\n        <option value="interpreterMissingAccountingReference">Interpreter missing account reference / uses default</option>\n\n    </select>\n</div>\n<div class="row-fluid">\n    <div class="span6">\n        <div class="span12 filter" style="margin-bottom: 5px">\n\n        </div>\n    </div>\n    <div class="span4">\n        <button class="btn previewInvoiceCmd">Preview Invoice</button>\n        <button class="btn previewPaymentCmd">Preview Payment</button>\n        <button class="btn updateBulkCmd">Update</button>\n    </div>\n    <div class="span4">\n        <label class="checkbox">\n            <input type="checkbox" class="selectAll" name="selectAll"> All jobs (with current filters applied)\n         </label>\n    </div>\n</div>\n\n<div class="bookings-list">\n    <div class="grid">\n\n    </div>\n</div>\n\n<div class="paginator">\n</div>\n';

}
return __p
};

this["JST"]["financial/consolidated/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div id="errorContainer"></div>\n    <div id="successContainer"></div>\n\n    <div class="controls controls-row">\n        <div class="span3">\n        </div>\n\n        <div class="span2">\n            <div class="btn-group pull-right" style="display: inline-block;">\n                <button class="btn btn-primary refreshCmd"><i class="icon-refresh"></i> Refresh</button>\n                <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                    <span class="caret"></span>\n                </button>\n                <ul class="dropdown-menu">\n                    <!-- dropdown menu links -->\n                    <li>\n                        <a href="javascript:void(0);" class="resetCmd"><i class="icon-cog"></i> Reset</a>\n                    </li>\n                    <li class="divider"></li>\n                    <li>\n                        <a href="javascript:void(0);"><i class="icon-download"></i> Export (All Jobs) <i class="icon-arrow-right"></i></a>\n                        <ul class="dropdown-menu sub-menu">\n                            <li><a class="exportBookingsCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n                            <li><a class="exportBookingsCmd" href="javascript:void(0);" data-format="csv"><i class="icon-file-alt"></i> CSV</a></li>\n                        </ul>\n                    </li>\n                    <li class="divider"></li>\n                    <li><a href="javascript:void(0);" class="exportUnsubmittedVerificationCmd" data-format="xlsx"><i class="icon-folder-open"></i> Export Unsubmitted Verification</a></li>\n                    <li><a href="javascript:void(0);" class="exportUnclosedCmd" data-format="xlsx"><i class="icon-folder-open"></i> Export Unclosed Bookings</a></li>\n                </ul>\n            </div>\n        </div>\n\n        <div class="span1">\n            <input name="periodStart" type="text" class="input-block-level periodStart" value="" placeholder="Period Start"/>\n        </div>\n\n        <div class="span1">\n            <input name="periodEnd" type="text" class="input-block-level periodEnd" value="" placeholder="Period End"/>\n        </div>\n    </div>\n</div>\n<div class="row-fluid">\n\n    <!--<div style="/* width: 40%; */border: 0; padding: 0; margin: 0; display: inline-block; float: left;">-->\n    <div class="span7">\n\n        <!-- nav tabs -->\n        <ul class="nav nav-tabs">\n            <li class="active"><a href="#closed" data-toggle="tab">Pending Verification</a></li>\n            <li ><a href="#exceptions" data-toggle="tab">Anomalous Jobs</a></li>\n            <li ><a href="#others" data-toggle="tab">All Jobs</a></li>\n            <li ><a href="#statistics" data-toggle="tab">Statistics</a></li>\n        </ul>\n        <!-- / nav tabs -->\n\n        <!-- tabs -->\n        <div class="tab-content">\n\n            <div class="tab-pane active" id="closed">\n                <div class="bookings">\n                </div>\n            </div>\n\n            <div class="tab-pane" id="exceptions">\n                <div class="exceptions">\n                </div>\n            </div>\n\n            <div class="tab-pane" id="others">\n                <div class="others">\n                </div>\n            </div>\n\n            <div class="tab-pane" id="statistics">\n                <div class="statistics">\n                </div>\n            </div>\n\n        </div>\n        <!-- / tabs -->\n    </div>\n\n    <!--<div class="details" style="width: 50%;  border: 0; padding: 0; margin: 0; display: inline-block; float: left;">-->\n    <div class="details span5">\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/bulkupdate/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span6">\n        <div class="control-group">\n            <label class="control-label required" for="status">Payment Status </label>\n            <div class="controls">\n                <select name="status" id="status" class="api-v2 input-medium">\n                    ' +
((__t = ( selectOptions(App.dict.paymentStatus, {noSelection: {id: '', name: '[Choose a Status]'}}) )) == null ? '' : __t) +
'\n                </select>\n                <p class="help-block">Required field.</p>\n            </div>\n        </div>\n    </div>\n    <div class="span6">\n        <div class="control-group">\n            <label class="control-label" for="ignoreLockedStatus">Ignore Locked Status? </label>\n            <div class="controls">\n                <input type="checkbox" name="ignoreLockedStatus" id="ignoreLockedStatus"/>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <div class="span12">\n        <br>\n        <button class="btn btn-primary" type="submit" id="save" value="save" disabled>Save</button>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/create/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div class="row-fluid">\n    <div class="span8">\n        <div class="control-group">\n            <div class="controls">\n                <label class="control-label" for="paymentDateForBookings">Payment Date </label>\n                <input id="paymentDateForBookings" name="paymentDateForBookings" type="text" class="input-small date-format" value="">\n            </div>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/creditmemo/popup"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += 'Are you sure to issue a Credit for this Payment? This action is not reversible.\n<br />\n<br />\n<div class="row-fluid" style="margin-left: 5px">\n    <div class="span4">\n        <div class="control-group">\n            <label class="control-label"><b>Credit for Payment </b></label>\n            <div class="controls">\n                <input id="forPayment" class="span12" class="date input-block-level" name="forPayment" type="text" value="' +
__e( obj.forPayment ) +
'" disabled/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label"><b>Credit Date </b></label>\n            <div class="controls">\n                <input id="paymentMemoDate" name="paymentDate" type="text" class="span12 input-small" value="" autocomplete="off" />\n            </div>\n        </div>\n    </div>\n\n    <div class="span4">\n        <div class="control-group">\n            <label class="control-label"><b>Credit Number </b></label>\n            <div class="controls">\n                <input id="confirmationNumber" class="span12" class="date input-block-level" name="confirmationNumber" type="text" value=""/>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="row-fluid" style="margin-left: 5px">\n    <div class="control-group span3 pull-right">\n        <div class="controls" style="margin-top:18px;">\n            <button class="btn btn-success" type="submit" id="save" value="save">Save</button>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["financial/payable/creditmemo/preview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div ' +
__e( (networkPrint || hideHeader) ? "style='display: none;'" : "" ) +
' class="noprint">\n\n    <div id="errorContainer">\n    </div>\n    <div id="successContainer">\n    </div>\n\n\n    <div id="popupErrorContainer" class="msg-modal hide">\n    </div>\n    <div id="popupSuccessContainer" class="msg-modal hide">\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="span3">\n            <ul class="arrows">\n                <li><a href="javascript:void(0);" id="print">Print</a></li>\n                <li><a href="javascript:void(0);" id="saveAsPdf">Save as PDF</a></li>\n                <li><a href="javascript:void(0);" id="share">Share via Web</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" class="exportExcel" data-full="false">Export as Excel (Standard)</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" class="exportExcel" data-full="true" >Export as Excel (Full Details)</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" id="sendEmail">Email</a></li>\n\n            </ul>\n        </div>\n\n    </div>\n\n    <div class="secured secured-fina">\n        <div class="container-email" style="display: none;">\n            <hr />\n            <div class="row-fluid">\n\n                <div class="span4">\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="email">Email </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Email address to be used for to send remittance to." data-original-title="Email">?</a>\n                        <div class="controls">\n                            <input id="email" name="email" type="text" class="input-block-level" value="' +
__e( email ) +
'"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label" for="ccEmail">Cc Email </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Cc email address to Cc on remittance." data-original-title="Cc Email">?</a>\n                        <div class="controls">\n                            <input id="ccEmail" name="ccEmail" type="text" class="input-block-level" value=""/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span4">\n\n                    <div class="control-group">\n                        <label class="control-label" for="msg">Message </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Message to include in email." data-original-title="Message">?</a>\n                        <div class="controls">\n                            <textarea id="msg" name="msg" class="input-block-level"></textarea>\n                        </div>\n                    </div>\n\n\n\n                    <div class="control-group">\n\n                        <div class="controls">\n                            <label class="control-label">\n                                <input type="checkbox" name="attachPdf" checked> Attach PDF\n                            </label>\n                        </div>\n\n                    </div>\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="checkbox" id="regeneratePdf" class="regeneratePdf" name="regeneratePdf"/>\n                            <label class="control-label" for="regeneratePdf">Regenerate PDF</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Regenerate PDF even if the PDF was previously generated. This should be used if updates have been made." data-original-title="Regenerate PDF">?</a>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class="span4">\n\n                    <div class="control-group">\n                        <label class="control-label">&nbsp;</label>\n                        <div class="controls"><button class="btn emailCmd">Email Remittance</button></div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <hr />\n\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/creditmemo/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#credit-memo-tab" data-toggle="tab">Credit: ';
 if (obj.confirmationNumber) { ;
__p +=
__e( obj.confirmationNumber );
 } else { ;
__p += '&lt;New&gt;';
 } ;
__p += '</strong></a></li>\n    <li><a href="#payableItems-tab" data-toggle="tab">Payable Items</a></li>\n    <li ><a href="#audit-tab" data-toggle="tab">Audit History</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n\n    <div class="tab-pane active" id="credit-memo-tab">\n\n        <h4 class="well section-spacer">Credit: ';
 if (obj.confirmationNumber) { ;
__p +=
__e( obj.confirmationNumber );
 } else { ;
__p += '&lt;New&gt;';
 } ;
__p += '<span class="pull-right">Created from Payment: ' +
__e( obj.payment.id ) +
'</i></span></h4>\n\n        <div id="summary">\n\n            <div class="row-fluid">\n                <div class="span4">\n                    <div class="control-group">\n                        <label class="control-label required" for="confirmationNumber"><b>Credit Number </b></label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Credit number." data-original-title="Credit Number">?</a>\n                        <div class="controls">\n                            <input id="confirmationNumber" class="span12 date" class="date input-block-level" name="confirmationNumber" type="text" value="' +
__e( obj.confirmationNumber ) +
'"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <label class="control-label required" for="paymentDate">Credit Date </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Credit date" data-original-title="Credit Date">?</a>\n                        <div class="controls">\n                            <input id="paymentDate" name="paymentDate" type="text" class="span12 input-small format-date hasDatePicker" value="' +
__e( obj.paymentDate ) +
'" autocomplete="off"/>\n                        </div>\n                    </div>\n                </div>\n                <div class="span4" style="margin-top:18px;">\n                    <div class="control-group">\n                        <div class="controls">\n                            <div class="btn-group">\n                                <button class="btn btn-primary saveCreditMemoCmd">Save</button>\n                                <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                                    <span class="caret"></span>\n                                </button>\n                                <ul class="dropdown-menu">\n                                    <!-- dropdown menu links -->\n                                    <li>\n                                        <a href="javascript:void(0);" class="viewCreditMemoCmd"><i class="icon-file-alt"></i> View</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="viewCreditMemoPaymentCmd"><i class="icon-file-alt"></i> View Payment</a>\n                                    </li>\n                                    <span class="secured secured-admin secured-fina">\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="deletePaymentCreditMemoCmd"><i class="icon-trash"></i> Delete</a>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span4">\n                    <label>\n                        <span class="control-label"><b>Period Start</b>&nbsp;</span>\n                        <div class="controls">\n                            <span class="format-date">' +
__e( obj.periodStart ) +
'</span>\n                        </div>\n                    </label>\n                </div>\n                <div class="span4">\n                    <label>\n                        <span class="control-label"><b>Period End</b>&nbsp;</span>\n                        <div class="controls">\n                            <span class="format-date">' +
__e( obj.periodEnd ) +
'</span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div> <!-- / row -->\n\n        <br />\n\n        <h4 class="well section-spacer">Payables</h4>\n\n        <div class="row-fluid">\n\n            <div class="control-group span2">\n                <label class="control-label">Total</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalPayable, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Services</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalServices, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Fees</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalFees, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Expenses</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalExpenses, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Deductions</label>\n                <div class="controls">\n                    (' +
__e( formatMoney(obj.totalDeductions, null, obj.currencySymbol, obj.currencyCode) ) +
')\n                </div>\n            </div>\n\n            ';
 if (obj.hasTax) { ;
__p += '\n            <div class="control-group span2">\n                <label class="control-label">Tax</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalTax, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n            ';
 } ;
__p += '\n\n        </div>\n\n        <h4 class="well section-spacer">Interpreter</h4>\n\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label>\n                    <span class="control-label"><b>Interpreter </b>&nbsp;</span>\n                    <div class="controls">\n                        <span>' +
__e( obj.interpreter.displayName ) +
'</span>\n                    </div>\n                </label>\n            </div>\n            <div class="control-group span6">\n                <label>\n                    <span class="control-label"><b>Billing Address </b>&nbsp;</span>\n                    <div class="controls">\n                        <span>' +
__e( obj.billingAddress ) +
'</span>\n                    </div>\n                </label>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label>\n                    <span class="control-label"><b>Memo </b>&nbsp;</span>\n                    <div class="controls">\n                        <span>' +
__e( obj.memo ) +
'</span>\n                    </div>\n                </label>\n            </div>\n            <div class="control-group span6">\n                <label>\n                    <span class="control-label"><b>Billing Phone </b>&nbsp;</span>\n                    <div class="controls">\n                        <span>' +
__e( obj.billingPhone ) +
'</span>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class="tab-pane" id="payableItems-tab">\n\n        <button class="btn btn-primary addPayableItemCmd">Add</button>\n\n        <table id="payableItems" class="table">\n            <thead>\n            <tr>\n                <th>Ref.</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Quantity</th>\n                <th>Unit Price</th>\n                <th>Line Total</th>\n            </tr>\n            </thead>\n\n            <tbody>\n\n            </tbody>\n\n        </table>\n\n        <button class="btn btn-primary addPayableItemCmd">Add</button>\n    </div>\n\n    <div class="tab-pane" id="audit-tab">\n        <div class="audit">\n\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["financial/payable/creditmemos/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group">\n        <div class="controls">\n            <div class="span12">\n                <div class="filter pull-right">\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<br />\n<div class="creditmemos-list">\n    <div class="grid">\n\n    </div>\n</div>\n<div class="row">\n    <div class="paginator">\n\n    </div>\n</div>';

}
return __p
};

this["JST"]["financial/payable/doublepayment/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group">\n        <div class="controls">\n            <div class="span3">\n                <div class="btn-group open">\n                    <button class="btn btn-primary">Export</button>\n                    <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                        <span class="caret"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <!-- dropdown menu links -->\n                        <li>\n                            <a href="javascript:void(0);" class="exportDoublePaymentsCmd" data-format="xlsx"><i class="icon-ms-excel"></i> excel</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="exportDoublePaymentsCmd" data-format="csv"><i class="icon-download"></i> csv</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <div class="span8">\n                <label class="control-label" for="selectAll">All double payments (with current filters applied) </label>\n                <div class="controls">\n                    <input type="checkbox" id="selectAll" class="selectAll" name="selectAll">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<br />\n\n<div class="double-booking-list">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div id="errorContainer"></div>\n    <div id="successContainer"></div>\n\n    <div class="controls controls-row">\n        <form class="search span6">\n            <div class="input-append">\n                <input class="input-small confirmationNumber" type="text" placeholder="Conf. #"><button class="btn findPaymentCmd" type="submit">Go!</button>\n            </div>\n        </form>\n\n        <div class="span2">\n            <div class="btn-group" style="display: inline-block;">\n                <button class="btn btn-primary refreshCmd"><i class="icon-refresh"></i> Refresh</button>\n                <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                    <span class="caret"></span>\n                </button>\n                <ul class="dropdown-menu"> <!-- dropdown menu links -->\n                    <li>\n                        <a class="newPaymentCmd" href="javascript:void(0);"><i class="icon-star"></i> New Payment</a>\n                    </li>\n                    <li class="divider"></li>\n                    <li>\n                        <a class="resetCmd" href="javascript:void(0);"><i class="icon-cog"></i> Reset</a>\n                    </li>\n                    <li class="divider"></li>\n                    <li>\n                        <a href="javascript:void(0);"><i class="icon-download"></i> Export Jobs <i class="icon-arrow-right"></i></a>\n                        <ul class="dropdown-menu sub-menu">\n                            <li><a class="exportBookingsCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n                            <li><a class="exportBookingsCmd" href="javascript:void(0);" data-format="csv"><i class="icon-file-alt"></i> CSV</a></li>\n                        </ul>\n                    </li>\n                    <li>\n                        <a href="javascript:void(0);"><i class="icon-download"></i> Export Payments <i class="icon-arrow-right"></i></a>\n                        <ul class="dropdown-menu sub-menu">\n                            <li><a class="exportPaymentsCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n                            <li><a class="exportPaymentsCmd" href="javascript:void(0);" data-format="sage"><i class="icon-file-alt"></i> Sage</a></li>\n                            <li><a class="exportPaymentsCmd" href="javascript:void(0);" data-format="sap-employee"><i class="icon-file-alt"></i> SAP-Employee</a></li>\n                            <li><a class="exportPaymentsCmd" href="javascript:void(0);" data-format="sap-contractor"><i class="icon-file-alt"></i> SAP-Contractor</a></li>\n                            <li><a class="exportPaymentsCmd" href="javascript:void(0);" data-format="adp-paycode"><i class="icon-file-alt"></i> ADP-Paycode</a></li>\n                            <li><a class="exportPaymentsCmd" href="javascript:void(0);" data-format="adp-punch"><i class="icon-file-alt"></i> ADP-Punch</a></li>\n                            <li><a class="exportPaymentsCmd" href="javascript:void(0);" data-format="timestar"><i class="icon-file-alt"></i> TimeStar</a></li>\n                            <li><a class="exportPaymentsCmd" href="javascript:void(0);" data-format="csv"><i class="icon-file-alt"></i> CSV</a></li>\n                            <li><a class="exportPaymentsCmd" href="javascript:void(0);" data-format="paymentsage50employee"><i class="icon-file-alt"></i> Sage50-Employee</a></li>\n                            <li><a class="exportPaymentsCmd" href="javascript:void(0);" data-format="paymentsage50contractor"><i class="icon-file-alt"></i> Sage50-Contractor</a></li>\n                        </ul>\n                    </li>\n                    <li>\n                        <a href="javascript:void(0);"><i class="icon-download"></i> Export Payments Expanded <i class="icon-arrow-right"></i></a>\n                        <ul class="dropdown-menu sub-menu">\n                            <li><a href="javascript:void(0);" class="exportPaymentsExpandedCmd" data-full="false"><i class="icon-align-left"></i> Standard</a></li>\n                            <li><a href="javascript:void(0);" class="exportPaymentsExpandedCmd" data-full="true"><i class="icon-align-justify"></i> Full Details</a></li>\n                        </ul>\n                    </li>\n                    <li>\n                        <a href="javascript:void(0);"><i class="icon-download"></i> Export Margins Report <i class="icon-arrow-right"></i></a>\n                        <ul class="dropdown-menu sub-menu">\n                            <li><a href="javascript:void(0);" class="exportMarginReportCmd" data-format="xlsx" data-full="false"><i class="icon-align-left"></i> Standard</a></li>\n                            <li><a href="javascript:void(0);" class="exportMarginReportCmd" data-format="xlsx" data-full="true"><i class="icon-align-justify"></i> Full Details</a></li>\n                        </ul>\n                    </li>\n                    <li>\n                        <a href="javascript:void(0);" class="exportPaymentsYtdCmd"><i class="icon-download"></i> Export Payments Ytd</a>\n                    </li>\n                    <li class="secured secured-beta">\n                        <a class="exportPaymentsToQBCmd" href="javascript:void(0);"><i class="icon-download"></i> Export Payments to QuickBooks</a>\n                    </li>\n                    <li class="divider"></li>\n                    <li>\n                        <a class="createPaymentsCmd" href="javascript:void(0);"><i class="icon-repeat"></i> Create Payments</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        <div class="span1">\n            <input name="periodStart" type="text" class="input-block-level periodStart" value="" placeholder="Period Start"/>\n        </div>\n\n        <div class="span1">\n            <input name="periodEnd" type="text" class="input-block-level periodEnd" value="" placeholder="Period End"/>\n        </div>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <div class="span6">\n        <div class="payment clear"></div>\n    </div>\n\n    <div class="details span6">\n        <ul class="nav nav-tabs"> <!-- nav tabs -->\n            <li class="active"><a href="#payables-tab" data-toggle="tab">Payables</a></li>\n            <li><a href="#statistics-tab" data-toggle="tab">Statistics</a></li>\n            <li ><a href="#payments-tab" data-toggle="tab">Payments</a></li>\n            <li ><a href="#credit-memos-tab" data-toggle="tab">Credit(s)</a></li>\n            <li ><a href="#double-payment-tab" data-toggle="tab">Audit Payments</a></li>\n        </ul> <!-- / nav tabs -->\n\n        <div class="tab-content"> <!-- tabs -->\n            <div class="tab-pane active" id="payables-tab" class="payables">\n                <div class="payables"></div>\n            </div>\n\n            <div class="tab-pane" id="statistics-tab">\n                <div class="statistics"></div>\n            </div>\n\n            <div class="tab-pane" id="payments-tab">\n                <div class="payments"></div>\n            </div>\n\n            <div class="tab-pane" id="credit-memos-tab">\n                <div class="credit-memos"></div>\n            </div>\n\n            <div class="tab-pane" id="double-payment-tab">\n                <div class="double-payments"></div>\n            </div>\n        </div> <!-- / tabs -->\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/merge/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div class="row-fluid">\n    <div class="span4">\n        <div class="control-group">\n            <div class="controls">\n                <label class="control-label" for="fromPaymentId">From Payment ID </label>\n                <input id="fromPaymentId" name="fromPaymentId" type="text" class="input-small date-format" value="' +
__e( obj.fromPaymentId ) +
'" disabled>\n            </div>\n        </div>\n    </div>\n    <div class="span4">\n        <div class="control-group">\n            <div class="controls">\n                <label class="control-label" for="fromConfirmationNumber">From Payment Number </label>\n                <input id="fromConfirmationNumber" name="fromConfirmationNumber" type="text" class="input-small date-format" value="' +
__e( obj.fromConfirmationNumber ) +
'" disabled>\n            </div>\n        </div>\n    </div>\n    <div class="span4">\n        <div class="control-group">\n            <div class="controls">\n                <label class="control-label" for="deleteFrom">Delete Payment on Successful Merge </label>\n                <input id="deleteFrom" name="deleteFrom" type="checkbox" value="true">\n            </div>\n        </div>\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span12">\n        <div class="control-group">\n            <div class="controls">\n                <label class="control-label" for="toConfirmationNumber">To Payment Number </label>\n                <input id="toConfirmationNumber" name="toConfirmationNumber" type="text" class="input-small date-format" value="">\n            </div>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/payables/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span6">\n        <button class="btn createPaymentCmd">Create Payment</button>\n        <button class="btn previewPaymentCmd">Preview Payment</button>\n\n    </div>\n    <div class="span6">\n        <div class="filter pull-right">\n\n        </div>\n    </div>\n</div>\n\n<div class="bookings-list">\n    <div class="grid">\n\n    </div>\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/payment/confirmaddtax"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm Add Tax Payments</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <p>Please confirm you would like to add tax to the selected payments.</p>\n            <p>Only interpreters <strong>registered for tax</strong> will have the corresponding tax added to their payments.</p>\n            <p>Payments for interpreters who are not <strong>registered for tax</strong> will be skipped.</p>\n            <p><strong>This action cannot be undone.</strong></p>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Confirm Add Tax</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n\n';

}
return __p
};

this["JST"]["financial/payable/payment/confirmmerge"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm Merge Payments</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span8">\n            <p>Please confirm you would like to merge the selected payments.</p>\n            <p>Each payment will be merged to the <strong>most recently created</strong> payment with a status\n                of <strong>payable</strong> for the corresponding interpreter in each case.</p>\n            <p>Payments not in a <strong>payable</strong> status will be skipped.</p>\n            <p><strong>This action cannot be undone.</strong></p>\n        </div>\n        <div class="span4">\n            <div class="control-group">\n                <div class="controls">\n                    <label class="control-label" for="deleteFrom">Delete Payment(s) on Successful Merge </label>\n                    <input id="deleteFrom" name="deleteFrom" type="checkbox" value="true">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Confirm Merge</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n\n';

}
return __p
};

this["JST"]["financial/payable/payment/confirmpushqbo"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm Push to QuickBooks Online</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <p>Please confirm you would like to push the selected payments to QuickBooks Online.</p>\n            <p>Your administrator must have already connected Interpreter Intelligence to QuickBooks Online.</p>\n            <p>If you are not sure whether the connection has been setup already please contact your administrator.</p>\n            <p><strong>This action cannot be undone.</strong></p>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Confirm Push</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n\n';

}
return __p
};

this["JST"]["financial/payable/payment/print"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div id="page-wrap">\n\n    <div id="header" class="noprint">\n\n        <div id="company-logo">\n            Invoice #' +
__e( obj.invoiceNumber ? obj.invoiceNumber : obj.id ) +
' (' +
__e( obj.createdDate ? formatDate(obj.createdDate) : formatDate(new Date()) ) +
')\n        </div>\n\n        <div id="invoice-logo">\n            <ul class="arrows">\n\n                <li><a href="javascript:void(0);" id="printLink">Print</a></li>\n                <li><a href="javascript:void(0);" id="saveLink">Save as PDF</a></li>\n                <li><a href="javascript:void(0);" id="shareLink">Share via Web</a></li>\n                <!-- <li><a id="shareEmail">Share via Email</a></li> -->\n\n            </ul>\n        </div>\n    </div>\n\n    <div id="invoice">\n        <div id="summary">\n            <div style="border: 1px solid; border-color: #918F8F;padding: 6px; text-align: center;">\n                <h4>Invoice <u>#' +
__e( obj.invoiceNumber ? obj.invoiceNumber : obj.id ) +
'</u> - (Created: ' +
__e( obj.createdDate ? formatDate(obj.createdDate) : formatDate(new Date()) ) +
')\n                </h4></div>\n            <div id="terms">\n                <!--<br />-->\n                <div style="background: #eee; color: #333; margin: 5px;">\n                    Interpretation Services<br /> <br />&#160;&#160;<b>Period Start</b>:\n                    ' +
__e( formatDate(obj.periodStart) ) +
'\n                    <br />&#160;&#160;<b>Period End</b>:\n                    ' +
__e( formatDate(obj.periodEnd) ) +
'\n                    <br /> <br />\n                </div>\n            </div>\n\n            <div id="company-logo" style="float: right;">\n                <img src="' +
__e( App.config.context ) +
'' +
__e( companyConfig.logoUri ) +
'" />\n            </div>\n        </div>\n\n        <div style="margin: 20px 0 0 0; clear:both;"></div>\n\n        <div id="identity" style="margin: 20px 0 0 0;">\n            <b>Services Provided By :</b><br/>\n            <div style="background: #eee; color: #333; margin: 5px;">\n                ' +
__e( company.name ) +
'<br/>\n                ' +
__e( company.nameExtra ) +
'\n            </div>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( "Primary Address" ) +
'</div>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( company.taxIdDescription ) +
': ' +
__e( company.taxId ) +
'</div>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( "Primary Number" ) +
'</div>\n        </div>\n\n        <div id="customer" style="margin: 20px 0 0 0;">\n            <b>Services Provided To :</b><br/>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( obj.customer ? obj.customer.name : "" ) +
'</div>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( "Customer Primary Address" ) +
'</div>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( "Customer Primary Number" ) +
'</div>\n        </div>\n\n        <div style="margin: 20px 0 0 0; clear:both;"></div>\n\n        <div>\n\n            <table id="payableItems" style="margin: 20px 0 0 0;">\n                <thead>\n                <tr>\n                    <th style="text-align: right;">Ref.</th>\n                    <th style="text-align: right;">Start</th>\n                    <th style="text-align: right;">End</th>\n                    <th style="text-align: right;">Duration / Period</th>\n                    <th style="text-align: right;">Language</th>\n                    <th style="text-align: left;">Description</th>\n                    <th style="text-align: right;">Unit Price</th>\n                    <th style="text-align: right;">Line Total</th>\n                </tr>\n                </thead>\n\n                <tbody>\n\n                </tbody>\n\n            </table>\n        </div>\n\n        <div style="margin: 20px 0 0 0; clear:both;"></div>\n\n        <div style="width: 50%; float: right; text-align: right; margin: 0px 1px 0px 0px;">\n            <table id="totals" >\n\n                <tr>\n                    <td class="total-line blank">SUB TOTAL SERVICES : </td>\n                    <td class="total-value">' +
__e( accounting.formatMoney(obj.totalServices, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n                </tr>\n\n                <tr>\n                    <td class="total-line blank">SUB TOTAL FEES : </td>\n                    <td class="total-value">' +
__e( accounting.formatMoney(obj.totalFees, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n                </tr>\n\n                <tr>\n                    <td class="total-line blank">SUB TOTAL EXPENSES : </td>\n                    <td class="total-value">' +
__e( accounting.formatMoney(obj.totalExpenses, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n                </tr>\n\n                <!--\n                <tr>\n                    <td class="total-line blank">TAX (%) : </td>\n                    <td class="total-value">21</td>\n                </tr>\n                -->\n                <tr>\n                    <td class="total-line blank balance">TOTAL : </td>\n                    <td class="total-value balance">' +
__e( accounting.formatMoney(obj.totalPayable, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n                </tr>\n\n            </table>\n\n        </div>\n        <div class="clear" style="padding-top: 20px;">\n            <table id="memo" style="width: 100%;">\n\n                <tr>\n                    <th>Memo</th>\n                </tr>\n                <tr>\n                    <td style="height: 40px;">' +
__e( obj.memo ) +
'</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n\n    <div style="margin: 20px 0 0 0; clear:both;"></div>\n\n    <div id="pageControls">\n        &nbsp;\n    </div>\n\n    <div class="push"></div>\n\n    <div class="page-wrap footer" style="background-color: white; border-top: 0; position: relative; bottom: 10px;">\n        <!--<p>&copy; 2012 <strong>interpreter<span style="color: #00a5e5;">intelligence</span></strong>. All rights reserved.</p>-->\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/payment/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '\n<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#payment-tab" data-toggle="tab">Payment: ';
 if (obj.confirmationNumber) { ;
__p +=
__e( obj.confirmationNumber );
 } else { ;
__p += '&lt;New&gt; ';
 } ;
__p += '</strong></a></li>\n    <li><a href="#payableItems-tab" data-toggle="tab">Payable Items</a></li>\n    <li ><a href="#audit-tab" data-toggle="tab">Audit History</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n\n    <div class="tab-pane active" id="payment-tab">\n\n        <h4 class="well section-spacer">Payment: ';
 if (obj.confirmationNumber) { ;
__p +=
__e( obj.confirmationNumber );
 } else { ;
__p += '&lt;New&gt; ';
 } ;
__p += '<span class="pull-right">Status: ' +
__e( obj.status ? getStatusAttributeById(App.dict.paymentStatus, obj.status.id, 'name') : "-") +
' ' +
((__t = ( obj.locked ? "<i class='icon-lock'></i>" : "<i class='icon-unlock'></i>")) == null ? '' : __t) +
'</span></h4>\n\n        <div id="summary">\n\n            <div class="row-fluid">\n                <div class="form-inline">\n                    <div class="control-group">\n\n                        <label class="control-label ' +
__e( obj.id ? "required" : "" ) +
' for="confirmationNumber">Confirmation Number </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Confirmation number. This will be auto-populated if you leave blank for new payments" data-original-title="Confirmation Number">?</a>\n                        <div class="controls">\n                            <input id="confirmationNumber" name="confirmationNumber" type="text" class="input-medium" value="' +
__e( obj.confirmationNumber ? obj.confirmationNumber : obj.id ) +
'"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="paymentDate">Payment Date </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Payment date" data-original-title="Payment Date">?</a>\n                        <div class="controls">\n                            <input id="invoiceDate" name="paymentDate" type="text" class="input-small format-date" value="' +
__e( obj.paymentDate ) +
'" autocomplete="off"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="status">Payment Status </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Payment status" data-original-title="Payment Status">?</a>\n                        <div class="controls">\n                            <select name="status" id="status" class="api-v2 input-medium">\n                                ' +
((__t = ( selectOptions(App.dict.paymentStatus, {noSelection: {id: '', name: '[Choose a Status]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n                        <div class="controls">\n                            <div class="btn-group">\n                                <button class="btn btn-primary savePaymentCmd">Save</button>\n                                <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                                    <span class="caret"></span>\n                                </button>\n                                <ul class="dropdown-menu">\n                                    <!-- dropdown menu links -->\n                                    <li>\n                                        <a href="javascript:void(0);" class="viewPaymentCmd"><i class="icon-file-alt"></i> View</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="reloadPaymentCmd"><i class="icon-refresh"></i> Re-Calculate</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="addTaxCmd"><i class="icon-plus"></i> Add Tax</a>\n                                    </li>\n                                    <span class="secured secured-admin secured-fina">\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="refreshPaymentCmd"><i class="icon-warning-sign"></i> Refresh</a>\n                                    </li>\n                                    </span>\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="newPaymentCmd"><i class="icon-star"></i> New Payment</a>\n                                    </li>\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="mergePaymentCmd"><i class="icon-exchange"></i> Merge Payments</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="creditMemoCmd"><i class="icon-minus"></i> Credit</a>\n                                    </li>\n                                    <span class="secured secured-admin secured-fina">\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="resetPaymentCmd"><i class="icon-repeat"></i> Reset</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="deletePaymentCmd"><i class="icon-trash"></i> Delete</a>\n                                    </li>\n                                    </span>\n                                    <!--<li></li>-->\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <div class="form-inline">\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="periodStart">Period Start </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Period Start" data-original-title="Period Start">?</a>\n                        <div class="controls">\n                            <input name="periodStart" type="text" class="input-medium format-date" value="' +
__e( obj.periodStart ) +
'" autocomplete="off"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="periodEnd">Period End </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Period End" data-original-title="Period End">?</a>\n                        <div class="controls">\n                            <input name="periodEnd" type="text" class="input-medium format-date" value="' +
__e( obj.periodEnd ) +
'" autocomplete="off"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n                </div> <!-- / left column -->\n\n            </div> <!-- / row -->\n\n        </div>\n\n        <h4 class="well section-spacer">Payables</h4>\n\n        <div class="row-fluid">\n\n            <div class="control-group span2">\n                <label class="control-label">Total</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalPayable) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Services</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalServices) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Fees</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalFees) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Expenses</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalExpenses) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Deductions</label>\n                <div class="controls">\n                    (' +
__e( formatMoney(obj.totalDeductions) ) +
')\n                </div>\n            </div>\n\n            ';
 if (obj.hasTax) { ;
__p += '\n            <div class="control-group span2">\n                <label class="control-label">Tax</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalTax) ) +
'\n                </div>\n            </div>\n            ';
 } ;
__p += '\n\n        </div>\n\n        <h4 class="well section-spacer">Interpreter</h4>\n\n        <div class="row-fluid">\n\n            <div class="span6">\n\n                <!--<div class="interpreter-container"></div>-->\n\n                <div class="interpreter control-group">\n                    <label>\n                        <span class="control-label"><span class="required">Interpreter</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the interpreter that this booking is for." data-original-title="Interpreter" tabindex="-1">?</a> </span>\n                        <div class="interpreter-container">\n                            ' +
__e( obj.interpreter ? obj.interpreter.displayName : "N/A" ) +
'\n                        </div>\n                    </label>\n                </div>\n\n                <div class="control-group">\n\n                    <label class="control-label required" for="billingAddress">Billing Address </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Billing address for this payment" data-original-title="Billing Address">?</a>\n                    <div class="controls">\n                        <textarea name="billingAddress" class="input-block-level" style="height: 100px;">' +
__e( obj.billingAddress ) +
'</textarea>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </div>\n\n                <div class="control-group">\n\n                    <label class="control-label" for="billingPhone">Billing Phone </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Billing phone number" data-original-title="Billing Phone">?</a>\n                    <div class="controls">\n                        <input name="billingPhone" type="text" class="input-block-level" value="' +
__e( obj.billingPhone ) +
'"/>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="span6">\n\n                <div class="control-group">\n\n                    <label class="control-label" for="notes">Payment Notes </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Notes related to this payment, for internal purposes only." data-original-title="Notes">?</a>\n                    <div class="controls">\n                        <textarea name="notes" class="input-block-level" style="height: 110px;">' +
__e( obj.notes ) +
'</textarea>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n\n        <div class="memo">\n\n            <div class="control-group">\n\n                <label class="control-label" for="memo">Memo </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Memorandum to add to the payment for the attention of the interpreter" data-original-title="Memo">?</a>\n                <div class="controls">\n                    <textarea name="memo" class="input-block-level">' +
__e( obj.memo ) +
'</textarea>\n                    <p class="help-block">Required field.</p>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <div class="tab-pane" id="payableItems-tab">\n\n        <button class="btn btn-primary addPayableItemCmd">Add</button>\n\n        <table id="payableItems" class="table">\n            <thead>\n            <tr>\n                <th>Ref.</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Quantity</th>\n                <th>Unit Price</th>\n                <th>Line Total</th>\n            </tr>\n            </thead>\n\n            <tbody>\n\n            </tbody>\n\n        </table>\n\n        <button class="btn btn-primary addPayableItemCmd">Add</button>\n    </div>\n\n    <div class="tab-pane" id="audit-tab">\n        <div class="audit">\n\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/payments/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group">\n        <div class="controls">\n            <div class="span3">\n                <div class="btn-group open">\n                    <button class="btn btn-primary">Bulk Actions</button>\n                    <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                        <span class="caret"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <!-- dropdown menu links -->\n                        <li>\n                            <a href="javascript:void(0);" class="bulkUpdateCmd"><i class="icon-file"></i> Bulk Update Payments</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="pushQBOCmd"><i class="icon-signout"></i> Push to QuickBooks Online</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="sendEmailCmd"><i class="icon-envelope"></i> Email PDF</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="downloadPDFCmd"><i class="icon-download-alt"></i> Download PDF</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="generatePDFCmd"><i class="icon-file"></i> Generate PDF</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="printPDFCmd"><i class="icon-print"></i> Print PDF</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="refreshCmd"><i class="icon-refresh"></i> Refresh Payments</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="mergeCmd"><i class="icon-exchange"></i> Merge Payments</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="addTaxCmd"><i class="icon-plus"></i> Add Tax</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <div class="span6">\n                <label class="control-label" for="selectAll">All payments (with current filters applied) </label>\n                <div class="controls">\n                    <input type="checkbox" id="selectAll" class="selectAll" name="selectAll">\n                </div>\n            </div>\n            <div class="span3">\n                <div class="filter pull-right">\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<br />\n\n<div class="payments-list">\n    <div class="grid">\n\n    </div>\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/preview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div ' +
__e( (networkPrint || hideHeader) ? "style='display: none;'" : "" ) +
' class="noprint">\n\n    <div id="errorContainer">\n    </div>\n    <div id="successContainer">\n    </div>\n\n\n    <div id="popupErrorContainer" class="msg-modal hide">\n    </div>\n    <div id="popupSuccessContainer" class="msg-modal hide">\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="span3">\n            <ul class="arrows">\n                <li><a href="javascript:void(0);" id="print">Print</a></li>\n                <li><a href="javascript:void(0);" id="saveAsPdf">Save as PDF</a></li>\n                <!--<li><a href="javascript:void(0);" id="exportToSage">Export to Sage</a></li>-->\n                <li><a href="javascript:void(0);" id="share">Share via Web</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" class="exportExcel" data-full="false">Export as Excel (Standard)</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" class="exportExcel" data-full="true" >Export as Excel (Full Details)</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" id="sendEmail">Email</a></li>\n\n            </ul>\n        </div>\n\n        <div class="secured secured-fina">\n            <div class="span5">\n                <div class="form-horizontal">\n\n                    <input type="text" name="confirmationNumber" class="input-medium" value="' +
__e( obj.confirmationNumber ) +
'" placeholder="#"/>\n                    <input type="text" name="paymentDate" class="format-date input-mini" value="' +
__e( obj.paymentDate ) +
'" placeholder="Date" autocomplete="off"/>\n                    <select name="status" id="status" class="api-v2 input-medium">\n                        ' +
((__t = ( selectOptions(App.dict.paymentStatus, {noSelection: {id: '', name: '[Choose a Status]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                    <button class="btn btn-primary saveCmd">Save</button>\n                </div>\n            </div>\n\n            <div class="span4">\n\n                <div class="pull-right">\n\n                    <div class="form-horizontal">\n\n                        <button class="btn prevCmd">\n                            <i class="icon-chevron-left"></i>\n                        </button>\n\n                        <div class="input-append">\n                            <input class="input-small confirmationNumber" type="text" placeholder="Conf. #"><button class="btn findCmd" type="submit">Go!</button>\n                        </div>\n\n                        <button class="btn nextCmd">\n                            <i class="icon-chevron-right"></i>\n                        </button>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n    <div class="secured secured-fina">\n        <div class="container-email" style="display: none;">\n            <hr />\n            <div class="row-fluid">\n\n                <div class="span4">\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="email">Email </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Email address to be used for to send remittance to." data-original-title="Email">?</a>\n                        <div class="controls">\n                            <input id="email" name="email" type="text" class="input-block-level" value="' +
__e( email ) +
'"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label" for="ccEmail">Cc Email </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Cc email address to Cc on remittance." data-original-title="Cc Email">?</a>\n                        <div class="controls">\n                            <input id="ccEmail" name="ccEmail" type="text" class="input-block-level" value=""/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span4">\n\n                    <div class="control-group">\n                        <label class="control-label" for="msg">Message </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Message to include in email." data-original-title="Message">?</a>\n                        <div class="controls">\n                            <textarea id="msg" name="msg" class="input-block-level"></textarea>\n                        </div>\n                    </div>\n\n\n\n                    <div class="control-group">\n\n                        <div class="controls">\n                            <label class="control-label">\n                                <input type="checkbox" name="attachPdf" checked> Attach PDF\n                            </label>\n                        </div>\n\n                    </div>\n                    <div class="control-group">\n\n                        <div class="controls">\n                            <label class="control-label">\n                                <input type="checkbox" id="includeVos" class="includeVos" name="includeVos"> Include VoS forms with invoice document\n                            </label>\n                        </div>\n\n                    </div>\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="checkbox" id="regeneratePdf" class="regeneratePdf" name="regeneratePdf"/>\n                            <label class="control-label" for="regeneratePdf">Regenerate PDF</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Regenerate PDF even if the PDF was previously generated. This should be used if updates have been made." data-original-title="Regenerate PDF">?</a>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class="span4">\n\n                    <div class="control-group">\n                        <label class="control-label">&nbsp;</label>\n                        <div class="controls"><button class="btn emailCmd">Email Remittance</button></div>\n                    </div>\n\n                </div>\n            </div>\n            <div class="row-fluid">\n                <fieldset class="group-container hide" disabled>\n                    <legend>Include VoS Forms</legend>\n                    <div>NOTE: many files over a certain size will be blocked by email providers. This may prevent large documents from being received when VoS forms are included.</div>\n                    <div class="control-group">\n                        <div class="controls">\n                            <label class="control-label">\n                                <input type="radio" name="mergePdf" idddd="mergePdf" class="mergePdf" value="false" checked/> Include VoS forms in a zip file\n                            </label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include uploaded VoS forms in zip file with remittance. To ensure each VoS form has a unique name, all entries in the zip file will be prefixed with a timestamp." data-original-title="Include VoS (Zip)">?</a>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n                        <div class="controls">\n                            <label class="control-label">\n                                <input type="radio" name="mergePdf" iddd="mergePdf" class="mergePdf" value="true"/> Merge VoS forms in a single PDF document\n                            </label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include uploaded VoS forms and embed in the generated PDF. Only VoS forms of PDF type will be merged, all others will be skipped e.g. png, jpge, gif." data-original-title="Include VoS (PDF)">?</a>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </div>\n\n    <hr />\n\n</div>\n';

}
return __p
};

this["JST"]["financial/payable/sendemail/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Email PDF</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="control-group">\n                <div class="controls">\n                    <input type="checkbox" id="payableOnly" class="payableOnly" name="payableOnly" checked/>\n                    <label class="control-label" for="payableOnly">Email "payable" payments only</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Choose whether to include only payments in a payable status or all payments selected." data-original-title="Payment Status">?</a>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <div class="controls">\n                    <input type="checkbox" id="includeVos" class="includeVos" name="includeVos"/>\n                    <label class="control-label" for="includeVos">Include VoS forms</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include VoS forms with invoice." data-original-title="Include VoS Forms">?</a>\n                </div>\n            </div>\n\n            <fieldset class="group-container hide" disabled>\n                <legend>Include VoS Forms</legend>\n                <div>NOTE: many files over a certain size will be blocked by email providers. This may prevent large documents from being received when VoS forms are included.</div>\n                <div class="control-group">\n                    <div class="controls">\n                        <label class="control-label">\n                            <input type="radio" name="mergePdfBulkEmail" idddd="mergePdfBulkEmail" class="mergePdfBulkEmail" value="false" checked/> Include VoS forms in a zip file\n                        </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include uploaded VoS forms in zip file with invoice. To ensure each VoS form has a unique name, all entries in the zip file will be prefixed with a timestamp." data-original-title="Include VoS (Zip)">?</a>\n                    </div>\n                </div>\n\n                <div class="control-group">\n                    <div class="controls">\n                        <label class="control-label">\n                            <input type="radio" name="mergePdfBulkEmail" iddd="mergePdfBulkEmail" class="mergePdfBulkEmail" value="true"/> Merge VoS forms in a single PDF document\n                        </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include uploaded VoS forms and embed in the generated PDF. Only VoS forms on PDF type will be merged, all others will be skipped e.g. png, jpge, gif." data-original-title="Include VoS (PDF)">?</a>\n                    </div>\n                </div>\n            </fieldset>\n\n            <div class="control-group">\n                <div class="controls">\n                    <input type="checkbox" id="regeneratePdf" class="regeneratePdf" name="regeneratePdf"/>\n                    <label class="control-label" for="regeneratePdf">Regenerate PDF</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Regenerate PDF even if the PDF was previously generated. This should be used if updates have been made." data-original-title="Regenerate PDF">?</a>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Send Mail</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n\n';

}
return __p
};

this["JST"]["financial/receivable/billables/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span6">\n        <button class="btn createInvoiceCmd">Create Invoice</button>\n        <button class="btn previewInvoiceCmd">Preview Invoice</button>\n\n    </div>\n    <div class="span6">\n        <div class="filter pull-right">\n\n        </div>\n    </div>\n</div>\n\n<div class="bookings-list">\n    <div class="grid">\n\n    </div>\n</div>\n\n<div class="row">\n    <div class="paginator">\n\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/bulkupdate/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span6">\n        <div class="control-group">\n            <label class="control-label required" for="status">Invoice Status </label>\n            <div class="controls">\n                <select name="status" id="status" class="api-v2 input-medium">\n                    ' +
((__t = ( selectOptions(App.dict.invoiceStatus, {noSelection: {id: '', name: '[Choose a Status]'}}) )) == null ? '' : __t) +
'\n                </select>\n                <p class="help-block">Required field.</p>\n            </div>\n        </div>\n    </div>\n    <div class="span6">\n        <div class="control-group">\n            <label class="control-label" for="ignoreLockedStatus">Ignore Locked Status? </label>\n            <div class="controls">\n                <input type="checkbox" name="ignoreLockedStatus" id="ignoreLockedStatus"/>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <div class="span12">\n        <br>\n        <button class="btn btn-primary" type="submit" id="save" value="save" disabled>Save</button>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/create/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div class="row-fluid">\n    <div class="span8">\n        <div class="control-group">\n            <div class="controls">\n                <label class="control-label" for="invoiceDateForBookings">Invoice Date </label>\n                <input id="invoiceDateForBookings" name="invoiceDateForBookings" type="text" class="input-small date-format" value="">\n            </div>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/creditmemo/popup"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += 'Are you sure to issue a Credit Memo for this Invoice? This action is not reversible.\n<br />\n<br />\n<div class="row-fluid" style="margin-left: 5px">\n    <div class="span4">\n        <div class="control-group">\n            <label class="control-label"><b>Credit Memo for Invoice </b></label>\n            <div class="controls">\n                <input id="forInvoice" class="span12" class="date input-block-level" name="forInvoice" type="text" value="' +
__e( obj.forInvoice ) +
'" disabled/>\n            </div>\n        </div>\n    </div>\n\n    <div class="span4">\n        <div class="control-group">\n            <label class="control-label"><b>Credit Memo Date </b></label>\n            <div class="controls">\n                <input id="invoiceMemoDate" name="invoiceDate" type="text" class="span12 input-small" value="">\n            </div>\n        </div>\n    </div>\n\n    <div class="span4">\n        <div class="control-group">\n            <label class="control-label"><b>Credit Memo Number </b></label>\n            <div class="controls">\n                <input id="invoiceNumber" class="span12" class="date input-block-level" name="invoiceNumber" type="text" value=""/>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="row-fluid" style="margin-left: 5px">\n    <div class="control-group span12 pull-right">\n        <div class="controls" style="margin-top:18px;">\n            <button class="btn btn-success" type="submit" id="save" value="save">Save</button>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["financial/receivable/creditmemo/preview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div ' +
__e( (networkPrint) ? "style='display: none;'" : "" ) +
' class="noprint">\n\n    <div id="errorContainer">\n    </div>\n    <div id="successContainer">\n    </div>\n\n\n    <div id="popupErrorContainer" class="msg-modal hide">\n    </div>\n    <div id="popupSuccessContainer" class="msg-modal hide">\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="span3">\n            <ul class="arrows">\n                <li><a href="javascript:void(0);" id="print">Print</a></li>\n                <li><a href="javascript:void(0);" id="saveAsPdf">Save as PDF</a></li>\n                <li><a href="javascript:void(0);" id="share">Share via Web</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" class="exportExcelCmd" data-full="false">Export as Excel (Standard)</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" class="exportExcelCmd" data-full="true" >Export as Excel (Full Details)</a></li>\n                <li class="secured secured-fina secured-cust"><a href="javascript:void(0);" class="exportCustomerSummaryReportCmd" data-full="true" >Export Customer Summary Report</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" id="sendEmail">Email</a></li>\n            </ul>\n        </div>\n    </div>\n\n    <div class="secured secured-fina">\n        <div class="container-email" style="display: none;">\n            <hr />\n            <div class="row-fluid">\n\n                <div class="span4">\n\n                    <div><strong>Billing Method</strong>: ' +
__e( billingMethod ? billingMethod : "N/A" ) +
'</div>\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="email">Billing Email </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Email address to be used for billing purposes." data-original-title="Billing Email">?</a>\n                        <div class="controls">\n                            <input id="email" name="email" type="text" class="input-block-level" value="' +
__e( billingEmail ) +
'"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label" for="ccEmail">Cc Email </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Cc email address to Cc on billing." data-original-title="Cc Email">?</a>\n                        <div class="controls">\n                            <input id="ccEmail" name="ccEmail" type="text" class="input-block-level" value=""/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span4">\n\n                    <div>&nbsp;</div>\n\n                    <div class="control-group">\n                        <label class="control-label" for="msg">Message </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Message to include in email." data-original-title="Message">?</a>\n                        <div class="controls">\n                            <textarea id="msg" name="msg" class="input-block-level"></textarea>\n                        </div>\n                    </div>\n\n\n\n                    <div class="control-group">\n\n                        <div class="controls">\n                            <label class="control-label">\n                                <input type="checkbox" name="attachPdf" checked> Attach PDF\n                            </label>\n                        </div>\n\n                    </div>\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="checkbox" id="regeneratePdf" class="regeneratePdf" name="regeneratePdf"/>\n                            <label class="control-label" for="regeneratePdf">Regenerate PDF</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Regenerate PDF even if the PDF was previously generated. This should be used if updates have been made." data-original-title="Regenerate PDF">?</a>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span4">\n\n                    <div>&nbsp;</div>\n\n                    <div class="control-group">\n                        <label class="control-label">&nbsp;</label>\n                        <div class="controls"><button class="btn emailCmd">Email Invoice</button></div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <hr />\n\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/creditmemo/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '\n<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#credit-memo-tab" data-toggle="tab">Credit Memo: ';
 if (obj.invoiceNumber) { ;
__p +=
__e( obj.invoiceNumber );
 } else { ;
__p += '&lt;New&gt;';
 } ;
__p += '</strong></a></li>\n    <li><a href="#payableItems-tab" data-toggle="tab">Payable Items</a></li>\n    <li ><a href="#audit-tab" data-toggle="tab">Audit History</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n\n    <div class="tab-pane active" id="credit-memo-tab">\n\n        <h4 class="well section-spacer">Credit Memo: ';
 if (obj.invoiceNumber) { ;
__p +=
__e( obj.invoiceNumber );
 } else { ;
__p += '&lt;New&gt;';
 } ;
__p += '<span class="pull-right">Created from Invoice: ' +
__e( obj.invoice.id ) +
'</i></span></h4>\n\n        <div id="summary">\n\n            <div class="row-fluid">\n                <div class="span4">\n                    <div class="control-group">\n                        <label class="control-label required" for="invoiceNumber"><b>Credit Memo Number </b></label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Credit Memo number." data-original-title="Credit Memo Number">?</a>\n                        <div class="controls">\n                            <input id="invoiceNumber" class="span12 date" class="date input-block-level" name="invoiceNumber" type="text" value="' +
__e( obj.invoiceNumber ) +
'"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n                </div>\n                <div class="span4">\n                    <div class="control-group">\n                        <label class="control-label required" for="invoiceDate">Credit Memo Date </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Credit Memo date" data-original-title="Credit Memo Date">?</a>\n                        <div class="controls">\n                            <input id="invoiceDate" name="invoiceDate" type="text" class="span12 input-small format-date hasDatePicker" value="' +
__e( obj.invoiceDate ) +
'" autocomplete="off" />\n                        </div>\n                    </div>\n                </div>\n                <div class="span4" style="margin-top:18px;">\n                    <div class="control-group">\n                        <div class="controls">\n                            <div class="btn-group">\n                                <button class="btn btn-primary saveCreditMemoCmd">Save</button>\n                                <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                                    <span class="caret"></span>\n                                </button>\n                                <ul class="dropdown-menu">\n                                    <!-- dropdown menu links -->\n                                    <li>\n                                        <a href="javascript:void(0);" class="viewCreditMemoCmd"><i class="icon-file-alt"></i> View</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="viewCreditMemoInvoiceCmd"><i class="icon-file-alt"></i> View Invoice</a>\n                                    </li>\n                                    <span class="secured secured-admin secured-fina">\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="deleteInvoiceCreditMemoCmd"><i class="icon-trash"></i> Delete</a>\n                                    </li>\n                                    </span>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span4">\n                    <label>\n                        <span class="control-label"><b>Period Start</b>&nbsp;</span>\n                        <div class="controls">\n                            <span class="format-date">' +
__e( obj.periodStart ) +
'</span>\n                        </div>\n                    </label>\n                </div>\n                <div class="span4">\n                    <label>\n                        <span class="control-label"><b>Period End</b>&nbsp;</span>\n                        <div class="controls">\n                            <span class="format-date">' +
__e( obj.periodEnd ) +
'</span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div> <!-- / row -->\n\n        <br />\n\n        <h4 class="well section-spacer">Receivables</h4>\n\n        <div class="row-fluid">\n\n            <div class="control-group span2">\n                <label class="control-label">Total</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalPayable, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Services</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalServices, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Fees</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalFees, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Expenses</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalExpenses, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Deductions</label>\n                <div class="controls">\n                    (' +
__e( formatMoney(obj.totalDeductions, null, obj.currencySymbol, obj.currencyCode) ) +
')\n                </div>\n            </div>\n\n            ';
 if (obj.hasTax) { ;
__p += '\n            <div class="control-group span2">\n                <label class="control-label">Tax</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalTax, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n            ';
 } ;
__p += '\n\n        </div>\n\n        <h4 class="well section-spacer">Customer</h4>\n\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label>\n                    <span class="control-label"><b>Customer </b>&nbsp;</span>\n                    <div class="controls">\n                        <span>' +
__e( obj.customer.displayName ) +
'</span>\n                    </div>\n                </label>\n            </div>\n            <div class="control-group span6">\n                <label>\n                    <span class="control-label"><b>Billing Address </b>&nbsp;</span>\n                    <div class="controls">\n                        <span>' +
__e( obj.billingAddress ) +
'</span>\n                    </div>\n                </label>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <div class="control-group span6">\n                <label>\n                    <span class="control-label"><b>Memo </b>&nbsp;</span>\n                    <div class="controls">\n                        <span>' +
__e( obj.memo ) +
'</span>\n                    </div>\n                </label>\n            </div>\n            <div class="control-group span6">\n                <label>\n                    <span class="control-label"><b>Billing Phone </b>&nbsp;</span>\n                    <div class="controls">\n                        <span>' +
__e( obj.billingPhone ) +
'</span>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n    <div class="tab-pane" id="payableItems-tab">\n        <table id="payableItems" class="table">\n            <thead>\n            <tr>\n                <th>Ref.</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Quantity</th>\n                <th>Unit Price</th>\n                <th>Line Total</th>\n            </tr>\n            </thead>\n\n            <tbody>\n\n            </tbody>\n\n        </table>\n    </div>\n\n    <div class="tab-pane" id="audit-tab">\n        <div class="audit">\n\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/creditmemos/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group">\n        <div class="controls">\n            <div class="span12">\n                <div class="filter pull-right">\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<br />\n<div class="creditmemos-list">\n    <div class="grid">\n\n    </div>\n</div>\n<div class="row">\n    <div class="paginator">\n\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/doubleinvoice/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group">\n        <div class="controls">\n            <div class="span3">\n                <div class="btn-group open">\n                    <button class="btn btn-primary">Export</button>\n                    <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                        <span class="caret"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <!-- dropdown menu links -->\n                        <li>\n                            <a href="javascript:void(0);" class="exportDoubleInvoicesCmd" data-format="xlsx"><i class="icon-ms-excel"></i> excel</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="exportDoubleInvoicesCmd" data-format="csv"><i class="icon-download"></i> csv</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <div class="span8">\n                <label class="control-label" for="selectAll">All double invoices (with current filters applied) </label>\n                <div class="controls">\n                    <input type="checkbox" id="selectAll" class="selectAll" name="selectAll">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<br />\n\n<div class="double-booking-list">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/invoice/confirmaddtax"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm Add Tax Invoices</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <p>Please confirm you would like to add tax to the selected invoices.</p>\n            <p><strong>This action cannot be undone.</strong></p>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Confirm Add Tax</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n\n';

}
return __p
};

this["JST"]["financial/receivable/invoice/confirmmerge"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm Merge Invoices</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span8">\n            <p>Please confirm you would like to merge the selected invoices.</p>\n            <p>Each invoice will be merged to the <strong>most recently created</strong> invoice with a status\n                of <strong>invoiceable</strong> for the corresponding customer in each case.</p>\n            <p>Invoices not in an <strong>invoiceable</strong> status will be skipped.</p>\n            <p><strong>This action cannot be undone.</strong></p>\n        </div>\n        <div class="span4">\n            <div class="control-group">\n                <div class="controls">\n                    <label class="control-label" for="deleteFrom">Delete Invoice(s) on Successful Merge </label>\n                    <input id="deleteFrom" name="deleteFrom" type="checkbox" value="true">\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Confirm Merge</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n\n';

}
return __p
};

this["JST"]["financial/receivable/invoice/confirmpushqbo"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm Push to QuickBooks Online</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <p>Please confirm you would like to push the selected invoices to QuickBooks Online.</p>\n            <p>Your administrator must have already connected Interpreter Intelligence to QuickBooks Online.</p>\n            <p>If you are not sure whether the connection has been setup already please contact your administrator.</p>\n            <p><strong>This action cannot be undone.</strong></p>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Confirm Push</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/invoice/print"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div id="page-wrap">\n\n    <div id="header" class="noprint">\n\n        <div id="company-logo">\n            Invoice #' +
__e( obj.invoiceNumber ? obj.invoiceNumber : obj.id ) +
' (' +
__e( obj.createdDate ? formatDate(obj.createdDate) : formatDate(new Date()) ) +
')\n        </div>\n\n        <div id="invoice-logo">\n            <ul class="arrows">\n\n                <li><a href="javascript:void(0);" id="printLink">Print</a></li>\n                <li><a href="javascript:void(0);" id="saveLink">Save as PDF</a></li>\n                <li><a href="javascript:void(0);" id="shareLink">Share via Web</a></li>\n                <!-- <li><a id="shareEmail">Share via Email</a></li> -->\n\n            </ul>\n        </div>\n    </div>\n\n    <div id="invoice">\n        <div id="summary">\n            <div style="border: 1px solid; border-color: #918F8F;padding: 6px; text-align: center;">\n                <h4>Invoice <u>#' +
__e( obj.invoiceNumber ? obj.invoiceNumber : obj.id ) +
'</u> - (Created: ' +
__e( obj.createdDate ? formatDate(obj.createdDate) : formatDate(new Date()) ) +
')\n                </h4></div>\n            <div id="terms">\n                <!--<br />-->\n                <div style="background: #eee; color: #333; margin: 5px;">\n                    Interpretation Services<br /> <br />&#160;&#160;<b>Period Start</b>:\n                    ' +
__e( formatDate(obj.periodStart) ) +
'\n                    <br />&#160;&#160;<b>Period End</b>:\n                    ' +
__e( formatDate(obj.periodEnd) ) +
'\n                    <br /> <br />\n                </div>\n            </div>\n\n            <div id="company-logo" style="float: right;">\n                <img src="' +
__e( App.config.context ) +
'' +
__e( companyConfig.logoUri ) +
'" />\n            </div>\n        </div>\n\n        <div style="margin: 20px 0 0 0; clear:both;"></div>\n\n        <div id="identity" style="margin: 20px 0 0 0;">\n            <b>Services Provided By :</b><br/>\n            <div style="background: #eee; color: #333; margin: 5px;">\n                ' +
__e( company.name ) +
'<br/>\n                ' +
__e( company.nameExtra ) +
'\n            </div>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( "Primary Address" ) +
'</div>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( company.taxIdDescription ) +
': ' +
__e( company.taxId ) +
'</div>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( "Primary Number" ) +
'</div>\n        </div>\n\n        <div id="customer" style="margin: 20px 0 0 0;">\n            <b>Services Provided To :</b><br/>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( obj.customer ? obj.customer.name : "" ) +
'</div>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( "Customer Primary Address" ) +
'</div>\n            <div style="background: #eee; color: #333; margin: 5px;">' +
__e( "Customer Primary Number" ) +
'</div>\n        </div>\n\n        <div style="margin: 20px 0 0 0; clear:both;"></div>\n\n        <div>\n\n            <table id="payableItems" style="margin: 20px 0 0 0;">\n                <thead>\n                <tr>\n                    <th style="text-align: right;">Ref.</th>\n                    <th style="text-align: right;">Start</th>\n                    <th style="text-align: right;">End</th>\n                    <th style="text-align: right;">Duration / Period</th>\n                    <th style="text-align: right;">Language</th>\n                    <th style="text-align: left;">Description</th>\n                    <th style="text-align: right;">Unit Price</th>\n                    <th style="text-align: right;">Line Total</th>\n                </tr>\n                </thead>\n\n                <tbody>\n\n                </tbody>\n\n            </table>\n        </div>\n\n        <div style="margin: 20px 0 0 0; clear:both;"></div>\n\n        <div style="width: 50%; float: right; text-align: right; margin: 0px 1px 0px 0px;">\n            <table id="totals" >\n\n                <tr>\n                    <td class="total-line blank">SUB TOTAL SERVICES : </td>\n                    <td class="total-value">' +
__e( accounting.formatMoney(obj.totalServices, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n                </tr>\n\n                <tr>\n                    <td class="total-line blank">SUB TOTAL FEES : </td>\n                    <td class="total-value">' +
__e( accounting.formatMoney(obj.totalFees, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n                </tr>\n\n                <tr>\n                    <td class="total-line blank">SUB TOTAL EXPENSES : </td>\n                    <td class="total-value">' +
__e( accounting.formatMoney(obj.totalExpenses, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n                </tr>\n\n                <!--\n                <tr>\n                    <td class="total-line blank">TAX (%) : </td>\n                    <td class="total-value">21</td>\n                </tr>\n                -->\n                <tr>\n                    <td class="total-line blank balance">TOTAL : </td>\n                    <td class="total-value balance">' +
__e( accounting.formatMoney(obj.totalPayable, { symbol: companyConfig.currencySymbol }) ) +
'</td>\n                </tr>\n\n            </table>\n\n        </div>\n        <div class="clear" style="padding-top: 20px;">\n            <table id="memo" style="width: 100%;">\n\n                <tr>\n                    <th>Memo</th>\n                </tr>\n                <tr>\n                    <td style="height: 40px;">' +
__e( obj.memo ) +
'</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n\n    <div style="margin: 20px 0 0 0; clear:both;"></div>\n\n    <div id="pageControls">\n        &nbsp;\n    </div>\n\n    <div class="push"></div>\n\n    <div class="page-wrap footer" style="background-color: white; border-top: 0; position: relative; bottom: 10px;">\n        <!--<p>&copy; 2012 <strong>interpreter<span style="color: #00a5e5;">intelligence</span></strong>. All rights reserved.</p>-->\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/invoice/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '\n<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#invoice-tab" data-toggle="tab">Invoice: ';
 if (obj.invoiceNumber) { ;
__p +=
__e( obj.invoiceNumber );
 } else { ;
__p += '&lt;New&gt;';
 } ;
__p += '</strong></a></li>\n    <li><a href="#payableItems-tab" data-toggle="tab">Payable Items</a></li>\n    <li ><a href="#audit-tab" data-toggle="tab">Audit History</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n\n    <div class="tab-pane active" id="invoice-tab">\n\n        <h4 class="well section-spacer">Invoice: ';
 if (obj.invoiceNumber) { ;
__p +=
__e( obj.invoiceNumber );
 } else { ;
__p += '&lt;New&gt;';
 } ;
__p += '<span class="pull-right">Status: ' +
__e( obj.status ? getStatusAttributeById(App.dict.invoiceStatus, obj.status.id, 'name') : "-") +
' ' +
((__t = ( obj.locked ? "<i class='icon-lock'></i>" : "<i class='icon-unlock'></i>")) == null ? '' : __t) +
'</span></h4>\n\n        <div id="summary">\n\n            <div class="row-fluid">\n                <div class="form-inline">\n                    <div class="control-group">\n\n                        <label class="control-label ' +
__e( obj.id ? "required" : "" ) +
' for="invoiceNumber">Invoice Number </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Invoice number. This will be auto-populated if you leave blank for new invoices" data-original-title="Invoice Number">?</a>\n                        <div class="controls">\n                            <input id="invoiceNumber" name="invoiceNumber" type="text" class="input-medium" value="' +
__e( obj.invoiceNumber ? obj.invoiceNumber : obj.id ) +
'"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="invoiceDate">Invoice Date </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Invoice date" data-original-title="Invoice Date">?</a>\n                        <div class="controls">\n                            <input id="invoiceDate" name="invoiceDate" type="text" class="input-small format-date" value="' +
__e( obj.invoiceDate ) +
'" autocomplete="off"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="dueDate">Due Date </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Due date" data-original-title="Due Date">?</a>\n                        <div class="controls">\n                            <input id="dueDate" name="dueDate" type="text" class="input-small format-date" value="' +
__e( obj.dueDate ) +
'" autocomplete="off"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="status">Invoice Status </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Invoice status" data-original-title="Invoice Status">?</a>\n                        <div class="controls">\n                            <select name="status" id="status" class="api-v2 input-medium">\n                                ' +
((__t = ( selectOptions(App.dict.invoiceStatus, {noSelection: {id: '', name: '[Choose a Status]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <div class="controls">\n                            <div class="btn-group">\n                                <button class="btn btn-primary saveInvoiceCmd">Save</button>\n                                <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                                    <span class="caret"></span>\n                                </button>\n                                <ul class="dropdown-menu">\n                                    <!-- dropdown menu links -->\n                                    <li>\n                                        <a href="javascript:void(0);" class="viewInvoiceCmd"><i class="icon-file-alt"></i> View</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="viewVerificationsCmd"><i class="icon-pencil"></i> View Verifications</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="reloadInvoiceCmd"><i class="icon-refresh"></i> Recalculate</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="addTaxCmd"><i class="icon-plus"></i> Add Tax</a>\n                                    </li>\n                                    <span class="secured secured-admin secured-fina">\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="refreshInvoiceCmd"><i class="icon-warning-sign"></i> Refresh</a>\n                                    </li>\n                                    </span>\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="newInvoiceCmd"><i class="icon-star"></i> New Invoice</a>\n                                    </li>\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="mergeInvoiceCmd"><i class="icon-exchange"></i> Merge Invoices</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="creditMemoCmd"><i class="icon-minus"></i> Credit</a>\n                                    </li>\n                                    <span class="secured secured-admin secured-fina">\n                                    <li class="divider"></li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="resetInvoiceCmd"><i class="icon-repeat"></i> Reset</a>\n                                    </li>\n                                    <li>\n                                        <a href="javascript:void(0);" class="deleteInvoiceCmd"><i class="icon-trash"></i> Delete</a>\n                                    </li>\n                                    </span>\n                                    <!--<li></li>-->\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n                <div class="form-inline">\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="periodStart">Period Start </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Period Start" data-original-title="Period Start">?</a>\n                        <div class="controls">\n                            <input name="periodStart" type="text" class="input-medium format-date" value="' +
__e( obj.periodStart ) +
'" autocomplete="off"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="periodEnd">Period End </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Period End" data-original-title="Period End">?</a>\n                        <div class="controls">\n                            <input name="periodEnd" type="text" class="input-medium format-date" value="' +
__e( obj.periodEnd ) +
'" autocomplete="off"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n                </div> <!-- / left column -->\n\n            </div> <!-- / row -->\n\n        </div>\n\n        <h4 class="well section-spacer">Receivables</h4>\n\n        <div class="row-fluid">\n\n            <div class="control-group span2">\n                <label class="control-label">Total</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalPayable, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Services</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalServices, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Fees</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalFees, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Expenses</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalExpenses, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n\n            <div class="control-group span2">\n                <label class="control-label">Deductions</label>\n                <div class="controls">\n                    (' +
__e( formatMoney(obj.totalDeductions, null, obj.currencySymbol, obj.currencyCode) ) +
')\n                </div>\n            </div>\n\n            ';
 if (obj.hasTax) { ;
__p += '\n            <div class="control-group span2">\n                <label class="control-label">Tax</label>\n                <div class="controls">\n                    ' +
__e( formatMoney(obj.totalTax, null, obj.currencySymbol, obj.currencyCode) ) +
'\n                </div>\n            </div>\n            ';
 } ;
__p += '\n\n        </div>\n\n        <h4 class="well section-spacer">Customer</h4>\n\n        <div class="row-fluid">\n\n            <div class="span6">\n\n                <div class="customer-container"></div>\n\n                <div class="control-group">\n\n                    <label class="control-label required" for="billingAddress">Billing Address </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Billing address for this invoice" data-original-title="Billing Address">?</a>\n                    <div class="controls">\n                        <textarea name="billingAddress" class="input-block-level" style="height: 100px;">' +
__e( obj.billingAddress ) +
'</textarea>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </div>\n\n                <div class="control-group">\n\n                    <label class="control-label" for="billingPhone">Billing Phone </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Billing phone number" data-original-title="Billing Phone">?</a>\n                    <div class="controls">\n                        <input name="billingPhone" type="text" class="input-block-level" value="' +
__e( obj.billingPhone ) +
'"/>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="span6">\n\n                <div class="control-group">\n\n                    <label class="control-label" for="customerNotes">Customer Notes </label>\n                    <div class="controls customerNotes">\n\n                    </div>\n                </div>\n\n                <div class="control-group">\n\n                    <label class="control-label" for="notes">Invoice Notes </label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Notes related to this invoice, for internal purposes only." data-original-title="Notes">?</a>\n                    <div class="controls">\n                        <textarea name="notes" class="input-block-level" style="height: 110px;">' +
__e( obj.notes ) +
'</textarea>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n\n        <div class="memo">\n\n            <div class="control-group">\n\n                <label class="control-label" for="memo">Memo </label>\n                <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Memorandum to add to the invoice for the attention of the customer" data-original-title="Memo">?</a>\n                <div class="controls">\n                    <textarea name="memo" class="input-block-level">' +
__e( obj.memo ) +
'</textarea>\n                    <p class="help-block">Required field.</p>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <div class="tab-pane" id="payableItems-tab">\n\n        <button class="btn btn-primary addPayableItemCmd">Add</button>\n\n        <table id="payableItems" class="table">\n            <thead>\n            <tr>\n                <th>Ref.</th>\n                <th>Type</th>\n                <th>Description</th>\n                <th>Quantity</th>\n                <th>Unit Price</th>\n                <th>Line Total</th>\n            </tr>\n            </thead>\n\n            <tbody>\n\n            </tbody>\n\n        </table>\n\n        <button class="btn btn-primary addPayableItemCmd">Add</button>\n    </div>\n\n    <div class="tab-pane" id="audit-tab">\n        <div class="audit">\n\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/invoices/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group">\n        <div class="controls">\n            <div class="span3">\n                <div class="btn-group open">\n                    <button class="btn btn-primary">Bulk Actions</button>\n                    <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                        <span class="caret"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <!-- dropdown menu links -->\n                        <li>\n                            <a href="javascript:void(0);" class="bulkUpdateCmd"><i class="icon-file"></i> Bulk Update Invoices</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="pushQBOCmd"><i class="icon-signout"></i> Push to QuickBooks Online <strong>' +
__e( companyConfig.qbTimeActivityEnabled ? "(Time Activity)" : "" ) +
'</strong></a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="sendEmailCmd"><i class="icon-envelope"></i> Email PDF</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="downloadPDFCmd"><i class="icon-download-alt"></i> Download PDF</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="generatePDFCmd"><i class="icon-file"></i> Generate PDF</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="printPDFCmd"><i class="icon-print"></i> Print PDF</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="refreshCmd"><i class="icon-refresh"></i> Refresh Invoices</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="mergeCmd"><i class="icon-exchange"></i> Merge Invoices</a>\n                        </li>\n                        <li>\n                            <a href="javascript:void(0);" class="addTaxCmd"><i class="icon-plus"></i> Add Tax</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <div class="span6">\n                <label class="control-label" for="selectAll">All invoices (with current filters applied) </label>\n                <div class="controls">\n                    <input type="checkbox" id="selectAll" class="selectAll" name="selectAll">\n                </div>\n            </div>\n            <div class="span3">\n                <div class="filter pull-right">\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<br />\n\n<div class="invoices-list">\n    <div class="grid">\n\n    </div>\n</div>\n<div class="row">\n    <div class="paginator">\n\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div id="errorContainer"></div>\n    <div id="successContainer"></div>\n\n    <div class="controls controls-row">\n        <form class="search span6">\n            <div class="input-append">\n                <input class="input-small invoiceNumber" type="text" placeholder="Invoice #"><button class="btn findInvoiceCmd" type="submit">Go!</button>\n            </div>\n        </form>\n\n        <div class="span2">\n            <div class="btn-group" style="display: inline-block;">\n                <button class="btn btn-primary refreshCmd"><i class="icon-refresh"></i> Refresh</button>\n                <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown">\n                    <span class="caret"></span>\n                </button>\n                <ul class="dropdown-menu">\n                    <!-- dropdown menu links -->\n                    <li>\n                        <a href="javascript:void(0);" class="newInvoiceCmd"><i class="icon-star"></i> New Invoice</a>\n                    </li>\n                    <li class="divider"></li>\n                    <li>\n                        <a href="javascript:void(0);" class="resetCmd"><i class="icon-cog"></i> Reset</a>\n                    </li>\n                    <li class="divider"></li>\n                    <li>\n                        <a href="javascript:void(0);"><i class="icon-download"></i> Export Jobs <i class="icon-arrow-right"></i></a>\n                        <ul class="dropdown-menu sub-menu">\n                            <li><a class="exportBookingsCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n                            <li><a class="exportBookingsCmd" href="javascript:void(0);" data-format="csv"><i class="icon-file-alt"></i> CSV</a></li>\n                        </ul>\n                    </li>\n                    <li>\n                        <a href="javascript:void(0);"><i class="icon-download"></i> Export Invoices <i class="icon-arrow-right"></i></a>\n                        <ul class="dropdown-menu sub-menu">\n                            <li><a class="exportInvoicesCmd" href="javascript:void(0);" data-format="xlsx"><i class="icon-ms-excel"></i> Excel</a></li>\n                            <li><a class="exportInvoicesCmd" href="javascript:void(0);" data-format="sage"><i class="icon-file-alt"></i> Sage</a></li>\n                            <li><a class="exportInvoicesCmd" href="javascript:void(0);" data-format="csv"><i class="icon-file-alt"></i> CSV</a></li>\n                        </ul>\n                    </li>\n                    <li>\n                        <a href="javascript:void(0);"><i class="icon-download"></i> Export Invoices Expanded <i class="icon-arrow-right"></i></a>\n                        <ul class="dropdown-menu sub-menu">\n                            <li><a href="javascript:void(0);" class="exportInvoicesExpandedCmd" data-full="false"><i class="icon-align-left"></i> Standard</a></li>\n                            <li><a href="javascript:void(0);" class="exportInvoicesExpandedCmd" data-full="true"><i class="icon-align-justify"></i> Full Details</a></li>\n                        </ul>\n                    </li>\n                    <li>\n                        <a href="javascript:void(0);"><i class="icon-download"></i> Export Margins Report <i class="icon-arrow-right"></i></a>\n                        <ul class="dropdown-menu sub-menu">\n                            <li><a href="javascript:void(0);" class="exportMarginReportCmd" data-format="xlsx" data-full="false"><i class="icon-align-left"></i> Standard</a></li>\n                            <li><a href="javascript:void(0);" class="exportMarginReportCmd" data-format="xlsx" data-full="true"><i class="icon-align-justify"></i> Full Details</a></li>\n                        </ul>\n                    </li>\n                    <li>\n                        <a href="javascript:void(0);" class="exportCustomerSummaryReportCmd" data-format="xlsx"><i class="icon-download"></i> Export Customer Summary Report</a>\n                    </li>\n                    <li class="secured secured-beta">\n                        <a class="exportInvoicesToQBCmd" href="javascript:void(0);"><i class="icon-download"></i> Export Invoices to QuickBooks</a>\n                    </li>\n                    <li class="divider"></li>\n                    <li>\n                        <a class="createInvoicesCmd" href="javascript:void(0);"><i class="icon-repeat"></i> Create Invoices</a>\n                    </li>\n                </ul>\n            </div>\n        </div>\n\n        <div class="span1">\n            <input name="periodStart" type="text" class="input-block-level periodStart" value="" placeholder="Period Start"/>\n        </div>\n\n        <div class="span1">\n            <input name="periodEnd" type="text" class="input-block-level periodEnd" value="" placeholder="Period End"/>\n        </div>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <div class="span6">\n        <div class="invoice clear"></div>\n    </div>\n\n    <div class="details span6">\n        <!-- nav tabs -->\n        <ul class="nav nav-tabs">\n            <li class="active"><a href="#billables-tab" data-toggle="tab">Billables</a></li>\n            <li><a href="#statistics-tab" data-toggle="tab">Statistics</a></li>\n            <li ><a href="#invoices-tab" data-toggle="tab">Invoices</a></li>\n            <li ><a href="#credit-memos-tab" data-toggle="tab">Credit Memo(s)</a></li>\n            <li ><a href="#past-due-tab" data-toggle="tab">Past Due</a></li>\n            <li ><a href="#double-invoice-tab" data-toggle="tab">Audit Invoices</a></li>\n        </ul>\n        <!-- / nav tabs -->\n\n        <!-- tabs -->\n        <div class="tab-content">\n            <div class="tab-pane active" id="billables-tab" class="billables">\n                <div class="billables"></div>\n            </div>\n\n            <div class="tab-pane" id="statistics-tab">\n                <div class="statistics"></div>\n            </div>\n\n            <div class="tab-pane" id="invoices-tab">\n                <div class="invoices"></div>\n            </div>\n\n            <div class="tab-pane" id="credit-memos-tab">\n                <div class="credit-memos"></div>\n            </div>\n\n            <div class="tab-pane" id="past-due-tab">\n                <div class="past-due"></div>\n            </div>\n\n            <div class="tab-pane" id="double-invoice-tab">\n                <div class="double-invoices"></div>\n            </div>\n\n        </div> <!-- / tabs -->\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/merge/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div class="row-fluid">\n    <div class="span4">\n        <div class="control-group">\n            <div class="controls">\n                <label class="control-label" for="fromInvoiceId">From Invoice ID </label>\n                <input id="fromInvoiceId" name="fromInvoiceId" type="text" class="input-small" value="' +
__e( obj.fromInvoiceId ) +
'" disabled>\n            </div>\n        </div>\n    </div>\n    <div class="span4">\n        <div class="control-group">\n            <div class="controls">\n                <label class="control-label" for="fromInvoiceNumber">From Invoice Number </label>\n                <input id="fromInvoiceNumber" name="fromInvoiceNumber" type="text" class="input-small" value="' +
__e( obj.fromInvoiceNumber ) +
'" disabled>\n            </div>\n        </div>\n    </div>\n    <div class="span4">\n        <div class="control-group">\n            <div class="controls">\n                <label class="control-label" for="deleteFrom">Delete Invoice on Successful Merge </label>\n                <input id="deleteFrom" name="deleteFrom" type="checkbox" value="true">\n            </div>\n        </div>\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span12">\n        <div class="control-group">\n            <div class="controls">\n                <label class="control-label" for="toInvoiceNumber">To Invoice Number </label>\n                <input id="toInvoiceNumber" name="toInvoiceNumber" type="text" class="input-small date-format" value="">\n            </div>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/preview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div ' +
__e( (networkPrint) ? "style='display: none;'" : "" ) +
' class="noprint">\n\n    <div id="errorContainer">\n    </div>\n    <div id="successContainer">\n    </div>\n\n\n    <div id="popupErrorContainer" class="msg-modal hide">\n    </div>\n    <div id="popupSuccessContainer" class="msg-modal hide">\n    </div>\n\n    <div class="row-fluid">\n\n        <div class="span3">\n            <ul class="arrows">\n                <li><a href="javascript:void(0);" id="print">Print</a></li>\n                <li><a href="javascript:void(0);" id="saveAsPdf">Save as PDF</a></li>\n                <!--<li><a href="javascript:void(0);" id="exportToSage">Export to Sage</a></li>-->\n                <li><a href="javascript:void(0);" id="share">Share via Web</a></li>\n                <li><a href="javascript:void(0);" class="viewVerificationsCmd">View Verifications</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" class="exportExcelCmd" data-full="false">Export as Excel (Standard)</a></li>\n                <li class="secured secured-fina"><a href="javascript:void(0);" class="exportExcelCmd" data-full="true" >Export as Excel (Full Details)</a></li>\n                <li class="secured secured-fina secured-cust"><a href="javascript:void(0);" class="exportCustomerSummaryReportCmd" data-full="true" >Export Customer Summary Report</a></li>\n                ';
 if (App.env === 'INTTEK') { ;
__p += '\n                    <li class="secured secured-fina secured-cust"><a href="javascript:void(0);" class="exportWellCareCustomerSummaryReportCmd" data-full="true">WellCare Customer Summary</a></li>\n                ';
 } ;
__p += '\n                <li class="secured secured-fina"><a href="javascript:void(0);" id="sendEmail">Email</a></li>\n            </ul>\n        </div>\n\n        <div class="secured secured-fina">\n            <div class="span5">\n                <div class="form-horizontal">\n\n                    <input type="text" name="invoiceNumber" class="input-small" value="' +
__e( obj.invoiceNumber ) +
'" placeholder="#"/>\n                    <input type="text" name="invoiceDate" class="format-date input-mini" value="' +
__e( obj.invoiceDate ) +
'" placeholder="Date"/>\n                    <input type="text" name="dueDate" class="format-date input-mini" value="' +
__e( obj.dueDate ) +
'" placeholder="Due"/>\n                    <select name="status" id="status" class="api-v2 input-medium">\n                        ' +
((__t = ( selectOptions(App.dict.invoiceStatus, {noSelection: {id: '', name: '[Choose a Status]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                    <button class="btn btn-primary saveCmd">Save</button>\n                </div>\n            </div>\n\n            <div class="span4">\n\n                <div class="pull-right">\n\n                    <div class="form-horizontal">\n\n                        <button class="btn prevCmd">\n                            <i class="icon-chevron-left"></i>\n                        </button>\n\n                        <div class="input-append">\n                            <input class="input-small invoiceNumber" type="text" placeholder="Invoice #"><button class="btn findCmd" type="submit">Go!</button>\n                        </div>\n\n                        <button class="btn nextCmd">\n                            <i class="icon-chevron-right"></i>\n                        </button>\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n\n    <div class="secured secured-fina">\n        <div class="container-email" style="display: none;">\n            <hr />\n            <div class="row-fluid">\n\n                <div class="span4">\n\n                    <div><strong>Billing Method</strong>: ' +
__e( billingMethod ? billingMethod : "N/A" ) +
'</div>\n\n                    <div class="control-group">\n\n                        <label class="control-label required" for="email">Billing Email </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Email address to be used for billing purposes." data-original-title="Billing Email">?</a>\n                        <div class="controls">\n                            <input id="email" name="email" type="text" class="input-block-level" value="' +
__e( billingEmail ) +
'"/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n\n                        <label class="control-label" for="ccEmail">Cc Email </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Cc email address to Cc on billing." data-original-title="Cc Email">?</a>\n                        <div class="controls">\n                            <input id="ccEmail" name="ccEmail" type="text" class="input-block-level" value=""/>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span4">\n\n                    <div>&nbsp;</div>\n\n                    <div class="control-group">\n                        <label class="control-label" for="msg">Message </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Message to include in email." data-original-title="Message">?</a>\n                        <div class="controls">\n                            <textarea id="msg" name="msg" class="input-block-level"></textarea>\n                        </div>\n                    </div>\n\n\n\n                    <div class="control-group">\n\n                        <div class="controls">\n                            <label class="control-label">\n                                <input type="checkbox" name="attachPdf" checked> Attach PDF\n                            </label>\n                        </div>\n\n                    </div>\n                    <div class="control-group">\n\n                        <div class="controls">\n                            <label class="control-label">\n                                <input type="checkbox" id="includeVos" class="includeVos" name="includeVos"> Include VoS forms with invoice document\n                            </label>\n                        </div>\n\n                    </div>\n                    <div class="control-group">\n                        <div class="controls">\n                            <input type="checkbox" id="regeneratePdf" class="regeneratePdf" name="regeneratePdf"/>\n                            <label class="control-label" for="regeneratePdf">Regenerate PDF</label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Regenerate PDF even if the PDF was previously generated. This should be used if updates have been made." data-original-title="Regenerate PDF">?</a>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="span4">\n\n                    <div>&nbsp;</div>\n\n                    <div class="control-group">\n                        <label class="control-label">&nbsp;</label>\n                        <div class="controls"><button class="btn emailCmd">Email Invoice</button></div>\n                    </div>\n\n                </div>\n            </div>\n            <div class="row-fluid">\n                <fieldset class="group-container hide" disabled>\n                    <legend>Include VoS Forms</legend>\n                    <div>NOTE: many files over a certain size will be blocked by email providers. This may prevent large documents from being received when VoS forms are included.</div>\n                    <div class="control-group">\n                        <div class="controls">\n                            <label class="control-label">\n                                <input type="radio" name="mergePdf" idddd="mergePdf" class="mergePdf" value="false" checked/> Include VoS forms in a zip file\n                            </label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include uploaded VoS forms in zip file with invoice. To ensure each VoS form has a unique name, all entries in the zip file will be prefixed with a timestamp." data-original-title="Include VoS (Zip)">?</a>\n                        </div>\n                    </div>\n\n                    <div class="control-group">\n                        <div class="controls">\n                            <label class="control-label">\n                                <input type="radio" name="mergePdf" iddd="mergePdf" class="mergePdf" value="true"/> Merge VoS forms in a single PDF document\n                            </label>\n                            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include uploaded VoS forms and embed in the generated PDF. Only VoS forms of PDF type will be merged, all others will be skipped e.g. png, jpge, gif." data-original-title="Include VoS (PDF)">?</a>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </div>\n    </div>\n\n    <hr />\n\n</div>\n';

}
return __p
};

this["JST"]["financial/receivable/sendemail/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Email PDF</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="control-group">\n                <div class="controls">\n                    <input type="checkbox" id="invoiceableOnly" class="invoiceableOnly" name="invoiceableOnly" checked/>\n                    <label class="control-label" for="invoiceableOnly">Email "invoiceable" invoices only</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Choose whether to include only invoices in an invoiceable status or all invoices selected." data-original-title="Invoice Status">?</a>\n                </div>\n            </div>\n\n            <div class="control-group">\n                <div class="controls">\n                    <input type="checkbox" id="includeVos" class="includeVos" name="includeVos"/>\n                    <label class="control-label" for="includeVos">Include VoS forms</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include VoS forms with invoice." data-original-title="Include VoS Forms">?</a>\n                </div>\n            </div>\n\n            <fieldset class="group-container hide" disabled>\n                <legend>Include VoS Forms</legend>\n                <div style="margin-bottom: 10px;">\n                    <strong>NOTE</strong>: many files over a certain size will be blocked by email providers. This may prevent large documents from being received when VoS forms are included.\n                </div>\n                <div class="control-group">\n                    <div class="controls">\n                        <label class="control-label">\n                            <input type="radio" name="mergePdfBulkEmail" idddd="mergePdfBulkEmail" class="mergePdfBulkEmail" value="false" checked/> Include VoS forms in a zip file\n                        </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include uploaded VoS forms in zip file with invoice. To ensure each VoS form has a unique name, all entries in the zip file will be prefixed with a timestamp." data-original-title="Include VoS (Zip)">?</a>\n                    </div>\n                </div>\n\n                <div class="control-group">\n                    <div class="controls">\n                        <label class="control-label">\n                            <input type="radio" name="mergePdfBulkEmail" iddd="mergePdfBulkEmail" class="mergePdfBulkEmail" value="true"/> Merge VoS forms in a single PDF document\n                        </label>\n                        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Include uploaded VoS forms and embed in the generated PDF. Only VoS forms on PDF type will be merged, all others will be skipped e.g. png, jpge, gif." data-original-title="Include VoS (PDF)">?</a>\n                    </div>\n                </div>\n            </fieldset>\n\n            <div class="control-group">\n                <div class="controls">\n                    <input type="checkbox" id="regeneratePdf" class="regeneratePdf" name="regeneratePdf"/>\n                    <label class="control-label" for="regeneratePdf">Regenerate PDF</label>\n                    <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Regenerate PDF even if the PDF was previously generated. This should be used if updates have been made." data-original-title="Regenerate PDF">?</a>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Send Mail</a>\n    <a href="#" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n\n';

}
return __p
};

this["JST"]["importexport/export/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Export history</h3>\n<hr/>\n<div class="row region-export-history">\n</div>\n';

}
return __p
};

this["JST"]["importexport/exportarchive/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span-12 list-container">\n</div>\n';

}
return __p
};

this["JST"]["importexport/import/bookingdata"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4>Download Booking Supporting Data <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"\n                                        data-content="Select a customer you want to export the booking data for. This will export things such as the customer\'s locations, sub locations, consumers, etc. If no customer is selected, this will export this data for your entire agency."\n                                        data-original-title="Bookings Import">?</a></h4>\n<br/>\n<div class="span5">\n    <div id="errorContainer">\n    </div>\n    <div id="successContainer">\n    </div>\n    <form action="' +
__e(App.config.context) +
'/export/bookingImportData" method="post">\n        <fieldset>\n            <div class="hidden-params">\n                <input type="hidden" id="customerId" name="customer.id" value=""/>\n                <input type="hidden" class="isIE" name="isIE" value="false">\n            </div>\n            <div class="row">\n                <div class="span4">\n                    <div class="control-group one-button">\n                        <!--<label class="control-label" for="customerList">Customer</label>-->\n                        <div class="input-append input-block-level">\n                            <div class="append-wrapper">\n                                <button title="Clear customer" id="customerX" class="btn"><i class="icon icon-remove"></i></button>\n                            </div>\n                            <div class="input-wrapper">\n                                <input class="span12 api-v2 api-delegate" type="text" id="customer" name="customerName" value="';
 if ( obj.customer ) { ;
__p +=
__e( obj.customer.name );
 } ;
__p += '" placeholder="Customer"/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row">\n                <div class="span4">\n                    <br>\n                    <button class="btn btn-primary" type="submit" id="submit" value="Submit">Download File</button>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div>\n';

}
return __p
};

this["JST"]["importexport/import/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="well span3">\n        <ul class="nav nav-list">\n            <li class="nav-header">\n                Import\n            </li>\n            <li>\n                Import data by selecting the file (Excel 97 - 2004) and clicking on the appropriate upload button.\n            </li>\n            <li class="divider"></li>\n            <li>\n                <div class="progress progress-success active">\n                    <div class="bar" style="width: 0%;"></div>\n                </div>\n            </li>\n            <li id="successContainer">\n            </li>\n            <li id="errorContainer">\n            </li>\n            <li id="basics">\n            </li>\n        </ul>\n    </div> <!-- / #sidebar -->\n\n    <!-- content area -->\n    <div class="offset3 span8 content">\n        <div class="tab-content">\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Contacts</h4>\n                    <form name="contacts" action="' +
__e(App.config.context) +
'/upload/contacts" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="contactsFile">Import Contacts</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple contacts to be used to assign booking to.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Contact Import">?</a><a href="' +
__e(App.config.context) +
'/docs/interpreter-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="contactsFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Contact Languages</h4>\n                    <form name="contact-languages" action="' +
__e(App.config.context) +
'/upload/contactLanguages" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="contactLanguagesFile">Import Contact Languages</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple contact languages.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Contact Import">?</a><a href="' +
__e(App.config.context) +
'/docs/interpreter-languages-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="contactLanguagesFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Contact Rate Plan Associations</h4>\n                    <form name="contact-rateplan-associations" action="' +
__e(App.config.context) +
'/upload/contactRatePlanAssociations" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="contactRatePlansFile">Import Contact Rate Plan Associations</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple contact rate plan associations.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Contact Rate Plan Associations">?</a><a href="' +
__e(App.config.context) +
'/docs/interpreter-rateplan-associations-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="contactRatePlansFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Contact Rate Zone Associations</h4>\n                    <form name="contact-ratezone-associations" action="' +
__e(App.config.context) +
'/upload/contactRateZoneAssociations" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="contactRateZonesFile">Import Contact Rate Zone Associations</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple contact rate zone associations.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Contact Rate Zone Associations">?</a><a href="' +
__e(App.config.context) +
'/docs/interpreter-ratezone-associations-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="contactRateZonesFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Contact Services</h4>\n                    <form name="contact-services" action="' +
__e(App.config.context) +
'/upload/contactServices" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="contactServicesFile">Import Contact Services</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple contact services associations.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Contact Services">?</a><a href="' +
__e(App.config.context) +
'/docs/interpreter-services-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="contactServicesFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Contact Qualifications</h4>\n                    <form name="qualifications" action="' +
__e(App.config.context) +
'/upload/qualifications" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="qualificationsFile">Import Qualifications</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload contact qualification data." data-original-title="Contact Qualifications">?</a> <a href="' +
__e(App.config.context) +
'/docs/interpreter-qualifications.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="qualificationsFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <hr />\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Customers</h4>\n                    <form name="customers" action="' +
__e(App.config.context) +
'/upload/customers" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="customersFile">Import Customers </label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Use this field to upload multiple customers to be used to create bookings for.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Customer Import">?</a><a href="' +
__e(App.config.context) +
'/docs/customer-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="customersFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Clients</h4>\n                    <form name="clients" action="' +
__e(App.config.context) +
'/upload/clients" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="clientsFile">Import Clients</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple clients.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Client Import">?</a><a href="' +
__e(App.config.context) +
'/docs/client-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="clientsFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Customer Addresses</h4>\n                    <form name="customer-addresses" action="' +
__e(App.config.context) +
'/upload/addresses" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="addressesFile">Import Customer Addresses </label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Use this field to upload multiple customer addresses to be used as locations for interpreter assignments.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Customer Address Import">?</a><a href="' +
__e(App.config.context) +
'/docs/customer-address-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="addressesFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Organizations</h4>\n                    <form name="organizations" action="' +
__e(App.config.context) +
'/upload/organizations" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="organizationsFile">Import Organizations</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload organizations data." data-original-title="Organizations">?</a> <a href="' +
__e(App.config.context) +
'/docs/organization-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="organizationsFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Customer Services</h4>\n                    <form name="customer-services" action="' +
__e(App.config.context) +
'/upload/customerServices" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="customerServicesFile">Import Customer Services</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple customer services associations.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Customer Services">?</a><a href="' +
__e(App.config.context) +
'/docs/customer-services-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="customerServicesFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Customer Configurations</h4>\n                    <form name="customer-config" action="' +
__e(App.config.context) +
'/upload/customerConfig" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="customerConfigFile">Import Customer Configuration </label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Use this field to upload multiple customer configurations.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Customer Configuration Import">?</a><a href="' +
__e(App.config.context) +
'/docs/customer-configuration-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="customerConfigFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Customer Configuration Reference Code</h4>\n                    <form name="customer-config-reference" action="' +
__e(App.config.context) +
'/upload/customerConfigReferenceCode" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="customerConfigReferenceFile">Import Customer Configuration Reference Code </label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Use this field to upload multiple customer configuration reference code configuration.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Customer Configuration Reference Code Import">?</a><a href="' +
__e(App.config.context) +
'/docs/customer-config-reference-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="customerConfigReferenceFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Customer Configuration Criteria</h4>\n                    <form name="customer-config-criteria" action="' +
__e(App.config.context) +
'/upload/customerConfigCriteria" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="customerConfigCriteriaFile">Import Customer Configuration Criteria </label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Use this field to upload multiple customer configurations criteria.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Customer Configuration Criteria Import">?</a><a href="' +
__e(App.config.context) +
'/docs/customer-configuration-criteria-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="customerConfigCriteriaFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Customer Rate Plan Associations</h4>\n                    <form name="customer-rateplan-associations" action="' +
__e(App.config.context) +
'/upload/customerRatePlanAssociations" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="customerRatePlansFile">Import Customer Rate Plan Associations</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple customer rate plan associations.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Customer Rate Plan Associations">?</a><a href="' +
__e(App.config.context) +
'/docs/customer-rateplan-associations-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="customerRatePlansFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Customer Rate Zone Associations</h4>\n                    <form name="customer-ratezone-associations" action="' +
__e(App.config.context) +
'/upload/customerRateZoneAssociations" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="customerRateZonesFile">Import Customer Rate Zone Associations</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple customer rate zone associations.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Customer Rate Zone Associations">?</a><a href="' +
__e(App.config.context) +
'/docs/customer-ratezone-associations-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="customerRateZonesFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <hr />\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Requestors</h4>\n                    <form name="requestors" action="' +
__e(App.config.context) +
'/upload/requestors" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="requestorsFile">Import Requestors </label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Use this field to upload multiple requestors to be used to create bookings for.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Requestor Import">?</a><a href="' +
__e(App.config.context) +
'/docs/requestor-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="requestorsFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Requestor Associations</h4>\n                    <form name="associations" action="' +
__e(App.config.context) +
'/upload/associations" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="associationsFile">Import associations</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload requestor associations data." data-original-title="Requestor Associations">?</a><a href="' +
__e(App.config.context) +
'/export/associationsImportData" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="associationsFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <hr />\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Consumers</h4>\n                    <form name="consumers" action="' +
__e(App.config.context) +
'/upload/consumers" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="consumersFile">Import Consumers</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple consumers to be used to assign booking to.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Consumer Import">?</a><a href="' +
__e(App.config.context) +
'/docs/consumer-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="consumersFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Customer Consumers</h4>\n                    <form name="customer-consumers" action="' +
__e(App.config.context) +
'/upload/customerConsumers" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="customerConsumersFile">Import Customer Consumers</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple customer consumer associations.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Consumer Import">?</a><a href="' +
__e(App.config.context) +
'/docs/customer-consumers-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="customerConsumersFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <hr />\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Bookings</h4>\n                    <form name="bookings" action="' +
__e(App.config.context) +
'/upload/bookings" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="bookingsFile">Import Bookings</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Use this field to upload bookings." data-original-title="Bookings Import">?</a><a id="bookingSupportingData" title="Download Booking Template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="bookingsFile" />\n                                <p class="help-block">Required. Please select a file of type .xlsx.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Import Booking References</h4>\n                    <form name="references" action="' +
__e(App.config.context) +
'/upload/references" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="referencesFile">Import References</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload booking references field." data-original-title="References Import">?</a><a href="' +
__e(App.config.context) +
'/docs/booking-references-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="referencesFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <hr />\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Rate Plans</h4>\n                    <form name="rateplans" action="' +
__e(App.config.context) +
'/upload/rateplans" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="ratePlansFile">Import Rate Plans</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload rateplan data." data-original-title="Rate Plans">?</a> <a href="' +
__e(App.config.context) +
'/docs/rateplan-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="ratePlansFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Rate Plan Details</h4>\n                    <form name="rateplan-details" action="' +
__e(App.config.context) +
'/upload/rateplanDetails" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="rateplanDetailsFile">Import Rate Plan Details</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload rateplan data." data-original-title="Rate Plan Details">?</a> <a href="' +
__e(App.config.context) +
'/docs/rateplan-details-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="rateplanDetailsFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <hr />\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Invoices</h4>\n                    <form name="invoices" action="' +
__e(App.config.context) +
'/upload/invoices" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="invoicesFile">Invoices Import </label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Use this field to upload a previously exported invoices file.<p>To create the invoices file from scratch use the download link to download the template you can use to populate with your information." data-original-title="Invoice Import">?</a><a href="' +
__e(App.config.context) +
'/docs/invoice-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="invoicesFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Payments</h4>\n                    <form name="payments" action="' +
__e(App.config.context) +
'/upload/payments" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="paymentsFile">Payments Import </label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Use this field to upload a previously exported payments file.<p>To create the payments file from scratch use the download link to download the template you can use to populate with your information." data-original-title="Payment Import">?</a><a href="' +
__e(App.config.context) +
'/docs/payment-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="paymentsFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <hr />\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Schedule Interpreter Contacts</h4>\n                    <form name="schedule-interpreter-contacts" action="' +
__e(App.config.context) +
'/upload/scheduleInterpreterContacts" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="scheduleInterpreterContactsFile">Import Contacts</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple contacts to be used to assign booking to.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Contact Import">?</a><a href="' +
__e(App.config.context) +
'/docs/schedule-interpreter-contact-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="scheduleInterpreterContactsFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Schedule Interpreter Rate Plans</h4>\n                    <form name="schedule-interpreter-rateplans" action="' +
__e(App.config.context) +
'/upload/scheduleInterpreterRateplans" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="scheduleInterpreterRatePlansFile">Import Rate Plans</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload rateplan data." data-original-title="Rate Plans">?</a> <a href="' +
__e(App.config.context) +
'/docs/schedule-interpreter-rateplan-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="scheduleInterpreterRatePlansFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <hr />\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Schedule Interpreter Contact Rate Plans</h4>\n                    <form name="schedule-interpreter-contact-rateplans" action="' +
__e(App.config.context) +
'/upload/scheduleInterpreterContactRateplans" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="scheduleInterpreterContactRatePlansFile">Import Contact Rate Plans</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload contact rateplan data." data-original-title="Rate Plans">?</a> <a href="' +
__e(App.config.context) +
'/docs/schedule-interpreter-contact-rateplan-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="scheduleInterpreterContactRatePlansFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <hr />\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Fluency Contact </h4>\n                    <form name="fluency-contacts" action="' +
__e(App.config.context) +
'/upload/fluencyContacts" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="fluencyContactsFile">Import Contacts</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple contacts to be used to assign booking to.<p>Use the download link to download the template you can use to populate with your information." data-original-title="Contact Import">?</a><a href="' +
__e(App.config.context) +
'/docs/fluency-contact-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="fluencyContactsFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <div class="span6">\n                    <h4>Fluency Customer </h4>\n                    <form name="fluency-customers" action="' +
__e(App.config.context) +
'/upload/fluencyCustomers" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="fluencyCustomersFile">Import Customers</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload multiple customer data." data-original-title="Customers">?</a> <a href="' +
__e(App.config.context) +
'/docs/fluency-customer-import.xls" title="Download template"> <i class="icon icon-download"></i>Download</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="fluencyCustomersFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n\n            <hr />\n\n            <!-- placeholder used for custom imports -->\n            <div class="row-fluid">\n                <div class="span6">\n                    <h4>Custom</h4>\n                    <form name="custom" action="' +
__e(App.config.context) +
'/upload/custom" method="post" enctype="multipart/form-data">\n                        <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                        <input type="hidden" class="isIE" name="isIE" value="false">\n\n                        <div class="control-group">\n                            <label class="control-label" for="customFile">Import Custom</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload custom data." data-original-title="Custom">?</a>\n\n                            <div class="controls">\n                                <input type="file" name="theFile" class="fileInput" id="customFile" />\n                                <p class="help-block">Required. Please select a file of type .xls.</p>\n                            </div>\n\n                            <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                        </div>\n                    </form>\n                </div>\n\n                <!-- placeholder used for ReporterBase imports -->\n                    <div class="span6">\n                        <h4>ReporterBase</h4>\n                        <form name="reporterBase" action="' +
__e(App.config.context) +
'/upload/reporterBase" method="post" enctype="multipart/form-data">\n                            <input type="hidden" name="company.id" value="' +
__e(obj.id) +
'">\n                            <input type="hidden" class="isIE" name="isIE" value="false">\n\n                            <div class="control-group">\n                                <label class="control-label" for="reporterBaseFile">Import ReporterBase</label> <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Use this field to upload ReporterBase data." data-original-title="ReporterBase Xml">?</a><a href="' +
__e(App.config.context) +
'/docs/reporterBase-import.XML" title="Download template" TARGET="_blank"> <i class="icon icon-download"></i>Download</a>\n\n                                <div class="controls">\n                                    <input type="file" name="theFile" class="fileInput" id="reporterBaseFile" />\n                                    <p class="help-block">Required. Please select a file of type .xml.</p>\n                                </div>\n\n                                <button class="btn btn-primary" type="submit" id="upload" value="Upload" data-loading-text="Uploading ...">Upload</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n        </div> <!-- / tab-content -->\n    </div> <!-- / content area -->\n</div> <!-- / main display area -->\n';

}
return __p
};

this["JST"]["importexport/importexport/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div id="successContainer">\n</div>\n<div id="errorContainer">\n</div>\n<!-- TODO swap IDs with classes -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#import" data-toggle="tab">Import</a></li>\n    <li><a href="#export" data-toggle="tab">Export</a></li>\n</ul> <!-- .nav-tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n    <div class="tab-pane active region-import" id="import">\n        <h1>Import</h1>\n    </div> <!-- .import -->\n    <div class="tab-pane region-export" id="export">\n        <h1>Export</h1>\n    </div> <!-- .export -->\n</div> <!-- .tabs -->\n';

}
return __p
};

this["JST"]["interaction/generaledit/contactsubview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="view-jobs icon icon-calendar">\n    <a href="#" title="' +
__e( obj ? obj.name : '' ) +
' Schedule">View Schedule</a>\n</div>\n<div>\n    <strong>Phone: </strong>' +
__e( obj.primaryNumber.parsedNumber ? obj.primaryNumber.parsedNumber : "" ) +
'\n</div>\n<div>\n    <strong>Email: </strong>' +
__e( obj.primaryEmail.emailAddress ? obj.primaryEmail.emailAddress : "" ) +
'\n</div>\n';

}
return __p
};

this["JST"]["interaction/generaledit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<form class="form-vertical">\n    <fieldset>\n        <section id="details">\n            <h4 class="well">Booking Details</h4>\n            <div id="interactionDetails" class="row-fluid">\n\n                <div class="row-fluid">\n\n                    <div class="control-group span2">\n                        <label class="control-label" for="job">Job Reference </label>\n                        <div class="controls">\n                            <input class="api-v2 api-delegate input-block-level" type="text" id="job" name="job" value="';
 if ( obj.job ) { ;
__p +=
__e( obj.job.id );
 } ;
__p += '" />\n                        </div>\n                    </div>\n\n                    <div class="control-group span2">\n                        <label class="control-label" for="bookingDate">Job Date </label>\n                        <div class="controls">\n                            <input data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" disabled class="input-block-level format-date" type="text" id="bookingDate" name="bookingDate" value="';
 if ( obj.bookingDate ) { ;
__p += ' ' +
__e( obj.bookingDate ) +
' ';
 } ;
__p += '" />\n                        </div>\n                    </div>\n\n                    <div class="control-group span4">\n                        <label class="control-label" for="customer">Customer </label>\n                        <div class="controls">\n                            <input class="api-v2 api-delegate input-block-level" type="text" id="customer" name="customer" value="';
 if ( obj.customer ) { ;
__p +=
__e( obj.customer.name );
 } ;
__p += '" />\n                        </div>\n                    </div>\n\n                    <div class="control-group span4">\n                        <label class="control-label" for="location">Location </label>\n                        <div class="controls">\n                            <input class="api-v2 api-delegate input-block-level" type="text" id="location" name="location" value="';
 if ( obj.location ) { ;
__p +=
__e( obj.location.displayLabel );
 } ;
__p += '" />\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class="row-fluid">\n\n                    <div class="control-group span4">\n                        <label class="control-label required" for="interpreter">Interpreter </label>\n                        <div class="controls">\n                            <input class="api-v2 api-delegate input-block-level" type="text" id="interpreter" name="interpreter" value="';
 if ( obj.interpreter ) { ;
__p +=
__e( obj.interpreter.displayName );
 } ;
__p += '" />\n                            <p class="help-block">Required field.</p>\n                        </div>\n                        <div class="contact-details">\n                            <!-- JST template interaction/contactsubview/show.jst -->\n                        </div>\n                    </div>\n\n                    <div class="control-group span4">\n                        <label class="control-label" for="consumer">Consumer </label>\n                        <div class="controls">\n                            <input class="api-v2 api-delegate input-block-level" type="text" id="consumer" name="consumer" value="';
 if ( obj.consumer ) { ;
__p +=
__e( obj.consumer.name );
 } ;
__p += '" />\n                        </div>\n                    </div>\n\n                    <div class="control-group span4">\n                        <label class="control-label" for="language">Language </label>\n                        <div class="controls">\n                            <input class="api-v2 api-delegate input-block-level" type="text" id="language" name="language" value="';
 if ( obj.language ) { ;
__p +=
__e( obj.language.displayName );
 } ;
__p += '" />\n                        </div>\n                    </div>\n\n                </div>\n\n                <h4 class="well">Interaction Details</h4>\n\n                <div class="row-fluid">\n\n                    <div class="control-group span4">\n                        <label class="control-label required" for="category">Category </label>\n                        <div class="controls">\n                            <select name="category" id="category" class="api-v2 input-block-level">\n                                ' +
((__t = ( selectOptions(App.dict.interactionCategory, {selected: (obj.category ? obj.category.id : ''), noSelection: {id: '', name: '[Choose a Category]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group span4">\n                        <label class="control-label required" for="subCategory">Subcategory </label>\n                        <div class="controls">\n                            <select name="subCategory" id="subCategory" class="api-v2 input-block-level">\n                                ' +
((__t = ( selectOptions(App.dict.interactionSubCategory, {selected: (obj.subCategory ? obj.subCategory.id : ''), noSelection: {id: '', name: '[Choose a Sub Category]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group span4 cancellationReason">\n                        <label class="control-label required" for="cancellationReason">Cancellation Reason</label>\n                        <div class="controls">\n                            <select name="cancellationReason" id="cancellationReason" class="api-v2 input-block-level">\n                                ' +
((__t = ( selectOptions(App.dict.cancellationReasons, {noSelection: {id: '', name: '[Choose a Cancellation Reason]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group span4 deactivationReason">\n                        <label class="control-label required" for="deactivationReason">Deactivation Reason</label>\n                        <div class="controls">\n                            <select name="deactivationReason" id="deactivationReason" class="api-v2 input-block-level">\n                                ' +
((__t = ( selectOptions(App.dict.deactivationReasons, {noSelection: {id: '', name: '[Choose a Deactivation Reason]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class="row-fluid">\n\n                    <div class="control-group span2">\n                        <label class="control-label required" for="status">Status </label>\n                        <div class="controls">\n                            <select name="status" id="status" class="api-v2 input-block-level">\n                                ' +
((__t = ( selectOptions(App.dict.interactionStatus, {noSelection: {id: '', name: '[Choose a Status]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group span3">\n                        <label class="control-label" for="outcome">Outcome</label>\n                        <div class="controls">\n                            <select name="outcome" id="outcome" class="api-v2 input-block-level">\n                                ' +
((__t = ( selectOptions(App.dict.interactionOutcome, {noSelection: {id: '', name: '[Choose an Outcome]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </div>\n\n                    <div class="control-group span3">\n                        <label class="control-label" for="disciplinaryDate">Disciplinary Date </label>\n                        <div class="controls">\n                            <input data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="input-block-level format-date" type="text" id="disciplinaryDate" name="disciplinaryDate" value="';
 if ( obj.disciplinaryDate ) { ;
__p += ' ' +
__e( obj.disciplinaryDate ) +
' ';
 } ;
__p += '" />\n                        </div>\n                    </div>\n\n                    <div class="control-group span4 actionGroup">\n                        <label class="control-label required" for="actionGroup">Action Group</label>\n                        <div class="controls">\n                            <select name="actionGroup" id="actionGroup" class="api-v2 input-block-level">\n                                ' +
((__t = ( selectOptions(App.dict.actionGroups, {noSelection: {id: '', name: '[Choose a Action Group]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                            <p class="help-block">Required field.</p>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class="row-fluid">\n\n                    <div class="control-group span5">\n                        <label class="control-label" for="description">Description </label>\n                        <div class="controls">\n                            <textarea style="width:100%;" id="description" class="wysiwyg" disabled name="description">' +
__e( obj.description ) +
'</textarea>\n                        </div>\n                    </div>\n\n                    <div class="control-group span5">\n                        <label class="control-label" for="resolution">Resolution </label>\n                        <div class="controls">\n                            <textarea style="width:100%;" id="resolution" class="wysiwyg" disabled name="resolution">' +
__e( obj.resolution ) +
'</textarea>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div class="row-fluid">\n\n                </div>\n\n            </div>\n        </section>\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["interaction/manage/list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="btn-group">\n    <button class="btn btn-primary dropdown-toggle" data-toggle="dropdown" type="button" value="more">\n        Export <span class="caret"></span>\n    </button>\n    <ul class="dropdown-menu">\n        <li><a class="exportXLS" href="javascript:void(0);"><i class="icon-ms-excel"></i>Excel</a>\n        </li>\n        <li><a class="exportCSV" href="javascript:void(0);"><i class="icon-file-alt"></i>Csv</a>\n        </li>\n        <li><a class="exportInteractionsCmd" href="#export_interactions"><i class="icon-download"></i>Date Range</a>\n        </li>\n    </ul>\n    <div class="span6">\n        <label for="all_interactions">Export all interactions (with current filters applied)</label>\n        <input id="all_interactions" type="checkbox"/>\n    </div>\n</div>\n<br />\n<div class="row-fluid">\n    <div class="span12">\n        <div class="portlet">\n            <div class="portlet-header">\n            </div>\n            <div class="portlet-body">\n                <table id="interaction-list">\n                    <tr>\n                        <td></td>\n                    </tr>\n                </table>\n                <div id="interaction-list-pager"></div>\n            </div>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["interpreter/agent/availability"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Availability</h4>\n<div class="btn-group" data-toggle="buttons-radio">\n    <button ' +
__e( available ? 'disabled' : '' ) +
' class="btn cmd-make-available btn-success" style="width: 50%"><i class="icon-ok-sign"></i> Make Available</button>\n    <button ' +
__e( available ? '' : 'disabled' ) +
' class="btn cmd-make-unavailable btn-danger" style="width: 50%"><i class="icon-remove-sign"></i> Go Offline</button>\n</div>\n<br/>\n\n<h4>Language / Mode</h4>\n<div class="availability-container">\n\n</div>';

}
return __p
};

this["JST"]["interpreter/agent/availabilityitem"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span7">\n        <span style="padding-top: 5px; display: inline-block;">' +
__e( obj.language.description ) +
' (' +
__e( obj.language.iso639_3Tag ) +
')</span>\n        <br/>\n        <br/>\n    </div>\n    <div class="span5">\n        ';
 _.each(obj.modes, function(mode) { ;
__p += '\n            <button class="btn cmd-widget-toggle ' +
__e( selectedModes.indexOf(mode) !== -1 ? 'active' : '' ) +
'" data-toggle="button" data-mode="' +
__e( mode ) +
'">\n                <i class="' +
__e( (mode === 'video') ? 'icon-facetime-video' : (mode === 'voice') ? 'icon-phone' : 'icon-user' ) +
'"></i>\n            </button>\n        ';
 }); ;
__p += '\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["interpreter/agent/availabilitystatus"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="font-sm">\n    <div class="row-fluid mt-sm height-sm">\n        <div class="span4 text-left-sm text-right">Status:</div>\n        <div class="span8">\n            <span class="label ' +
__e( available ? 'label-success' : 'label-danger' ) +
'">' +
((__t = ( available ? 'Available' : 'Offline' )) == null ? '' : __t) +
'</span>\n        </div>\n    </div>\n\n    <div class="row-fluid height-sm">\n        <div class="span4 text-left-sm text-right">Current Activity:</div>\n        <div class="span8">\n            <span class="label label-inverse">' +
__e( currentActivity ) +
'</span>\n        </div>\n    </div>\n\n    <div class="row-fluid height-sm">\n        <div class="span4 text-left-sm text-right">Language / mode availability:</div>\n        <div class="span8">\n            <div class="availability-status-container">\n\n            </div>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["interpreter/agent/availabilitystatusitem"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span style="width: 15px; display: inline-block;">\n    <i class="' +
__e( obj.active ? 'icon-check' : 'icon-remove' ) +
'"></i>\n</span>\n<span style="width: 65%; display: inline-block;">\n    ' +
__e( obj.language ) +
'\n</span>\n<span style="width: 20%; display: inline-block;">\n    <i class="' +
__e( (obj.mode === 'video') ? 'icon-facetime-video' : (obj.mode === 'voice') ? 'icon-phone' : 'icon-user' ) +
'"></i>\n</span>';

}
return __p
};

this["JST"]["interpreter/agent/contacturi"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Confirm Phone Settings</h3>\n</div>\n<div class="modal-body">\n\n    <div class="control-group">\n        <div class="controls">\n            <label class="control-label">\n                <input type="radio" name="uriConfig" value="browser" ' +
__e( obj.uriConfig === "browser" ? "checked" : "" ) +
' /> Accept Calls in Browser <!-- ' +
__e( obj.contactUri ) +
' -->\n            </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Use the browser to accept all incoming calls." data-original-title="Browser">?</a>\n        </div>\n    </div>\n\n    <div class="control-group">\n        <div class="controls">\n            <label class="control-label">\n                <input type="radio" name="uriConfig" value="forwarding" ' +
__e( obj.uriConfig === "forwarding" ? "checked" : "" ) +
'/> Forward Calls: <input type="text" name="contactUri" value="' +
__e( obj.phoneNumber ) +
'"/>\n            </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Enter the phone number to forward calls to." data-original-title="Forwarding">?</a>\n        </div>\n    </div>\n\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary cmd-widget-confirm">Confirm</a>\n    <a href="javascript:void(0);" class="btn" data-dismiss="modal">Cancel</a>\n</div>\n';

}
return __p
};

this["JST"]["interpreter/agent/mainlayout"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!--<ul class="nav nav-tabs">\n    <li class="active"><a href="#sessions-pane" data-toggle="tab">Sessions</a></li>\n    <li><a href="#jobs-pane" data-toggle="tab">Jobs</a></li>\n</ul> <!-- /.nav-tabs -->\n<hr/>\n<div class="tab-content">\n    <div class="tab-pane active" id="sessions-pane">\n\n        <div class="row-fluid">\n            <div class="span3">\n                <div class="availability">\n\n                </div>\n\n                <div class="reservations">\n\n                </div>\n            </div>\n            <div class="span9">\n                <div class="calendar">\n\n                </div>\n            </div>\n        </div>\n\n    </div>\n\n    <div class="tab-pane" id="jobs-pane">\n        Jobs\n    </div>\n</div>';

}
return __p
};

this["JST"]["interpreter/agent/noreservations"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div style="text-align: center; font-style: italic;">\n    No Requests in Current Session\n</div>\n';

}
return __p
};

this["JST"]["interpreter/agent/reservation"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.job) { ;
__p += '\n' +
__e( obj.job.customer.name ) +
' <span class="format-datetime">' +
__e( obj.job.createDate ) +
'</span> ' +
__e( obj.job.createdBy ) +
' <a href="javascript:void(0);" class="cmd-widget-join">Join</a>\n';
 } else { ;
__p += '\n<strong>' +
__e( obj.dateCreated.toString(App.config.company.config.dateTimeFormat) ) +
'</strong>: On Demand (' +
__e( obj.reservationStatus ) +
')\n';
 } ;


}
return __p
};

this["JST"]["interpreter/agent/reservations"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Requests</h4>\n<div class="reservations-container">\n\n</div>\n';

}
return __p
};

this["JST"]["interpreter/agent/unavailable"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h5>No Languages / Modes Selected</h5>';

}
return __p
};

this["JST"]["interpreter/bookings/bookingsTable"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            <strong>' +
__e( obj.title ) +
'</strong>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n        </div>\n    </div>\n    ';
 if(obj.showFiltersApplied === true) { ;
__p += '\n    <div id="queryFiltersAppliedView">\n        <div class="row-fluid">\n            <div class="span12">\n                <strong>Query Applied:</strong>\n                <span id="queryFiltersApplied-bookingsTable"></span>\n            </div>\n        </div>\n    </div>\n    ';
 } ;
__p += '\n</div>\n<div class="grid">\n\n</div>\n<div class="row">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["interpreter/dashboard/diarytable/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    Today\'s Job Diary (<span class="currentDate"></span>)\n    <div class="filter pull-right">\n\n    </div>\n</div>\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["interpreter/dashboard/invalidEmploymentEligibility/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-error">\n    <h4 class="alert-heading">Invalid eligibilities</h4>\n    <span class="badge badge-important">' +
__e( models.length ) +
'</span> <a href="' +
__e( App.config.context ) +
'/user/profile"><strong>Eligibilites that expired</strong></a>\n</div>\n';

}
return __p
};

this["JST"]["interpreter/dashboard/openjobs/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-error">\n    <h4 class="alert-heading">Open Jobs</h4>\n    <span class="badge badge-important">' +
__e( total ) +
'</span> <a href="' +
__e( App.config.context ) +
'/interpreter/open"><strong>Jobs Past Due</strong></a>\n    <div>Note: This jobs total refreshes after 5 minutes</div>\n</div>\n';

}
return __p
};

this["JST"]["interpreter/dashboard/requireActionTable/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    Past Jobs - To be Closed\n    <div class="filter pull-right">\n\n    </div>\n</div>\n<div class="grid">\n\n</div>\n<div class="row">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["interpreter/dashboard/requiresDocumentTable/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    Missing document - To be Upload\n    <div class="filter pull-right">\n\n    </div>\n</div>\n<div class="grid">\n\n</div>\n<div class="row">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["interpreter/dashboard/unconfirmedjobs/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-error">\n    <h4 class="alert-heading">Unconfirmed Jobs</h4>\n    <span class="badge badge-important">' +
__e( total ) +
'</span> <a href="' +
__e( App.config.context ) +
'/interpreter/bookings"><strong>Jobs Pending Confirmation</strong></a>\n</div>\n';

}
return __p
};

this["JST"]["ivr/calls/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            Calls\n            <br/>\n            <label class="control-label"><input type="checkbox" id="selectAll" class="selectAll" name="selectAll"/> All calls (with current filters applied)</label>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n            &nbsp;\n            <div class="bulk-actions pull-right">\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["job/assignments/assignmentdetails"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span6">\n        <div class="row-fluid">\n            <div class="span12">\n                <p>Team Size: ' +
__e( obj.numInterpreters ? obj.numInterpreters : "N/A" ) +
'</p>\n                ';
 if (obj.numInterpreters > 1) { ;
__p += '\n                    <p>Team Id: ' +
__e( obj.id ) +
'</p>\n                ';
 } ;
__p += '\n                <p>Default Language: ' +
__e( obj.defaultLanguage ? obj.defaultLanguage.displayName : "N/A" ) +
'</p>\n                <p class="secured secured-comp secured-cust">Preferred Interpreter: ' +
__e( obj.preferredInterpreter ? obj.preferredInterpreter.displayName : "N/A" ) +
'</p>\n                <p>Expected Duration: ' +
__e( obj.expectedDurationMins ? millisecondsToStr(obj.expectedDurationMins * 60 * 1000) : "" ) +
'</p>\n            </div>\n        </div>\n        <div class="row-fluid">\n            <div class="span12">\n                <div class="interpreter-shifts-container">\n\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="span6">\n        <div class="row-fluid">\n            <div class="span12">\n                <div class="model-visitInterpreterNotes control-group secured secured-comp">\n                    <label>\n                        <span class="control-label">Notes about Interpreter(s)&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the interpreter to be assigned to this job. These notes are for internal use only." data-original-title="Interpreter Notes" tabindex="-1">?</a></span>\n                        ';
 if (!isView) { ;
__p += '\n                        <div class="controls">\n                            <textarea rows="4" name="interpreterNotes" id="assignmentsInterpreterNotes" class="input-block-level wysiwyg">' +
__e( obj.interpreterNotes ) +
'</textarea>\n                        </div>\n                        ';
 } else { ;
__p += '\n                        <div class="controls well well-scroll">\n                            ' +
((__t = ( obj.interpreterNotes )) == null ? '' : __t) +
'\n                        </div>\n                        ';
 } ;
__p += '\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div class="row-fluid">\n            <div class="span12">\n                <div class="model-visitNotes control-group secured secured-comp">\n                    <label>\n                        <span class="control-label">Job Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="These notes are for internal use only." data-original-title="Job Notes" tabindex="-1">?</a></span>\n                        ';
 if (!isView) { ;
__p += '\n                        <div class="controls">\n                            <textarea rows="4" name="visitNotes" id="assignmentsVisitNotes" class="input-block-level wysiwyg">' +
__e( obj.visitNotes ) +
'</textarea>\n                        </div>\n                        ';
 } else { ;
__p += '\n                        <div class="controls well well-scroll">\n                            ' +
((__t = ( obj.visitNotes )) == null ? '' : __t) +
'\n                        </div>\n                        ';
 } ;
__p += '\n                    </label>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["job/assignments/assignments"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid tab-content-title-row">\n    <div class="span12">\n        <h4 class="tab-content-title">Assignments</h4>\n    </div>\n</div>\n<div id="assignment-details"></div>\n<div id="interpreter-jobs"></div>';

}
return __p
};

this["JST"]["job/assignments/interpreterjob"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.id) { ;
__p += '\n<!-- interpreter job exists -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#interpreter-job-' +
__e(obj.id) +
'" data-toggle="tab">Job #' +
__e( obj.id ) +
' (' +
__e( (obj.interpreter.id) ? obj.interpreter.displayName : "Unassigned" ) +
')</a></li>\n    <li class="secured secured-comp"><a href="#interpreter-job-sla-' +
__e(obj.id) +
'" data-toggle="tab">Service Level Agreements</a></li>\n</ul> <!-- .nav-tabs -->\n<div class="tab-content">\n    <div class="tab-pane active" id="interpreter-job-' +
__e(obj.id) +
'">\n        <div class="row-fluid">\n            <div class="span9">\n                <div class="row-fluid">\n                    <div class="span6">\n                        ';
 if (hasRole("comp")) { ;
__p += '\n                            <a href="javascript:void(0);" class="widget-assign">' +
__e( (obj.interpreter.id) ? obj.interpreter.displayName : "Unassigned" ) +
'</a>&nbsp;&nbsp;\n                            ';
 if (obj.interpreter.id) { ;
__p += '\n                                <a href="javascript:void(0);">\n                                    <span class="view-jobs icon icon-calendar"></span>\n                                </a>\n                            ';
 } ;
__p += '\n                        ';
 } else { ;
__p += '\n                            ' +
__e( (obj.interpreter.id) ? obj.interpreter.displayName : "Unassigned" ) +
'\n                        ';
 } ;
__p += '\n                    </div>\n                    <div class="span6">\n                        ';
 if (hasRole("comp")) { ;
__p += '\n                            <a href="javascript:void(0);" class="widget-assign">' +
__e( (obj.language.id) ? obj.language.displayName : "None" ) +
'</a>\n                        ';
 } else { ;
__p += '\n                            ' +
__e( (obj.language.id) ? obj.language.displayName : "None" ) +
'\n                        ';
 } ;
__p += '\n                    </div>\n                </div>\n                ';
  if (obj.interpreter.id) { ;
__p += '\n                    ';
 if (obj.interpreter.primaryNumberLabel && hasRole("comp")) { ;
__p += '\n                        <div class="row-fluid">\n                            <div class="span12">Interpreter Phone: ' +
__e( obj.interpreter.primaryNumberLabel ) +
'</div>\n                        </div>\n                    ';
 } ;
__p += '\n                ';
 } ;
__p += '\n                <div class="row-fluid mb-1">\n                    <div class="span6">\n                        Date Interpreter Assigned: ';
 if (obj.assignmentDate) { ;
__p += '<span class="format-datetime">' +
__e( obj.assignmentDate ) +
'</span>';
 } else { ;
__p += 'N/A';
 } ;
__p += '\n                    </div>\n                    <div class="span6">\n                        Date Interpreter Confirmed: ';
 if (obj.confirmationDate) { ;
__p += '<span class="format-datetime">' +
__e( obj.confirmationDate ) +
'</span>';
 } else { ;
__p += 'N/A';
 } ;
__p += '\n                    </div>\n                </div>\n                <div class="row-fluid mb-1">\n                ';
 if (obj.actualStartDate) { ;
__p += '\n                    <div class="span3">\n                        Actual Start Date:<br/>';
 if (obj.actualStartDate) { ;
__p += '<span class="format-datetime">' +
__e( obj.actualStartDate ) +
'</span>';
 } else { ;
__p += 'N/A';
 } ;
__p += '\n                    </div>\n                    <div class="span3">\n                        Actual End Date:<br/>';
 if (obj.actualEndDate) { ;
__p += '<span class="format-datetime">' +
__e( obj.actualEndDate ) +
'</span>';
 } else { ;
__p += 'N/A';
 } ;
__p += '\n                    </div>\n                    <div class="span3">\n                        Actual Duration:<br/>';
 if (obj.actualEndDate) { ;
__p += '<span>' +
__e( obj.actualDurationHrs + " hours" ) +
'</span>';
 } else { ;
__p += 'N/A';
 } ;
__p += '\n                    </div>\n                ';
 } ;
__p += '\n                ';
 if (obj.consumerCountEnabled) { ;
__p += '\n                    <div class="span3">\n                        Number of Consumers:<br/>' +
__e( obj.consumerCount? obj.consumerCount : 0 ) +
'\n                    </div>\n                ';
 } ;
__p += '\n                </div>\n                <div class="row-fluid secured secured-admin">\n                    <div class="span3 control-group">\n                        <label>\n                            <span class="control-label"><span class="required">Job Status</span></span>\n                            <div class="controls">\n                                ';
 if (!isView) { ;
__p += '\n                                <select name="status" class="input-block-level api-v2">\n                                    ' +
((__t = ( selectOptions(App.dict.bookingStatus, {selected: (obj.status ? obj.status.id : ''), noSelection: {id: '', name: '[Status]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                                ';
 } else { ;
__p += '\n                                ' +
__e( obj.status ? obj.status.name : "N/A" ) +
'\n                                ';
 } ;
__p += '\n                            </div>\n                        </label>\n                    </div>\n                    <div class="control-group span3">\n                        <label>\n                            <span class="control-label"><span class="required">Invoice Status</span></span>\n                            <div class="controls">\n                                ';
 if (!isView) { ;
__p += '\n                                <select name="invoiceStatus" class="input-block-level api-v2">\n                                    ' +
((__t = ( selectOptions(App.dict.invoiceStatus, {selected: (obj.invoiceStatus ? obj.invoiceStatus.id : ''), noSelection: {id: '', name: '[Invoice Status]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                                ';
 } else { ;
__p += '\n                                ' +
__e( obj.invoiceStatus ? obj.invoiceStatus.name : "N/A" ) +
'\n                                ';
 } ;
__p += '\n                            </div>\n                        </label>\n                    </div>\n                    <div class="control-group span3">\n                        <label>\n                            <span class="control-label"><span class="required">Payment Status</span></span>\n                            <div class="controls">\n                                ';
 if (!isView) { ;
__p += '\n                                <select name="paymentStatus" class="input-block-level api-v2">\n                                    ' +
((__t = ( selectOptions(App.dict.paymentStatus, {selected: (obj.paymentStatus ? obj.paymentStatus.id : ''), noSelection: {id: '', name: '[Payment Status]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                                ';
 } else { ;
__p += '\n                                ' +
__e( obj.paymentStatus ? obj.paymentStatus.name : "N/A" ) +
'\n                                ';
 } ;
__p += '\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                ';
 if (obj.shiftEnabled) { ;
__p += '\n                <div class="row-fluid">\n                    <div class="model-startDate control-group span6">\n                        <label>\n                            <span class="control-label">\n                                <span class="required">Shift Start Date</span>&nbsp;\n                                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Expected start date for the shift." data-original-title="Shift Start Date" tabindex="-1">?</a>\n                            </span>\n                            <div class="controls">\n                                ';
 if (hasRole("comp")) { ;
__p += '\n                                    <input type="text" id="shiftStartDateEdit-' +
__e( obj.id ) +
'" name="expectedStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.expectedStartDate ) +
'" autocomplete="off"/>\n                                ';
 } else { ;
__p += '\n                                    <span class="format-date shiftStartDate-' +
__e( obj.id ) +
'" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.expectedStartDate ) +
'</span>\n                                ';
 } ;
__p += '\n                            </div>\n                        </label>\n                    </div>\n                    <div class="model-startTime control-group span6">\n                        <label>\n                            <span class="control-label">\n                                <span class="required">Shift Start Time</span>&nbsp;\n                                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Expected start time for the shift." data-original-title="Shift Start Time" tabindex="-1">?</a>\n                            </span>\n                            <div class="controls">\n                                ';
 if (hasRole("comp")) { ;
__p += '\n                                    <input type="text" id="shiftStartTimeEdit-' +
__e( obj.id ) +
'" name="expectedStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time" value="' +
__e( obj.expectedStartDate ) +
'" autocomplete="off"/>\n                                ';
 } else { ;
__p += '\n                                    <span class="format-time shiftStartTime-' +
__e( obj.id ) +
'" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.expectedStartDate ) +
'</span>\n                                ';
 } ;
__p += '\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div class="model-startDate control-group span6">\n                        <label>\n                            <span class="control-label">\n                                <span class="required">Shift End Date</span>&nbsp;\n                                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Expected end date for the shift." data-original-title="Shift End Date" tabindex="-1">?</a>\n                            </span>\n                            <div class="controls">\n                                ';
 if (hasRole("comp")) { ;
__p += '\n                                    <input type="text" id="shiftEndDateEdit-' +
__e( obj.id ) +
'" name="expectedEndDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.expectedEndDate ) +
'" autocomplete="off"/>\n                                ';
 } else { ;
__p += '\n                                    <span class="format-date shiftEndDate-' +
__e( obj.id ) +
'" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.expectedEndDate ) +
'</span>\n                                ';
 } ;
__p += '\n                            </div>\n                        </label>\n                    </div>\n                    <div class="model-startTime control-group span6">\n                        <label>\n                            <span class="control-label">\n                                <span class="required">Shift End Time</span>&nbsp;\n                                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Expected end time for the shift." data-original-title="Shift End Time" tabindex="-1">?</a>\n                            </span>\n                            <div class="controls">\n                                ';
 if (hasRole("comp")) { ;
__p += '\n                                    <input type="text" id="shiftEndTimeEdit-' +
__e( obj.id ) +
'" name="expectedEndDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time" value="' +
__e( obj.expectedEndDate ) +
'" autocomplete="off"/>\n                                ';
 } else { ;
__p += '\n                                    <span class="format-time shiftEndTime-' +
__e( obj.id ) +
'" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e( obj.expectedEndDate ) +
'</span>\n                                ';
 } ;
__p += '\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n                <div class="row-fluid">\n                    <div class="span6">\n                        ';
 if (!isView) { ;
__p += '\n                        <div class="control-group secured secured-comp">\n                            <label>\n                                <span class="control-label">\n                                    Override Requirements&nbsp;\n                                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Set requirements for this job. By enabling this checkbox, you can set individual requirements for this job, the requirements from the booking will not be used." data-original-title="Override Requirements" tabindex="-1">?</a>\n                                </span>\n                                <div class="controls">\n                                    <input class="overrideRequirements" type="checkbox" name="overrideRequirements" ' +
__e( obj.overrideRequirements ? "checked" : "" ) +
'/>\n                                </div>\n                            </label>\n                        </div>\n                        ';
 } ;
__p += '\n                    </div>\n                    ';
 if (obj.overrideRequirements === true) { ;
__p += '\n                    <div class="span6 requirements-wrapper">\n                        <div class="control-group">\n                            <div class="requirements-container"></div>\n                        </div>\n                    </div>\n                    ';
 } ;
__p += '\n                </div>\n            </div>\n            <div class="span2 secured secured-comp">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Internal Job Notes <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Internal notes related to this specific interpreter job." data-original-title="Notes" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        ';
 if (!isView) { ;
__p += '\n                        <textarea rows="4" name="notes" class="input-block-level">' +
__e( obj.notes ) +
'</textarea>\n                        ';
 } else { ;
__p += '\n                        ' +
__e( obj.notes ) +
'\n                        ';
 } ;
__p += '\n                    </div>\n                </label>\n            </div>\n            ';
 if ((user && user.interpreter && user.interpreter.id === obj.interpreter.id) || hasRole("comp")) { ;
__p += '\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Final Job Notes <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Final job notes related to this specific interpreter job." data-original-title="Final Notes" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        ';
 if (!isView) { ;
__p += '\n                        <textarea rows="4" name="finalNotes" class="input-block-level">' +
__e( obj.finalNotes ) +
'</textarea>\n                        ';
 } else { ;
__p += '\n                        ' +
__e( obj.finalNotes ) +
'\n                        ';
 } ;
__p += '\n                    </div>\n                </label>\n            </div>\n            ';
 } ;
__p += '\n        </div>\n            ';
 if ((user && user.interpreter && user.interpreter.id === obj.interpreter.id) || hasRole("comp")) { ;
__p += '\n                <div class="span1">\n                    <div class="interpreter-job-actions"></div>\n                </div>\n            ';
 } ;
__p += '\n        </div>\n    </div> <!-- .interpreter-job-' +
__e(obj.id) +
' -->\n    <div class="tab-pane" id="interpreter-job-sla-' +
__e(obj.id) +
'">\n\n        <h5>Customer Service Level Agreement</h5>\n        <div class="row-fluid">\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Booking Date <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the job was received. This can only be modified from the Job Details section." data-original-title="Booking Date" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <span class="format-datetime">' +
__e( obj.bookingDate ) +
'</span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Confirmed w/ Requestor <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the interpreter assignment has been reconfirmed with the requestor" data-original-title="Confirmed Requestor Date" tabindex="-1">?</a>\n                        </span>\n                        <div class="controls">\n                            <input type="text" name="timeReconfirmedCustomer" class="input-mini format-date" value="' +
__e(obj.timeReconfirmedCustomer) +
'" autocomplete="off"/>\n                            <input type="text" name="timeReconfirmedCustomer" class="input-mini format-time" value="' +
__e(obj.timeReconfirmedCustomer) +
'" autocomplete="off"/>\n                            <span data-start="' +
__e( obj.bookingDate ) +
'" data-end="' +
__e( obj.timeReconfirmedCustomer ) +
'" class="format-duration"></span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="span4 secured secured-comp">\n                <div class="interpreter-job-actions">\n\n                </div>\n            </div>\n        </div>\n\n        <h5>Internal Service Level Agreement</h5>\n        <div class="row-fluid">\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Created Date <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the job was created. This can only be modified from the Job Details section." data-original-title="Created Date" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <span class="format-datetime">' +
__e( obj.createdDate ) +
'</span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Open Date <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the job was opened" data-original-title="Open Date" tabindex="-1">?</a>\n                        </span>\n                        <div class="controls">\n                            <input type="text" name="openDate" class="input-mini format-date" value="' +
__e(obj.openDate) +
'" autocomplete="off"/>\n                            <input type="text" name="openDate" class="input-mini format-time" value="' +
__e(obj.openDate) +
'" autocomplete="off"/>\n                            <span data-start="' +
__e( obj.createdDate ) +
'" data-end="' +
__e( obj.openDate ) +
'" class="format-duration"></span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Offer Date <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the job was offered" data-original-title="Offer Date" tabindex="-1">?</a>\n                        </span>\n                        <div class="controls">\n                            <input type="text" name="offerDate" class="input-mini format-date" value="' +
__e(obj.offerDate) +
'" autocomplete="off"/>\n                            <input type="text" name="offerDate" class="input-mini format-time" value="' +
__e(obj.offerDate) +
'" autocomplete="off"/>\n                            <span data-start="' +
__e( obj.openDate ) +
'" data-end="' +
__e( obj.offerDate ) +
'" class="format-duration"></span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div>\n\n        <h5>Interpreter Service Level Agreement</h5>\n        <div class="row-fluid">\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Interpreter Assigned <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the interpreter is assigned to the job" data-original-title="Interpreter Assignment Date" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="text" name="assignmentDate" class="input-mini format-date" value="' +
__e(obj.assignmentDate) +
'" autocomplete="off"/>\n                            <input type="text" name="assignmentDate" class="input-mini format-time" value="' +
__e(obj.assignmentDate) +
'" autocomplete="off"/>\n                            <span data-start="' +
__e( obj.bookingDate ) +
'" data-end="' +
__e( obj.assignmentDate ) +
'" class="format-duration"></span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Interpreter Confirmed <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the interpreter confirmed" data-original-title="Interpreter Confirmed Date" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="text" name="confirmationDate" class="input-mini format-date" value="' +
__e(obj.confirmationDate) +
'" autocomplete="off"/>\n                            <input type="text" name="confirmationDate" class="input-mini format-time" value="' +
__e(obj.confirmationDate) +
'" autocomplete="off"/>\n                            <span data-start="' +
__e( obj.bookingDate ) +
'" data-end="' +
__e( obj.confirmationDate ) +
'" class="format-duration"></span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div>\n        <h5>Travel Times</h5>\n        <h5>Outbound Times</h5>\n        <div class="row-fluid">\n            <div class="span4">\n\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Departed <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the interpreter departed for the job" data-original-title="Interpreter Departed Date" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="text" name="timeInterpreterDepartedOutbound" class="input-mini format-date" value="' +
__e(obj.timeInterpreterDepartedOutbound) +
'" autocomplete="off"/>\n                            <input type="text" name="timeInterpreterDepartedOutbound" class="input-mini format-time" value="' +
__e(obj.timeInterpreterDepartedOutbound) +
'" autocomplete="off"/>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Arrived <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the interpreter arrived at the job" data-original-title="Interpreter Arrived Date" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="text" name="timeInterpreterArrivedOutbound" class="input-mini format-date" value="' +
__e(obj.timeInterpreterArrivedOutbound) +
'" autocomplete="off"/>\n                            <input type="text" name="timeInterpreterArrivedOutbound" class="input-mini format-time" value="' +
__e(obj.timeInterpreterArrivedOutbound) +
'" autocomplete="off"/>\n                            <span data-start="' +
__e( obj.timeInterpreterDepartedOutbound ) +
'" data-end="' +
__e( obj.timeInterpreterArrivedOutbound ) +
'" class="format-duration"></span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div>\n        <h5>Inbound Times</h5>\n        <div class="row-fluid">\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Departed <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the interpreter departed from the job to return home" data-original-title="Interpreter Departed Date (Inbound)" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="text" name="timeInterpreterDepartedInbound" class="input-mini format-date" value="' +
__e(obj.timeInterpreterDepartedInbound) +
'" autocomplete="off"/>\n                            <input type="text" name="timeInterpreterDepartedInbound" class="input-mini format-time" value="' +
__e(obj.timeInterpreterDepartedInbound) +
'" autocomplete="off"/>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Arrived <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date and time the interpreter arrived home from job" data-original-title="Interpreter Arrived Date (Inbound)" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="text" name="timeInterpreterArrivedInbound" class="input-mini format-date" value="' +
__e(obj.timeInterpreterArrivedInbound) +
'" autocomplete="off"/>\n                            <input type="text" name="timeInterpreterArrivedInbound" class="input-mini format-time" value="' +
__e(obj.timeInterpreterArrivedInbound) +
'" autocomplete="off"/>\n                            <span data-start="' +
__e( obj.timeInterpreterDepartedInbound ) +
'" data-end="' +
__e( obj.timeInterpreterArrivedInbound ) +
'" class="format-duration"></span>\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div>\n    </div> <!-- .interpreter-job-sla-' +
__e(obj.id) +
' -->\n</div> <!-- .tab-content -->\n\n';
 } else { ;
__p += '\n<!-- new interpreter job -->\n<form class="well model-interpreter-visit-new">\n    <fieldset>\n        <legend>\n            Additional Interpreter\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Add an additional interpreter to this job and specify if the interpreter is billable or payable. You may chose a different language for additional interpreters if required." data-original-title="Additional Interpreter" tabindex="-1">?</a>\n        </legend>\n        <div class="row-fluid">\n            <div class="span5 language-container">\n            </div>\n            <div class="secured secured-comp">\n                <div class="span5 control-group">\n                    <label>\n                        <span class="control-label">Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Add any internal notes for this interpreter / job combination e.g. \'Non-billable observer slot reserved for Natalia\'" data-original-title="Notes" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <textarea rows="4" name="notes" class="input-block-level"></textarea>\n                        </div>\n                    </label>\n                </div>\n                <div class="span1 control-group">\n                    <label>\n                        <span class="control-label"><span>Billable</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Should the customer be invoiced for this job." data-original-title="Billable" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="checkbox" name="billable" checked />\n                        </div>\n                    </label>\n                </div>\n                <div class="span1 control-group">\n                    <label>\n                        <span class="control-label"><span>Payable</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Should this interpreter be paid for this job." data-original-title="Payable" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="checkbox" name="payable" checked />\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div>\n        <div class="row-fluid">\n            <div class="span6">\n                <div class="control-group secured secured-comp">\n                    <label>\n                    <span class="control-label">Override Requirements&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Set requirements for this job. By checking this checkbox, you can set individual requirements for this job, the requirements from the booking will not be used." data-original-title="Override Requirements" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input id="overrideRequirements" type="checkbox" name="overrideRequirements" ' +
__e( obj.overrideRequirements ? "checked" : "" ) +
'/>\n                    </div>\n                    </label>\n                 </div>\n            </div>\n            ';
 if (obj.overrideRequirements === true) { ;
__p += '\n            <div class="span6 requirements-wrapper">\n                <div class="control-group">\n                    <div class="requirements-container"></div>\n                </div>\n            </div>\n            ';
 } ;
__p += '\n        </div>\n        ';
 if (obj.shiftEnabled) { ;
__p += '\n        <div class="row-fluid">\n            <div class="model-startDate control-group span6">\n                <label>\n                    <span class="control-label"><span class="required">Shift Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Expected start date for the shift." data-original-title="Shift Start Date" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" id="shiftStartDate-' +
__e( obj.id ) +
'" name="expectedStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.expectedStartDate ) +
'" autocomplete="off"/>\n                    </div>\n                 </label>\n            </div>\n            <div class="model-startTime control-group span6">\n                <label>\n                    <span class="control-label"><span class="required">Shift Start Time</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Expected start time for the shift." data-original-title="Shift Start Time" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" id="shiftStartTime-' +
__e( obj.id ) +
'" name="expectedStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time" value="' +
__e( obj.expectedStartDate ) +
'" autocomplete="off"/>\n                    </div>\n                 </label>\n            </div>\n        </div>\n        <div class="row-fluid">\n            <div class="model-startDate control-group span6">\n                <label>\n                    <span class="control-label"><span class="required">Shift End Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Expected end date for the shift." data-original-title="Shift End Date" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" id="shiftEndDate-' +
__e( obj.id ) +
'" name="expectedEndDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.expectedEndDate ) +
'" autocomplete="off"/>\n                    </div>\n                 </label>\n            </div>\n            <div class="model-startTime control-group span6">\n                <label>\n                    <span class="control-label"><span class="required">Shift End Time</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Expected end time for the shift." data-original-title="Shift End Time" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <input type="text" id="shiftEndTime-' +
__e( obj.id ) +
'" name="expectedEndDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time" value="' +
__e( obj.expectedEndDate ) +
'" autocomplete="off"/>\n                    </div>\n                 </label>\n            </div>\n        </div>\n        ';
 } ;
__p += '\n        <a href="javascript:void(0);" class="widget-remove btn pull-right">Delete</a> <a href="javascript:void(0);" class="widget-save-new btn btn-success pull-right">Save</a>\n    </fieldset>\n</form>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["job/assignments/interpreterjobs"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid content-title-row">\n    <div class="span12">\n        <h5 class="content-title">Interpreters</h5>\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span12">\n\n        <div class="interpreter-job-list"></div>\n\n        ';
 if (!isView && hasRole("comp")) { ;
__p += '\n        <div class="widget-new-interpreter"><i class="icon icon-plus-sign"></i> <a href="javascript:void(0);" title="Add Interpreter">Add Interpreter</a></div>\n        ';
 } ;
__p += '\n\n    </div>\n</div>';

}
return __p
};

this["JST"]["job/assignments/interpretershift"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.status && obj.status.nameKey === "cancelled") { ;
__p += '\n    ' +
__e( obj.status.name ) +
'\n';
 } else { ;
__p += '\n    ' +
__e( (obj.interpreter && obj.interpreter.name) || (obj.status && obj.status.name) || "Unassigned" ) +
'\n';
 } ;
__p += '\n';
 if (obj.shiftEnabled === true) { ;
__p += '\n    (<span class="format-time" data-timezone="' +
__e( obj.timeZone ) +
'">' +
__e( obj.expectedStartDate ) +
'</span> ' +
__e( obj.timeZoneDisplayName ) +
' -\n    <span class="format-time" data-timezone="' +
__e( obj.timeZone ) +
'">' +
__e( obj.expectedEndDate ) +
'</span> ' +
__e( obj.timeZoneDisplayName ) +
')\n';
 } ;


}
return __p
};

this["JST"]["job/assignments/interpretershifts"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<p>Interpreters:</p>\n<ul class="interpreter-shifts-list">\n\n</ul>';

}
return __p
};

this["JST"]["job/consumer/more-consumers"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Booking #' +
__e( obj.superBooking.id ) +
': Additional Consumers</h3>\n</div>\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span3">\n            <div class="primary-consumer">\n                <h4>Primary Consumer:</h4>\n            </div>\n        </div>\n        <div class="span9">\n            <p>\n                ';
 if (obj.consumer) { ;
__p += '\n                    ' +
__e( obj.consumer.name ) +
' (Primary)\n                    <a href="javascript:void(0);" class="widget-edit-primary-consumer"><i class="icon-pencil"></i></a>\n                ';
 } else { ;
__p += '\n                    No Primary Consumer Selected\n                ';
 } ;
__p += '\n            </p>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span3">\n            <h4>Add more consumers:</h4>\n        </div>\n        <div class="span9">\n            <div class="more-consumers-dropdown"></div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span8 offset3">\n            <div class="more-consumers-list-container"></div>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn widget-close" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["job/details/jobdetails"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4  id="section-customer" class="section-header">\n    Booking #' +
__e( obj.superBooking ? obj.superBooking.id : "[]" );
 if (jobContextId || obj.jobContextId) { ;
__p += ' / Job # ' +
__e( jobContextId || obj.jobContextId );
 } ;
__p += '<span class="secured secured-comp secured-admin"> - Customer Information</span><span class="secured secured-cust"> - Requestor Information</span>\n    <span class="pull-right">\n        Status: <span class=\'status-' +
__e( getStatusAttributeById(App.dict.bookingStatus, obj.status ? obj.status.id : null, "nameKey", "mixed") ) +
'\'>' +
((__t = ( getAbbreviationByStatus(getStatusAttributeById(App.dict.bookingStatus, obj.status ? obj.status.id : null, "nameKey")) )) == null ? '' : __t) +
'</span>\n        <!--<i class="icon-chevron-left"></i>-->\n        ';
 if (obj.superBooking && obj.superBooking.id) { ;
__p += '<a class=\'gridiFramePopup\' href=\'' +
__e( App.config.context + "/calendar/bookingCal/" + obj.superBooking.id ) +
'\' title=\'Recurring Jobs (Job #' +
__e( obj.id ) +
')\'><i class=\'icon-calendar\'></i> ';
 } ;
__p += '<span class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e(obj.expectedStartDate) +
'</span></a>\n        <!--<i class="icon-chevron-right"></i>-->\n    </span>\n</h4>\n\n';
 if (companyConfig.requirePINJobCreate) { ;
__p += '\n<div class="row-fluid secured secured-comp secured-cust">\n    <div class="span6">\n        <div class="pin-container">\n\n        </div>\n        <hr/>\n    </div>\n</div>\n';
 } ;
__p += '\n\n<div class="job-details-panel ' +
__e( ((companyConfig.requirePINJobCreate && obj.pinCode) || !companyConfig.requirePINJobCreate) ? "" : "hidden" ) +
'">\n\n    <div class="row-fluid">\n        <div class="span6">\n            <div class="client-container">\n\n            </div>\n            <div class="requestor-container">\n\n            </div>\n            <div class="notificationEmail control-group">\n                <label>\n                    <span class="control-label">Notification Email&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Email address to send booking notifications to." data-original-title="Notification Email" tabindex="-1">?</a>\n                    </span>\n                    <div class="controls">\n                        <input type="text" class="input-block-level" name="notificationEmail" value="' +
__e(obj.notificationEmail) +
'" />\n                    </div>\n                </label>\n            </div>\n            <div class="row-fluid">\n                <div class="span4">\n                    <div class="notify control-group">\n                        <label>\n                    <span class="control-label">Notification Email Enabled&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enable email notifications to this email address." data-original-title="Enable notifications." tabindex="-1">?</a>\n                    </span>\n                            <div class="controls">\n                                <input type="checkbox" name="notify" ' +
__e( obj.notify ? "checked" : "" ) +
'/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="span4">\n                    <div class="control-group secured secured-comp">\n                        <label>\n                    <span class="control-label">Exclude from Auto Offer&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Exclude Job from Auto Offering." data-original-title="Exclude Job." tabindex="-1">?</a>\n                    </span>\n                            <div class="controls">\n                                <input type="checkbox" name="excludeFromAutoOffer" ' +
__e( obj.excludeFromAutoOffer ? "checked" : "" ) +
'/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="span4">\n                    <div class="control-group secured secured-comp">\n                        <label>\n                    <span class="control-label">Exclude from Job Offer Pool&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Exclude Job from Job Offer Pooling." data-original-title="Exclude Job Offer Pool." tabindex="-1">?</a>\n                    </span>\n                            <div class="controls">\n                                <input type="checkbox" name="excludeFromJobOfferPool" ' +
__e( obj.excludeFromJobOfferPool ? "checked" : "" ) +
'/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="span6">\n            <div class="customer-container">\n\n            </div>\n            <div class="billing-customer-container">\n\n            </div>\n            <div class="customerNotes secured secured-comp">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Customer Notes</span>\n                        <div class="controls well">\n                            ' +
((__t = ( obj.customerNotes )) == null ? '' : __t) +
'\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <!-- <div class="billing-location-container secured secured-comp">\n            </div> -->\n        </div>\n    </div>\n\n\n    <h4 id="section-location" class="section-header">Service Location</h4>\n    <div class="row-fluid">\n        <div class="span6">\n            <div class="location-container">\n\n            </div>\n            <div class="sublocation-container">\n\n            </div>\n            <div class="control-group hidden placeOfAppointment-container"> <!-- only show if value present -->\n                <label>\n                    <span class="control-label">Place of Appointment&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any additional information to further clarify the place of booking e.g Court, Office, Suite Number or Hospital Ward." data-original-title="Place of Appointment" tabindex="-1">?</a>\n                    </span>\n                    <div class="controls">\n                        <input id="placeOfAppointment" name="placeOfAppointment" class="input-block-level" type="text" value="' +
__e( obj.placeOfAppointment ) +
'"/>\n                    </div>\n                </label>\n            </div>\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Site Contact&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the name and any other information you have for the on site contact person to ask for upon arrival." data-original-title="Site Contact" tabindex="-1">?</a>\n                    </span>\n                    <div class="controls">\n                        <input id="siteContact" type="text" name="siteContact" class="input-block-level" value="' +
__e(obj.siteContact) +
'"/>\n                    </div>\n                </label>\n            </div>\n            <div class="locationNote-container">\n\n            </div>\n        </div>\n        <div class="span6">\n            <div class="special-instructions-container">\n                <!-- common/widget/special-instructions -->\n            </div>\n        </div>\n    </div>\n\n\n    <h4 id="section-appointment" class="section-header">Appointment Details</h4>\n\n    <div class="row-fluid">\n        <div class="span6">\n            <div class="language-container">\n\n            </div>\n            <div class="control-group bookingMode-container">\n                <label>\n                    <span class="control-label"><span class="required">Service Type</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Type of interpretation service." data-original-title="Interpretation Type" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <select name="bookingMode" class="input-block-level api-v2">\n                            ' +
((__t = ( obj.customer && obj.customer.id ? selectOptionsAsync("[name=bookingMode]", new $.core.CompanyServiceCollection(), {selected: (obj.bookingMode ? obj.bookingMode.id : App.dict.bookingMode.inperson.id), noSelection: {id: '', name: '[Select Service Type]'}, propertyName: 'service', filters: (enableAllServices ? [{field: "companyOwner.id", op: "eq", data: App.config.company.id }, {field: "enabled", op: "eq", data: true }] : [{field: "customer.id", op: "eq", data: obj.customer.id }, {field: "enabled", op: "eq", data: true }])}) : "" )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                </label>\n            </div>\n            <div class="control-group numberInterpretersRequested-container">\n                <label>\n                    <span class="control-label"># Interpreters Requested&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Number of interpreters requested." data-original-title="# Interpreters" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        ';
 if (isNewJob) { ;
__p += '\n                            ';
 if (isDuplicatedJob || isFollowUpJob) { ;
__p += '\n                                ' +
__e( obj.numInterpreters ) +
'\n                            ';
 } else { ;
__p += '\n                                <input type="text" class="input-block-level" name="numberInterpretersRequested" value="' +
__e( obj.numberInterpretersRequested ) +
'" />\n                            ';
 } ;
__p += '\n                        ';
 } else { ;
__p += '\n                            ' +
__e( obj.numInterpreters ) +
'\n                        ';
 } ;
__p += '\n                    </div>\n                </label>\n            </div>\n            <div class="secured secured-comp secured-cust">\n                <div class="preferred-interpreter-container">\n\n                </div>\n            </div>\n\n            <div class="consumer-container mb-1">\n\n            </div>\n            <div class="control-group genderRequirement-container">\n                <label>\n            <span class="control-label">Interpreter Gender Required&nbsp;<a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"  data-content="Specify whether there is a specific gender requirement for the interpreter. Leave blank if no preference." data-original-title="Interpreter Gender Required" tabindex="-1">?</a>\n            </span>\n                    <span class="ivr-container-genderRequirement"></span>\n                    <div class="controls">\n                        <select class="input-block-level api-v2" name="genderRequirement">\n                            ' +
((__t = ( selectOptions(App.dict.gender, {selected: (obj.genderRequirement ? obj.genderRequirement.id : ''), noSelection: {id: '', name: '[Select Gender]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                </label>\n            </div>\n\n        </div>\n\n        <div class="span6">\n\n            <div class="additional-refs">\n            </div>\n\n            <div class="additional-requirements">\n            </div>\n\n            <div class="model-bookingDetails control-group">\n                <label>\n                    <span class="control-label">Appointment Details&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Any notes or details describing this booking." data-original-title="Booking Details" tabindex="-1">?</a>\n                    </span>\n                    <span class="ivr-container-miscellaneous"></span>\n                    <div class="controls">\n                        <textarea rows="4" name="bookingDetails" id="bookingDetails" class="input-block-level wysiwyg">' +
__e( obj.bookingDetails ) +
'</textarea>\n                    </div>\n                </label>\n            </div>\n        </div>\n\n    </div>\n\n    <h4 id="section-calendar" class="section-header">Calendar ';
 if (obj.superBooking && obj.superBooking.id) { ;
__p += '<a class=\'gridiFramePopup\' href=\'' +
__e( App.config.context + "/calendar/bookingCal/" + obj.superBooking.id ) +
'\' title=\'Recurring Jobs (Job #' +
__e( obj.superBooking.id ) +
')\' tabindex="-1"><i class=\'icon-calendar\'></i></a>';
 } ;
__p += '</h4>\n\n    <div class="row-fluid">\n        <div class="span6">\n            <div class="row-fluid">\n                <div class="model-startDate control-group span6">\n                    <label>\n                        <span class="control-label"><span class="required">Expected Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Expected start date for the job." data-original-title="Expected Start Date" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="text" id="startDate" name="expectedStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.expectedStartDate ) +
'" autocomplete="off"/>\n                        </div>\n                    </label>\n                </div>\n                <div class="model-startTime control-group span6">\n                    <label>\n                        <span class="control-label"><span class="required">Expected Start Time</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Expected start time for the job." data-original-title="Expected Start Time ' +
__e( App.config.company.config.isTimeFormat24Hour ? '(24 hour clock)' : '(12 hour clock)' ) +
'" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="text" id="startTime" name="expectedStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time" value="' +
__e( obj.expectedStartDate ) +
'" autocomplete="off"/>\n                        </div>\n                    </label>\n                </div>\n                <div class="span6">\n                    <div class="control-group secured secured-comp">\n                        <label>\n                            <span class="control-label">Use Interpreter Shifts&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Allow interpreters to have different time shifts than the length of the complete booking." data-original-title="Interpreter Shifts." tabindex="-1">?</a></span>\n                            <div class="controls">\n                                                <input type="checkbox" name="shiftEnabled" ' +
__e( obj.shiftEnabled ? "checked" : "" ) +
'/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label>\n                        <span class="control-label"><span class="required">Duration Hours</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Estimated duration for the job (hours)." data-original-title="Duration Hours" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <select id="hours" data-hours="#hours" data-mintues="#minutes" data-time="hours" data-start="expectedStartDate" data-end="expectedEndDate" name="expectedDurationHrs" class="input-block-level format-duration time-duration" disabled>\n                                ' +
((__t = ( selectOptions(App.dict.hoursAnd16Days, {selected: (obj.hours ? obj.hours : ''), noSelection: {id: '', name: '[Hours]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </label>\n                </div>\n                <div class="control-group span6">\n                    <label>\n                        <span class="control-label"><span class="required">Minutes</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Estimated duration for the job (mins)." data-original-title="Minutes" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <select id="minutes" data-hours="#hours" data-mintues="#minutes" data-time="minutes" data-start="expectedStartDate" data-end="expectedEndDate" name="expectedDurationMins" class="input-block-level format-duration time-duration" disabled>\n                            ' +
((__t = ( selectOptions(App.dict.minutes, {selected: (obj.minutes ? obj.minutes : ''), noSelection: {id: '', name: '[Minutes]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="row-fluid timeZone-container">\n                <div class="model-timeZone control-group span12">\n                    <label>\n                        <span class="control-label"><span class="required">Time Zone</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Local timezone where the job is to take place." data-original-title="Time Zone" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <select name="timeZone" class="input-block-level">\n                                <!--' +
((__t = ( selectOptions(App.dict.timeZones, {selected:App.config.userData.timeZone, display:'gmtOffset'}) )) == null ? '' : __t) +
'-->\n                                ' +
((__t = ( selectOptions(App.dict.timeZones, {selected:(obj.timeZone ? obj.timeZone : App.config.userData.timeZone), display:'gmtOffset'}) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="row-fluid secured secured-comp">\n                <div class="model-bookingDate control-group span6">\n                    <label>\n                        <span class="control-label"><span class="required">Booking Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Date the job was received from the customer. Used in the calculation of short notice rates and rush fees." data-original-title="Booking Date" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="text" name="bookingDate" class="input-block-level format-date" value="' +
__e( obj.bookingDate ) +
'" autocomplete="off"/>\n                        </div>\n                    </label>\n                </div>\n                <div class="model-bookingTime control-group span6">\n                    <label>\n                        <span class="control-label"><span class="required">Booking Time</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Time the job was received from the customer. Used in the calculation of short notice rates and rush fees." data-original-title="Booking Time ' +
__e( App.config.company.config.isTimeFormat24Hour ? '(24 hour clock)' : '(12 hour clock)' ) +
'" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="text" name="bookingDate" class="input-block-level format-time" value="' +
__e( obj.bookingDate ) +
'" autocomplete="off"/>\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div>\n        ';
 if (obj.status.id == App.dict.bookingStatus.cancelled.id) { ;
__p += '\n            <div class="span6 secured secured-comp">\n                <div class="row-fluid">\n                    <div class="model-cancelledDate control-group span6">\n                        <label>\n                            <span class="control-label"><span class="required">Cancelled Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Cancelled date for the job." data-original-title="Cancelled Date" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="cancellationDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.cancellationDate ) +
'" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                    <div class="model-cancelledTime control-group span6">\n                        <label>\n                            <span class="control-label"><span class="required">Cancelled Time</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Cancelled time for the job." data-original-title="Cancelled Time ' +
__e( App.config.company.config.isTimeFormat24Hour ? '(24 hour clock)' : '(12 hour clock)' ) +
'" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="cancellationDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time" value="' +
__e( obj.cancellationDate ) +
'" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div class="model-cancellationReason control-group span12">\n                        <label>\n                            <span class="control-label"><span class="required">Cancellation Reason</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Cancellation reason for the job." data-original-title="Cancellation Reason" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <select class="input-block-level api-v2" name="cancellationReason">\n                                    ' +
((__t = ( selectOptions(App.dict.cancellationReasons, {selected: (obj.cancellationReason ? obj.cancellationReason.id : ''), noSelection: {id: '', name: '[Choose a Cancellation Reason]'}}) )) == null ? '' : __t) +
'\n                                </select>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div class="model-finalNotes control-group span4">\n                        <label>\n                            <span class="control-label">Final Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any details specific to the job cancellation that might be useful." data-original-title="Final Notes" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <textarea rows="4" name="finalNotes" class="input-block-level wysiwyg">' +
__e( obj.finalNotes ) +
'</textarea>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n            </div>\n        ';
 } else if (obj.status.id == App.dict.bookingStatus.declined.id) { ;
__p += '\n            <div class="span6 secured secured-comp">\n                <div class="row-fluid">\n                    <div class="model-unfulfilledDate control-group span6">\n                        <label>\n                            <span class="control-label"><span class="required">Unfulfilled Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Unfulfilled date for the job." data-original-title="Unfulfilled Date" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="unfulfilledDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e( obj.unfulfilledDate ) +
'" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                    <div class="model-unfulfilledTime control-group span6">\n                        <label>\n                            <span class="control-label"><span class="required">Unfulfilled Time</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Unfulfilled time for the job." data-original-title="Unfulfilled Time ' +
__e( App.config.company.config.isTimeFormat24Hour ? '(24 hour clock)' : '(12 hour clock)' ) +
'" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <input type="text" name="unfulfilledDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time" value="' +
__e( obj.unfulfilledDate ) +
'" autocomplete="off"/>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div class="model-unfulfilledReason control-group span12">\n                        <label>\n                            <span class="control-label"><span class="required">Unfulfilled Reason</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Unfulfilled reason for the job." data-original-title="Unfulfilled Reason" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <select class="input-block-level api-v2" name="unfulfilledReason">\n                                    ' +
((__t = ( selectOptions(App.dict.unfulfilledReasons, {selected:obj.unfulfilledReason.id}) )) == null ? '' : __t) +
'\n                                </select>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div class="model-finalNotes control-group span4">\n                        <label>\n                            <span class="control-label">Final Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any details specific to the job cancellation that might be useful." data-original-title="Final Notes" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <textarea rows="4" name="finalNotes" class="input-block-level wysiwyg">' +
__e( obj.finalNotes ) +
'</textarea>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n            </div>\n        ';
 } ;
__p += '\n    </div> <!-- calendar section -->\n\n\n    <h4 id="section-notes" class="section-header">Notes</h4>\n    <div class="row-fluid">\n        <div class="span4">\n            <div class="model-visitDetails control-group">\n                <label>\n                    <span class="control-label">Job Details&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any details specific to the job that might be useful to the interpreter." data-original-title="Job Details" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <textarea rows="4" name="notes" id="jobDetails" class="input-block-level wysiwyg">' +
__e( obj.notes ) +
'</textarea>\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="span4">\n            <div class="model-visitBillingNotes control-group secured secured-comp">\n                <label>\n                    <span class="control-label">Billing Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the billing and payment. This information is for internal use only." data-original-title="Billing Notes" tabindex="-1">?</a></span>\n                    <div class="controls">\n                        <textarea rows="4" name="billingNotes" id="billingNotes" class="input-block-level wysiwyg">' +
__e( obj.billingNotes ) +
'</textarea>\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="span4">\n            <div class="model-visitInterpreterNotes control-group secured secured-comp">\n                <label>\n                    <span class="control-label">Notes about Interpreter(s)&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the interpreter to be assigned to this job. These notes are for internal use only." data-original-title="Interpreter Notes" tabindex="-1">?</a></span>\n                    <span class="ivr-container-interpreterNotes"></span>\n                    <div class="controls">\n                        <textarea rows="4" name="interpreterNotes" id="interpreterNotes" class="input-block-level wysiwyg">' +
__e( obj.interpreterNotes ) +
'</textarea>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n\n\n    <div class="inline-expanded pull-right">\n        <div class="job-actions"></div>\n    </div>\n\n';

}
return __p
};

this["JST"]["job/details/jobdetailsshow"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4  id="section-customer" class="section-header">\n    Booking #' +
__e( obj.superBooking ? obj.superBooking.id : "[]" );
 if (jobContextId || obj.jobContextId) { ;
__p += ' / Job # ' +
__e( jobContextId || obj.jobContextId );
 } ;
__p += '<span class="secured secured-comp secured-admin"> - Customer Information</span><span class="secured secured-cust"> - Requestor Information</span>\n    <span class="pull-right">\n        Status: <span class=\'status-' +
__e( getStatusAttributeById(App.dict.bookingStatus, obj.status ? obj.status.id : null, "nameKey", "mixed") ) +
'\'>' +
((__t = ( getAbbreviationByStatus(getStatusAttributeById(App.dict.bookingStatus, obj.status ? obj.status.id : null, "nameKey")) )) == null ? '' : __t) +
'</span>\n        <!--<i class="icon-chevron-left"></i>-->\n        ';
 if (obj.superBooking) { ;
__p += '<a class=\'gridiFramePopup\' href=\'' +
__e( App.config.context + "/calendar/bookingCal/" + obj.superBooking.id ) +
'\' title=\'Recurring Jobs (Job #' +
__e( obj.id ) +
')\'><i class=\'icon-calendar\'></i> ';
 } ;
__p += '<span class="format-datetime" data-timezone="' +
__e(obj.timeZone) +
'">' +
__e(obj.expectedStartDate) +
'</span></a>\n        <!--<i class="icon-chevron-right"></i>-->\n    </span>\n</h4>\n\n';
 if (companyConfig.requirePINJobCreate) { ;
__p += '\n<div class="row-fluid secured secured-comp secured-cust">\n    <div class="span6">\n        <div class="pin control-group secured secured-comp secured-cust">\n            <label>\n                <span class="control-label"><span class="required">PIN</span></span>\n                <div class="controls">\n                    ' +
__e(obj.pinCode) +
'\n                </div>\n            </label>\n        </div>\n        <hr/>\n    </div>\n</div>\n';
 } ;
__p += '\n\n';
 if ((companyConfig.requirePINJobCreate && obj.pinCode) || !companyConfig.requirePINJobCreate) { ;
__p += '\n<div class="row-fluid">\n    <div class="span6">\n        <div class="client-container control-group secured secured-comp secured-cust">\n\n        </div>\n        <div class="requestor-container secured secured-comp secured-cust">\n\n        </div>\n        <div class="notificationEmail control-group secured secured-comp secured-cust">\n            <label>\n                <span class="control-label">Notification Email\n                </span>\n                <div class="controls">\n                    ' +
__e( obj.notificationEmail ? obj.notificationEmail : "N/A" ) +
'\n                </div>\n            </label>\n        </div>\n        <div class="control-group">\n            <label>\n                <span class="control-label">Notification Email Enabled\n                </span>\n                <div class="controls">\n                    ' +
((__t = ( (obj.notify ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
'\n                </div>\n            </label>\n        </div>\n        <div class="control-group secured secured-comp">\n            <label>\n                <span class="control-label">Exclude from Auto Offer\n                </span>\n                <div class="controls">\n                    ' +
((__t = ( (obj.excludeFromAutoOffer ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
'\n                </div>\n            </label>\n        </div>\n        <div class="control-group secured secured-comp">\n            <label>\n                <span class="control-label">Exclude from Job Offer Pool\n                </span>\n                <div class="controls">\n                    ' +
((__t = ( (obj.excludeFromJobOfferPool ? "&#x2713;" : "&#x2718;") )) == null ? '' : __t) +
'\n                </div>\n            </label>\n        </div>\n    </div>\n    <div class="span6">\n        <div class="customer-container control-group secured secured-comp secured-cust">\n\n        </div>\n        <div class="billing-customer-container control-group secured secured-comp secured-cust">\n\n        </div>\n        <div class="customerNotes secured secured-comp">\n            <div class="control-group">\n                <label>\n                    <span class="control-label">Customer notes</span>\n                    <div class="controls well">\n                        ' +
((__t = ( obj.customerNotes )) == null ? '' : __t) +
'\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="billing-location-container secured secured-comp secured-cust">\n\n        </div>\n    </div>\n</div>\n\n\n<h4 id="section-location" class="section-header">Service Location</h4>\n<div class="row-fluid">\n    <div class="span6">\n        <div class="location-container">\n\n        </div>\n        <div class="sublocation-container">\n\n        </div>\n        <div class="control-group hidden placeOfAppointment-container"> <!-- only show if value present -->\n            <label>\n                <span class="control-label">Place of Appointment\n                </span>\n                <div class="controls">\n                    ' +
__e( obj.placeOfAppointment ) +
'\n                </div>\n            </label>\n        </div>\n        <div class="control-group">\n            <label>\n                <span class="control-label">Site Contact\n                </span>\n                <div class="controls">\n                    ' +
__e(obj.siteContact) +
'\n                </div>\n            </label>\n        </div>\n        <div class="control-group">\n            <label>\n                <span class="control-label">Venue Information</span>\n                <div class="controls well">\n                    ' +
((__t = ( obj.locationNote )) == null ? '' : __t) +
'\n                </div>\n            </label>\n        </div>\n    </div>\n    <div class="span6">\n        <div class="special-instructions-container">\n            <!-- common/widget/specialinstructions -->\n        </div>\n    </div>\n</div>\n\n\n<h4 id="section-appointment" class="section-header">Appointment Details</h4>\n\n<div class="row-fluid">\n    <div class="span6">\n        <div class="language-container control-group">\n        </div>\n        <div class="control-group">\n            <label>\n                <span class="control-label"><span class="required">Interpretation Type</span></span>\n                <div class="controls">\n                    ' +
__e( obj.bookingMode && obj.bookingMode.name ? obj.bookingMode.name : "N/A" ) +
'\n                </div>\n            </label>\n        </div>\n        <div class="control-group">\n            <label>\n                <span class="control-label"># Interpreters</span>\n                <div class="controls">\n                    ' +
__e( obj.numInterpreters ) +
'\n                </div>\n            </label>\n        </div>\n        <div class="preferred-interpreter-container secured secured-comp secured-cust">\n\n        </div>\n\n        <div class="consumer-container">\n\n        </div>\n        <div class="control-group">\n            <label>\n            <span class="control-label">Interpreter Gender Required\n            </span>\n                <div class="controls">\n                    ' +
__e( obj.genderRequirement && obj.genderRequirement.name ? obj.genderRequirement.name : "N/A" ) +
'\n                </div>\n            </label>\n        </div>\n    </div>\n    <div class="span6">\n\n        <div class="additional-refs">\n        </div>\n\n        <div class="additional-requirements">\n        </div>\n\n        <div class="model-visitDetails control-group">\n            <label>\n                    <span class="control-label">Appointment Details\n                    </span>\n                <div class="controls well well-scroll">\n                    ' +
((__t = ( obj.bookingDetails )) == null ? '' : __t) +
'\n                </div>\n            </label>\n        </div>\n    </div>\n\n</div>\n\n<h4 id="section-calendar" class="section-header">Calendar ';
 if (obj.superBooking) { ;
__p += '<a class=\'gridiFramePopup\' href=\'' +
__e( App.config.context + "/calendar/bookingCal/" + obj.superBooking.id ) +
'\' title=\'Recurring Jobs (Job #' +
__e( obj.id ) +
')\'><i class=\'icon-calendar\'></i></a>';
 } ;
__p += '</h4>\n\n<div class="row-fluid">\n    <div class="span6">\n        <div class="row-fluid">\n            <div class="model-startDate control-group span6">\n                <label>\n                    <span class="control-label"><span class="required">Expected Start Date</span>&nbsp;</span>\n                    <div class="controls">\n                        <span class="format-date" data-timezone="' +
__e( obj.timeZone ) +
'">' +
__e( obj.expectedStartDate ) +
'</span>\n                    </div>\n                </label>\n            </div>\n            <div class="model-startTime control-group span6">\n                <label>\n                    <span class="control-label"><span class="required">Expected Start Time</span></span>\n                    <div class="controls">\n                        <span class="format-time" data-timezone="' +
__e( obj.timeZone ) +
'">' +
__e( obj.expectedStartDate ) +
'</span>\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="row-fluid">\n            <div class="model-expectedDurationHrs control-group span8">\n                <label>\n                    <span class="control-label"><span class="required">Duration</span></span>\n                    <div class="controls">\n                        <!--<span class="format-duration" data-start="' +
__e( obj.expectedStartDate ) +
'" data-end="' +
__e( obj.expectedEndDate ) +
'"></span>-->\n                        ' +
__e( millisecondsToStr(obj.expectedDurationMins * 60 * 1000) ) +
'\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="row-fluid">\n            <div class="model-timeZone control-group span12">\n                <label>\n                    <span class="control-label"><span class="required">Time Zone</span></span>\n                    <div class="controls">\n                        ' +
__e( obj.timeZone ) +
'\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="row-fluid">\n            <div class="model-bookingDate control-group span6">\n                <label>\n                    <span class="control-label"><span class="required">Booking Date</span></span>\n                    <div class="controls">\n                        <input type="text" name="bookingDate" class="input-block-level format-date" value="' +
__e( obj.bookingDate ) +
'" disabled autocomplete="off"/>\n                    </div>\n                </label>\n            </div>\n            <div class="model-bookingTime control-group span6">\n                <label>\n                    <span class="control-label"><span class="required">Booking Time</span></span>\n                    <div class="controls">\n                        <input type="text" name="bookingDate" class="input-block-level format-time" value="' +
__e( obj.bookingDate ) +
'" disabled autocomplete="off"/>\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n<h4 id="section-notes" class="section-header">Notes</h4>\n<div class="row-fluid">\n    <div class="span4">\n        <div class="model-visitDetails control-group">\n            <label>\n                <span class="control-label">Job Details</span>\n                <div class="controls well well-scroll">\n                    ' +
((__t = ( obj.notes )) == null ? '' : __t) +
'\n                </div>\n            </label>\n        </div>\n    </div>\n    <div class="span4">\n        <div class="model-visitBillingNotes control-group secured secured-comp">\n            <label>\n                <span class="control-label">Billing Notes</span>\n                <div class="controls well well-scroll">\n                    ' +
((__t = ( obj.billingNotes )) == null ? '' : __t) +
'\n                </div>\n            </label>\n        </div>\n    </div>\n    <div class="span4">\n        <div class="model-visitInterpreterNotes control-group secured secured-comp">\n            <label>\n                <span class="control-label">Notes about Interpreter(s)</span>\n                <span class="ivr-container-interpreterNotes"></span>\n                <div class="controls well well-scroll">\n                    ' +
((__t = ( obj.interpreterNotes )) == null ? '' : __t) +
'\n                </div>\n            </label>\n        </div>\n    </div>\n</div>\n\n\n<div class="inline-expanded pull-right">\n    <div class="job-actions"></div>\n</div>\n\n';
 } ;
__p += '\n\n\n\n';

}
return __p
};

this["JST"]["job/details/locationnote"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (state == "edit") { ;
__p += '\n<div class="model-locationNote control-group">\n    <label>\n        <span class="control-label">Venue Information\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Any notes or details specific to the location for this job." data-original-title="Venue Information" tabindex="-1">?</a>\n            <span class="pull-right"><a href="javascript:void(0);" title="Save venue information." class="widget-save"><i class="icon icon-save"></i></a></span>\n        </span>\n        <div class="controls">\n            <textarea rows="4" name="locationNote" class="input-block-level wysiwyg">' +
__e( obj.locationNote ) +
'</textarea>\n        </div>\n    </label>\n</div>\n';
 } else { ;
__p += '\n<div class="control-group">\n    <label>\n        <span class="control-label">Venue Information\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Any notes or details specific to the location for this job. Click on the pencil to edit." data-original-title="Venue Information" tabindex="-1">?</a>\n            <span class="pull-right"><a href="javascript:void(0);" title="Edit venue information." class="widget-edit"><i class="icon icon-pencil"></i></a></span>\n        </span>\n\n        <div class="controls well">\n            ' +
((__t = ( obj.locationNote )) == null ? '' : __t) +
'\n        </div>\n    </label>\n</div>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["job/detailsregion"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="expand-controls pull-right" style="margin-top: 10px; padding: 3px; /*border: 1px solid black; */cursor: pointer;">\n    <div class="expand-left" style="display: none;" title="Resize to normal" rel="tooltip" >\n        <i class="icon icon-step-forward"></i>\n        <i class="icon icon-step-backward"></i>\n    </div>\n    <div class="expand-right" title="Expand to full screen" rel="tooltip" >\n        <i class="icon icon-step-backward"></i>\n        <i class="icon icon-step-forward"></i>\n    </div>\n</div>\n\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#job-details" data-toggle="tab">Job Details</a></li>\n    <li><a href="#job-assignments" data-toggle="tab">Assignments</a></li>\n    <li class="secured secured-comp"><a href="#job-finance" data-toggle="tab">Finance</a></li>\n    <li class="secured secured-csomp"><a href="#job-verification" data-toggle="tab">Verification</a></li>\n    <li class="secured secured-comp"><a href="#job-notifications" data-toggle="tab">Notifications</a></li>\n    <li class="secured secured-comp secured-cust secured-cont"><a href="#job-recurring" data-toggle="tab">Recurring</a></li>\n    <li class="secured secured-comp"><a href="#job-history" data-toggle="tab">Audit History</a></li>\n</ul> <!-- .nav-tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n    <div class="tab-pane active job-details" id="job-details">\n        <h4>Details</h4>\n    </div> <!-- .details -->\n    <div class="tab-pane job-assignments" id="job-assignments">\n        <h4>Interpreter Assignment</h4>\n    </div> <!-- .assignments -->\n    <div class="tab-pane job-finance" id="job-finance">\n        <h4>Finance</h4>\n    </div> <!-- .finance -->\n    <div class="tab-pane job-verification" id="job-verification">\n        <h4>Verification</h4>\n    </div> <!-- .verification -->\n    <div class="tab-pane job-notifications" id="job-notifications">\n        <h4>Notifications</h4>\n    </div> <!-- .notifications -->\n    <div class="tab-pane job-recurring" id="job-recurring">\n        <h4>Recurring</h4>\n    </div> <!-- .recurring -->\n    <div class="tab-pane job-history" id="job-history">\n        <h4>Audit history</h4>\n    </div> <!-- .history -->\n</div> <!-- .tabs -->\n';

}
return __p
};

this["JST"]["job/finance/details"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Finance</h4>\n<br />\n<div class="row-fluid">\n    <div class="control-group span6">\n        <div class="customer-rate-plan">\n\n        </div>\n    </div>\n    <div class="control-group span6">\n        <div class="contact-rate-plan">\n\n        </div>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <div class="control-group span6">\n        <div class="applied-customer-rate-plan">\n\n        </div>\n    </div>\n    <div class="control-group span6">\n        <div class="applied-contact-rate-plan">\n\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["job/mainregion"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="region-summary span3 well"></div>\n    <div class="region-details span7"></div>\n    <div class="region-support span2"></div>\n</div>\n';

}
return __p
};

this["JST"]["job/modals/updateshifttimes"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n    <h3>Update Start Time on Shifts</h3>\n</div>\n\n<div class="modal-body">\n    <div class="row-fluid mb-1">\n        <div class="span12">\n            <h4 class="mb-1">Relative update of Interpreter Shift times.</h4>\n            <p>If shifts are enabled on this booking, checking "Update Start Time on Shifts" will updated the shift times\n            relative to the change in start time</p>\n        </div>\n    </div>\n    <div class="row-fluid update-shifts-row">\n        <div class="span12">\n            <label class="checkbox d-block">\n              <input type="checkbox" name="relativeTimes" id="update-shifts-checkbox" ' +
__e( obj.relativeTimes ? "checked" : "" ) +
'/>\n              Update Start Time on Shifts\n            </label>\n        </div>\n    </div>\n</div>\n\n<div class="modal-footer">\n    <div class="row-fluid">\n        <div class="span12">\n             <button class="btn" type="button" id="cancel-update-shifts" data-dismiss="modal">Close</button>\n             <button class="btn btn-primary" type="button" id="ok-update-shifts" data-dismiss="modal">OK</button>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["job/notification/layout"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span4 region-job-select">\n    </div>\n    <div class="span8 region-notification-list">\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["job/notification/notificationselect"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="well">\n    <a class="interpreter-visit-select-item" href="#">Interpreter Job #' +
__e(obj.id) +
'</a>\n</div>\n';

}
return __p
};

this["JST"]["job/recurring/item"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<td>' +
__e( obj.id ) +
'</td>\n<td>\n    <span data-timezone="' +
__e(obj.timeZone) +
'" class="format-datetime">' +
__e(obj.expectedStartDate) +
'</span>\n</td>\n<td>\n    <span data-start="expectedStartDate" data-end="expectedEndDate" class="format-duration">' +
__e(obj.expectedDurationHrs) +
' Hr(s)</span>\n</td>\n<td>' +
((__t = ( (obj.status ? bookingStatusFormatter(obj.status.id) : bookingStatusFormatter(null)) )) == null ? '' : __t) +
'</td>\n<td class="form-inline">\n    <div class="interpreter">\n\n    </div>\n</td>\n<td>\n    <a href="javascript:void(0);" class="widget-copy-assignment" title="Copy to open slots" rel="tooltip" >\n        <i class="icon-download-alt"></i>\n    </a>\n</td>\n<td>' +
__e( (obj.teamSize > 1) ? obj.teamSize + " (#" + obj.visit.id + ")" : "N/A" ) +
'</td>\n<td class="secured secured-comp secured-admin secured-cust">\n    <div class="actions"></div>\n</td>\n';

}
return __p
};

this["JST"]["job/recurring/list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Assign Interpreter</h4>\n<table class="table">\n    <thead>\n    <tr>\n        <th>Job ID</th>\n        <th>Date</th>\n        <th>Duration</th>\n        <th>Status</th>\n        <th>Interpreter</th>\n        <th></th>\n        <th>Team Size</th>\n        <th class="secured secured-comp secured-admin secured-cust">Actions</th>\n    </tr>\n    </thead>\n\n    <!-- want to insert collection children, here -->\n    <tbody></tbody>\n\n    <tfoot>\n    <tr>\n        <td class="secured secured-comp" colspan="8"><button class="btn widget-save-assignments pull-right" type="button" value="Save Assignments">Save Assignments</button></td>\n    </tr>\n    </tfoot>\n</table>\n';

}
return __p
};

this["JST"]["job/ref/ref"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- Use obj.referenceValue instead of obj.ref -->\n<div class="' +
__e(!obj.id ? "form-horizontal" : "") +
'">\n<label>\n    ';
 if (obj.name) { ;
__p += '\n    <span class="control-label">\n        <span class="' +
__e( (config && config.required) ? "required" : "" ) +
'">' +
__e( obj.name ) +
'\n        ';
 if (config.helpText) { ;
__p += '<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="' +
__e( config.helpText ) +
'" data-original-title="' +
__e( config.label ) +
'" tabindex="-1">?</a>';
 } ;
__p += '\n        </span>\n    </span>\n    ';
 } else { ;
__p += '\n        <span class="control-label">\n            <input type="text" class="input-block-level widget-ref-value" style="margin-top: -5px;" name="name" value="' +
__e( obj.name ) +
'" placeholder="Label"/>\n        </span>\n    ';
 } ;
__p += '\n    ';
 if (obj.name) { ;
__p += '<span class="ivr-container-' +
__e( (obj.name.charAt(0).toLowerCase() + obj.name.slice(1)).replace(/ /g, '').replace(/\(/g, '').replace(/\)/g, '') ) +
'"></span>';
 } ;
__p += '\n    <div class="controls">\n        ';
 if(config && config.enableDropdown) { ;
__p += '\n            ';
 if (config && config.required) { ;
__p += '\n                <select id="ac_dropdown" name="ref" class="input-block-level widget-ref-value"></select>\n            ';
 } else { ;
__p += '\n                <div class="input-append input-block-level">\n                    <div class="append-wrapper"><a class="btn widget-delete add-on" href="javascript:void(0);"><i class="icon-trash"></i></a></div>\n                    <div class="input-wrapper" style="margin-right: 35px;">\n                        <select id="ac_dropdown" name="ref" class="input-block-level widget-ref-value"></select>\n                    </div>\n                </div>\n            ';
 } ;
__p += '\n        ';
 } else { ;
__p += '\n            ';
 if (config && config.required) { ;
__p += '\n                ';
 if(config.selectField) {   ;
__p += '\n                    <div class="input-append input-block-level">\n                        <div class="append-wrapper"><a class="btn widget-approve add-on" href="javascript:void(0);" tabindex="-1" disabled><i class="icon-chevron-down"></i></a><a title="New" class="btn widget-edit add-on" href="javascript:void(0);" tabindex="-1" disabled><i class="icon-edit"></i></a></div><div class="input-wrapper" style="margin-right: 65px;"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n                    </div>\n                ';
 } else { ;
__p += '\n                    <input type="text" class="input-block-level widget-ref-value" name="ref" value="' +
__e( obj.referenceValue || obj.ref ) +
'" />\n                ';
 } ;
__p += '\n            ';
 } else if(config && !config.required) { ;
__p += '\n                ';
 if(config.selectField) { ;
__p += '\n                    <div class="input-append input-block-level">\n                        <div class="append-wrapper"><a class="btn widget-delete add-on" href="javascript:void(0);" tabindex="-1"><i class="icon-trash"></i></a><a class="btn widget-approve add-on" href="javascript:void(0);" tabindex="-1" disabled><i class="icon-chevron-down"></i></a><a class="btn widget-edit add-on" tabindex="-1" disabled><i class="icon-edit"></i></a></div><div class="input-wrapper" style="margin-right: 91px;"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n                    </div>\n                ';
 } else { ;
__p += '\n                    <div class="input-append input-block-level">\n                        <div class="append-wrapper"><a class="btn widget-delete add-on" href="javascript:void(0);" tabindex="-1"><i class="icon-trash"></i></a></div><div class="input-wrapper" style="margin-right: 37px;"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n                    </div>\n                ';
 } ;
__p += '\n            ';
 } else { ;
__p += '\n                <!-- regular text -->\n                <div class="input-append input-block-level">\n                    <div class="append-wrapper"><a class="btn widget-delete add-on" href="javascript:void(0);" tabindex="-1"><i class="icon-trash"></i></a></div><div class="input-wrapper" style="margin-right: 37px;"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" placeholder="Value"/></div>\n                </div>\n            ';
 } ;
__p += '\n        ';
 } ;
__p += '\n    </div>\n\n</label>\n</div>\n';

}
return __p
};

this["JST"]["job/ref/refautocompleteedit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Edit Auto Complete</h4>\n<div class="row">\n    <div class="span9">\n        <div class="control-group">\n            <label>\n                <div class="controls">\n                    <input type="text" class="value" name="value" value="' +
__e( value ) +
'"/>\n                    <p class="help-block">Required field</p>\n                </div>\n            </label>\n        </div>\n    </div>\n</div>\n<div class="row">\n    <div class="span4">\n        <br>\n        <button class="btn btn-primary" type="submit" id="save" value="save">Save</button>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["job/ref/refconsumer"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<label>\n    <span class="control-label">\n        <span class="' +
__e( (config && config.required) ? "required" : "" ) +
'">' +
__e( obj.name ) +
'\n        ';
 if (config.helpText) { ;
__p += '<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="' +
__e( config.helpText ) +
'" data-original-title="' +
__e( config.label ) +
'" tabindex="-1">?</a>';
 } ;
__p += '\n        </span>\n    </span>\n    <div class="controls">\n        ';
 if (config && config.required) { ;
__p += '\n        <div class="input-append input-block-level">\n            <div class="append-wrapper"><a href="javascript:void(0);" class="btn widget-clear" tabindex="-1"><i class="icon icon-remove"></i></a><a class="btn widget-create add-on" href="javascript:void(0);" tabindex="-1" disabled><i class="icon-edit"></i></a></div><div class="input-wrapper"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n        </div>\n        ';
 } else { ;
__p += '\n        <div class="input-append input-block-level">\n            <div class="append-wrapper"><a class="btn widget-delete" href="javascript:void(0);" tabindex="-1"><i class="icon-trash"></i></a><a href="#" class="btn widget-clear add-on" tabindex="-1"><i class="icon icon-remove"></i></a><a class="btn widget-create add-on" href="javascript:void(0);" tabindex="-1" disabled><i class="icon-edit"></i></a></div><div class="input-wrapper" style="margin-right: 95px;"><input type="text" class="widget-ref-value" value="' +
__e( obj.referenceValue || obj.ref ) +
'" name="ref" /></div>\n        </div>\n        ';
 } ;
__p += '\n    </div>\n    <div class="consumerDetailsContainer"></div>\n</label>\n';

}
return __p
};

this["JST"]["job/ref/refconsumerdetails"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="control-group" style="margin-bottom:5px;">\n    <label>\n        <span class="control-label">\n            <span style="color:#468847;"><b>Date of Birth</b></span>\n        </span>\n\n        <div class="controls" style="padding-top: 5px;">\n            <span style="color:#468847;">' +
__e( obj.dateOfBirth ) +
'</span>\n        </div>\n    </label>\n</div>\n\n<div class="control-group" style="margin-bottom:5px;">\n    <label>\n        <span class="control-label">\n            <span style="color:#468847;"><b>Notes</b></span>\n        </span>\n\n        <div class="controls" style="padding-top: 5px;">\n            <span style="color:#468847;">' +
__e( obj.notes ) +
'</span>\n        </div>\n    </label>\n</div>\n\n<div class="control-group" style="margin-bottom:5px;">\n    <label>\n        <span class="control-label">\n            <span style="color:#468847;"><b>Comments</b></span>\n        </span>\n\n        <div class="controls" style="padding-top: 5px;">\n            <span style="color:#468847;">' +
__e( obj.comments ) +
'</span>\n        </div>\n    </label>\n</div>\n';

}
return __p
};

this["JST"]["job/ref/refs"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4>Additional References</h4>\n<div class="booking booking-additional-references-list">\n</div> <!-- .booking-additional-references-list -->\n';
 if (!isView && (customerConfig && customerConfig.allowMoreReferenceCodes)) { ;
__p += '\n<div class="widget-new-ref"><i class="icon icon-plus-sign"></i> <a href="javascript:void(0);" title="Add Reference">Add Reference</a></div>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["job/ref/refshow"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="' +
__e(!obj.id ? "form-horizontal" : "") +
'">\n<label>\n    <span class="control-label">\n        <span class="' +
__e( (config && config.required) ? "required" : "" ) +
'">' +
__e( obj.name ) +
'\n        ';
 if (config.helpText) { ;
__p += '<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="' +
__e( config.helpText ) +
'" data-original-title="' +
__e( config.label ) +
'" tabindex="-1">?</a>';
 } ;
__p += '\n        </span>\n    </span>\n    ';
 if (obj.name) { ;
__p += '<span class="ivr-container-' +
__e( (obj.name.charAt(0).toLowerCase() + obj.name.slice(1)).replace(/ /g, '').replace(/\(/g, '').replace(/\)/g, '') ) +
'"></span>';
 };
__p += '\n    <div class="controls">\n        ' +
__e( obj.referenceValue || obj.ref ) +
'\n    </div>\n</label>\n</div>\n';

}
return __p
};

this["JST"]["job/requirement/requirement"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="control-group span10">\n    <label>\n        <span class="control-label">\n            ';
 if (overrideRequirements === true) { ;
__p += '\n                Job Requirement\n            ';
 } else { ;
__p += '\n                Booking Requirement\n            ';
 } ;
__p += '\n        </span>\n        <div class="controls">\n            ';
 if (obj.dependent === "autoComplete") { ;
__p += '\n                <div>' +
__e( obj.criteria.name ) +
'</div>\n            ';
 } else { ;
__p += '\n                <select name="criteria" class="input-block-level requirementCriteria api-v2">\n                    ' +
((__t = ( selectOptions(_.sortBy(App.dict.bookingCriteria, function(obj) { return obj.name }), {selected: obj.criteria ? obj.criteria.id : null, noSelection: {id: '', name: '[Choose a Requirement]'}}) )) == null ? '' : __t) +
'\n                </select>\n            ';
 } ;
__p += '\n        </div>\n    </label>\n</div>\n<div class="control-group span2">\n';
 if (obj.required !== true) { ;
__p += '\n    ';
 if (isNewJob !== true) { ;
__p += '\n        <span class="control-label">&nbsp;</span>\n        <div class="controls">\n            <button class="btn btn-danger widget-delete"><i class="icon-trash"></i></button>\n        </div>\n    ';
 } else { ;
__p += '\n        <button class="btn btn-danger widget-delete"><i class="icon-trash"></i></button>\n    ';
 } ;
__p += '\n';
 } ;
__p += '\n</div>';

}
return __p
};

this["JST"]["job/requirement/requirements"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h4 class="mb-1">\n    ';
 if (overrideRequirements === true) { ;
__p += '\n        Additional Job Requirements (Overrides Booking Requirements)\n    ';
 } else { ;
__p += '\n        Additional Requirements\n    ';
 } ;
__p += '\n</h4>\n<div class="booking booking-additional-requirements-list"></div>\n';
 if (!isView) { ;
__p += '\n    <div class="widget-new-req">\n        <i class="icon icon-plus-sign"></i>\n        <a href="javascript:void(0);" title="Add Requirement">\n            ';
 if (overrideRequirements === true) { ;
__p += '\n                Add Job Requirement\n            ';
 } else { ;
__p += '\n                Add Requirement\n            ';
 } ;
__p += '\n        </a>\n    </div>\n';
 } ;
__p += '\n\n\n';

}
return __p
};

this["JST"]["job/requirement/requirementshow"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.requirement.name ) +
'\n';

}
return __p
};

this["JST"]["job/summaryregion"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<ul id="sidebar" class="nav nav-list">\n    <li class="nav-header">\n        <span class=\'timezone\' title=\'' +
__e( App.config.userData.tzLong ) +
'\'><i class=\'icon icon-time\'></i> ' +
__e( App.config.userData.tzLong ) +
' (' +
__e( App.config.userData.tz ) +
')</span>\n    </li>\n    <li class="divider"></li>\n    <li id="successContainer">\n    </li>\n    <li class="nav-header">\n        Job Details\n    </li>\n    <li>\n        <a href="#section-customer" class="quicklink">\n            <div class="secured secured-comp secured-admin">Customer</div>\n            <div class="secured secured-cust">Requestor</div>\n        </a>\n    </li>\n    <li>\n        <a href="#section-location" class="quicklink">Location</a>\n    </li>\n    <li>\n        <a href="#section-appointment" class="quicklink">Details</a>\n    </li>\n    <li>\n        <a href="#section-calendar" class="quicklink">Calendar</a>\n    </li>\n    <li>\n        <a href="#section-notes" class="quicklink">Notes</a>\n    </li>\n    <li class="divider"></li>\n    <li>\n        <a href="#section-documents">Documents</a>\n    </li>\n\n    <li class="divider"></li>\n    <li>\n        <div class="job-actions"></div>\n    </li>\n\n    <!-- summary information -->\n    <li class="divider"></li>\n    <li id="basics">\n        <dl>\n            <dt>Booking #' +
__e( obj.superBooking ? obj.superBooking.id : "" );
 if (jobContextId || obj.jobContextId) { ;
__p += ' / Job # ' +
__e( jobContextId || obj.jobContextId ) +
' ';
 } ;
__p += '</dt>\n            <dd>' +
__e( obj.defaultLanguage ? obj.defaultLanguage.displayName : "" ) +
': <span class="format-datetime" data-timezone="' +
__e( obj.timeZone ) +
'">' +
__e( obj.expectedStartDate ) +
'</span></dd>\n            <dt>Customer</dt><dd>' +
__e( obj.customer ? obj.customer.name : "" ) +
'</dd>\n            <dt>Status</dt><dd>' +
((__t = ( getStatusAttributeById(App.dict.bookingStatus, obj.status ? obj.status.id : null, 'name', 'N/A') )) == null ? '' : __t) +
' <span class="status-' +
__e( getStatusAttributeById(App.dict.bookingStatus, obj.status ? obj.status.id : null, 'nameKey', 'mixed') ) +
'">' +
((__t = ( getAbbreviationByStatus(getStatusAttributeById(App.dict.bookingStatus, obj.status ? obj.status.id : null, "nameKey")) )) == null ? '' : __t) +
'</span></dd>\n            <dt>Last Modified By</dt><dd>' +
__e( obj.lastModifiedBy ) +
'</dd>\n            <dt>Last Modified</dt><dd class="format-datetime" data-timezone="' +
__e( App.config.userData.timeZone ) +
'">' +
__e( obj.lastModifiedDate ) +
'</dd>\n            <dt>Created By</dt><dd>' +
__e( obj.createdBy ) +
'</dd>\n            <dt>Created</dt><dd class="format-datetime" data-timezone="' +
__e( App.config.userData.timeZone ) +
'">' +
__e( obj.createdDate ) +
'</dd>\n            <dt>Interpreter</dt><dd>' +
__e( interpreterJob ? interpreterJob['interpreter.id']? interpreterJob['interpreter.label'] : "N/A" : "N/A" ) +
'</dd>\n        </dl>\n    </li>\n</ul>\n';

}
return __p
};

this["JST"]["job/supportregion"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="nav nav-tabs">\n    <li class="active"><a href="#documents" data-toggle="tab">Documents</a></li>\n    <li class="comments"><a href="#comments" data-toggle="tab">Comments <span class="comments-count-container"></span></a></li>\n</ul> <!-- .nav-tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n    <div class="tab-pane active documents-container" id="documents">\n        <div class="booking-documents"></div>\n        <hr/>\n        <div class="job-documents"></div>\n    </div> <!-- .documents -->\n    <div class="tab-pane comments" id="comments">\n        <h4>Comments</h4>\n    </div> <!-- .comments -->\n</div> <!-- .tabs -->\n';

}
return __p
};

this["JST"]["languages/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span12">\n        <button class="btn btn-primary addCompanyLanguageCmd">Add Configuration</button>\n    </div>\n</div>\n\n<div class="row-fluid">\n    <div class="span-12 list-container">\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["messages/accordion"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="accordion-heading">\n    <a class="accordion-toggle" data-toggle="collapse" data-parent="#messagesAccordion" href="#collapse' +
__e( id ) +
'">\n        ' +
__e( dateActive + ": " + title ) +
'\n    </a>\n</div>\n<div id="collapse' +
((__t = ( id )) == null ? '' : __t) +
'" class="accordion-body collapse">\n    <div class="accordion-inner">\n\n        <div class="editMessage">\n\n        </div>\n\n    </div> <!-- / accordion-inner -->\n</div> <!-- / collapse -->';

}
return __p
};

this["JST"]["messages/alert/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-error">\n    <a class="close" data-dismiss="alert" href="#" id="close" title="Close Alert">×</a>\n    <h4 class="alert-heading">' +
__e( title ) +
' <i class="icon icon-exclamation-sign"></i></h4>\n    <a id="msg' +
__e( id ) +
'" class="msg" id="' +
__e( id ) +
'" href="javascript:void(0);"><strong>' +
__e( summary ) +
'</strong></a>\n</div>\n';

}
return __p
};

this["JST"]["messages/info/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-warning">\n    <a class="close" data-dismiss="alert" href="#" id="close" title="Close Message">×</a>\n    <h4 class="alert-heading">' +
__e( title ) +
'</h4>\n    <a id="msg' +
__e( id ) +
'" class="msg" href="javascript:void(0);"><strong>' +
__e( summary ) +
'</strong></a>\n</div>\n';

}
return __p
};

this["JST"]["messages/message/customMesseges"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span class="custom-messages">Custom Messages <span id="unread">(0 unread)</span> <input type="button" class="btn btn btn-primary" value="Mark as read" id="markRead"> &nbsp; <input type="button" class="btn btn btn-primary" value="Mark as resolved" id="markResolved"></span>\n<ul id="custom-inbox" class="custom-list-links"></ul>\n\n<div class="pagination-container"></div>\n';

}
return __p
};

this["JST"]["messages/message/messages"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul id="inbox" class="list-links"></ul>\n\n<div class="pagination-container"></div>\n';

}
return __p
};

this["JST"]["messages/message/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<strong>\n    ';
 if (obj['audience.id'] == App.dict.messageAudience['custom'].id ) { ;
__p += '\n        <input type=\'checkbox\' class="checkBox">\n    ';
 } ;
__p += '\n    ' +
__e( obj.dateActive ) +
'\n</strong> - <a class="msg" href="javascript:void(0);">\n                <strong>' +
__e( obj.title ) +
'</strong>\n                ';
 if (obj['type.id'] == App.dict.messageType['alert'].id) { ;
__p += '\n                    <i class="icon  icon-exclamation-sign"></i>\n                ';
 } ;
__p += '\n                ';
 if (obj['audience.id'] == App.dict.messageAudience['custom'].id ) { ;
__p += '\n                    ';
 if (( obj['type.id'] == App.dict.messageType['action'].id ) && !obj.messageResolved ) { ;
__p += '\n                        <i class="icon  icon-warning-sign"></i>\n                    ';
 } ;
__p += '\n                ';
 } ;
__p += '\n</a>: ' +
__e( obj.summary ) +
'\n';

}
return __p
};

this["JST"]["messages/messageedit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<form>\n    <fieldset>\n        <div class="row-fluid">\n            <div class="span4">\n                <div class="control-group">\n                    <label class="control-label required" for="message' +
__e( id ) +
'">Title </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the title of the message that will be presented to users." data-original-title="Message Title">?</a>\n                    <div class="controls">\n                        <input type="text" id="title" name="title" value="' +
__e( title ) +
'" placeholder="Title"/>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n\n                <div class="control-group">\n                    <label class="control-label required" for="type.id">Message Type </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The type determines how the message will be presented. Use Alerts for important messages." data-original-title="Message Type">?</a>\n                    <div class="controls">\n                        <select name="type.id">\n                            ' +
((__t = ( selectOptions(App.dict.messageType, {noSelection: {id: '', name: '[Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n\n                <div class="control-group">\n                    <label class="control-label required" for="type.id">Audience </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The audience for this message." data-original-title="Message Audience">?</a>\n                    <div class="controls">\n                        <select name="audience.id">\n                            ' +
((__t = ( selectOptions(App.dict.messageAudience, {noSelection: {id: '', name: '[Audience]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n\n                <div class="control-group sendEmail">\n                    <label class="control-label" for="notifyByEmail">Send Email </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Send this message by email" data-original-title="Send Email">?</span></a>\n                    <div class="controls">\n                        <input type="checkbox" id="notifyByEmail" name="notifyByEmail" value="' +
__e( notifyByEmail ) +
'" placeholder=""/>\n                    </div>\n                </div>\n\n            </div>\n\n            <div class="span4">\n\n                <div class="row-fluid">\n                    <div class="control-group span3">\n                        <label class="control-label required" for="dateActive' +
__e( id ) +
'">Active Date </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the date the message will be active from. This is useful for messages that are to appear in the future." data-original-title="Date Active">?</a>\n                        <div class="controls">\n                            <input class="span12" type="text" id="dateActive' +
__e( (id ? id :"NEW") ) +
'" name="dateActive" value="' +
__e( dateActive ) +
'" placeholder=""/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n\n                    <div class="control-group span3">\n                        <label class="control-label required" for="dateInactive' +
__e( id ) +
'">Inactive Date </label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the date the message will no longer be featured on the dashboard. Messages will always be available in the message area." data-original-title="Date Inactive">?</a>\n                        <div class="controls">\n                            <input type="text" class="span12" id="dateInactive' +
__e( (id ? id :"NEW") ) +
'" name="dateInactive" value="' +
__e( dateInactive ) +
'" placeholder=""/>\n                            <p class="help-block">Required field</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="control-group">\n                    <label class="control-label required" for="summary">Summary </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Summary of the message that will appear." data-original-title="Message Summary">?</a>\n                    <div class="controls">\n                        <textarea id="summary" style="height: 80px;" name="summary" placeholder="Message Summary">' +
__e( summary ) +
'</textarea>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n        <div>\n\n            <div class="row-fluid">\n                <div class="control-group span8">\n                    <label class="control-label required" for="message' +
__e( (id ? id :"NEW") ) +
'">Message Body </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter the body of the message you want to show to the user." data-original-title="Message Body">?</span></a>\n                    <div class="controls">\n                        <textarea id="message' +
((__t = ( (id ? id :'NEW') )) == null ? '' : __t) +
'" style="height: 250px;" class="wysiwyg" name="message' +
((__t = ( (id ? id :'NEW') )) == null ? '' : __t) +
'" placeholder="Message Body">' +
__e( body ) +
'</textarea>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n            </div>\n\n            <button class="btn btn-primary" type="button" id="save" value="Save" data-loading-text="Saving ...">Save</button>\n            <button class="btn" id="delete" name="delete" value="Delete">Delete</button>\n\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["report/asynchdownload/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- asynchronous report download message -->\n<div>\n    ';
 if (status === 200) { ;
__p += '\n\n        ' +
__e( message ) +
'\n\n    ';
 } else { ;
__p += '\n\n        <div class="alert">\n            <strong>Warning!</strong> ' +
__e( message ) +
'\n        </div>\n\n    ';
 } ;
__p += '\n</div>\n';

}
return __p
};

this["JST"]["report/customer/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="span12">\n    <div class="span6">\n        <h4>Call Status Report</h4>\n        <br />\n        <div class="span3">\n            <button id="csrExportCmd" class="btn btn-primary"> Export CSR Report</button>\n        </div>\n    </div>\n\n    <div class="span6">\n        <h4>Language Utilization Report</h4>\n        <br />\n        <div class="span3">\n            <button id="lurExportCmd" class="btn btn-primary"> Export LUR Report</button>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["report/customreport/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="thumbnail ' +
__e( obj.month ) +
' ' +
__e( obj.year ) +
'">\n    <div class="caption">\n        <h5>' +
__e( App.dict.documentType[obj["type.nameKey"]].name ) +
': ' +
__e( getMonthName(obj.month) ) +
', ' +
__e( obj.year ) +
'</h5>\n        <div class="row-fluid">\n            <div class="pull-left">\n                <div><strong>Name:</strong> ' +
__e( obj.name ) +
'</div>\n                <div><strong>Description:</strong> <p>' +
__e( obj.description ) +
'</p></div>\n            </div>\n            <div class="pull-right">\n                <p>' +
__e( obj.fileName + " (" + Math.round(obj.fileSize / 1024) + " Kb, " + obj.fileType + ")" ) +
'</p>\n                <p><strong>Created</strong> ' +
__e( obj.createdDate ) +
'</p>\n                <p><strong>By</strong> ' +
__e( obj.createdBy ) +
'</p>\n            </div>\n        </div>\n        <div class="btn-group dropup">\n            <button class="btn dropdown-toggle" data-toggle="dropdown" type="button" value="actions"> Actions <span class="caret"></span> </button>\n            <ul class="dropdown-menu">\n                <!-- dropdown menu links -->\n                <li>\n                    <a href="' +
__e( App.config.context + "/" + obj.fQPath ) +
'" class="view"> <i class="icon-share"></i> View</a>\n                </li>\n                <li>\n                    <a href="' +
__e( App.config.context + "/" + obj.fQPath ) +
'" id="download" target="_"><i class="icon-download"></i> Download</a>\n                </li>\n                <li class="divider"></li>\n                <li>\n                    <a href="javascript:void(0);" id="deleteReport"><i class="icon icon-trash"></i> Delete</a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/accumulativeLanguage"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Accumulative Language</h4>\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should start at." data-original-title="Start Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="startDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">End Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should end at." data-original-title="End Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="endDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><strong>Customer</strong>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the required customer for export. When no customer is selected, the report will return all results" data-original-title="Customer" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" class="api-delegate" id="customer" name="customer"/>\n            </div>\n        </label>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/allclientbookingexport"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>All Client Booking Method</h4>\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should start at." data-original-title="Start Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="startDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">End Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should end at." data-original-title="End Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="endDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><strong>Customer</strong>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the required customer for export. When no customer is selected, the report will return all results" data-original-title="Customer" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" class="api-delegate" id="customer" name="customer"/>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3 secured secured-fina">\n        <label>\n            <span class="control-label"><span class="required">Include Financial Fields</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Whether the report should include the financial fields or not." data-original-title="Include Financial Fields" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="checkbox" id="includeFinancialFields" name="includeFinancialFields">\n            </div>\n        </label>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/allocationbyagent"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Allocation By Agent</h4>\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should start at." data-original-title="Start Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="startingDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">End Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should end at." data-original-title="End Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="endingDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/chsexport"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>CHS Export</h4>\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should start at." data-original-title="Customer" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="startDate" class="input-medium format-date" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">End Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should end at." data-original-title="Customer" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="endDate" class="input-medium format-date" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/contactexport"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Contact Export</h4>\n(Select one at a time, else All Contacts will be exported by default)\n<div class="row-fluid">\n    <div class="parameters row-fluid">\n        <div class="control-group span3">\n            <label class="control-label required" for="allContacts">All Contacts</label>\n            <div class="controls">\n                <input type="checkbox" id="allContacts" name="All-Contacts">\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label required" for="contactAddresses">Contact Addresses</label>\n            <div class="controls">\n                <input type="checkbox" id="contactAddresses" name="Contact-Addresses">\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label required" for="contactAddresses">Contacts with duplicate bank account.</label>\n            <div class="controls">\n                <input type="checkbox" id="contactDuplicate" name="Contact-Duplicate">\n            </div>\n        </div>\n    </div>\n</div>\n<a href="javascript:void(0);" class="start-export btn">Start contact export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/customer-contact-no-rates-export"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    <h4>Contacts/Customers without Rate Plan/Rate Zone Export</h4>\n    (Select one at a time, else Contacts without RatePlan will be exported by default)\n</div>\n<br />\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label class="control-label required" for="contactNoRatePlan">Contacts without Rate Plan</label>\n        <div class="controls">\n            <input type="checkbox" id="contactNoRatePlan" name="Contacts-without-Rate-Plan">\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <label class="control-label required" for="customersNoRatePlan">Customers without Rate Plan</label>\n        <div class="controls">\n            <input type="checkbox" id="customersNoRatePlan" name="Customers-without-Rate-Plan">\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <label class="control-label required" for="contactNoRateZone">Contacts without Rate Zone</label>\n        <div class="controls">\n            <input type="checkbox" id="contactNoRateZone" name="Contacts-without-Rate-Zone">\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <label class="control-label required" for="customerNoRateZone">Customers without Rate Zone</label>\n        <div class="controls">\n            <input type="checkbox" id="customerNoRateZone" name="Customers-without-Rate-Zone">\n        </div>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/customercostsummary"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Customer Cost Summary</h4>\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should start at." data-original-title="Start Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="startDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">End Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should end at." data-original-title="End Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="endDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/customerexport"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Customer Export</h4>\n(Select one at a time, else All Customers will be exported by default)\n<div class="row-fluid">\n    <div class="parameters row-fluid">\n        <div class="control-group span3">\n            <label class="control-label required" for="allCustomers">All Customers</label>\n            <div class="controls">\n                <input type="checkbox" id="allCustomers" name="All-Customers">\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label required" for="contactPersons">Customer Contact Persons</label>\n            <div class="controls">\n                <input type="checkbox" id="contactPersons" name="Customer-Contact-Persons">\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label required" for="customerAddresses">Customer Addresses</label>\n            <div class="controls">\n                <input type="checkbox" id="customerAddresses" name="Customer-Addresses">\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label required" for="customerAddresses">Customer Hierarchy</label>\n            <div class="controls">\n                <input type="checkbox" id="customerHierarchy" name="Customer-Hierarchy">\n            </div>\n        </div>\n    </div>\n    <div class="parameters row-fluid">\n        <div class="control-group span3">\n            <label class="control-label required" for="customerBillingAddresses">Customer Billing Addresses</label>\n            <div class="controls">\n                <input type="checkbox" id="customerBillingAddresses" name="customerBillingAddresses">\n            </div>\n        </div>\n    </div>\n</div>\n<a href="javascript:void(0);" class="start-export btn">Start customer export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/eligibilitiesbycriteria"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Export Employment Eligibilities by Criteria</h4>\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Employment Criteria </span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Please select a criteria." data-original-title="Employment Criteria" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" class="api-delegate" id="search-employment-criteria" name="employmentCriteria"/>\n            </div>\n        </label>\n    </div>\n\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Language </span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Please select a language." data-original-title="Language" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" class="api-delegate" id="language" name="language"/>\n            </div>\n        </label>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/guaranteetimeexport"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Guarantee Time</h4>\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should start at." data-original-title="Start Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="startDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">End Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should end at." data-original-title="End Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="endDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>';

}
return __p
};

this["JST"]["report/exports/exportwidget/lifesigns-kaiser-export"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Kaiser Export</h4>\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should start at." data-original-title="Start Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="startDate" class="input-medium format-date" autocomplete="off">\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">End Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should end at." data-original-title="End Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="endDate" class="input-medium format-date" autocomplete="off">\n            </div>\n        </label>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/schedulerperformance"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Scheduler Performance</h4>\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should start at." data-original-title="Start Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="startDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">End Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should end at." data-original-title="End Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="endDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off" />\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">User Type</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="User Type." data-original-title="User Type" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <select class="span12" name="userType">\n                    <option value="">[Choose a User Type]</option>\n                    <option value="company">Internal Users</option>\n                    <option value="customer">Requestors</option>\n                </select>\n            </div>\n        </label>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/exportwidget/teambenchmarking"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Team Benchmarking</h4>\n<div class="parameters row-fluid">\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">Start Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should start at." data-original-title="Start Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="startDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">End Date</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter the date the report should end at." data-original-title="End Date" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <input type="text" name="endDate" data-timezone="' +
__e( obj.timeZone ) +
'" class="input-medium format-date" autocomplete="off"/>\n            </div>\n        </label>\n    </div>\n    <div class="control-group span3">\n        <label>\n            <span class="control-label"><span class="required">User Type</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="User Type." data-original-title="User Type" tabindex="-1">?</a> </span>\n            <div class="controls">\n                <select class="span12" name="userType">\n                    <option value="">[Choose a User Type]</option>\n                    <option value="company">Company Users</option>\n                    <option value="customer">Customer Users</option>\n                    <option value="contact">Contact Users</option>\n                </select>\n            </div>\n        </label>\n    </div>\n</div>\n<a href="javascript:void(0);" class="btn start-export">Start export</a>\n<hr/>\n';

}
return __p
};

this["JST"]["report/exports/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Custom exports</h3>\n<hr/>\n<div class="row region-custom-export">\n</div>\n';

}
return __p
};

this["JST"]["report/geospatial/customer/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span12">\n        <div class="map-container">\n            <div class="map"></div>\n        </div>\n    </div>\n</div>\n\n<div class="row-fluid" id="inline-actions">\n    <div class="span6">\n        <input id="refresh" type="button" value="Refresh Map" class="item btn"/>\n        <a href="javascript:void(0);" id="clear">Clear</a>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["report/geospatial/interpreter/details-popup"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<h3>' +
__e( obj.name ) +
'</h3>\n\n<div class="row-fluid">\n    <div class="span4">\n        <h5>Languages</h5>\n        <ul>\n            ';
 _.each(obj.languageMappings, function(languageMapping) { ;
__p += '\n            <li>' +
__e( languageMapping.language.description ) +
' (' +
__e( languageMapping.rating ) +
')</li>\n            ';
 }); ;
__p += '\n        </ul>\n\n    </div>\n    <div class="span4">\n        <h5>Phone</h5>\n        <ul>\n            ';
 _.each(obj.numbers, function(number) { ;
__p += '\n            <li>' +
__e( number.parsedNumber ) +
'</li>\n            ';
 }); ;
__p += '\n        </ul>\n    </div>\n    <div class="span4">\n        <h5>Email</h5>\n        <ul>\n            ';
 _.each(obj.emails, function(email) { ;
__p += '\n            <li>' +
__e( email.emailAddress ) +
'</li>\n            ';
 }); ;
__p += '\n        </ul>\n    </div>\n</div>\n\n';

}
return __p
};

this["JST"]["report/geospatial/interpreter/language"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input name="selected" type="checkbox" ' +
__e( obj.selected ? "checked" : "" ) +
'> ' +
__e( obj.name ) +
' (' +
__e( obj.iso ) +
')\n\n<span class="actions"><a href="javascript:void(0);" class="only">only</a> <a href="javascript:void(0);" class="all">all</a></span>\n\n<span class="pull-right"><strong>' +
__e( obj.markers.length ) +
'</strong></span>\n';

}
return __p
};

this["JST"]["report/geospatial/interpreter/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span8">\n        <div class="map-container">\n            <div class="map"></div>\n        </div>\n    </div>\n\n    <div class="span4">\n        <ul class="languages list">\n\n        </ul>\n    </div>\n</div>\n\n<div class="row-fluid" id="inline-actions">\n    <div class="span5">\n\n        <span id="locateMsg"></span>\n        <span>\n            <span class="input-append">\n                <input type="text" id="locateAddress" name="locateAddress" value="" style="display: inline;" placeholder="Jump to ..."/><button id="locateAddressClearBtn" title="Clear Address" class="btn" type="button"><i class="icon icon-remove"></i></button><button id="locateAddressBtn" title="Locate on Map" class="btn" type="button"><i class="icon icon-map-marker"></i></button>\n            </span>\n        </span>\n        <span>\n            <select id="locateRadius" style="margin-top: 12px;" class="input-small">\n                <option value="5">5</option>\n                <option value="10">10</option>\n                <option value="15">15</option>\n                <option value="25">25</option>\n                <option value="50">50</option>\n                <option value="100" selected>100</option>\n                <option value="250">250</option>\n                <option value="500">500</option>\n            </select>\n        </span>\n    </div>\n    <div class="span7" style="padding-top: 12px;">\n        <div class="btn-group">\n            <a href="javascript:void(0);" id="exportCensus" class="btn"><i class="icon icon-download"></i> Export Census</a>\n            <a href="javascript:void(0);" id="refreshMap" class="btn"><i class="icon icon-map"></i> Refresh Map</a>\n            <a href="javascript:void(0);" id="clearMap" class="btn"><i class="icon icon-remove"></i> Clear</a>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["report/geospatial/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div id="content">\n    <div class="row-fluid">\n        <!-- top row-fluid -->\n        <div class="span12 logo">\n\n            <div class="pull-left">\n                <img src="' +
__e( App.config.context ) +
'' +
__e( App.config.company.config.logoUri ) +
'"/> <h2 id="title">' +
__e( App.config.company.name ) +
'</h2>\n            </div>\n\n            <div class="pull-right">\n                <h2>Geospatial Reports</h2>\n            </div>\n\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="span12" id="errorContainer"></div>\n        <div class="span12" id="successContainer"></div>\n    </div>\n\n    <!-- nav tabs -->\n    <ul class="nav nav-tabs">\n        <li class="active"><a href="#interpreter-tab" data-toggle="tab">Interpreters</a></li>\n        <li><a href="#customer-tab" data-toggle="tab">Customers</a></li>\n    </ul>\n    <!-- / nav tabs -->\n\n    <div class="tab-content" style="padding: 0;">\n        <div class="tab-pane active" id="interpreter-tab">\n\n            <div class="interpreters">\n\n            </div>\n\n        </div> <!-- / interpreter-tab -->\n\n        <div class="tab-pane" id="customer-tab">\n\n            <div class="customers">\n\n            </div>\n\n        </div> <!-- / customer-tab -->\n\n    </div>\n\n</div> <!-- / content -->\n';

}
return __p
};

this["JST"]["report/manage/customer-list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p +=
__e( name );
 if (accountingReference) { ;
__p += ' (<strong>' +
__e( accountingReference ) +
'</strong>) ';
 } ;


}
return __p
};

this["JST"]["report/report/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet">\n\n    <div class="portlet-header clearfix">\n\n        <div class="pull-left" id="caption">\n            <span id="title">' +
__e( title ) +
'</span>\n            <span id="pagination" style="display: none;"> - Page <span id="pageNum">1</span> of <span id="pageCnt"></span></span>\n            <a id="refresh" title="Refresh" href="javascript:void(0);" ><i class="icon icon-refresh"></i></a>\n        </div>\n\n        <div class="btn-group pull-right">\n            <a class="btn btn-info btn-mini dropdown-toggle" data-toggle="dropdown" href="#">\n                Export\n                <span class="caret"></span>\n            </a>\n            <ul class="dropdown-menu">\n                <li><a id="xlsx" href="javascript:void(0);"><i class="icon-ms-excel"></i> Excel</a></li>\n                <li><a id="csv" href="javascript:void(0);"><i class="icon-file-alt"></i> CSV</a></li>\n            </ul>\n        </div>\n    </div>\n\n    <div class="portlet-body">\n        <div id="report-container"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["report/scheduledReport/grid"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="pull-right">\n    <input id="showAll" type="checkbox" name="showAll"/>  <b>Show company wide Reports</b>\n</div>\n\n<div class="scheduled-report">\n\n</div>\n\n<div class="paginator">\n\n</div>\n';

}
return __p
};

this["JST"]["report/scheduledReport/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <div id="errorContainer"></div>\n    <div id="successContainer"></div>\n    <div class="span10">\n        <div class="row-fluid span5">\n            <h4>Scheduled Report</h4>\n            <br/>\n\n            <div id="row-fluid">\n\n                <div class="control-group span12">\n                    <div class="controls span8">\n                        <label class="control-label required" for="name">Name </label>\n                        <input id="name" name="name" type="text" class="input-block-level" value="' +
__e( obj.name ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span12">\n                    <div class="controls span8">\n                        <label class="control-label required" for="recipients">To </label>\n                        <input id="recipients" name="recipients" type="text" class="input-block-level"\n                               value="' +
__e( obj.recipients ) +
'"/>\n                    </div>\n                </div>\n\n                <div class="control-group span12">\n                    <div class="controls span5">\n                        <label class="control-label required" for="reportInformation.id">Report </label>\n                        <select class="span12" name="reportInformation.id">\n                            ' +
((__t = ( selectOptions(App.dict.reportInformation, {selected: (obj.reportInformation ? obj.reportInformation.id : ''), noSelection: {id: '', name: '[Choose a Report]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                </div>\n\n                <div class="control-group span12">\n                    <div class="controls">\n                        <label class="control-label required" for="active">Active</label>\n                        <input id="active" name="active" type="checkbox" ';
 if (obj.active) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 };
__p += '\n                        value="true" />\n                    </div>\n                </div>\n\n                <div class="control-group span12">\n                    <div class="controls">\n                        <label class="control-label" for="lastRun"><b>Last Run: </b></label>\n                        <span id="lastRun" class="date">' +
__e( obj.lastRun ) +
'</span>\n                    </div>\n                </div>\n\n                <div class="control-group span12">\n                    <div class="controls">\n                        <label class="control-label" for="createdDate"><b>Created: </b></label>\n                        <span id="createdDate" class="date">' +
__e( obj.createdDate ) +
'</span>\n                    </div>\n                </div>\n\n                <div class="control-group span12">\n                    <div class="controls">\n                        <label class="control-label" for="lastModifiedDate"><b>Last Modified: </b></label>\n                        <span id="lastModifiedDate" class="date">' +
__e( obj.lastModifiedDate ) +
'</span>\n                    </div>\n                </div>\n\n                <div class="controls controls-row">\n                    <div class="btn-group" style="display: inline-block;">\n                        <button id="save" class="btn btn-primary"><i class="icon-save"></i> Save</button>\n                        <button id="new" class="btn btn-primary"><i class="ui-icon-newwin"></i> New</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="span4">\n            <br/>\n\n            <div id="format" class="controls">\n                <label class="control-label required" for="format">Format </label>\n\n                <div><input type="radio" name="format" value="xlsx"> Excel</div>\n                <div><input type="radio" name="format" value="csv"> CSV</div>\n            </div>\n\n            <div class="control-group span12">\n                <label class="control-label required" for="scheduleTypes">Schedule </label>\n\n                <div id="scheduleTypes" class="controls">\n                </div>\n            </div>\n\n\n            <div class="controls" id="schedule_day">\n                <label class="control-label required" for="scheduledDay">Schedule Day </label> (1 for Monday and 7 for Sunday)\n                <input id="scheduledDay" name="scheduledDay" type="text" class="input-block-level"\n                       value="' +
__e( obj.scheduledDay ) +
'"/>\n            </div>\n\n\n            <div class="controls">\n                <label class="control-label" for="row_number">Number of rows</label>\n                <input id="row_number" name="additionalParameters[\'num\']" type="text" class="input-block-level"\n                       value="';
 if (obj.params) { ;
__p += ' ' +
__e( obj.params['num'] ) +
' ';
 };
__p += '"/>\n            </div>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["requestor/customerclientlocation/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid" style="margin-left: 5px">\n    <div class="control-group span3">\n        <label class="control-label required" for="customer">Customer</label>\n        <a href="javascript:void(0);" class="clearCustomer pull-right"><i class="icon icon-remove-sign"></i> Clear</a>\n        <div class="controls">\n            <input class="api-v2 api-delegate input-block-level" type="text" id="customer" name="customer" value="';
 if ( obj.customer ) { ;
__p +=
__e( obj.customer.name );
 } ;
__p += '" />\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <label class="control-label" for="client"><b>Client</b></label>\n        <a href="javascript:void(0);" class="clearClient pull-right"><i class="icon icon-remove-sign"></i> Clear</a>\n        <div class="controls">\n            <input class="api-v2 api-delegate input-block-level" type="text" id="client" name="client" value="';
 if ( obj.client ) { ;
__p +=
__e( obj.client.name );
 } ;
__p += '" />\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <label class="control-label" for="location"><b>Location</b></label>\n        <a href="javascript:void(0);" class="clearLocation pull-right"><i class="icon icon-remove-sign"></i> Clear</a>\n        <div class="controls">\n            <input class="api-v2 api-delegate input-block-level" type="text" id="location" name="location" value="';
 if ( obj.location ) { ;
__p +=
__e( obj.location.displayLabel );
 } ;
__p += '" />\n        </div>\n    </div>\n\n    <div class="control-group span3">\n        <div class="controls" style="margin-top:25px;">\n            <a href="javascript:void(0);" id="saveAssociation"><i class="icon icon-save"></i> Save</a>\n            <a href="javascript:void(0);" id="deleteAssociation"><i class="icon icon-minus-sign"></i> Delete</a>\n            <a href="javascript:void(0);" id="copyAssociation"><i class="icon icon-plus-sign"></i> Copy</a>\n            <br />\n            <input type="checkbox" id="defaultAssociation" name="defaultAssociation" ';
 if (obj.defaultAssociation) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( obj.defaultAssociation ) +
'"/> Default\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["requestor/customerclientlocations/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="associations">\n\n</div>\n<br/>\n<div class="btn-group">\n    <button class="btn btn-primary model-add" type="button" value="Add Association">Add Association</button>\n</div>\n';

}
return __p
};

this["JST"]["requestor/generaledit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<form class="form-vertical">\n    <fieldset>\n        <section id="details">\n            <h4 class="well">Requestor Details</h4>\n            <div class="row-fluid">\n\n                <div class="control-group span3">\n                    <label class="control-label required" for="firstName">First Name</label>\n                    <div class="controls">\n                        <input class="span12" type="text" id="firstName" name="firstName" value="' +
__e( obj.firstName ) +
'" placeholder="First name"/>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label required" for="lastName">Last Name</label>\n                    <div class="controls">\n                        <input class="span12" type="text" id="lastName" name="lastName" value="' +
__e( obj.lastName ) +
'" placeholder="Last name"/>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label required" for="number">Phone Number </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The contact number for the contact person at the customer." data-original-title="Contact Number">?</a>\n                    <div class="controls">\n                        <input class="span12" id="number" name="number" type="text" value="' +
__e( number ) +
'" placeholder="Contact Number"/>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label" for="faxNumber">Fax Number </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="A fax number for the contact person at the customer." data-original-title="Contact Fax Number">?</a>\n                    <div class="controls">\n                        <input class="span12" id="faxNumber" name="faxNumber" type="text" value="' +
__e( faxNumber ) +
'" placeholder="Fax Number"/>\n                    </div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="control-group span3">\n                    <label class="control-label required" for="username">Username</label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter a username for the requestor log in credentials or select an auto generated username using the icon button provided" data-original-title="Username">?</a>\n                    <a href="#" style="float:right;" id="generateUsername" class="btn-right icon-pencil"></a>\n                    <div class="controls">\n                        <input class="span12" type="text" id="username" name="username" value="' +
__e( obj.username ) +
'" placeholder="Username"/>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label" for="email"><strong>Email</strong></label>\n                    <div class="controls">\n                        <input class="span12" type="text" id="email" name="email" value="' +
__e( obj.email ) +
'" placeholder="Email Address"/></p>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label" for="other">Accounting Reference </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="A reference number or code to identify this customer in other systems." data-original-title="Accounting Reference">?</a>\n                    <div class="controls">\n                        <input class="span12" id="accountingReference" name="accountingReference" type="text" value="' +
__e( accountingReference ) +
'" placeholder=""/>\n                    </div>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="control-group span3">\n                    <label class="control-label" for="other">Other </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Any other information to associate with the contact person." data-original-title="Other">?</a>\n                    <div class="controls">\n                        <input class="span12" id="other" name="other" type="text" value="' +
__e( other ) +
'" placeholder="Other information"/>\n                    </div>\n                </div>\n\n                <div class="control-group span3">\n                    <label class="control-label" for="active">Active </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Whether this contact person is active or not" data-original-title="Active">?</a>\n                    <div class="controls">\n                        <input class="span12" id="active" name="active" type="checkbox" ';
 if (active) { ;
__p += ' ' +
__e( "checked" ) +
' ';
 } ;
__p += ' value="true"/>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </fieldset>\n    <fieldset>\n        <section id="customerclientassociations">\n            <h4 class="well">Associations</h4>\n            <div id="associations">\n            </div>\n        </section>\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["requestor/quickadd"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- add requestor from booking screen -->\n<div id="popupErrorContainer" class="msg-modal hide">\n</div>\n<div id="popupSuccessContainer" class="msg-modal hide">\n</div>\n<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>';
 if (obj.id) { ;
__p += 'Edit Existing Requestor';
 } else {;
__p += 'Create New Requestor';
 } ;
__p += '</h3>\n</div>\n<div class="modal-body">\n    ';
 if (obj.id) { ;
__p += '\n    <div class="alert alert-info">\n        <a class="close" data-dismiss="alert">×</a>\n        <strong>Warning!</strong> You are editing an existing requestor. This will update <strong>all bookings</strong>\n        that are already associated with this requestor. If you want to enter a new requestor, click on the\n        <span class="label label-info">Create New</span> button below and enter the new requestor information.\n    </div>\n    ';
 } ;
__p += '\n    <div class="row-fluid">\n\n        <div class="control-group span3">\n            <label class="control-label required" for="firstName">First Name</label>\n            <div class="controls">\n                <input class="span12" type="text" id="firstName" name="firstName" value="' +
__e( obj.firstName) +
'" placeholder="First name"/>\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label required" for="lastName">Last Name</label>\n            <div class="controls">\n                <input class="span12" type="text" id="lastName" name="lastName" value="' +
__e( obj.lastName) +
'" placeholder="Last name"/>\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label required" for="number">Phone Number </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The contact number for the contact person at the customer." data-original-title="Contact Number">?</a>\n            <div class="controls">\n                <input class="span12" id="number" name="number" type="text" value="' +
__e( obj.number) +
'" placeholder="Contact Number"/>\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label" for="other">Other </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Any other information to associate with the contact person." data-original-title="Other">?</a>\n            <div class="controls">\n                <input class="span12" id="other" name="other" type="text" value="' +
__e( obj.other) +
'" placeholder="Other information"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span3">\n            <label class="control-label required" for="username">Username</label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Enter a username for the requestor log in credentials or select an auto generated username using the icon button provided" data-original-title="Username">?</a>\n            <a href="#" style="float:right;" id="generateUsername" class="btn-right icon-pencil"></a>\n            <div class="controls">\n                <input class="span12" type="text" id="username" name="username" value="' +
__e( obj.username) +
'" placeholder="Email Address"/></p>\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label" for="email"><strong>Email</strong></label>\n            <div class="controls">\n                <input class="span12" type="text" id="email" name="email" value="' +
__e( obj.email) +
'" placeholder="Email Address"/></p>\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label" for="faxNumber">Fax Number </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="A fax number for the contact person at the customer." data-original-title="Contact Fax Number">?</a>\n            <div class="controls">\n                <input class="span12" id="faxNumber" name="faxNumber" type="text" value="' +
__e( obj.faxNumber) +
'" placeholder="Fax Number"/>\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label" for="active">Active </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="Whether this contact person is active or not" data-original-title="Active">?</a>\n            <div class="controls">\n                <input class="span12" id="active" name="active" type="checkbox" value="true" checked disabled/>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0);" class="btn btn-primary widget-save-requestor">Save Requestor</a>\n    <a href="javascript:void(0);" class="btn btn-primary widget-create-requestor hidden">Create New</a>\n    <a href="javascript:void(0);" class="btn widget-close-requestor" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["scheduler/availability-type-legend"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<span class="label label-info mx-5 fc-legend">\n    <i class="icon-white icon-list"></i> Legend\n</span>\n<div id="scheduler-legend">\n    <h5>Available</h5>\n    <div>\n        <span class="scheduler-legend-available"></span> Available (General)\n    </div>\n    <div class="scheduler-legend-available-container">\n    </div>\n    <h5>Unavailable</h5>\n    <div>\n        <span class="scheduler-legend-unavailable"></span> Unavailable (General)\n    </div>\n    <div class="scheduler-legend-unavailable-container">\n    </div>\n</div>';

}
return __p
};

this["JST"]["scheduler/availability-type-optgroup"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<select class="input-block-level api-v2 availabilityQuickFilters" name="type"></select>';

}
return __p
};

this["JST"]["scheduler/bulk/options/sendconfirmation"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n\n    <h3>Send Confirmations</h3>\n\n</div>\n\n<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span6">\n            <input name="periodStart" type="text" class="input-block-level periodStart" value="" placeholder="Period Start"/>\n        </div>\n\n        <div class="span6">\n            <input name="periodEnd" type="text" class="input-block-level periodEnd" value="" placeholder="Period End"/>\n        </div>\n    </div>\n    <br />\n    <div class="row-fluid">\n        <div class="control-group span6">\n            <label>\n                <span class="control-label">Send Interpreter Confirmations&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Send email confirmations to interpreters." data-original-title="Send interpreter confirmations." tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                    <input type="checkbox" class="notifyInterpreters" name="notifyInterpreters">\n                </div>\n            </label>\n        </div>\n        <div class="span6">\n            <div class="control-group">\n                <label>\n                <span class="control-label">Send Customer Confirmations&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Send email confirmations to customers." data-original-title="Send customer confirmations." tabindex="-1">?</a>\n                </span>\n                    <div class="controls">\n                        <input type="checkbox" class="notifyCustomers" name="notifyCustomers">\n                    </div>\n                </label>\n            </div>\n\n            <div class="control-group">\n                <label>\n                <span class="control-label">Group by Consumer&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Send email confirmations to customers grouped by consumer." data-original-title="Group by consumer." tabindex="-1">?</a>\n                </span>\n                    <div class="controls">\n                        <input type="checkbox" class="groupByConsumer" name="groupByConsumer">\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span12">\n            <br>\n            <button class="btn btn-primary" type="submit" id="sendConfirmations" value="save">Send</button>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["scheduler/bulk/options/sendconfirmationnodatefilters"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>\n\n    <h3>Send Confirmations</h3>\n\n</div>\n\n<div class="modal-body">\n\n    <p>You have selected <strong>' +
__e( obj.isCheckedAll ? "All jobs (with current filters applied) / " + obj.totalRecords : obj.selectedModels.length ) +
'</strong> jobs to send confirmation emails for.</p>\n\n    <div class="row-fluid">\n        <div class="control-group span6">\n            <label>\n                <span class="control-label">Send Interpreter Confirmations&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Send email confirmations to interpreters." data-original-title="Send interpreter confirmations." tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                    <input type="checkbox" class="notifyInterpreters" name="notifyInterpreters">\n                </div>\n            </label>\n        </div>\n        <div class="span6">\n            <div class="control-group">\n            <label>\n                <span class="control-label">Send Customer Confirmations&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Send email confirmations to customers." data-original-title="Send customer confirmations." tabindex="-1">?</a>\n                </span>\n                <div class="controls">\n                    <input type="checkbox" class="notifyCustomers" name="notifyCustomers">\n                </div>\n            </label>\n            </div>\n\n            <div class="control-group">\n                <label>\n                <span class="control-label">Group by Consumer&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Send email confirmations to customers grouped by consumer." data-original-title="Group by consumer." tabindex="-1">?</a>\n                </span>\n                    <div class="controls">\n                        <input type="checkbox" class="groupByConsumer" name="groupByConsumer">\n                    </div>\n                </label>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span12">\n            <br>\n            <button class="btn btn-primary" type="submit" id="sendConfirmations" value="save">Send</button>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["scheduler/filters/bookingmodal"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '';

}
return __p
};

this["JST"]["scheduler/filters/refineinterpreters"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="modal-body">\n    <div class="row-fluid">\n        <div class="span12">\n            <div class="row-fluid">\n                <div class="span6">\n                    <label for="proximity">Proximity Search On / Off</label>\n                    <input type="checkbox" id="proximity" name="proximity" value="' +
__e( obj.proximity ) +
'" ';
 if (obj.proximity) { ;
__p += ' checked ';
 } ;
__p += '>\n                </div>\n                <div class="span5">\n                    <label for="filterByExclusionFromCustomer">Customer\'s Exclusions</label>\n                    <input type="checkbox" class="exclusionCheckbox" id="filterByExclusionFromCustomer" name="filterByExclusionFromCustomer" value="' +
__e( obj.filterByExclusionFromCustomer ) +
'" ';
 if (obj.filterByExclusionFromCustomer) { ;
__p += ' checked ';
 } ;
__p += ' />\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <label for="radius">Radius ';
 if (distanceUnit) { ;
__p += '(' +
__e( distanceUnit ) +
')';
 } ;
__p += '</label>\n                    <select class="input-block-level" name="radius" id="radius">\n                        <option value="">[Choose a Radius]</option>\n                        ';
 _.each(defaultAssigmentRadiusOptions, function(option) { ;
__p += '\n                            <option value="' +
__e( option.value ) +
'" ';
 if (_.parseInt(obj.radius) === option.value) { ;
__p += ' selected ';
 } ;
__p += '>\n                                ' +
__e( option.label ) +
'\n                            </option>\n                        ';
 }); ;
__p += '\n                    </select>\n                </div>\n                <div class="span5">\n                    <label for="filterByExclusionFromInterpreter">Interpreter\'s Exclusions</label>\n                    <input type="checkbox" class="exclusionCheckbox" id="filterByExclusionFromInterpreter" name="filterByExclusionFromInterpreter" value="' +
__e( obj.filterByExclusionFromInterpreter ) +
'" ';
 if (obj.filterByExclusionFromInterpreter) { ;
__p += ' checked ';
 } ;
__p += ' />\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <label for="isAvailableOnly">Available Interpreters Only</label>\n                    <input type="checkbox" id="isAvailableOnly" name="isAvailableOnly" value="' +
__e( obj.isAvailableOnly ) +
'" ';
 if (obj.isAvailableOnly) { ;
__p += ' checked ';
 } ;
__p += ' />\n                </div>\n                <div class="span6">\n                    <label for="filterByAssignmentCriteriaFromCustomer">Assignment\'s Criteria from Customer</label>\n                    <input type="checkbox" class="exclusionCheckbox" id="filterByAssignmentCriteriaFromCustomer" name="filterByAssignmentCriteriaFromCustomer" value="' +
__e( obj.filterByAssignmentCriteriaFromCustomer ) +
'" ';
 if (obj.filterByAssignmentCriteriaFromCustomer) { ;
__p += ' checked ';
 } ;
__p += ' />\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <label for="filterByExclusionFromConsumer">Consumer\'s Exclusions</label>\n                    <input type="checkbox" class="exclusionCheckbox" id="filterByExclusionFromConsumer" name="filterByExclusionFromConsumer" value="' +
__e( obj.filterByExclusionFromConsumer ) +
'" ';
 if (obj.filterByExclusionFromConsumer) { ;
__p += ' checked ';
 } ;
__p += ' />\n                </div>\n                <div class="span6">\n                    <label for="preferredInterpreter">Preferred Interpreter on Booking</label>\n                    <input type="checkbox" class="exclusionCheckbox" id="preferredInterpreter" name="preferredInterpreter" value="' +
__e( obj.preferredInterpreter ) +
'" ';
 if (obj.preferredInterpreter) { ;
__p += ' checked ';
 } ;
__p += ' />\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span6">\n                    <label for="mileage">Mileage</label>\n                    <input type="text" id="mileage" name="mileage" size="20" value="' +
__e( obj.mileage ) +
'" />\n                    <span class="muted"><em>Automatic mileage calculation will be skipped when you enter mileage.</em></span>\n                    <p></p>\n                </div>\n                <div class="span6">\n                    <label for="cancelledJobOffers">Marked Unavailable or Declined Offer</label>\n                    <input type="checkbox" class="exclusionCheckbox" id="cancelledJobOffers" name="cancelledJobOffers" value="' +
__e( obj.cancelledJobOffers ) +
'" ';
 if (obj.cancelledJobOffers) { ;
__p += ' checked ';
 } ;
__p += ' />\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span12">\n                    <div class="gender-filter"></div>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="span12">\n                    <div class="filters"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="javascript:void(0)" class="btn btn-cancel pull-left">Cancel</a>\n    <a href="javascript:void(0)" class="btn btn-info resetDefaults">Reset Defaults</a>\n    <a href="javascript:void(0)" class="btn btn-primary refineInterpreters">Refine Interpreters</a>\n</div>\n';

}
return __p
};

this["JST"]["scheduler/filters/resourcemodal"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '';

}
return __p
};

this["JST"]["scheduler/filters/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    <p><a href="javascript:void(0);" id="job-filters">Job Filters <span class="icon-share"></span></a></p>\n    <p><a href="javascript:void(0);" id="interpreter-filters">Interpreter Filters <span class="icon-share"></span></a></p>\n</div>\n';

}
return __p
};

this["JST"]["scheduler/mainlayout/actions"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="scheduler-view-actions btn-group">\n    <button disabled title="Select booking and interpreter" class="btn btn-mini btn-info need-job-and-interpreter mark-unavailable"><i class="icon-white icon-ban-circle"></i> Mark unavailable</button>\n    <button disabled title="Select booking and interpreter" class="btn btn-mini btn-info need-job-and-interpreter offer-by-email"><i class="icon-white icon-envelope"></i> Offer by email</button>\n    <button disabled title="Select booking and interpreter" class="btn btn-mini btn-info need-job-and-interpreter offery-by-sms"><i class="icon-white icon-comment"></i> Offer by SMS</button>\n    <button disabled title="Select booking and interpreter" class="btn btn-mini btn-info need-job-and-interpreter called"><i class="icon-white icon-volume-up"></i> Called</button>\n    <button disabled title="Select booking and interpreter" class="btn btn-mini btn-info need-job-and-interpreter voice-message-left"><i class="icon-white icon-bell"></i> Voice message left</button>\n    <button class="btn btn-mini btn-info send-confirmations"><i class="icon-white icon-share-alt"></i> Send confirmations</button>\n</div>';

}
return __p
};

this["JST"]["scheduler/mainlayout/calendarview"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="calendar"></div>';

}
return __p
};

this["JST"]["scheduler/mainlayout/filters"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    <span class="darker filters">\n        <a href="javascript:void(0)" class="job-filters">\n            <span class="i-wrapper ' +
__e( customJobFilter ? 'selected' : '' ) +
'"><i class="icon-white icon-filter"></i></span> Job filters\n        </a>\n        <span>\n            <select name="jobQuickFilters" class="input-mini" style="margin: 0;"></select>\n        </span>\n\n        <a href="javascript:void(0)" class="interpreter-filters">\n            <span class="i-wrapper ' +
__e( customInterpretersFilter ? 'selected' : '' ) +
'"><i class="icon-white icon-filter"></i></span> Interpreter filters\n        </a>\n        <span>\n            <select name="interpreterQuickFilters" class="input-mini" style="margin: 0;"></select>\n        </span>\n\n        <button type="button" class="btn btn-mini btn-warning clear-filters">\n            <i class="icon-white icon-remove"></i> Clear\n        </button>\n    </span>\n</div>';

}
return __p
};

this["JST"]["scheduler/mainlayout/mapview/interpreterlist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '';

}
return __p
};

this["JST"]["scheduler/mainlayout/mapview/interpreterlistitem"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<li>\n    <label>\n        <input type="checkbox" name="interpreterIds[]" value="' +
__e( obj.id ) +
'" id="' +
__e( obj.id ) +
'"> ' +
__e( obj.displayName ) +
'\n    </label>\n</li>';

}
return __p
};

this["JST"]["scheduler/mainlayout/mapview/joblist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '';

}
return __p
};

this["JST"]["scheduler/mainlayout/mapview/joblistitem"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<li>\n    <label>\n        <input type="radio" name="bookingId[]" value="' +
__e( obj.id ) +
'" id="' +
__e( obj.id ) +
'"> Job ' +
__e( obj.id ) +
'\n        <span class="label label-info">' +
__e( obj.languageCode ) +
'</span>\n    </label>\n\n    <span class="actions pull-right"></span>\n\n    <a href="javascript:void(0);" class="pull-right centerLocation mx-5" title="Click to center map on this job">\n        <i class="icon icon-map-marker"></i>\n    </a>\n\n    <span class="pull-right map-view-job-item-date">' +
__e( date ) +
'</span>\n</li>';

}
return __p
};

this["JST"]["scheduler/mainlayout/mapview/mapview"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="map-view-container">\n    <div class="row-fluid">\n\n        <div class="span3">\n            <div class="list-container">\n                <div class="list-container-title">\n                    Unassigned jobs\n                </div>\n                <ul class="assigned-job-list job-list"></ul>\n            </div>\n            <div class="list-container">\n                <div class="list-container-title">\n                    Assigned jobs\n                </div>\n                <ul class="unassigned-job-list job-list"></ul>\n            </div>\n            <div class="list-container">\n                <div class="list-container-title">\n                    Interpreters\n                </div>\n                <ul class="interpreter-list"></ul>\n            </div>\n        </div>\n\n        <div class="span9 ml-0 mr-0">\n            <div style="height: 650px; width: 100%;" id="scheduler-map"></div>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["scheduler/mainlayout/noitemsavailable"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="no-items-available">\n    No items available\n</div>';

}
return __p
};

this["JST"]["scheduler/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="schedulerview">\n    <div id="topbar">\n\n    </div>\n    <div id="tabsview">\n\n    </div>\n</div>';

}
return __p
};

this["JST"]["scheduler/mainlayout/tabview"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<ul class="nav nav-tabs scheduler">\n    <li class="active">\n        <a class="tab" href="#scheduler-tab" data-toggle="tab"><i class="icon-th-list"></i> Scheduler</a>\n    </li>\n     <!--<li>\n        <a class="tab" href="#calendar-tab" data-toggle="tab"><i class="icon-calendar"></i> Calendar</a>\n    </li>\n    <li>\n        <a class="tab" href="#map-tab" data-toggle="tab"><i class="icon-globe"></i> Map</a>\n    </li>-->\n</ul>\n\n<div class="tab-content">\n    <div class="tab-pane active" id="scheduler-tab">\n        <div id="scheduler"></div>\n    </div>\n<!--    <div class="tab-pane" id="calendar-tab">\n\n    </div>\n    <div class="tab-pane" id="map-tab">\n\n    </div>-->\n</div>';

}
return __p
};

this["JST"]["scheduler/mainlayout/topbar"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid topbar main">\n    <div class="span6 filters"></div>\n    <div class="span6 actions"></div>\n</div>';

}
return __p
};

this["JST"]["scheduler/resources/booking"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="scheduler-resource">\n    <div class="select-job">\n        <!--\n        <input name> must be "id", otherwise this will fail:\n        this.model.set(name, value)\n        see: $.app.mixins.commonAppMixin.synch\n\n        That synch is called due to an event in\n        "change input": "synchModel"\n        triggerd from $.scheduler.schedule views\n        -->\n        <input name="id" type="radio" value="' +
__e( obj.id ) +
'" id="job-' +
__e( obj.id ) +
'">\n    </div>\n    <label for="job-' +
__e( obj.id ) +
'">\n        <span class="fc-cell-text">' +
__e( title ) +
'</span>\n    </label>\n    <div class="scheduler-actions actions"></div>\n    <div class="refine-interpreters job">\n        <div class="btn-group-wrapper">\n            <div class="btn-group">\n                <a class="btn btn-mini filter job-filter"><i class="icon-filter"></i></a>\n            </div>\n        </div>\n    </div>\n    <div class="all-interpreters">\n        <a class="filter-all" href="javascript:void(0);">all</a>\n    </div>\n    <div class="guarantee-interpreters">\n        <a class="filter-guarantee" href="javascript:void(0);">guarantee</a>\n    </div>\n    <div class="eligible-interpreters">\n        <a class="filter-eligible" href="javascript:void(0);">eligible</a>\n    </div>\n</div>';

}
return __p
};

this["JST"]["scheduler/resources/bookings-pagination"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid scheduler-resource pagination-resource">\n\n    <div class="span4">\n        <strong class="title">Jobs</strong>\n    </div>\n    <div class="span2">\n        <select class="input-mini pageSize">\n            <option value="10">10</option>\n            <option value="25" selected="">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n            <option value="250">250</option>\n            <option value="500">500</option>\n            <option value="1000">1000</option>\n        </select>\n    </div>\n    <div class="span6 text-right">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["scheduler/resources/interpreter"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="scheduler-resource" data-interpreter-id="' +
__e( obj.id ) +
'">\n    <div class="select-interpreter">\n        <input name="interpreterIds[]" value="' +
__e( obj.id ) +
'" id="interpreter-' +
__e( obj.id ) +
'" type="checkbox">\n    </div>\n    <label for="interpreter-' +
__e( obj.id ) +
'">\n        <span class="fc-cell-text">' +
__e( obj.title ) +
'</span>\n        <!--';
 if (obj.title.indexOf("a") > 0) { ;
__p += '-->\n        <!--<span class="badge badge-success">Cert</span>-->\n        <!--';
 } else if (obj.title.indexOf("n") > 0) { ;
__p += '-->\n        <!--<span class="badge badge-warning">Reg</span>-->\n        <!--';
 } else { ;
__p += '-->\n        <!--<span class="badge badge-important">Prov</span>-->\n        <!--';
 } ;
__p += '-->\n    </label>\n    <div class="actions scheduler-interpreter-actions"></div>\n</div>';

}
return __p
};

this["JST"]["scheduler/resources/interpreters-pagination"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid scheduler-resource pagination-resource">\n\n    <div class="span4">\n        <strong class="title">Interpreters</strong>\n        <input class="select-all" type="checkbox" title="Select all visible interpreters">\n    </div>\n    <div class="span2">\n        <select class="input-mini pageSize">\n            <option value="10">10</option>\n            <option value="20" selected="">20</option>\n            <option value="30">30</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n            <option value="250">250</option>\n            <option value="500">500</option>\n            <option value="1000">1000</option>\n        </select>\n    </div>\n    <div class="span6 text-right">\n        <div class="paginator"></div>\n    </div>\n\n</div>\n\n';

}
return __p
};

this["JST"]["scheduler/schedule/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid topbar scheduler">\n    <div class="pull-left calendar-controls">\n        <button class="btn btn-mini btn-info d-inline-block scheduler-today">Today</button>\n        <div class="btn-group d-inline-block">\n            <button class="btn btn-mini btn-info scheduler-previous"><i class="icon-white icon-chevron-left"></i>\n            </button>\n            <button class="btn btn-mini btn-info scheduler-next"><i class="icon-white icon-chevron-right"></i></button>\n        </div>\n        <h4 class="d-inline-block scheduler-view-title"></h4>\n        <span class="hasDatepicker mx-5">\n            Jump to Date:<input type="hidden" id="date_picker"/>\n            <img src="' +
__e( App.config.context ) +
'/images/calendar.gif" id="datePickerImage"/>\n        </span>\n    </div>\n    <div class="pull-right form-inline">\n        <form class="darker scheduler-filters mx-5 d-inline">\n            <span class="mx-5">\n                <label>Start Time:</label>\n                <input type="text" name="calStartTime" class="input-small" value="' +
__e( obj.calStartTime ) +
'"/>\n            </span>\n\n            <span class="mx-5">\n                <label>End Time:</label>\n                <input type="text" name="calEndTime" class="input-small" value="' +
__e( obj.calEndTime ) +
'"/>\n            </span>\n\n            <span class="mx-5">\n                <label>Duration (Days):</label>\n                <input type="number" min="1" name="calDuration" class="input-small" value="' +
__e( obj.calDuration ) +
'"/>\n            </span>\n\n            <span class="mx-5">\n                <button type="button" class="btn btn-mini btn-info apply" href="javascript:void(0)">\n                    apply\n                </button>\n            </span>\n\n            <span class="availability-type-optgroup-container">\n            </span>\n            <span class="availability-type-legend-container">\n            </span>\n        </form>\n    </div>\n</div>\n<div id="calendar">\n</div>';

}
return __p
};

this["JST"]["system/availabilitytypes/availabilitytype"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="service">\n\n    <h3 style="text-align: center;">' +
__e( obj.name ? obj.name : "New Item" ) +
'</h3>\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="name">Name </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="name" name="name" value="' +
__e( obj.name ) +
'" />\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="description">Description </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="description" name="description" value="' +
__e( obj.description ) +
'" />\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="nameKey">Name Key </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="nameKey" name="nameKey" value="' +
__e( obj.nameKey ) +
'" />\n            </div>\n        </div>\n\n    </div>\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="l10nKey">L10N Key </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="l10nKey" name="l10nKey" value="' +
__e( obj.l10nKey ) +
'" />\n            </div>\n        </div>\n\n        <div class="control-group span2">\n            <label class="control-label" for="colorHex">Color Hex </label>\n            <!--<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover" data-content="Optional description of the holiday." data-original-title="Color Hex">?</a>-->\n            <div class="controls">\n                <input class="span12" id="colorHex" name="colorHex" type="text" value="' +
__e( obj.colorHex ) +
'"/>\n            </div>\n        </div>\n\n    </div>\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label>\n                <span class="control-label">Available? <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Default" data-original-title="Available" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <input type="checkbox" name="available" ' +
__e( obj.available ? "checked" : "" ) +
'/>\n                </div>\n            </label>\n        </div>\n\n        <div class="control-group span4">\n            <label>\n                <span class="control-label">Default? <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Default" data-original-title="Default" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <input type="checkbox" name="defaultOption" ' +
__e( obj.defaultOption ? "checked" : "" ) +
'/>\n                </div>\n            </label>\n        </div>\n\n    </div>\n\n    <div class="pull-left controls" style="padding-top: 15px;">\n        <button name="save" value="Save" class="btn-primary btn default widget-save">Save</button>\n        <button name="new" value="Add New" class="btn-success btn widget-new">New Availability Type</button>\n        <button name="duplicate" value="Duplicate" class="btn-success btn widget-duplicate">Duplicate</button>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["system/availabilitytypes/availabilitytypelist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12 widget-filter" type="text" placeholder="Search availability types"/>\n<ul class="list availabilityType-list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n\n';

}
return __p
};

this["JST"]["system/availabilitytypes/availabilitytypelistitem"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.name ) +
'\n';

}
return __p
};

this["JST"]["system/availabilitytypes/mainlayout"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="span3">\n        <div class="availabilityType-list">\n\n        </div>\n    </div>\n    <div class="span9">\n        <div class="availabilityType">\n            <div class="pull-left controls" style="padding-top: 15px;">\n                <button value="Add New" class="btn-success btn widget-new">New Availability Type</button>\n            </div>\n        </div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["system/dashboard/company/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<form>\n    <div id="company">\n\n        <h3 style="text-align: center;">Company: ' +
__e( name ) +
'</h3>\n        <div id="accordion" style="clear: both;">\n            <h3><a href="#">' +
__e( name ) +
' Basics</a></h3>\n            <div>\n                <div class="row-fluid">\n                    <div class="span2">\n                        <div><strong>ID</strong>: ' +
__e( id ) +
'</div>\n                    </div>\n                    <div class="span4">\n                        <div><strong>UUID</strong>: ' +
__e( uuid ) +
'</div>\n                    </div>\n                </div>\n                <div class="row-fluid">\n                    <div class="control-group span4">\n                        <label class="control-label" for="name">Name</label>\n                        <div class="controls">\n                        \t<input class="span12" type="text" id="name" name="name" value="' +
__e( name ) +
'" placeholder="Company Name"/>\n                        </div>\n                    </div>\n                    <div class="control-group span8">\n\t\t\t\t\t\t<label class="control-label" for="description">Description</label>\n\t\t\t\t\t\t<div class="controls">\n\t\t\t\t\t\t\t<input class="span12" type="text" id="description" name="description" value="' +
__e( description ) +
'" placeholder="Company Description"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n                </div>\n            </div>\n            <h3><a href="#">Services</a></h3>\n            <div id="services">\n\n            </div>\n            <h3><a href="#">Configuration</a></h3>\n            <div id="config-container">\n\n            </div>\n            <h3><a href="#">DEV Twilio Configuration</a></h3>\n            <div>\n                <div>\n                    This section is for development configuration convenience.\n                </div>\n\n                <div class="control-group">\n                    <label class="control-label" for="configureBaseUrl">Base URL</label>\n                    <div class="controls">\n                        <input type="text" class="input-large" name="configureBaseUrl" value="' +
__e( App.config.twilio.dev.baseUrl || App.config.domain ) +
'"/>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label" for="configureNumber">Number</label>\n                    <div class="controls">\n                        <input type="text" class="input-large" name="configureNumber" value="' +
__e( App.config.twilio.dev.number ) +
'"/> <a href="javascript:void(0);" class="cmd-widget-configure-number"><i class="icon-cogs"></i></a>\n                    </div>\n                </div>\n                <div class="form-inline">\n                    <div class="control-group">\n                        <label class="control-label" for="configureWorkspace">Workspace</label>\n                        <div class="controls">\n                            <input type="text" class="input-large" name="configureWorkspace" value="' +
__e( App.config.twilio.dev.workspace ) +
'"/>\n                        </div>\n                    </div>\n                    <div class="control-group">\n                        <label class="control-label" for="configureWorkflow">Workflow</label>\n                        <div class="controls">\n                            <input type="text" class="input-large" name="configureWorkflow" value="' +
__e( App.config.twilio.dev.workflow ) +
'"/> <a href="javascript:void(0);" class="cmd-widget-configure-workspace"><i class="icon-cogs"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label" for="configureTwimlApp">TwiML App</label>\n                    <div class="controls">\n                        <input type="text" class="input-large" name="configureTwimlApp" value="' +
__e( App.config.twilio.dev.twimlApp ) +
'"/> <a href="javascript:void(0);" class="cmd-widget-configure-twimlApp"><i class="icon-cogs"></i></a>\n                    </div>\n                </div>\n                <div class="control-group">\n                    <label class="control-label" for="configureChat">Chat</label>\n                    <div class="controls">\n                        <input type="text" class="input-large" name="configureChat" value="' +
__e( App.config.twilio.dev.chat ) +
'"/> <a href="javascript:void(0);" class="cmd-widget-configure-chat"><i class="icon-cogs"></i></a>\n                    </div>\n                </div>\n\n            </div>\n\n        </div>\n        <div id="controls" class="pull-left" style="padding-top: 15px;">\n            <div class="row-fluid">\n                <button id="save" name="save" value="Save" class="btn-primary btn default">Save</button>\n                ';
 if (obj.mode !== "new") { ;
__p += '\n                    <button id="new" name="new" value="Add New" class="btn-success btn">New Company</button>\n                    <button id="duplicate" name="duplicate" value="Duplicate" class="btn-success btn">Duplicate</button>\n                ';
 } ;
__p += '\n                ';
 if (obj.mode != "new" && !obj.hasLanguages) { ;
__p += '\n                    <button id="setDefaultLanguages" name="setDefaultLanguages" class="btn-warning btn">Set Default Languages</button>\n                    <button id="setSignLanguages" name="setSignLanguages" class="btn-warning btn">Set Sign Languages</button>\n                ';
 } ;
__p += '\n            </div>\n         </div>\n    </div>\n</form>\n';

}
return __p
};

this["JST"]["system/dashboard/companyconfig/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="config">\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <div><strong>Config ID</strong>: ' +
__e( id ) +
'</div>\n        </div>\n        <div class="control-group span4">\n            <div><strong>Config UUID</strong>: ' +
__e( uuid ) +
'</div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="baseURL">Base URL</label>\n            <div class="controls">\n                <input type="text" class="span12" id="baseURL" name="baseURL" value="' +
__e( baseURL ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="logoUri">Logo URI</label>\n            <div class="controls">\n                <input type="text" class="span12" id="logoUri" name="logoUri" value="' +
__e( logoUri ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="iconUri">Icon URI</label>\n            <div class="controls">\n                <input type="text" class="span12" id="iconUri" name="iconUri" value="' +
__e( iconUri ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="dateFormat">Date Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="dateFormat" name="dateFormat" value="' +
__e( dateFormat ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="shortDateFormat">Short Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="shortDateFormat" name="shortDateFormat" value="' +
__e( shortDateFormat ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="longDateFormat">Long Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="longDateFormat" name="longDateFormat" value="' +
__e( longDateFormat ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="timeFormat">Time Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="timeFormat" name="timeFormat" value="' +
__e( timeFormat ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="shortTimeFormat">Short Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="shortTimeFormat" name="shortTimeFormat" value="' +
__e( shortTimeFormat ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="longTimeFormat">Long Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="longTimeFormat" name="longTimeFormat" value="' +
__e( longTimeFormat ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="jsDateFormat">Js Date Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="jsDateFormat" name="jsDateFormat" value="' +
__e( jsDateFormat ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="jsLongDateFormat">Js Long Date Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="jsLongDateFormat" name="jsLongDateFormat" value="' +
__e( jsLongDateFormat ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="jsTimeFormat">Js Time Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="jsTimeFormat" name="jsTimeFormat" value="' +
__e( jsTimeFormat ) +
'"/>\n               </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="calDateFormat">Cal Date Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="calDateFormat" name="calDateFormat" value="' +
__e( calDateFormat ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="calLongDateFormat">Cal Long Date Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="calLongDateFormat" name="calLongDateFormat" value="' +
__e( calLongDateFormat ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="calTimeFormat">Cal Time Format</label>\n            <div class="controls">\n                <input type="text" class="span12" id="calTimeFormat" name="calTimeFormat" value="' +
__e( calTimeFormat ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="passwordMinLength">Password Minimum Length</label>\n            <div class="controls">\n                <input type="text" class="span12 number" id="passwordMinLength" name="passwordMinLength" value="' +
__e( passwordMinLength ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="passwordSpecialChars">Password Special Characters</label>\n            <div class="controls">\n                <input type="text" class="span12" id="passwordSpecialChars" name="passwordSpecialChars" value="' +
__e( passwordSpecialChars ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="customPasswordMessage">Custom Password Validation Message</label>\n            <div class="controls">\n                <textarea class="span12" rows="5" id="customPasswordMessage" name="customPasswordMessage">' +
__e( customPasswordMessage ) +
'</textarea>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span3">\n            <label class="control-label" for="currencyCode">Currency</label>\n            <div class="controls">\n                <select class="span12" id="currencyCode" name="currencyCode">\n                    ' +
((__t = ( selectOptions(App.dict.currencyCode, {value: 'nameKey', noSelection: {id: '', name: '[Choose a Currency]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="currencySymbol">Symbol</label>\n            <div class="controls">\n                <input type="text" class="span12" id="currencySymbol" class="input-block-level" name="currencySymbol" value="' +
__e( currencySymbol ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="distanceUnits">Distance</label>\n            <div class="controls">\n                <select class="span12" id="distanceUnits" name="distanceUnits.id">\n                    ' +
((__t = ( selectOptions(App.dict.distanceUnitType, {noSelection: {id: '', name: '[Choose a Distance]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="distanceRadius">Distance Radius</label>\n            <div class="controls">\n                <input type="text" class="span12" id="distanceRadius" name="distanceRadius" value="' +
__e( distanceRadius ) +
'"/>\n                <p>Miles (3960) / Kilometers (6371)</p>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="billActuals">Bill Actuals?</label>\n            <div class="controls">\n                <input type="checkbox" id="billActuals" name="billActuals" ';
 if (billActuals) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( billActuals ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="mileageOneWay">Mileage is One Way?</label>\n            <div class="controls">\n                <input type="checkbox" id="mileageOneWay" name="mileageOneWay" ';
 if (mileageOneWay) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( mileageOneWay ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="roundNearestNeighbor">Round Increments to Nearest Neighbor?</label>\n            <div class="controls">\n                <input type="checkbox" id="roundNearestNeighbor" name="roundNearestNeighbor" ';
 if (roundNearestNeighbor) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( roundNearestNeighbor ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span3">\n            <label class="control-label" for="notificationFrom">From Email</label>\n            <div class="controls">\n                <input type="text" class="span12" id="notificationFrom" name="notificationFrom" value="' +
__e( notificationFrom ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="invoiceNotificationFrom">Invoice From Email</label>\n            <div class="controls">\n                <input type="text" class="span12" id="invoiceNotificationFrom" name="invoiceNotificationFrom" value="' +
__e( invoiceNotificationFrom ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="paymentNotificationFrom">Payment From Email</label>\n            <div class="controls">\n                <input type="text" class="span12" id="paymentNotificationFrom" name="paymentNotificationFrom" value="' +
__e( paymentNotificationFrom ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="eligibilityNotificationFrom">Employment Eligibility From Email</label>\n            <div class="controls">\n                <input type="text" class="span12" id="eligibilityNotificationFrom" name="eligibilityNotificationFrom" value="' +
__e( eligibilityNotificationFrom ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="availabilityNotificationFrom">Interpreter Availability From Email</label>\n            <div class="controls">\n                <input type="text" class="span12" id="availabilityNotificationFrom" name="availabilityNotificationFrom" value="' +
__e( availabilityNotificationFrom ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="notifyCustomers">Customer Notifications On?</label>\n            <div class="controls">\n                <input type="checkbox" id="notifyCustomers" name="notifyCustomers" ';
 if (notifyCustomers) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( notifyCustomers ) +
'" placeholder="Customer Notifications On"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="notifyContacts">Contact Notifications On?</label>\n            <div class="controls">\n                <input type="checkbox" id="notifyContacts" name="notifyContacts" ';
 if (notifyContacts) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( notifyContacts ) +
'" placeholder="Contact Notifications On"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="countryCode">Country</label>\n            <div class="controls">\n                <input type="text" class="span12" id="countryCode" name="countryCode" value="' +
__e( countryCode ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="timeZone">Time Zone</label>\n            <div class="controls">\n                <select class="span12" id="timeZone" name="timeZone">\n                    ' +
((__t = ( selectOptions(App.dict.timeZones, {display:'gmtOffset', noSelection: {id: '', name: '[Choose a Time Zone]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="locale">Locale</label>\n            <div class="controls">\n                <select class="span12" id="locale" name="locale">\n                    ' +
((__t = ( selectOptions(App.dict.timeZones, {display:'gmtOffset', noSelection: {id: '', name: '[Choose a Locale]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span12">\n            <label class="control-label" for="fieldWatchList">Field Watch List</label>\n            <div class="controls">\n                <input type="text" class="span12" id="fieldWatchList" name="fieldWatchList" value="' +
__e( fieldWatchList ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <hr/>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="emailEnabled">Email Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="emailEnabled" name="emailEnabled" ';
 if (emailEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( emailEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="span4">\n            <label class="control-label" for="useSes">Amazon SES?</label>\n            <div class="controls">\n                <input type="checkbox" id="useSes" name="useSes" ';
 if (useSes) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( useSes ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="useSmtp">SMTP?</label>\n            <div class="controls">\n                <input type="checkbox" id="useSmtp" name="useSmtp" ';
 if (useSmtp) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( useSmtp ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="smtpProtocol">Protocol</label>\n            <div class="controls">\n                <input type="text" class="span12" id="smtpProtocol" name="smtpProtocol" value="' +
__e( smtpProtocol ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="">SMTP Host</label>\n            <input type="text" class="span12" id="smtpHostname" name="smtpHostname" value="' +
__e( smtpHostname ) +
'"/>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="smtpPort">SMTP Port</label>\n            <div class="controls">\n                <input type="text" class="span12" id="smtpPort" name="smtpPort" value="' +
__e( smtpPort ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="smtpUsername">SMTP Username</label>\n            <div class="controls">\n                <input type="text" class="span12" id="smtpUsername" name="smtpUsername" value="' +
__e( smtpUsername ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="smtpPassword">SMTP Password</label>\n            <div class="controls">\n                <input type="text" class="span12" id="smtpPassword" name="smtpPassword" value="' +
__e( smtpPassword ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="smtpAuth">Auth</label>\n            <div class="controls">\n                <input type="text" class="span12" id="smtpAuth" name="smtpAuth" value="' +
__e( smtpAuth ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="usePostmark">Postmark?</label>\n            <div class="controls">\n                <input type="checkbox" id="usePostmark" name="usePostmark" ';
 if (usePostmark) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( usePostmark ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="useMySmtp">My SMTP?</label>\n            <div class="controls">\n                <input type="checkbox" id="useMySmtp" name="useMySmtp" ';
 if (useMySmtp) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( useMySmtp ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span4">\n            <label class="control-label" for="mySmtpSender">My SMTP Sender</label>\n            <div class="controls">\n                <input type="text" class="span12" id="mySmtpSender" name="mySmtpSender" value="' +
__e( mySmtpSender ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <hr/>\n    <div class="row-fluid">\n        <div class="control-group span3">\n            <label class="control-label" for="phoneEnabled">Phone Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="phoneEnabled" name="phoneEnabled" ';
 if (phoneEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( phoneEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="videoEnabled">Video Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="videoEnabled" name="videoEnabled" ';
 if (videoEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( videoEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="videoGroupRoomEnabled">Video Group Room Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="videoGroupRoomEnabled" name="videoGroupRoomEnabled" ';
 if (videoGroupRoomEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( videoGroupRoomEnabled ) +
'"/>\n            </div>\n        </div>\n\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span3">\n            <label class="control-label" for="organizationEnabled">Organizations Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="organizationEnabled" name="organizationEnabled" ';
 if (organizationEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( organizationEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="overnightNightZonesEnabled">Overnight / Night Zones Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="overnightNightZonesEnabled" name="overnightNightZonesEnabled" ';
 if (overnightNightZonesEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( overnightNightZonesEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="baseRatesEnabled">Base Rates Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="baseRatesEnabled" name="baseRatesEnabled" ';
 if (baseRatesEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( baseRatesEnabled ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <hr/>\n    <div class="row-fluid">\n        <div class="control-group span3">\n            <label class="control-label" for="smsEnabled">SMS Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="smsEnabled" name="smsEnabled" ';
 if (smsEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( smsEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="smsNumber">SMS Phone Number?</label>\n            <div class="controls">\n                <input type="text" class="span12" id="smsNumber" name="smsNumber" value="' +
__e( smsNumber ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span3">\n            <label class="control-label" for="useTwilio">Twilio Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="useTwilio" name="useTwilio" ';
 if (useTwilio) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( useTwilio ) +
'"/>\n            </div>\n        </div>\n    </div>\n\n    <hr/>\n    <h4>Module Settings</h4>\n    <div class="row-fluid">\n        <div class="control-group span2">\n            <label class="control-label" for="ivrEnabled">IVR Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="ivrEnabled" name="ivrEnabled" ';
 if (ivrEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( ivrEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span2">\n            <label class="control-label" for="vriEnabled">VRI Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="vriEnabled" name="vriEnabled" ';
 if (vriEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( vriEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span2">\n            <label class="control-label" for="opiEnabled">OPI Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="opiEnabled" name="opiEnabled" ';
 if (opiEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( opiEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span2">\n            <label class="control-label" for="chatEnabled">Chat Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="chatEnabled" name="chatEnabled" ';
 if (chatEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( chatEnabled ) +
'"/>\n            </div>\n        </div>\n        <div class="control-group span2">\n            <label class="control-label" for="dispatchEnabled">Dispatch Enabled?</label>\n            <div class="controls">\n                <input type="checkbox" id="dispatchEnabled" name="dispatchEnabled" ';
 if (dispatchEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( dispatchEnabled ) +
'"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="control-group span8">\n            <label class="control-label" for="overflowPartners">Overflow Partners</label>\n            <div class="controls">\n                <input type="text" class="input-block-level" id="overflowPartners" name="overflowPartners" value="' +
__e( overflowPartners ) +
'"/>\n            </div>\n        </div>\n    </div>\n\n    <hr/>\n    <div class="row-fluid">\n        <div class="control-group span2">\n            <label>Partner Message Enabled?</label>\n            <input type="checkbox" id="partnerMessageEnabled" name="partnerMessageEnabled" ';
 if (partnerMessageEnabled) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( partnerMessageEnabled ) +
'"/>\n        </div>\n\n        <div class="control-group span6">\n            <label>Partner Message </label>\n            <textarea style="width:100%;" class="wysiwyg" id="partnerMessage" name="partnerMessage">' +
__e( partnerMessage ) +
'</textarea>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span6">\n            <label>Custom Style Sheet </label>\n            <textarea style="width:100%;" id="customStyleSheet" name="customStyleSheet" rows="15">' +
__e( customStyleSheet ) +
'</textarea>\n        </div>\n        <div class="control-group span2">\n            <label>Custom Branding Enabled</label>\n            <input type="checkbox" id="enableCustomBranding" name="enableCustomBranding" ';
 if (enableCustomBranding) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( enableCustomBranding ) +
'"/>\n        </div>\n    </div>\n\n    <hr/>\n\n    <div class="row-fluid">\n        <div class="control-group span3">\n            <label class="control-label" for="dailyDigestCron">Job Offer Daily Digest Cron</label>\n            <div class="controls">\n                <input type="text" class="span12" id="dailyDigestCron" name="dailyDigestCron" value="' +
__e( dailyDigestCron ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label" for="closeReminderCron">Close Reminder Cron</label>\n            <div class="controls">\n                <input type="text" class="span12" id="closeReminderCron" name="closeReminderCron" value="' +
__e( closeReminderCron ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label" for="autoOfferCron">Auto Offer Cron</label>\n            <div class="controls">\n                <input type="text" class="span12" id="autoOfferCron" name="autoOfferCron" value="' +
__e( autoOfferCron ) +
'"/>\n            </div>\n        </div>\n\n        <div class="control-group span3">\n            <label class="control-label" for="autoReOfferCron">Auto Re-Offer Cron</label>\n            <div class="controls">\n                <input type="text" class="span12" id="autoReOfferCron" name="autoReOfferCron" value="' +
__e( autoReOfferCron ) +
'"/>\n            </div>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <div class="control-group span4">\n            <label class="control-label" for="restrictCustomerReportContent">Restrict Customer Portal Report</label>\n            <div class="controls">\n                <input type="checkbox" id="restrictCustomerReportContent" name="restrictCustomerReportContent" ';
 if (restrictCustomerReportContent) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( restrictCustomerReportContent ) +
'"/>\n            </div>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["system/dashboard/companylist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12" type="text" name="filter" placeholder="Search companies"/>\n<ul id="companies" class="list">\n</ul>\n';

}
return __p
};

this["JST"]["system/dashboard/listitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if(obj.name && obj.name.length > 0) { ;
__p += ' ' +
__e( obj.name ) +
' ';
 } else { ;
__p += ' New Company ';
 } ;
__p += ' ';
 if(obj.description && obj.description.length > 0) { ;
__p += '(' +
__e( obj.description ) +
') ';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["system/dashboard/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="span3">\n        <div id="companies-control">\n\n        </div>\n    </div>\n    <div class="span9">\n        <div id="edit-panel">\n            <div id="controls" class="pull-left" style="padding-top: 15px;">\n                <button id="new" name="new" value="Add New" class="btn-success btn">New Company</button>\n            </div>\n        </div>\n    </div>\n\n</div> <!-- / content -->\n';

}
return __p
};

this["JST"]["system/ivr/call"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 obj.uniqueDisplayIdentifier = _.uniqueId("callTemplate-") ;
__p += '\n<div class="accordion-group">\n    <div class="accordion-heading">\n        <a class="accordion-toggle" data-toggle="collapse" data-target="#' +
__e( obj.uniqueDisplayIdentifier ) +
'">\n\n            ' +
__e( obj.name ) +
'\n        </a>\n    </div>\n    <div id="' +
__e( obj.uniqueDisplayIdentifier ) +
'" class="accordion-body collapse ' +
__e( !obj.id ? "in" : "" ) +
'">\n    <div class="accordion-inner">\n\n        <h2>' +
__e( obj.name ) +
'</h2>\n\n        <div>\n            <input type="text" name="name" value="' +
__e( obj.name ) +
'" placeholder="name"/>\n        </div>\n        <div>\n            <input type="text" name="description" value="' +
__e( obj.description ) +
'" placeholder="description"/>\n        </div>\n        <div>\n            <input type="text" name="maxRetries" value="' +
__e( obj.maxRetries ) +
'" placeholder="maximum # of retries"/>\n        </div>\n        <div>\n            <input type="text" name="phoneNumber" value="' +
__e( obj.phoneNumber ) +
'" placeholder="phone number"/>\n        </div>\n        <div>\n            <input type="text" name="operatorNumber" value="' +
__e( obj.operatorNumber ) +
'" placeholder="operator number"/>\n        </div>\n        <div>\n            Operator Error Msg\n            <textarea name="operatorErrorMsg" style="width: 100%;" rows="5">' +
__e( obj.operatorErrorMsg ) +
'</textarea>\n        </div>\n\n\n        <h3>Steps</h3>\n        <div class="accordion steps">\n            this is where the steps go\n        </div>\n\n        <a href="#" class="widget-add-step">Add Step</a>\n\n        <a href="#" class="widget-save-template">Save Call Template</a>\n\n    </div>\n</div>\n\n';

}
return __p
};

this["JST"]["system/ivr/callstep"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 obj.uniqueDisplayIdentifier = _.uniqueId("callStep-") ;
__p += '\n<div class="accordion-group">\n    <div class="accordion-heading">\n        <a class="accordion-toggle" data-toggle="collapse" data-target="#' +
__e( obj.uniqueDisplayIdentifier ) +
'">\n\n            ' +
__e( obj.name ) +
'\n        </a>\n    </div>\n    <div id="' +
__e( obj.uniqueDisplayIdentifier ) +
'" class="accordion-body collapse ' +
__e( !obj.id ? "in" : "" ) +
'">\n    <div class="accordion-inner">\n\n        <div>\n            <input type="text" name="name" value="' +
__e( obj.name ) +
'" placeholder="name">' +
__e( obj.name ) +
'</input>\n        </div>\n        <div>\n            Input\n            <textarea name="input" style="width: 100%;" rows="5">' +
__e( obj.input ) +
'</textarea>\n        </div>\n        <div>\n            Error\n            <textarea name="error" style="width: 100%;" rows="5">' +
__e( obj.error ) +
'</textarea>\n        </div>\n        <div>\n            Output\n            <textarea name="output" style="width: 100%;" rows="5">' +
__e( obj.output ) +
'</textarea>\n        </div>\n        <div>\n            <input type="text" name="next" value="' +
__e( obj.next ) +
'" placeholder="next">' +
__e( obj.next ) +
'</input>\n        </div>\n\n        <a href="#" class="widget-delete-step">Delete</a>\n\n    </div>\n</div>\n\n';

}
return __p
};

this["JST"]["system/ivr/companylist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12 widget-filter" type="text" placeholder="Search companies"/>\n<ul class="list company-list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n\n';

}
return __p
};

this["JST"]["system/ivr/companylistitem"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.name ) +
'\n';

}
return __p
};

this["JST"]["system/ivr/mainlayout"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#system-templates" data-toggle="tab">System Templates</a></li>\n    <li><a href="#company-templates" data-toggle="tab">Company Templates</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n    <div class="tab-pane active" id="system-templates">\n\n        <div class="system-call-templates">\n\n        </div>\n\n    </div>\n\n    <div class="tab-pane" id="company-templates">\n        <div class="row-fluid">\n            <div class="span3">\n                <div class="company-list">\n\n                </div>\n            </div>\n            <div class="span9">\n                <div class="company-call-templates">\n                    <h3>Please select a company.</h3>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["system/ivr/manageivr"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div id="content">\n\n    <div class="accordion" id="calls">\n\n    </div>\n\n    <a href="#" class="widget-new-template">New Call Template</a>\n</div> <!-- / content -->\n';

}
return __p
};

this["JST"]["system/payables/mainlayout"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="span3">\n        <div class="payable-list">\n\n        </div>\n    </div>\n    <div class="span9">\n        <div class="payable">\n            <div class="pull-left controls" style="padding-top: 15px;">\n                <button value="Add New" class="btn-success btn widget-new">New Payable Item</button>\n            </div>\n        </div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["system/payables/payable"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="service">\n\n    <h3 style="text-align: center;">' +
__e( obj.name ? obj.name : "New Item" ) +
'</h3>\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="name">Name </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="name" name="name" value="' +
__e( obj.name ) +
'" />\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="description">Description </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="description" name="description" value="' +
__e( obj.description ) +
'" />\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="nameKey">Name Key </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="nameKey" name="nameKey" value="' +
__e( obj.nameKey ) +
'" />\n            </div>\n        </div>\n\n    </div>\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="l10nKey">L10N Key </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="l10nKey" name="l10nKey" value="' +
__e( obj.l10nKey ) +
'" />\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="inOrder">Sequence </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="inOrder" name="inOrder" value="' +
__e( obj.inOrder ) +
'" />\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="unitDescription">Unit Description </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="unitDescription" name="unitDescription" value="' +
__e( obj.unitDescription ) +
'" />\n            </div>\n        </div>\n\n    </div>\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label>\n                <span class="control-label">Additive? <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Additive" data-original-title="Additive" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <input type="checkbox" name="additive" ' +
__e( obj.additive ? "checked" : "" ) +
'/>\n                </div>\n            </label>\n        </div>\n\n        <div class="control-group span4">\n            <label>\n                <span class="control-label">Default? <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Default" data-original-title="Default" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <input type="checkbox" name="defaultOption" ' +
__e( obj.defaultOption ? "checked" : "" ) +
'/>\n                </div>\n            </label>\n        </div>\n\n    </div>\n\n    <div class="pull-left controls" style="padding-top: 15px;">\n        <button name="save" value="Save" class="btn-primary btn default widget-save">Save</button>\n        <button name="new" value="Add New" class="btn-success btn widget-new">New Payable Item</button>\n        <button name="duplicate" value="Duplicate" class="btn-success btn widget-duplicate">Duplicate</button>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["system/payables/payablelist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12 widget-filter" type="text" placeholder="Search payable items"/>\n<ul class="list payable-list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n\n';

}
return __p
};

this["JST"]["system/payables/payablelistitem"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.name ) +
'\n';

}
return __p
};

this["JST"]["system/report/visitAudit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <h4 class="section-header">Booking Audit History Field Level</h4>\n\n    <div class="span8 control-group">\n        <label>\n            <span class="control-label"><span class="required">Booking ID</span></span>\n\n            <div class="controls">\n                <div class="span4">\n                    <input name="jobId" class="input-block-level" type="text" id="jobId"/>\n                </div>\n                <div class="span4">\n                    <button id="exportBookingAudit" name="new" value="Export" class="btn-success btn">Export</button>\n                </div>\n            </div>\n        </label>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["system/services/mainlayout"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="span3">\n        <div class="service-list">\n\n        </div>\n    </div>\n    <div class="span9">\n        <div class="service">\n            <div class="pull-left controls" style="padding-top: 15px;">\n                <button value="Add New" class="btn-success btn widget-new">New Service</button>\n            </div>\n        </div>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["system/services/service"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="service">\n\n    <h3 style="text-align: center;">' +
__e( obj.name ? obj.name : "New Item" ) +
'</h3>\n    <div class="row-fluid">\n\n        <!--String name-->\n        <!--String description-->\n        <!--String nameKey-->\n        <!--String l10nKey-->\n        <!--Integer inOrder-->\n        <!--String unitDescription-->\n        <!--Boolean additive = true-->\n        <!--Boolean defaultOption = false-->\n\n        <div class="control-group span4">\n            <label class="control-label" for="name">Name </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="name" name="name" value="' +
__e( obj.name ) +
'" />\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="description">Description </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="description" name="description" value="' +
__e( obj.description ) +
'" />\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="nameKey">Name Key </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="nameKey" name="nameKey" value="' +
__e( obj.nameKey ) +
'" />\n            </div>\n        </div>\n\n    </div>\n    <div class="row-fluid">\n\n        <div class="control-group span4">\n            <label class="control-label" for="l10nKey">L10N Key </label>\n            <div class="controls">\n                <input class="input-block-level" type="text" id="l10nKey" name="l10nKey" value="' +
__e( obj.l10nKey ) +
'" />\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label class="control-label" for="payableItemType">Payable Item Type </label>\n            <div class="controls">\n                <select class="api-v2" id="payableItemType" name="payableItemType">\n                    ' +
__e( selectOptionsAsync("#payableItemType", new $.core.PayableItemTypeCollection(), {selected: obj.payableItemType ? obj.payableItemType.id : "", noSelection: {id: '', name: '[Choose a Payable Item Type]'}, sidx: "name", sord: "asc"}) ) +
'\n                </select>\n            </div>\n        </div>\n\n        <div class="control-group span4">\n            <label>\n                <span class="control-label">Default? <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Default" data-original-title="Default" tabindex="-1">?</a></span>\n                <div class="controls">\n                    <input type="checkbox" name="defaultOption" ' +
__e( obj.defaultOption ? "checked" : "" ) +
'/>\n                </div>\n            </label>\n        </div>\n\n    </div>\n\n    <div class="pull-left controls" style="padding-top: 15px;">\n        <button name="save" value="Save" class="btn-primary btn default widget-save">Save</button>\n        <button name="new" value="Add New" class="btn-success btn widget-new">New Service</button>\n        <button name="duplicate" value="Duplicate" class="btn-success btn widget-duplicate">Duplicate</button>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["system/services/servicelist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12 widget-filter" type="text" placeholder="Search services"/>\n<ul class="list service-list">\n</ul>\n<div class="pagination">\n    <ul>\n        <li class="previous"><a href="#">Prev</a></li>\n        <li class="next"><a href="#">Next</a></li>\n    </ul>\n</div>\n\n';

}
return __p
};

this["JST"]["system/services/servicelistitem"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.name ) +
'\n';

}
return __p
};

this["JST"]["system/user/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n\n    <div class="span3">\n        <div id="users-control">\n        </div>\n    </div>\n    <div class="span9">\n\n        <div id="edit-panel">\n            <div id="controls" class="" style="padding-top: 15px;">\n                <button id="new" class="btn-success btn" name="new" value="Add New">New User</button>\n            </div>\n        </div>\n\n    </div>\n\n</div> <!-- / row -->\n';

}
return __p
};

this["JST"]["system/user/userlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<input class="span12" type="text" id="filter" placeholder="Search users"></input>\n<ul id="users" class="list">\n</ul>\n';

}
return __p
};

this["JST"]["system/user/userlistitem/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p +=
__e( obj.username + " (" + obj.firstName + " " + obj.lastName + ")" ) +
'\n';

}
return __p
};

this["JST"]["system/user/userview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="user" style="margin-left: 25px;">\n    <h4 style="text-align: center;">User: ' +
__e( obj.username + " (" + obj.firstName + " " + obj.lastName + ")" ) +
'</h4>\n    <input type="hidden" value="' +
__e( obj.id ) +
'">\n\n    <h4>Details</h4>\n    <div class="row-fluid">\n        <div class="span3">\n            <div>\n                <label>Username</label>\n                <input class="span12" type="text" id="username" name="username" value="' +
__e( obj.username ) +
'" placeholder="Username"/>\n            </div>\n            <div>\n                <label>Email</label>\n                <input class="span12" type="text" id="email" name="email" value="' +
__e( obj.email ) +
'" placeholder="Email Address"/>\n            </div>\n        </div>\n\n        <div class="span3">\n            <div>\n                <label>Password</label>\n                <input class="span12" type="password" id="password" name="password" value="' +
__e( obj.password ) +
'" placeholder="Password"/>\n            </div>\n            <div>\n                <label>Confirm Password</label>\n                <input class="span12" type="password" id="passwordConfirm" name="passwordConfirm" value="' +
__e( obj.password ) +
'" placeholder="Password"/>\n            </div>\n        </div>\n\n        <div class="span6">\n            <div class="row-fluid">\n                <div class="span6">\n                    <label>First Name</label>\n                    <input class="span12" type="text" id="firstName" name="firstName" value="' +
__e( obj.firstName ) +
'" placeholder="First name"/>\n                </div>\n\n                <div class="span6">\n                    <label>Last Name</label>\n                    <input class="span12" type="text" id="lastName" name="lastName" value="' +
__e( obj.lastName ) +
'" placeholder="Last name"/>\n                </div>\n            </div>\n\n            <div class="row-fluid">\n                <div class="control-group required span6">\n                    <label class="control-label" for="businessUnit">Business Unit</label>\n                        <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover" data-content="The business unit this user is associated with. If a user is associated with a business unit directly they will not have the option to switch between business units." data-original-title="Business Unit">?</a>\n                    <div class="controls">\n                        ' +
__e( obj.businessUnit ? obj.businessUnit.name : "N/A" ) +
'\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <fieldset class="span4">\n            <legend>Roles</legend>\n            <div class="roles">\n\n            </div>\n        </fieldset>\n        <fieldset class="span4">\n            <legend>Configuration</legend>\n            <div class="row-fluid">\n                <div class="span12">\n                    <label for="company">Company</label>\n                    <select class="span12 api-v2" id="company" name="company">\n                        ' +
__e( selectOptionsAsync("#company", new $.core.CompanyCollection(), {selected: obj.company ? obj.company.id : "", noSelection: {id: '', name: '[Choose a Company]'}}) ) +
'\n                    </select>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="span12">\n                    <label for="primaryCompany">Primary Company</label>\n                    <select class="span12 api-v2" id="primaryCompany" name="primaryCompany">\n                        ' +
__e( selectOptionsAsync("#primaryCompany", new $.core.CompanyCollection(), {selected: obj.primaryCompany ? obj.primaryCompany.id : "", noSelection: {id: '', name: '[Choose a Company]'}}) ) +
'\n                    </select>\n                </div>\n            </div>\n            ';
 if (obj.roleType === "Interpreter") { ;
__p += '\n            <div class="row-fluid">\n                <div class="control-group one-button">\n                    <!--<label class="control-label" for="interpreterList">Interpreter</label>-->\n                    <div class="input-append input-block-level">\n                        <div class="append-wrapper">\n                            <button title="Clear interpreter" id="interpreterX" class="btn"><i class="icon icon-remove"></i></button>\n                        </div>\n                        <div class="input-wrapper">\n                            <input class="span12 api-delegate" type="text" id="interpreterList" name="interpreterList" value="';
 if ( obj.interpreter ) { ;
__p +=
__e( obj.interpreter.displayName );
 } ;
__p += '" placeholder="Interpreter"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            ';
 } ;
__p += '\n        </fieldset>\n        <fieldset class="span4">\n            <legend>Settings</legend>\n            <div class="span12">\n                <input type="checkbox" id="enabled" name="enabled" value="' +
__e( obj.enabled ) +
'" ';
 if (obj.enabled) { ;
__p += ' checked ';
 } ;
__p += ' placeholder="Account Enabled"/>\n                <label>Account Enabled</label>\n            </div>\n\n            <div class="span12">\n                <input type="checkbox" id="accountExpired" name="accountExpired" ';
 if (obj.accountExpired) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( obj.accountExpired ) +
'" placeholder="Account Expired"/>\n                <label for="accountExpired">Account Expired</label>\n            </div>\n\n            <div class="span12">\n                <input type="checkbox" id="accountLocked" name="accountLocked" ';
 if (obj.accountLocked) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( obj.accountLocked ) +
'" placeholder="Account Locked"/>\n                <label for="accountLocked">Account Locked</label>\n            </div>\n\n            <div class="span12">\n                <input type="checkbox" id="passwordExpired" name="passwordExpired" ';
 if (obj.passwordExpired) { ;
__p += ' checked ';
 } ;
__p += ' value="' +
__e( obj.passwordExpired ) +
'" placeholder="Password Expired"/>\n                <label for="passwordExpired">Password Expired</label>\n            </div>\n        </fieldset>\n    </div>\n\n    <div id="controls" class="" style="padding-top: 15px;">\n        <button id="save" class="btn-primary btn default" name="save" value="Save">Save</button>\n        <button id="new" class="btn-success btn" name="new" value="Add New">New User</button>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["user/profile/employment/eligibilities"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Employment Eligibility</h4>\n<div class="eligibility-list"></div>\n';

}
return __p
};

this["JST"]["user/profile/employment/eligibility"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.mode === "edit" && obj.criteriaType != "hierarchy") { ;
__p += '\n<div class="alert\n            ' +
__e( obj.validatedStatus == 'pass' ? 'alert-success':'' ) +
'\n            ' +
__e( obj.validatedStatus == 'warning' ? 'alert-warning':'' ) +
'\n            ' +
__e( obj.validatedStatus == 'fail' ? 'alert-danger':'' ) +
'">\n    <div class="row-fluid">\n        <div id=\'action\' class="span1">\n            <a id="save" href="javascript:void(0);" title="Save Eligibility"><i class="icon icon-save"></i></a>\n            <a id="undo" href="javascript:void(0);" title="Undo Changes"><i class="icon icon-undo"></i></a>\n        </div>\n        <div id=\'criteria\' class="span5">\n            <b>' +
__e( obj.criteria.name ) +
'</b> (' +
__e( obj.enforcementPolicy ) +
')\n            <br/>\n            ' +
__e( obj.criteria.description ) +
'\n            <br>\n            <b>Validated By:</b> ' +
__e( obj.validatedBy || "Not yet validated." ) +
'\n        </div>\n        <div id=\'validatedContainer\' class="span2">\n            <h5>State</h5>\n            <div class="controls">\n                <select name="state" id="state" class="input-block-level" disabled>\n                    ' +
((__t = ( selectOptions(App.dict.employmentEligibilityStates, {selected: obj.state ? obj.state.id : '2', display:'name', noSelection: {id: '', name: '[Choose a state]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n            <!--' +
__e( obj.state ? obj.state.name : "asdf" ) +
'-->\n        </div>\n        <div id=\'userValidatedDateContainer\' class="span2">\n            <h5>' +
__e( obj.state ? obj.state.name : "Invalid" ) +
' Since</h5>\n            <div class="controls">\n                <input id="validatedDate" name="validatedDate" disabled data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date" type=\'text\' readonly value=\'' +
__e( obj.validatedDate ) +
'\' autocomplete="off"/>\n            </div>\n        </div>\n        <div id=\'userValidUntilContainer\' class="span2">\n            <h5>' +
__e( obj.state ? obj.state.name : "Invalid" ) +
' Until</h5>\n            <div class="controls">\n                <input id="validUntil" name="validUntil" disabled data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date" type=\'text\' readonly value=\'' +
__e( obj.validUntil ) +
'\' autocomplete="off"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span1"></div>\n        <div id=\'notes\' class="span4">\n            <h5>Notes</h5>\n            <div class="controls">\n                <textarea id="notes" name="notes" rows="4">' +
__e( obj.notes ) +
'</textarea>\n            </div>\n        </div>\n        <div class="span4">\n            <button type="button" class="addFile btn btn-success">Add Backing Document</button>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <ul class="documents" style="list-style: none;"></ul>\n    </div>\n</div>\n';
 } else { ;
__p += '\n\n<div class="alert\n            ' +
__e( obj.validatedStatus == 'pass' ? 'alert-success':'' ) +
'\n            ' +
__e( obj.validatedStatus == 'warning' ? 'alert-warning':'' ) +
'\n            ' +
__e( obj.validatedStatus == 'fail' ? 'alert-danger':'' ) +
'">\n    <div class="row-fluid">\n    ';
 if (obj.criteriaType != "hierarchy") { ;
__p += '\n        <div id=\'action\' class="span1">\n            <a id="edit" href="javascript:void(0);" title="Edit Eligibility"><i class="icon icon-pencil"></i></a>\n        </div>\n    ';
 } ;
__p += '\n        <div id=\'criteria\' class="span5">\n            <b>' +
__e( obj.criteria.name ) +
'</b> (' +
__e( obj.enforcementPolicy ) +
')\n            <br/>\n            ' +
__e( obj.criteria.description ) +
'\n            <br>\n            <b>Validated By:</b> ' +
__e( obj.validatedBy || "Not yet validated." ) +
'\n        </div>\n        <div id=\'validatedContainer\' class="span2">\n            <h5>State</h5>\n            <!--<div class="controls">-->\n                <!--<select name="state" id="state" class="input-block-level" disabled>-->\n                    <!--' +
((__t = ( selectOptions(App.dict.employmentEligibilityStates, {selected: obj.state ? obj.state.id : '2', display:'name', noSelection: {id: '', name: '[Choose a state]'}}) )) == null ? '' : __t) +
'-->\n                <!--</select>-->\n            <!--</div>-->\n            <!--<input type=\'checkbox\' disabled ' +
__e( obj.validated ? "checked" : "" ) +
'>-->\n            ' +
__e( obj.state ? obj.state.name : "Invalid" ) +
'\n        </div>\n        <div class="span2">\n            <h5>' +
__e( obj.state ? obj.state.name : "Invalid" ) +
' Since</h5>\n            <div id=\'userValidatedDateContainer\' data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date">' +
__e( obj.validatedDate ) +
'</div>\n        </div>\n        ';
 if (obj.state && obj.state.nameKey == "valid") { ;
__p += '\n        <div class="span2">\n            <h5>' +
__e( obj.state ? obj.state.name : "Invalid" ) +
' Until</h5>\n            <div id=\'userValidUntilContainer\' data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date">' +
__e( obj.validUntil ) +
'</div>\n        </div>\n        ';
 } ;
__p += '\n    </div>\n    <div class="row-fluid">\n        <div class="span1"></div>\n        <div id=\'notes\' class="span4">\n            <h5>Notes</h5>\n\n            <p> ' +
__e( obj.notes ) +
'</p>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <ul class="documents" style="list-style: none;"></ul>\n    </div>\n</div>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["user/profile/employment/eligibilityEdit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="info" class="alert ';
 if (!id) { ;
__p += ' alert-success @> } else if (validatedStatus == \'pass\') { @> alert-success ';
 } else if (validatedStatus == 'warning') { ;
__p += ' alert-warning ';
 } else { ;
__p += ' alert-error ';
 } ;
__p += '">\n    <a class="delete pull-right" href="javascript:void(0);" title="Delete criteria">Delete <i class="icon icon-remove"></i></a>\n    <div class="row-fluid">\n        <div class="span4">\n            <h4 class="alert-heading"><i title="Qualification / Certification" class="icon icon-check"></i>\n                ';
 if (name.length > 0) { ;
__p +=
__e( name + (enforcementPolicy ? "(" + enforcementPolicy + ")" : "" ) );
 } else { ;
__p += '\n                <select name="criteria.id" id="criteria.id">\n                    ' +
((__t = ( selectOptions(App.dict.criteria, {noSelection: {id: '', name: '[Choose a Criteria]'}}) )) == null ? '' : __t) +
'\n                </select>\n                ';
 } ;
__p += '\n                <a class="undo" href="javascript:void(0);" title="Undo changes"><i class="icon icon-hand-left"></i></a>\n            </h4>\n            ' +
__e( description ) +
' (Applies to ' +
__e( customerSpecific ? "select" : "all" ) +
' customers).\n            <textarea name="notes">' +
__e( notes ) +
'</textarea>\n            <h5>Supporting Documents</h5>\n\n            <!-- TODO: make this a view. --><!-- TODO: make this a view. -->\n            <div class="documents">\n                ';
 if (documents) { ;
__p += '\n                ';
 _.each(documents.models, function(document) { ;
__p += '\n                <a target="_blank" href="' +
__e( App.config.context + document.attributes.relativePath ) +
'">\n                    ' +
__e( document.attributes.fileName ) +
'\n                </a>\n                <br/>\n                ';
 }); ;
__p += '\n                ';
 } ;
__p += '\n                <span>' +
__e( documents ? "" : "No Backing Documents" ) +
'</span>\n            </div>\n            <button type="button" class="addFile btn btn-success">Add Backing Document</button>\n        </div>\n\n        <div class="span3">\n            <dl class="dl-horizontal">\n                <dt>Status</dt><dd>' +
__e( validated ? "Validated" : "Not Validated" ) +
'</dd>\n                <dt>Validated On / Until</dt><dd>' +
__e( validatedDate ? validatedDate : "n/a" ) +
' - ' +
__e( validUntil ? validUntil : "n/a" ) +
'</dd>\n                <dt>Validated By</dt><dd>' +
__e( validatedBy ? validatedBy: "n/a" ) +
'</dd>\n            </dl>\n        </div>\n    </div>\n    <br/>\n    <button type="submit" class="save btn btn-default">Submit for approval</button>\n</div>\n';

}
return __p
};

this["JST"]["user/profile/employment/eligibilityShow"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<!-- ' +
__e( id ) +
' -->\n<div id="info" class="alert ';
 if (validatedStatus == 'pass') { ;
__p += ' alert-success ';
 } else if (validatedStatus == 'warning') { ;
__p += ' alert-warning ';
 } else { ;
__p += ' alert-error ';
 } ;
__p += '">\n    <div class="row-fluid">\n        <div class="span4">\n            <h4 class="alert-heading"><i title="Qualification / Certification" class="icon icon-check"></i> ' +
__e( name + (enforcementPolicy ? "(" + enforcementPolicy + ")" : "" )) +
' <span id="controls"><a class="edit" href="javascript:void(0);" title="Edit criteria"><i class="icon icon-pencil"></i></a></span></h4>\n            ' +
__e( description ) +
' (Applies to ' +
__e( customerSpecific ? "select" : "all" ) +
' customers).\n            <p><strong>Notes:</strong> ' +
__e( notes ) +
'</p>\n            <h5>Supporting Documents</h5>\n\n            <!-- TODO: make this a view. -->\n            <div class="documents">\n                ';
 if (documents) { ;
__p += '\n                ';
 _.each(documents.models, function(document) { ;
__p += '\n                <a target="_blank" href="' +
__e( App.config.context + document.attributes.relativePath ) +
'">\n                    ' +
__e( document.attributes.fileName ) +
'\n                </a>\n                <br/>\n                ';
 }); ;
__p += '\n                ';
 } ;
__p += '\n                <span>' +
__e( documents ? "" : "No Backing Documents" ) +
'</span>\n            </div>\n        </div>\n\n        <div class="span3">\n            <dl class="dl-horizontal">\n                <dt>Status</dt><dd>' +
__e( validated ? "Validated" : "Not Validated" ) +
'</dd>\n                <dt>Validated On / Until</dt><dd>' +
__e( validatedDate ? validatedDate : "n/a" ) +
' - ' +
__e( validUntil ? validUntil : "n/a" ) +
'</dd>\n                <dt>Validated By</dt><dd>' +
__e( validatedBy ? validatedBy: "n/a" ) +
'</dd>\n            </dl>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["user/profile/employment/hierarchies"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Hierarchy Criteria</h4>\n<div class="hierarchy-list"></div>\n';

}
return __p
};

this["JST"]["user/profile/employment/qualification"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {

 if (obj.mode === "edit" && obj.criteriaType != "hierarchy") { ;
__p += '\n<div class="alert\n            ' +
__e( obj.validatedStatus == 'pass' ? 'alert-info':'' ) +
'\n            ' +
__e( obj.validatedStatus == 'warning' ? 'alert-warning':'' ) +
'\n            ' +
__e( obj.validatedStatus == 'fail' ? 'alert-danger':'' ) +
'">\n\n\n    <div class="row-fluid">\n        <div id=\'action\' class="span1">\n            <a id="save" href="javascript:void(0);" title="Save Eligibility"><i class="icon icon-save"></i></a>\n            <a id="undo" href="javascript:void(0);" title="Undo Changes"><i class="icon icon-undo"></i></a>\n        </div>\n        <div id=\'criteria\' class="span5">\n            <b>' +
__e( obj.criteria.name ) +
'</b> (' +
__e( obj.enforcementPolicy ) +
')\n            <br/>\n            ' +
__e( obj.criteria.description ) +
'\n            <br>\n            <b>Validated By:</b> ' +
__e( obj.validatedBy || "Not yet validated." ) +
'\n        </div>\n        <div id=\'validatedContainer\' class="span2">\n            <h5>State</h5>\n            <div class="controls">\n                <select name="state" id="state" class="input-block-level" disabled>\n                    ' +
((__t = ( selectOptions(App.dict.employmentEligibilityStates, {selected: obj.state ? obj.state.id : '2', display:'name', noSelection: {id: '', name: '[Choose a state]'}}) )) == null ? '' : __t) +
'\n                </select>\n            </div>\n            <!--' +
__e( obj.state ? obj.state.name : "asdf" ) +
'-->\n        </div>\n        <div id=\'userValidatedDateContainer\' class="span2">\n            <h5>' +
__e( obj.state ? obj.state.name : "Invalid" ) +
' Since</h5>\n            <div class="controls">\n                <input id="validatedDate" name="validatedDate" disabled data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date" type=\'text\' readonly value=\'' +
__e( obj.validatedDate ) +
'\' autocomplete="off"/>\n            </div>\n        </div>\n        <div id=\'userValidUntilContainer\' class="span2">\n            <h5>' +
__e( obj.state ? obj.state.name : "Invalid" ) +
' Until</h5>\n            <div class="controls">\n                <input id="validUntil" name="validUntil" disabled data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date" type=\'text\' readonly value=\'' +
__e( obj.validUntil ) +
'\' autocomplete="off"/>\n            </div>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <div class="span1"></div>\n        <div id=\'notes\' class="span4">\n            <h5>Notes</h5>\n            <div class="controls">\n                <textarea id="notes" name="notes" rows="4">' +
__e( obj.notes ) +
'</textarea>\n            </div>\n        </div>\n        <div class="span4">\n            <button type="button" class="addFile btn btn-success">Add Backing Document</button>\n        </div>\n    </div>\n    <div class="row-fluid">\n        <ul class="documents" style="list-style: none;"></ul>\n    </div>\n</div>\n';
 } else { ;
__p += '\n\n<div class="alert\n            ' +
__e( obj.validatedStatus == 'pass' ? 'alert-info':'' ) +
'\n            ' +
__e( obj.validatedStatus == 'warning' ? 'alert-warning':'' ) +
'\n            ' +
__e( obj.validatedStatus == 'fail' ? 'alert-danger':'' ) +
'">\n    <div class="row-fluid">\n    ';
 if (obj.criteriaType != "hierarchy") { ;
__p += '\n        <div id=\'action\' class="span1">\n            <a id="edit" href="javascript:void(0);" title="Edit Eligibility"><i class="icon icon-pencil"></i></a>\n        </div>\n    ';
 } ;
__p += '\n        <div id=\'criteria\' class="span5">\n            <b>' +
__e( obj.criteria.name ) +
'</b> (' +
__e( obj.enforcementPolicy ) +
')\n            <br/>\n            ' +
__e( obj.criteria.description ) +
'\n            <br>\n            <b>Validated By:</b> ' +
__e( obj.validatedBy || "Not yet validated." ) +
'\n        </div>\n        <div id=\'validatedContainer\' class="span2">\n            <h5>State</h5>\n            <!--<div class="controls">-->\n                <!--<select name="state" id="state" class="input-block-level" disabled>-->\n                    <!--' +
((__t = ( selectOptions(App.dict.employmentEligibilityStates, {selected: obj.state ? obj.state.id : '2', display:'name', noSelection: {id: '', name: '[Choose a state]'}}) )) == null ? '' : __t) +
'-->\n                <!--</select>-->\n            <!--</div>-->\n            <!--<input type=\'checkbox\' disabled ' +
__e( obj.validated ? "checked" : "" ) +
'>-->\n            ' +
__e( obj.state ? obj.state.name : "Invalid" ) +
'\n        </div>\n        <div class="span2">\n            <h5>' +
__e( obj.state ? obj.state.name : "Invalid" ) +
' Since</h5>\n            <div id=\'userValidatedDateContainer\' data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date">' +
__e( obj.validatedDate ) +
'</div>\n        </div>\n        ';
 if (obj.state && obj.state.nameKey == "valid") { ;
__p += '\n        <div class="span2">\n            <h5>' +
__e( obj.state ? obj.state.name : "Invalid" ) +
' Until</h5>\n            <div id=\'userValidUntilContainer\' data-timezone="' +
__e( App.config.company.config.timeZone ) +
'" class="span12 format-date">' +
__e( obj.validUntil ) +
'</div>\n        </div>\n        ';
 } ;
__p += '\n    </div>\n    <div class="row-fluid">\n        <div class="span1"></div>\n        <div id=\'notes\' class="span4">\n            <h5>Notes</h5>\n\n            <p> ' +
__e( obj.notes ) +
'</p>\n        </div>\n    </div>\n\n    <div class="row-fluid">\n        <ul class="documents" style="list-style: none;"></ul>\n    </div>\n</div>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["user/profile/employment/qualificationEdit"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="info" class="alert alert-info">\n    <a class="delete pull-right" href="javascript:void(0);" title="Delete criteria">Delete <i class="icon icon-remove"></i></a>\n    <div class="row-fluid">\n        <div class="span4">\n            <h4 class="alert-heading"><i title="Qualification / Certification" class="icon icon-bookmark"></i>\n                ';
 if (name.length > 0) { ;
__p +=
__e( name );
 } else { ;
__p += '\n                <select name="criteria.id" id="criteria.id">\n                    ' +
((__t = ( selectOptions(App.dict.qualifications, {noSelection: {id: '', name: '[Choose a Qualification]'}}) )) == null ? '' : __t) +
'\n                </select>\n                ';
 } ;
__p += '\n                <a class="undo" href="javascript:void(0);" title="Undo changes"><i class="icon icon-hand-left"></i></a>\n            </h4>\n            ' +
__e( description ) +
' (Applies to ' +
__e( customerSpecific ? "select" : "all" ) +
' customers).\n            <textarea name="notes">' +
__e( notes ) +
'</textarea>\n            <h5>Supporting Documents</h5>\n\n            <!-- TODO: make this a view. -->\n            <div class="documents">\n                ';
 if (documents) { ;
__p += '\n                ';
 _.each(documents.models, function(document) { ;
__p += '\n                <a target="_blank" href="' +
__e( App.config.context + document.attributes.relativePath ) +
'">\n                    ' +
__e( document.attributes.fileName ) +
'\n                </a>\n                <br/>\n                ';
 }); ;
__p += '\n                ';
 } ;
__p += '\n                <span>' +
__e( documents ? "" : "No Backing Documents" ) +
'</span>\n            </div>\n            <button type="button" class="addFile btn btn-success">Add Backing Document</button>\n        </div>\n\n        <div class="span3">\n            <dl class="dl-horizontal">\n                <dt>Confirmed Qualification</dt><dd>' +
__e( validated ? "Confirmed" : "Unconfirmed" ) +
'</dd>\n                <dt>Confirmed On / Until</dt><dd>' +
__e( validatedDate ? validatedDate : "n/a" ) +
' - ' +
__e( validUntil ? validUntil : "n/a" ) +
'</dd>\n                <dt>Validated By</dt><dd>' +
__e( validatedBy ? validatedBy : "n/a" ) +
'</dd>\n            </dl>\n        </div>\n\n    </div>\n    <br/>\n    <button type="submit" class="save btn btn-default">Submit for approval</button>\n</div>\n';

}
return __p
};

this["JST"]["user/profile/employment/qualificationShow"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div id="info" class="alert alert-info">\n    <div class="row-fluid">\n        <div class="span4">\n            <h4 class="alert-heading"><i title="Qualification / Certification" class="icon icon-bookmark"></i>\n                ' +
__e( name ) +
' <span id="controls"><a class="edit" href="javascript:void(0);" title="Edit qualification"><i class="icon icon-pencil"></i></a><!--<a class="delete" href="javascript:void(0);" title="Delete qualification"><i class="icon icon-remove"></i></a>--></span></h4>\n            ' +
__e( description ) +
' (Applies to ' +
__e( customerSpecific ? "select" : "all" ) +
' customers).\n            <p><strong>Notes:</strong> ' +
__e( notes ) +
'</p>\n            <h5>Supporting Documents</h5>\n\n            <!-- TODO: make this a view. -->\n            <div class="documents">\n                ';
 if (documents) { ;
__p += '\n                ';
 _.each(documents.models, function(document) { ;
__p += '\n                <a target="_blank" href="' +
__e( App.config.context + document.attributes.relativePath ) +
'">\n                    ' +
__e( document.attributes.fileName ) +
'\n                </a>\n                <br/>\n                ';
 }); ;
__p += '\n                ';
 } ;
__p += '\n                <span>' +
__e( documents ? "" : "No Backing Documents" ) +
'</span>\n            </div>\n        </div>\n\n        <div class="span3">\n            <dl class="dl-horizontal">\n                <dt>Confirmed Qualification</dt><dd>' +
__e( validated ? "Confirmed" : "Unconfirmed" ) +
'</dd>\n                <dt>Confirmed On / Until</dt><dd>' +
__e( validatedDate ? validatedDate : "n/a" ) +
' - ' +
__e( validUntil ? validUntil : "n/a" ) +
'</dd>\n                <dt>Validated By</dt><dd>' +
__e( validatedBy ? validatedBy : "n/a" ) +
'</dd>\n            </dl>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["user/profile/employment/qualifications"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Qualification</h4>\n<div class="qualification-list"></div>\n';

}
return __p
};

this["JST"]["user/profile/employment/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<form class="form-vertical">\n    <fieldset>\n\n        <!--<h4>Employment Eligibility</h4>-->\n\n        <!--<div class="row-fluid" id="employmentEligibilities">-->\n\n        <!--</div>-->\n        <!--<div>-->\n            <!--<a href="javascript:void(0);" class="addEligibility">-->\n                <!--<i class="icon icon-plus-sign"></i>Add eligibility-->\n            <!--</a>-->\n        <!--</div>-->\n\n        <h4>Qualifications</h4>\n\n        <div class="row-fluid" id="qualifications">\n\n        </div>\n        <div>\n            <a href="javascript:void(0);" class="addQualification">\n                <i class="icon icon-plus-sign"></i>Add qualification\n            </a>\n        </div>\n\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["user/profile/financialinformation/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div class="row-fluid">\n    <!-- left column -->\n    <div class="span4">\n        <div class="row-fluid">\n            <div class="control-group span12">\n                <label class="control-label" for="bankAccount">Bank Account </label>\n                ';
 if (!obj.readOnly) { ;
__p += '\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"\n                        data-content="Enter the contact\'s back account number." data-original-title="Bank Account">?</a>\n                ';
 } ;
__p += '\n                <div class="controls">\n                ';
 if (!obj.readOnly) { ;
__p += '\n                    <input id="bankAccount" name="bankAccount" type="text" value="' +
__e( obj.bankAccount ) +
'" />\n                ';
 } else { ;
__p += '\n                    ' +
__e( obj.bankAccount || '' ) +
'\n                ';
 } ;
__p += '\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <div class="control-group span12">\n                <label class="control-label" for="bankBranch">Bank Branch </label>\n                ';
 if (!obj.readOnly) { ;
__p += '\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"\n                        data-content="Enter the contact\'s back branch number." data-original-title="Bank Branch">?</a>\n                ';
 } ;
__p += '\n                <div class="controls">\n                ';
 if (!obj.readOnly) { ;
__p += '\n                    <input id="bankBranch" name="bankBranch" type="text" value="' +
__e( obj.bankBranch ) +
'" />\n                ';
 } else { ;
__p += '\n                    ' +
__e( obj.bankBranch || '' ) +
'\n                ';
 } ;
__p += '\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <div class="control-group span12">\n                <label class="control-label" for="sortCode">Sort / Routing </label>\n                ';
 if (!obj.readOnly) { ;
__p += '\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"\n                       data-content="Enter the contact\'s routing number or sort code for their back account."\n                       data-original-title="Sort / Routing">?</a>\n                ';
 } ;
__p += '\n                <div class="controls">\n                ';
 if (!obj.readOnly) { ;
__p += '\n                    <input id="sortCode" name="sortCode" type="text" value="' +
__e( obj.sortCode ) +
'" />\n                ';
 } else { ;
__p += '\n                    ' +
__e( obj.sortCode || '' ) +
'\n                ';
 } ;
__p += '\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <div class="control-group span12">\n                <label class="control-label" for="iban">IBAN </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"\n                   data-content="International Bank Account Number (IBAN)." data-original-title="IBAN">?</a>\n\n                <div class="controls">\n                ';
 if (!obj.readOnly) { ;
__p += '\n                    <input id="iban" name="iban" type="text" value="' +
__e( obj.iban ) +
'" />\n                ';
 } else { ;
__p += '\n                    ' +
__e( obj.iban || '' ) +
'\n                ';
 } ;
__p += '\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <div class="control-group span12">\n                <label class="control-label" for="swift">Swift </label>\n                <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"\n                   data-content="Swift number to identify international bank accounts."\n                   data-original-title="Swift">?</a>\n\n                <div class="controls">\n                ';
 if (!obj.readOnly) { ;
__p += '\n                    <input id="swift" name="swift" type="text" value="' +
__e( obj.swift ) +
'" />\n                ';
 } else { ;
__p += '\n                    ' +
__e( obj.swift || '' ) +
'\n                ';
 } ;
__p += '\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- / row-fluid -->\n<div class="row-fluid">\n    <div class="span2">\n        <div class="control-group">\n            <label class="control-label" for="registeredTax">Registered for Tax? </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"\n               data-content="Whether this contact is registered for tax e.g. VAT"\n               data-original-title="Registered for Tax">?</a>\n\n            <div class="controls">\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <input disabled="disabled" id="registeredTax" name="registeredTax" type="checkbox" ';
 if (obj.registeredTax) { ;
__p += ' checked ';
 } ;
__p += ' />\n            ';
 } else { ;
__p += '\n                ';
 if (obj.registeredTax) { ;
__p += '\n                    Yes\n                ';
 } else { ;
__p += '\n                    No\n                ';
 } ;
__p += '\n            ';
 } ;
__p += '\n            </div>\n        </div>\n    </div>\n\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label" for="registeredTaxId">Registered Tax ID </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"\n               data-content="Registered tax identifier." data-original-title="Registered Tax Id">?</a>\n\n            <div class="controls">\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <input id="registeredTaxId" name="registeredTaxId" type="text" value="' +
__e( obj.registeredTaxId ) +
'" />\n            ';
 } else { ;
__p += '\n                ' +
__e( obj.registeredTaxId || '' ) +
'\n            ';
 } ;
__p += '\n            </div>\n        </div>\n    </div>\n\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label" for="registeredTaxIdDescription">Registered Tax ID Description </label>\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"\n               data-content="Description for registered tax identifier e.g. VAT."\n               data-original-title="Registered Tax Id Description">?</a>\n\n            <div class="controls">\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <input id="registeredTaxIdDescription" name="registeredTaxIdDescription" type="text" value="' +
__e( obj.registeredTaxIdDescription ) +
'" />\n            ';
 } else { ;
__p += '\n                ' +
__e( obj.registeredTaxIdDescription || '' ) +
'\n            ';
 } ;
__p += '\n            </div>\n        </div>\n    </div>\n\n    <div class="span3">\n        <div class="control-group">\n            <label class="control-label" for="registeredTaxRate">Registered Tax Rate (%) </label>\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <a href="javascript:void(0);" class="helptext badge badge-info" tabindex="-1" rel="popover"\n                    data-content="The tax rate that applies for this interpreter across all taxable items."\n                    data-original-title="Registered Tax Rate">?</a>\n            ';
 } ;
__p += '\n            <div class="controls">\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <input class="input-mini" id="registeredTaxRate" name="registeredTaxRate" type="text" value="' +
__e( obj.registeredTaxRate ) +
'" />\n            ';
 } else { ;
__p += '\n                ' +
__e( obj.registeredTaxRate || '' ) +
'\n            ';
 } ;
__p += '\n            </div>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["user/profile/personalinformation/contactTypeShow"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<p>Type: ' +
__e( obj.name ) +
'</p>\n';

}
return __p
};

this["JST"]["user/profile/personalinformation/languageShow"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<p>Language: ' +
__e( (obj.language ? obj.language.label : "") ) +
'</p>\n';

}
return __p
};

this["JST"]["user/profile/personalinformation/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div>\n    <div class="container-fluid non-editable">\n        <div class="row-fluid row-spacer">\n            <div class="span2">\n                <h4>First Name</h4>\n                <div>' +
__e( obj.firstName ) +
'</div>\n            </div>\n            <div class="span2">\n                <h4>Middle Name</h4>\n                <div>' +
__e( obj.middleName ) +
'</div>\n            </div>\n            <div class="span4">\n                <h4>Last Name</h4>\n                <div>' +
__e( obj.lastName ) +
'</div>\n            </div>\n        </div>\n        <div class="row-fluid row-spacer">\n            <div class="span4">\n                <h4>Gender</h4>\n                <div>' +
__e( obj['gender.id'] ? getStatusAttributeById(App.dict.gender, obj['gender.id'], 'name') : '' ) +
'</div>\n                ';
 if (!obj.readOnly) { ;
__p += '\n                <div class="gender-edit-container hide">\n                    <div class="controls">\n                        <select class="span12" name="gender.id">\n                            ' +
((__t = ( selectOptions(App.dict.gender, {noSelection: {id: '', name: '[Choose a gender]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field</p>\n                    </div>\n                </div>\n                ';
 } ;
__p += '\n            </div>\n            <div class="span4">\n                <h4>Region</h4>\n                <div>' +
__e( obj.region || '' ) +
'</div>\n            </div>\n        </div>\n        <div class="row-fluid row-spacer">\n            <div class="span4">\n                <h4>Country of Residence</h4>\n                <div>' +
__e( obj.countryOfResidence || '' ) +
'</div>\n            </div>\n            <div class="span4">\n                <h4>Country of Origin</h4>\n                <div>' +
__e( obj.countryOfOrigin || '' ) +
'</div>\n            </div>\n        </div>\n        <div class="row-fluid row-spacer">\n            <div class="span4">\n                <h4>Company Id</h4>\n                <div>' +
__e( obj.companyName || obj['company.id'] || '' ) +
'</div>\n            </div>\n            <div class="span4">\n                <h4>Ethnicity</h4>\n                <div>' +
__e( obj.ethnicity || '' ) +
'</div>\n            </div>\n        </div>\n        <div class="row-fluid row-spacer">\n            <div class="span4">\n                <h4>Languages Spoken</h4>\n                <div id="language-mappings">\n\n                </div>\n            </div>\n            <div class="span4">\n                <h4>Contact Type(s)</h4>\n                <div id="contact-types">\n\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class="container-fluid">\n        <div class="row-fluid row-spacer">\n            <div class="span4">\n                <div class="control-group">\n                    <label class="control-label" for="date-of-birth">Date of Birth</label>\n\n                    <div class="controls">\n                    ';
 if (!obj.readOnly) { ;
__p += '\n                        <input type="text" id="date-of-birth" name="dateOfBirth" value="' +
__e( obj.dateOfBirth ) +
'"/>\n                    ';
 } else { ;
__p += '\n                        ' +
__e( obj.dateOfBirth || '' ) +
'\n                    ';
 } ;
__p += '\n                    </div>\n                </div>\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <label class="control-label" for="timeZone">Timezone</label>\n\n                    <div class="controls">\n                    ';
 if (!obj.readOnly) { ;
__p += '\n                        <select name="timeZone" id="timeZone" class="input-block-level">\n                            ' +
((__t = ( selectOptions(App.dict.timeZones, {selected: obj.timeZone, display:'gmtOffset', noSelection: {id: '', gmtOffset: '[Choose a time zone]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                    ';
 } else { ;
__p += '\n                        ' +
__e( obj.timeZone || '' ) +
'\n                    ';
 } ;
__p += '\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class="row-fluid row-spacer">\n            <div class="span8">\n                <div class="control-group">\n                    <label class="control-label" for="website">Website</label>\n\n                    <div class="controls">\n                    ';
 if (!obj.readOnly) { ;
__p += '\n                        <input type="url" id="website" name="website" value="' +
__e( obj.website ) +
'"/>\n                    ';
 } else { ;
__p += '\n                        ' +
__e( obj.website || '' ) +
'\n                    ';
 } ;
__p += '\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!--RelationalModel views-->\n        <section id="contact">\n            <h4 class="well">Contact Information</h4>\n            <!-- left column -->\n            <div class="row-fluid">\n                <div class="span6">\n                    <div id="contact-numbers">\n\n                    </div>\n                    ';
 if (!obj.readOnly) { ;
__p += '\n                        <a href="javascript:void(0);" class="addNumber"><i class="icon icon-plus-sign"></i>Add phone number</a>\n                    ';
 } ;
__p += '\n                </div> <!-- / left column -->\n\n\n                <!-- right column -->\n                <div class="span6">\n                    <div id="email-addresses">\n\n                    </div>\n                    ';
 if (!obj.readOnly) { ;
__p += '\n                        <a href="javascript:void(0);" class="addEmail"><i class="icon icon-plus-sign"></i>Add email address</a>\n                    ';
 } ;
__p += '\n                </div> <!-- / right column -->\n            </div> <!-- / row -->\n        </section> <!-- / contact -->\n\n        <section id="address">\n            <h4 class="well">Addresses</h4>\n            <!-- left column -->\n            <div class="row-fluid" id="addresses">\n                <div class="span12">\n                    <div id="addressContainer">\n\n                    </div>\n                </div>\n            </div>\n            ';
 if (!obj.readOnly) { ;
__p += '\n                <a href="javascript:void(0);" class="addAddress"><i class="icon icon-plus-sign"></i>Add address</a>\n            ';
 } ;
__p += '\n        </section> <!-- / address -->\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["user/profile/userprofile/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid row-spacer">\n    <div class="span4">\n        <label>Username</label>\n        <div>' +
__e( obj.username ) +
'</div>\n    </div>\n    <div class="span2">\n        <label>First Name</label>\n        <div>' +
__e( obj.firstName ) +
'</div>\n    </div>\n    <div class="span2">\n        <label>Last Name</label>\n        <div>' +
__e( obj.lastName ) +
'</div>\n    </div>\n    <div class="span2">\n        <label>Business Unit</label>\n        <div>' +
__e( obj.businessUnit ? obj.businessUnit.name : "N/A" ) +
'</div>\n    </div>\n</div>\n<h4>Change Password</h4>\n<div class="row-fluid">\n    <div class="span3">\n\n        <div class="control-group">\n            <label class="control-label required" for="currentPassword">Current Password </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Enter current password here." data-original-title="Current Password">?</a>\n            <div class="controls">\n                <input type="password" id="currentPassword" name="currentPassword" value="' +
__e( obj.currentPassword ) +
'"/>\n                <p class="help-block">Required field.</p>\n            </div>\n        </div>\n\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span3">\n\n        <div class="control-group">\n            <label class="control-label required" for="password">Password </label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Change your password by entering the new password here." data-original-title="Password">?</a>\n            <div class="controls">\n                <input type="password" id="password" name="password" value="' +
__e( obj.password ) +
'"/>\n                <p class="help-block">Required field.</p>\n            </div>\n        </div>\n\n    </div>\n</div>\n<div class="row-fluid">\n    <div class="span3">\n\n        <div class="control-group">\n            <label class="control-label required" for="passwordConfirm">Password Confirm</label>\n            <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Confirm your new password by entering it again." data-original-title="Password Confirm">?</a>\n            <div class="controls">\n                <input type="password" id="passwordConfirm" name="passwordConfirm" value="' +
__e( obj.passwordConfirm ) +
'"/>\n                <p class="help-block">Required field.</p>\n            </div>\n        </div>\n\n    </div>\n</div>\n\n<h4>Time Zone Preference</h4>\n<div class="row-fluid row-spacer">\n    <div class="control-group span4">\n        <label class="control-label" for="tz">Time Zone </label>\n        <a href="javascript:void(0);" tabindex="-1" class="helptext badge badge-info" rel="popover"  data-content="Select a timezone from the list below. Selecting this will override whatever timezone is set by the company." data-original-title="Booking Requirement">?</a>\n        <div class="controls">\n            <select id="tz" name="tz" class="input-block-level">\n                ' +
((__t = ( selectOptions(App.dict.timeZones, {selected: obj.tz, display:'gmtOffset', noSelection: {id: '', gmtOffset: '[Select a Timezone/Override Company Timezone]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n</div>\n<button class="btn btn-primary" type="button" id="save-configuration" value="Save">\n    Save\n</button>\n\n\n';

}
return __p
};

this["JST"]["video/booking/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<dl class="bookingStats dl-horizontal">\n    <dt>Start Date</dt>\n    <dd>' +
__e(model['expectedStartDate']) +
'</dd>\n    <dt>Booking Duration</dt>\n    <dd>' +
__e(model['expectedDuration']) +
'</dd>\n    <dt>Language</dt>\n    <dd>' +
__e(model['language.label']) +
'</dd>\n    <dt>Customer</dt>\n    <dd>' +
__e(model['customer.label']) +
'</dd>\n    <dt>Interpreter</dt>\n    <dd>' +
__e(model['interpreter.label']) +
'&nbsp;</dd> <!-- added nbsp as a temporary fix to prevent the references from collapsing -->\n    <dt>References</dt>\n    <dd>' +
__e(model['ref']) +
'</dd>\n</dl>\n';

}
return __p
};

this["JST"]["video/conference.bak"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="progress progress-striped active" style="margin: 0 10px 0 10px; display: none;">\n    <div class="bar" style="width: 0%;"></div>\n</div>\n<div style="color: white; text-align: center; padding-bottom: 10px;">\n    <img src="' +
__e( App.config.context ) +
'/www/env/' +
__e( envContext ) +
'/logo-32x32.png">\n    <h4 style="display: inline-block;">' +
__e( company.name ) +
'</h4>\n    <div class="pull-right">\n        <a href="javascript:void(0);" class="cmd-widget-close" style="color: white; font-size: 18pt;"><i class="icon-white icon-remove" style="padding: 0 10px 0 0;"></i></a>\n    </div>\n</div>\n<div class="row-fluid">\n    <!-- remote container -->\n    <div class="span10">\n\n        <!--\n        <ul class="nav nav-tabs">\n            <li class="active"><a href="#video" data-toggle="tab">Video</a></li>\n            <li><a href="#log" data-toggle="tab">Log</a></li>\n        </ul> <!-- .nav-tabs -->\n\n        <div class="tab-content">\n            <div class="tab-pane active controls" id="video">\n\n                <div class="container-remote-primary">\n\n                    <!-- contains primary remote video user -->\n                    <div class="remote-primary">\n\n                    </div>\n\n                </div> <!-- / container-remote -->\n\n                <!-- container for preview. once remote participant joins this is toggled with remote container -->\n                <div class="container-preview">\n\n                </div> <!-- / container-preview -->\n\n                <div class="video-controls">\n                    <a class="btn btn-large cmd-widget-disconnect">\n                        Disconnect\n                    </a>\n                    <a class="btn btn-large cmd-widget-share">\n                        Share\n                    </a>\n                    <a class="btn btn-large cmd-widget-retry">\n                        Retry\n                    </a>\n                </div>\n\n            </div> <!-- .video -->\n\n            <div class="tab-pane log" id="log">\n                <h4>Log</h4>\n                <div class="container-log">\n                </div>\n            </div> <!-- .log -->\n\n        </div> <!-- .tab-content -->\n\n    </div> <!-- / remote-container -->\n\n    <div class="span2">\n\n        <!--\n        <ul class="nav nav-tabs">\n            <li class="active"><a href="#controls" data-toggle="tab">Controls</a></li>\n            <li><a href="#sessions" data-toggle="tab">Sessions</a></li>\n        </ul> <!-- .nav-tabs -->\n\n        <div class="tab-content">\n            <div class="tab-pane active controls" id="controls">\n\n                <!--<h4>Controls</h4>\n                <div class="container-controls">\n                    <div>\n                        <a href="#" class="widget-preview-session">Click to Preview</a>\n                    </div>\n                    <div>\n                        <a href="#" class="widget-start-session">Click to Start New Session</a>\n                    </div>\n                    <div>\n                        <a href="#" class="widget-stop-session">Click to Disconnect</a>\n                    </div>\n                    <div>\n                        <a href="#" class="widget-share-link">Share Link</a>\n                    </div>\n                </div>\n\n                <h4>Participants</h4>\n                <!-- contains local video user and any other participants that may join -->\n                <div class="container-local-remote-other">\n\n                    <div class="container-local">\n\n                    </div>\n\n                    <div class="container-remote-other">\n\n                    </div>\n\n                </div>\n\n            </div> <!-- .controls -->\n\n            <div class="tab-pane sessions" id="sessions">\n                <div class="sessions-container"></div>\n            </div> <!-- .sessions -->\n\n        </div> <!-- .tab-content -->\n\n    </div>\n\n</div>';

}
return __p
};

this["JST"]["video/conference"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="vri" id="video">\n\n    <div class="no-media-available no-media-available-box" style="display: none;">\n\n        <div class="row-fluid mt-5">\n            <div class="span2"></div>\n            <div class="span2 icon text-error">\n                <i class="icon-warning-sign fs-7"></i>\n            </div>\n            <div class="span1"></div>\n            <div class="span6">\n                <div class="row-fluid">\n                    <div class="span12 fs-2">\n                        <i class="icon-microphone"></i> No mic available\n                    </div>\n                </div>\n                <div class="row-fluid my-2">\n                    <div class="span12 fs-2">\n                        <i class="icon-facetime-video"></i> No video available\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="mt-3 ask-permissions-given">\n            <span class="text-center">\n                <h3>¿Have you given permissions to the browser to access your mic and camera?</h3>\n            </span>\n        </div>\n\n        <div class="mt-3 text-center">\n            <span>\n                <a class="cmd-widget-close" href="javascript:void(0)">Close</a>\n            </span>\n        </div>\n\n    </div>\n\n    <div class="no-media-support no-media-support-box" style="display: none;">\n        <div class="row-fluid">\n            <div class="text-center d-flex flex-align-center pt-2 pb-2">\n                <div class="span4 icon text-error">\n                    <i class="icon-warning-sign fs-7"></i>\n                </div>\n                <div class="span8">\n                    <h3>This browser does not support VRI calls</h3>\n                </div>\n            </div>\n        </div>\n        <div class="row-fluid">\n            <div class="span12">\n                <div class="text-center">\n                    <a class="cmd-widget-close" href="javascript:void(0)">Close</a>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class="media-available height-100">\n\n        <div class="video-container flex-3">\n            <div class="vri-progress-bar">\n                <div class="progress-bar-message-container">\n                    <h4>\n                        Waiting for the session to start ...\n                    </h4>\n                </div>\n                <div class="progress progress-striped active">\n                    <div class="bar" style="width: 0%;"></div>\n                </div>\n            </div>\n\n            <div class="main-video height-100">\n\n            </div>\n\n            <div class="miniatures-container">\n                <div class="miniatures">\n\n                </div>\n            </div>\n\n            <div class="vri-controls-wrapper">\n                <div>\n\n                    <div class="span12 valign-bottom text-left">\n\n                        <div class="vri-session-information text-left">\n\n                        </div>\n\n                        <div>\n                            <div class="vri-controls-container text-right overlay-container">\n\n                                <div class="vri-company">\n                                    <img src="' +
__e( App.config.context ) +
'/www/env/' +
__e( App.config.envContext ) +
'/logo-32x32.png">\n                                    <h4 style="display: inline-block;">' +
__e( company.name ) +
'</h4>\n                                </div>\n\n                                <div class="vri-controls">\n\n                                    <div class="vri-mainvideo-controls">\n\n                                    </div>\n\n                                    <a href="javascript:void(0);" class="cmd-widget-close finish-icon"\n                                       title="Finish conference">\n                                        <i class="icon-red icon-phone"></i>\n                                    </a>\n\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n\n\n                </div>\n\n            </div>\n        </div>\n\n        <div class="chat-container h-100vh">\n\n        </div>\n\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["video/confirmready"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close cmd-widget-cancel" data-dismiss="modal">×</a>\n    <h3>Ready to Go?</h3>\n</div>\n<div class="modal-body">\n    <p>Click \'Ok\' below to confirm to you are ready to start remote interpreting. Have fun!</p>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn cmd-widget-ok">Ok</a>\n</div>';

}
return __p
};

this["JST"]["video/externalvideo"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close cmd-widget-cancel" data-dismiss="modal">×</a>\n    <h3>External Video Provider</h3>\n</div>\n<div class="modal-body">\n    <p>This video session is provided by an external provider. Please click on the link below to join the video\n        session</p>\n    <ul>\n        <li><a href="' +
__e( obj.providerSessionIdentifier ) +
'" target="_vri">Open Video</a></li>\n    </ul>\n    <p>When finished please click on "Complete Session" below.</p>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn cmd-widget-complete">Complete Session</a>\n</div>';

}
return __p
};

this["JST"]["video/help/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Getting started with Scheduled Video Bookings</h3>\n<h4>Welcome to Interpreter Intelligence Scheduled Video Bookings!</h4>\n<br/>\n<h4>Starting your video session is easy! Just follow the following steps to ensure you have a successful call:</h4>\n<br/>\n\n<ol>\n    <li>Currently only <strong>Chrome</strong> browsers support the high definition video of <strong>Video Remote Intelligence</strong>. If you are not currently running <strong>Chrome</strong>, you can download it <a href="http://www.google.com/chrome">here</a>.</li>\n    <li>Make sure you have a connected webcam and that you have audio turned on.</li>\n    <li>A few minutes before your call, you will be able to start the call by pressing the <strong>Start call</strong> button.</li>\n    <li>The browser will ask for permission to use your webcam and microphone. <strong>Make sure you click allow to this prompt.</strong></li>\n    <li>Once the call has complete, make sure you press the <strong>Stop call</strong> button.</li>\n</ol>\n';

}
return __p
};

this["JST"]["video/incoming-call"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">×</a>\n    <h3>Incoming Call</h3>\n</div>\n<div class="modal-body">\n    <p>Please click on Accept or Decline below to take action on the incoming call.</p>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn cmd-widget-accept">Accept</a>\n    <a href="#" class="btn cmd-widget-decline">Decline</a>\n</div>';

}
return __p
};

this["JST"]["video/main-controls"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<a href="javascript:void(0);" class="cmd-widget-mute" title="Toggle mute">\n    <i class="' +
((__t = ( audioicon )) == null ? '' : __t) +
'"></i>\n</a>\n\n<a href="javascript:void(0);" class="cmd-widget-pause" title="Toggle pause">\n    <i class="' +
((__t = ( videoicon )) == null ? '' : __t) +
'"></i>\n</a>\n\n<a href="javascript:void(0);" class="cmd-widget-chat p-relative" title="Toggle chat">\n    <i class="icon-comments"></i>\n    <span class="badge badge-warning unread-count ' +
((__t = ( !obj.unconsumedMessageCount ? 'hidden' : '' )) == null ? '' : __t) +
'">' +
((__t = ( obj.unconsumedMessageCount )) == null ? '' : __t) +
'</span>\n</a>\n\n<span class="video-settings dropup">\n    <a href="#" id="" data-toggle="dropdown" data-target="#" class="cmd-widget-settings dropdown-toggle"\n       title="Settings">\n        <i class="icon-white icon-cog"></i>\n    </a>\n    <ul class="dropdown-menu vri-settings" role="menu" aria-labelledby="dLabel">\n\n    </ul>\n</span>\n\n<a href="javascript:void(0);" class="cmd-widget-share" title="Invite participant">\n    <i class="icon-white icon-group"></i>\n</a>\n\n';
 if ($.common.isCustomer()) { ;
__p += '\n<a href="javascript:void(0);" class="cmd-widget-real-time-info" title="Real time information">\n    <i class="icon-info-sign"></i>\n</a>\n';
 } ;
__p += '\n';

}
return __p
};

this["JST"]["video/otprovider/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="OTProvider">\n    <div class="publisherContainer"></div>\n    <div class="portal"></div>\n</div>\n';

}
return __p
};

this["JST"]["video/participant-controls"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<a href="javascript:void(0);" class="cmd-widget-mute" title="Toggle mute">\n    <i class="' +
__e( audioicon ) +
'"></i>\n</a>\n\n<a href="javascript:void(0);" class="cmd-widget-pause" title="Toggle pause">\n    <i class="' +
__e( videoicon ) +
'"></i>\n</a>';

}
return __p
};

this["JST"]["video/pilot"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div>\n    <h3>Customer Scenarios</h3>\n    <div class="row-fluid">\n        <div class="span3">\n            <p>Each of the tabs below presents a possible scenario as to how a customer can initiate a video interpretation session.</p>\n            <p>Review each to see how it applies to your organization and please let us know your thoughts by emailing us at\n                <a href="mailto:support@interpreterintelligence.com?subject=VRI%20Feedback" target="_blank">support</a> and we\'ll be in touch.</p>\n        </div>\n    </div>\n\n    <ul class="nav nav-tabs">\n        <li class="active"><a href="#instant-pane" data-toggle="tab">Instant Access</a></li>\n        <li><a href="#registered-pane" data-toggle="tab">Registered User</a></li>\n        <li><a href="#guest-cc-pane" data-toggle="tab">Guest (Credit Card)</a></li>\n        <li><a href="#guest-pin-pane" data-toggle="tab">Guest (PIN)</a></li>\n    </ul> <!-- /.nav-tabs -->\n\n    <div class="tab-content">\n        <div class="tab-pane active" id="instant-pane">\n\n            <div class="row-fluid">\n\n                <div class="span3">\n                    &nbsp;\n                </div>\n\n                <div class="span3">\n                    <h3>Connect Now!</h3>\n\n                    ';
 if (company.uuid === "e13471ba-db27-4615-86ff-fe70e7d87cc8") { ;
__p += '\n                    <!-- ' +
__e( company.name ) +
' -->\n                    <div>\n                        <div>\n                            <a class="btn btn-large widget-cmd-instant d-block" data-language-code="spa" data-customer="14968429-1912-493b-8302-77604a72ebfd">\n                                <b>Spanish</b>\n                            </a>\n                            <br/>&nbsp;\n                        </div>\n                        <div>\n                            <a class="btn btn-large widget-cmd-instant d-block" data-language-code="ase" data-customer="14968429-1912-493b-8302-77604a72ebfd">\n                                <b>ASL</b>\n                            </a>\n                            <br/>&nbsp;\n                        </div>\n                    </div>\n                    ';
 } else if (company.uuid === "32fcd544-19d8-46ff-8c18-e61918b5db3f") { ;
__p += '\n                    <!-- ' +
__e( company.name ) +
' -->\n                    <div>\n                        <div>\n                            <a class="btn btn-large widget-cmd-instant d-block" data-language-code="spa" data-customer="66035ece-09db-4a47-9a38-031d7ec648b2">\n                                <b>Spanish</b>\n                            </a>\n                            <br/>&nbsp;\n                        </div>\n                        <div>\n                            <a class="btn btn-large widget-cmd-instant d-block" data-language-code="ase" data-customer="66035ece-09db-4a47-9a38-031d7ec648b2">\n                                <b>ASL</b>\n                            </a>\n                            <br/>&nbsp;\n                        </div>\n                    </div>\n                    ';
 } else { ;
__p += '\n                    <!-- DEMO Assumption: ' +
__e( company.name ) +
' ' +
__e( company.uuid ) +
' -->\n                    <div>\n                        <div>\n                            <a class="btn btn-large widget-cmd-instant d-block" data-language-code="spa" data-customer="932489f9-5b1f-44cb-98f7-bb4636d1ed17">\n                                <b>Spanish</b>\n                            </a>\n                            <br/>&nbsp;\n                        </div>\n                        <div>\n                            <a class="btn btn-large widget-cmd-instant d-block" data-language-code="ase" data-customer="932489f9-5b1f-44cb-98f7-bb4636d1ed17">\n                                <b>ASL</b>\n                            </a>\n                            <br/>&nbsp;\n                        </div>\n                    </div>\n                    ';
 } ;
__p += '\n                </div>\n\n                <div class="span3">\n\n                    <h5>Notes</h5>\n                    <ul>\n                        <li>Instant access</li>\n                        <li>No user information</li>\n                        <li>Only know origin e.g. website, clinic website</li>\n                        <li>Possible for additional user context but requires special setup (e.g. distinct landing page per customer)</li>\n                        <li>Who to bill / how to bill?</li>\n                    </ul>\n                    <h5>Usage</h5>\n                    <ul>\n                        <li>Your public website</li>\n                        <li>Customer intranet (non-public web site) e.g. non-profit org, school</li>\n                        <li>Link from desktop computer at Dr. office</li>\n                        <li>Hospital bedside</li>\n                    </ul>\n\n                </div>\n\n            </div> <!-- /.row-fluid -->\n        </div> <!-- /#instant-pane -->\n\n        <div class="tab-pane" id="registered-pane">\n\n            <div class="row-fluid">\n\n                <div class="span3">\n                    &nbsp;\n                </div>\n\n                <div class="span3">\n                    <h3>Login</h3>\n                    <form accept-charset="UTF-8" action="${postUrl}" method="post" autocomplete="off" id="login" name="login">\n                        <fieldset>\n                            <div class="clearfix">\n                                <input id="username" name="j_username" type="text" placeholder="Username"/>\n                            </div>\n                            <div class="clearfix">\n                                <input id="password" name="j_password" type="password" placeholder="Password"/>\n                            </div>\n                            <div class="clearfix">\n                                <label for="remember_me" class="checkbox" style="display: block;">\n                                    <input class="checkbox" id="remember_me" name="${rememberMeParameter}" type="checkbox"/> Remember me\n                                </label>\n                                <button class="btn btn-primary" type="submit">Sign in</button>\n                            </div>\n                        </fieldset>\n                    </form>\n                </div>\n\n                <div class="span3">\n\n                    <h4>Registered User</h4>\n\n                    <ul>\n                        <li>Existing user</li>\n                        <li>Login with username / password</li>\n                        <li>Initiate new session</li>\n                        <li>Join existing session</li>\n                    </ul>\n\n                    <h4>Usage</h4>\n\n                    <ul>\n                        <li>Customer portal access</li>\n                    </ul>\n\n                </div>\n\n            </div> <!-- /.row-fluid -->\n        </div> <!-- /#registered-pane -->\n\n        <div class="tab-pane" id="guest-cc-pane">\n\n            <div class="row-fluid">\n\n                <div class="span3">\n                    &nbsp;\n                </div>\n\n                <div class="span3">\n                    <h3>Credit Card</h3>\n\n                </div>\n\n                <div class="span3">\n\n                    <h4>Usage</h4>\n\n                    <ul>\n                        <li></li>\n                    </ul>\n\n                </div>\n\n            </div> <!-- /.row-fluid -->\n        </div> <!-- /#guest-cc-pane -->\n\n        <div class="tab-pane" id="guest-pin-pane">\n\n            <div class="row-fluid">\n\n                <div class="span3">\n                    &nbsp;\n                </div>\n\n                <div class="span3">\n                    <h3>PIN</h3>\n\n                </div>\n\n                <div class="span3">\n\n                    <h4>Usage</h4>\n\n                    <ul>\n                        <li></li>\n                    </ul>\n\n                </div>\n\n            </div> <!-- /.row-fluid -->\n        </div> <!-- /#guest-pin-pane -->\n\n    </div> <!-- /.tab-content -->\n</div>\n';

}
return __p
};

this["JST"]["video/rate"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">×</a>\n    <h3>Please Rate Your Experience</h3>\n</div>\n<div class="modal-body">\n    <p></p>\n    <div class="control-group">\n        <label for="rating" style="display: inline;">Rating\n            <div id="rating-scr" style="display: inline;">(' +
__e( (obj.averageRating ? obj.averageRating : "0") ) +
'/5)</div>\n        </label>\n        <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"\n           data-content="<p>Click on the stars below to rate your experience of the interpretation service that\n                                            was provided, with 5 stars being the most positive experience.</p>\n                                            <p>You can change or update your rating in the future.</p>"\n           data-original-title="Rating">?</a>\n        <div class="controls">\n            <div id="rating"></div>\n        </div>\n    </div>\n    <div class="control-group">\n        <label class="control-label" for="comments">Additional comments: </label>\n        <a href="javascript:void(0);" notab class="helptext badge badge-info" rel="popover"\n           data-content="Additional Comments" data-original-title="Additional Comments">?</a>\n        <div class="controls">\n            <textarea id="comments" name="comments" type="text"/>\n        </div>\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn cmd-widget-skip">Skip</a>\n    <a href="#" class="btn btn-primary cmd-widget-ok">OK</a>\n</div>';

}
return __p
};

this["JST"]["video/retrycancel"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close cmd-widget-cancel" data-dismiss="modal">×</a>\n    <h3>Request Error - Retry or Cancel</h3>\n</div>\n<div class="modal-body">\n    <p>There was an error processing the request: ' +
__e( obj.message ) +
'</p>\n    <p>Please click on "Retry" to try again immediately or "Cancel" to close the conference and try again later.</p>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn cmd-widget-retry">Retry</a>\n    <a href="#" class="btn cmd-widget-cancel">Cancel</a>\n</div>';

}
return __p
};

this["JST"]["video/session-information-event-list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div></div>';

}
return __p
};

this["JST"]["video/session-information-event"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<li>\n    <span class="format-datetime">' +
__e( formattedDate ) +
'</span> ' +
__e( " - " + obj.event_type ) +
'\n</li>';

}
return __p
};

this["JST"]["video/session-information-no-events"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    No events received yet\n</div>';

}
return __p
};

this["JST"]["video/session-information-no-participants"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    No one else in the conference at the moment\n</div>';

}
return __p
};

this["JST"]["video/session-information-participant-list"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div></div>';

}
return __p
};

this["JST"]["video/session-information-participant"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<li>' +
__e( obj.participant ) +
'</li>\n';

}
return __p
};

this["JST"]["video/session-information"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="overlay-container">\n    <div class="container-fluid">\n\n        <div class="row-fluid">\n            <div class="span6">\n                <div class="info-container mb-1">\n                    <div class="title">Start time:</div>\n                    <div class="info startTime">' +
__e( obj.startTime ) +
'</div>\n                </div>\n            </div>\n            <div class="span6">\n                <div class="info-container mb-1">\n                    <div class="title">Elapsed time:</div>\n                    <div class="info elapsedTime">' +
__e( obj.elapsedTime ) +
'</div>\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <div class="span12">\n                <div class="info-container">\n                    <div class="title">Participants:</div>\n                    <div class="info">\n                        <ul class="participants">\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="row-fluid">\n            <div class="span12">\n                <div class="info-container">\n                    <div class="title">Events:</div>\n                    <div class="info">\n                        <ul class="events">\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>';

}
return __p
};

this["JST"]["video/session/error"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Error loading Video Session</h3>\n\n<p>There was a an error loading your video session. Please make sure that you\'ve used the correct address.</p>\n<p>If you\'ve copied and pasted the address, please check for typos</p>\n<p>If you think you\'ve received this message in error, please contact <a href="mailto:support@interpreterintelligence.com">Support</a></p>\n';

}
return __p
};

this["JST"]["video/session/message"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="alert alert-' +
__e(type) +
'">\n    <h4>' +
__e(header) +
'</h4>\n    <p>' +
__e(message) +
'</p>\n</div>\n';

}
return __p
};

this["JST"]["video/session/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row">\n    <div class="booking span6"></div>\n    <div class="span6">\n        <div class="messages"></div>\n        <div class="controls" style="display:none">\n            <button class="btn btn-large btn-warning btn-video btn-video-stop disabled">Stop video</button>\n            <button class="btn btn-large btn-primary btn-video btn-video-start disabled">Start video</button>\n        </div>\n    </div>\n</div>\n<div class="provider"></div>\n';

}
return __p
};

this["JST"]["video/share"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">×</a>\n    <h3>Share Link</h3>\n</div>\n<div class="modal-body">\n\n    <div class="vri-share-option-container">\n        <p>Copy and paste the full URL below to allow anyone to join the video session:</p>\n        <p><strong>' +
__e( App.config.domain + "/vri/" + App.config.company.uuid + "/" + obj.session ) +
'</strong></p>\n    </div>\n\n\n    <div class="vri-share-option-container">\n\n        <div>Or you can send the invitation by email:</div>\n\n        <div class="input-append">\n            <input name="emailRecipient" class="span4" type="text">\n            <button class="btn send-email-action" type="button">\n                <i class="icon-envelope"></i> Send\n            </button>\n        </div>\n\n        <p/>\n        <div>Or you can send the invitation by SMS:</div>\n\n        <div class="input-append">\n            <input name="smsRecipient" class="span4" type="text">\n            <button class="btn send-sms-action" type="button">\n                <i class="icon-phone"></i> Send\n            </button>\n        </div>\n    </div>\n\n</div>\n<div class="modal-footer">\n    <!--<a href="#" class="btn">Ok</a>-->\n</div>';

}
return __p
};

this["JST"]["video/twilio/main-layout"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <!-- remote container -->\n    <div class="span10">\n\n        <ul class="nav nav-tabs">\n            <li class="active"><a href="#video" data-toggle="tab">Video</a></li>\n            <li><a href="#log" data-toggle="tab">Log</a></li>\n        </ul> <!-- .nav-tabs -->\n\n        <div class="tab-content">\n            <div class="tab-pane active controls" id="video">\n\n                <div class="container-remote-primary">\n\n                    <!-- contains primary remote video user -->\n                    <div class="remote-primary">\n\n                    </div>\n\n                </div> <!-- / container-remote -->\n\n                <!-- container for preview. once remote participant joins this is toggled with remote container -->\n                <div class="container-preview">\n\n                </div> <!-- / container-preview -->\n\n            </div> <!-- .video -->\n\n            <div class="tab-pane log" id="log">\n                <h4>Log</h4>\n                <div class="container-log">\n                </div>\n            </div> <!-- .log -->\n\n        </div> <!-- .tab-content -->\n\n    </div> <!-- / remote-container -->\n\n    <div class="span2">\n\n        <ul class="nav nav-tabs">\n            <li class="active"><a href="#controls" data-toggle="tab">Controls</a></li>\n            <li><a href="#sessions" data-toggle="tab">Sessions</a></li>\n        </ul> <!-- .nav-tabs -->\n\n        <div class="tab-content">\n            <div class="tab-pane active controls" id="controls">\n\n                <h4>Controls</h4>\n                <div class="container-controls">\n                    <div>\n                        <a href="#" class="widget-preview-session">Click to Preview</a>\n                    </div>\n                    <div>\n                        <a href="#" class="widget-start-session">Click to Start New Session</a>\n                    </div>\n                    <div>\n                        <a href="#" class="widget-stop-session">Click to Disconnect</a>\n                    </div>\n                </div>\n\n                <h4>Participants</h4>\n                <!-- contains local video user and any other participants that may join -->\n                <div class="container-local-remote-other">\n\n                    <div class="container-local">\n\n                    </div>\n\n                    <div class="container-remote-other">\n\n                    </div>\n\n                </div>\n\n            </div> <!-- .controls -->\n\n            <div class="tab-pane sessions" id="sessions">\n                <div class="sessions-container"></div>\n            </div> <!-- .sessions -->\n\n        </div> <!-- .tab-content -->\n\n    </div>\n\n</div>';

}
return __p
};

this["JST"]["video/twilio/participant"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="container-video height-100">\n    <div class="height-100 ' +
__e( obj.role === 'local' ? 'local' : 'remote' ) +
'">\n\n        <!--<div class="video-label">' +
__e( obj.identity ) +
' (' +
__e( obj.role ) +
')</div>-->\n        <!--<div class="video-label video-info"></div>-->\n\n        <div class="video-holder">\n            <audio></audio>\n            <video class="height-100"></video>\n        </div>\n\n        <div class="participant-controls">\n\n        </div>\n\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["video/twilio/session"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    ' +
__e( obj.createdBy ) +
' (' +
__e( obj.id ) +
') <span class="format-datetime">' +
__e( obj.createdDate ) +
'</span> <a href="javascript:void(0);" class="joinSession">Join</a>\n    <!-- ' +
__e( obj.uuid ) +
' -->\n</div>';

}
return __p
};

this["JST"]["video/twilio/sessions"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="sessions">\n\n</div>';

}
return __p
};

this["JST"]["video/vri-customer-landing"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div style="text-align: center; margin: 100px;">\n    <img src="https://beaches.lacounty.gov/wp-content/uploads/2016/11/dbh.logo_.slogan_1.png" alt="Beaches & Harbors" width="480" height="183"/>\n    <hr/>\n    <h3><a href="' +
__e( App.config.context + '/vri/landing/' + companyUuid + '/' + customerUuid + '?language=ase') +
'">Connect me with an interpreter ...</a></h3>\n    <hr/>\n    <img src="' +
__e( companyConfig.logoUri.indexOf('http') == -1 ? App.config.context + companyConfig.logoUri : companyConfig.logoUri ) +
'" alt="' +
__e( company.name ) +
'"/>\n\n</div>\n';

}
return __p
};

this["JST"]["video/vri-landing"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div style="text-align: center; margin: 100px;">\n    <img src="' +
__e( companyConfig.logoUri.indexOf('http') == -1 ? App.config.context + companyConfig.logoUri : companyConfig.logoUri ) +
'" alt="' +
__e( company.name ) +
'"/>\n    <br/>\n    <h3>Video Remote Interpretation</h3>\n</div>\n';

}
return __p
};

this["JST"]["video/vri-request"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">×</a>\n    <h3>Video Remote Request</h3>\n</div>\n<div class="modal-body">\n    <p>Please select the language below, confirm the details and click on "Request" to start a video remote\n        interpretation session.</p>\n    <div class="language-container">\n        Language\n    </div>\n    <div class="customer-container">\n\n    </div>\n    <div class="client-container">\n\n    </div>\n    <div class="location-container">\n\n    </div>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary cmd-widget-request">Request</a>\n    <a href="#" class="btn cmd-widget-cancel">Cancel</a>\n</div>';

}
return __p
};

this["JST"]["video/vri-session-history-item"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '    <td>' +
__e( obj.actor_type ) +
'</td>\n    <td>' +
__e( obj.description ) +
'</td>\n    <td><span class="format-datetime">' +
__e( obj.event_date ) +
'</span></td>\n    <td>' +
__e( obj.event_type ) +
'</td>\n    <td>' +
__e( obj.resource_type ) +
'</td>\n    <td>' +
__e( obj.event_data.worker_name ) +
'</td>\n    <td>' +
__e( obj.event_data.worker_activity_name ) +
'</td>\n    <td>' +
__e( obj.event_data.task_assignment_status ) +
'</td>\n    <td>' +
__e( obj.event_data.task_canceled_reason ) +
'</td>\n\n';

}
return __p
};

this["JST"]["video/vri-session-history"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>VRI Call History: ' +
__e( obj.taskSid ) +
'</h3>\n</div>\n<div class="modal-body">\n    <table class="table">\n        <thead>\n        <tr>\n            <th>Actor</th>\n            <th>Description</th>\n            <th>Date</th>\n            <th>Type</th>\n            <th>Resource</th>\n            <th>Interpreter</th>\n            <th>Activity</th>\n            <th>Task Status</th>\n            <th>Info</th>\n        </tr>\n        </thead>\n        <tbody class="history">\n\n        </tbody>\n    </table>\n    <!--<div>JSON: ' +
__e( JSON.stringify(obj) ) +
'</div>-->\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn" data-dismiss="modal">Ok</a>\n</div>\n';

}
return __p
};

this["JST"]["video/vri-sessions"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="portlet-header">\n    <div class="row-fluid">\n        <div class="span8">\n            VRI Calls\n            <br/>\n            <label class="control-label"><input type="checkbox" id="selectAll" class="selectAll" name="selectAll"/> All calls (with current filters applied)</label>\n        </div>\n        <div class="span4">\n            <div class="filter pull-right">\n\n            </div>\n            &nbsp;\n            <div class="bulk-actions pull-right">\n\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class="grid">\n\n</div>\n<div class="row-fluid">\n    <div class="span2">\n        <div class="export"></div>\n    </div>\n    <div class="span8">\n        <div class="paginator"></div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["video/vri-settings-group"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div>\n    <li class="dropdown-header">\n        ' +
__e( obj.title ) +
'\n    </li>\n\n    <li class="settings-items"></li>\n</div>';

}
return __p
};

this["JST"]["video/vri-settings-item"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<i  class="' +
__e( obj.selected ? (obj.kind === 'audioinput' ? 'icon-microphone' : 'icon-facetime-video') : '' ) +
'"></i> ' +
__e( obj.title );

}
return __p
};

this["JST"]["video/vri-settings"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="settings-groups"></div>';

}
return __p
};

this["JST"]["visit/cancelvisit/job"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<li><strong>Job # ' +
__e( obj.id) +
' </strong>:\n    <span class="format-datetime" data-timezone="' +
__e( obj.timeZone ) +
'">' +
__e( obj.expectedStartDate ) +
'</span>\n     </li>\n';

}
return __p
};

this["JST"]["visit/cancelvisit/joblist"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h5>You are about to cancel the following jobs: </h5>\n<div class="controls">\n    <ul id="job-list">\n\n    </ul>\n</div>\n';

}
return __p
};

this["JST"]["visit/cancelvisit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Cancel Job</h3>\n</div>\n<div class="modal-body">\n    <fieldset>\n\n            <input type="hidden" name="id" value="' +
__e( obj.id ) +
'" />\n            <input type="hidden" name="version" value="' +
__e( obj.version ) +
'" />\n            <input type="hidden" name="company.id" value="' +
__e( App.config.company.id ) +
'" />\n            <input type="hidden" id="cancelledFrom" name="cancelledFrom" value="" />\n\n            <div class="row">\n                <div class="control-group span6 job-details">\n\n                </div>\n            </div>\n\n\n            <div class="row">\n                <div class="control-group span6">\n                    <label>\n                        <span class="control-label">\n                            <span class="required">\n                                Please select the reason for the cancellation in this field:\n                            </span>\n                        </span>\n                    </label>\n                    <div class="controls">\n                        <select name="cancellationReason.id" id="cancellationReason" class="input-xlarge">\n                            ' +
((__t = ( selectOptions(App.dict.cancellationReasons, {noSelection: {id: '', name: '[Choose a Cancellation Reason]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                        <p class="help-block">Required field.</p>\n                    </div>\n                </div>\n            </div>\n\n\n            <div class="row">\n                <div class="span6">\n                    <h5>Please enter any additional information for the cancellation:</h5>\n                    <textarea id="notes" name="notes" style="width: 90%; height: 180px;"></textarea>\n                </div>\n            </div>\n\n            <div class="row secured secured-comp secured-admin">\n                <div class="span3">\n                    <label>\n                        <span class="control-label">\n                          <span class="required">\n                            Billable\n                          </span>\n                        </span>\n                    </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Should the customer be charged for this booking?</p>\n    <p>This will be verified prior to invoicing.</p>" data-original-title="Billable">?</a>\n                    <div class="controls">\n                        <select name="billable.id" id="billable" class="input-medium">\n                        ' +
((__t = ( selectOptions(App.dict.yesNoType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                </div>\n\n                <div class="span3">\n                    <label><span class="control-label">\n                        <span class="required">\n                            Payable\n                        </span>\n                    </span>\n                    </label>\n                    <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Is the interpreter eligible to be paid for this booking?</p><p>This will be verified prior to invoicing.</p>" data-original-title="Payable">?</a>\n                    <div class="controls">\n                    <select class="input-medium" name="payable.id" id="payable">\n                        ' +
((__t = ( selectOptions(App.dict.yesNoType, {noSelection: {id: '', name: '[Choose a Type]'}}) )) == null ? '' : __t) +
'\n                    </select>\n                </div>\n                    </div>\n            </div> <!-- / row -->\n            <div class="row secured secured-comp secured-admin">\n                <div class="span6">\n                    <h5>Do NOT send cancellation email <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="<p>Do not send notification email to Interpreter and Customer</p>" data-original-title="Do not Email">?</a></h5>\n                    <input type="checkbox" id="noemail" name="noemail" value="true">\n                </div>\n            </div>\n\n            <div class="row secured secured-cust secured-cust-admin">\n                <input type="hidden" name="billable.id" value="' +
__e( App.dict.yesNoType['n'].id ) +
'" />\n                <input type="hidden" name="payable.id" value="' +
__e( App.dict.yesNoType['n'].id ) +
'" />\n            </div>\n\n    </fieldset>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Cancel Job</a>\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["visit/repeatJob/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close" data-dismiss="modal">&times;</a>\n    <h3>Repeat Job</h3>\n</div>\n<div class="modal-body">\n    <fieldset>\n\n            <input type="hidden" name="company.id" value="' +
__e( App.config.company.id ) +
'" />\n            <input type="hidden" name="id" value="' +
__e( obj.id ) +
'" />\n            <input type="hidden" name="byDay" />\n\n            <div class="row"><div class="control-group span6">\n                <label>Repeats:\n                    <div class="controls">\n                        <select name="freq" class="wkdays">\n                            <option value="DAILY">Daily</option>\n                            <option value="WEEKLY" selected="selected">Weekly</option>\n                            <option value="MONTHLY">Monthly</option>\n                        </select>\n                    </div></label>\n            </div></div>\n\n            <div id="byWeekdaySelector" class="row"><div class="control-group span6">\n                <label>Repeat on:</label>\n                <div class="controls">\n                    <label title="Sunday" style="display: inline;"><input type="checkbox" id="wd_SU"\n                                                                          title="Sunday" /> S</label>&#xA0;\n                    <label title="Monday" style="display: inline;"><input type="checkbox" id="wd_MO"\n                                                                          title="Monday" /> M</label>&#xA0;\n                    <label title="Tuesday" style="display: inline;"><input type="checkbox" id="wd_TU"\n                                                                           title="Tuesday" /> T</label>&#xA0;\n                    <label title="Wednesday" style="display: inline;"><input type="checkbox" id="wd_WD"\n                                                                             title="Wednesday" /> W</label>&#xA0;\n                    <label title="Thursday" style="display: inline;"><input type="checkbox" id="wd_TH"\n                                                                            title="Thursday" /> T</label>&#xA0;\n                    <label title="Friday" style="display: inline;"><input type="checkbox" id="wd_FR"\n                                                                          title="Friday"/> F</label>&#xA0;\n                    <label title="Saturday" style="display: inline;"><input type="checkbox" id="wd_SA"\n                                                                            title="Saturday"  /> S</label>\n                </div>\n            </div></div>\n\n            <div class="row"><div class="control-group span6">\n                <label>Recurrence starts on:</label>\n                <div class="controls">\n                    <input type="text" id="startOn" name="startOn" class="format-date" data-timezone="' +
__e( obj.timeZone ) +
'" value="' +
__e( (new Date(obj.expectedStartDate)).toISOString() ) +
'"  autocomplete="off"/>\n                </div>\n            </div></div>\n\n            <div class="row"><div class="control-group span6">\n                <label>Ends:</label>\n                <div class="controls">\n                    <!--<label disabled="disabled" style="color: gray; display: none;"><input\n                            type="radio" name="endsOn" value="NEVER" disabled="disabled" title="Ends never" /> Never</label><br />  -->\n                    <label style="display: inline;"><input type="radio" name="endsOn" value="AFTER" checked="checked" /> After</label>\n                    <label style="display: inline;"><input type="text" name="count" value="4"\n                                                           title="Ends after a number of occurrences" /> additional occurrences</label><br />\n                    <label style="display: inline;"><input\n                            type="radio" name="endsOn" value="DATE" title="Ends on a specified date" /> By</label>\n                    <input type="text" class="form-control format-date"  name="endOn" title="Specified date" autocomplete="off" />\n                </div>\n            </div></div>\n\n    </fieldset>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn btn-primary widget-ok">Make Recurring</a>\n    <a href="#" class="btn" data-dismiss="modal">Close</a>\n</div>\n';

}
return __p
};

this["JST"]["visit/repeatJob/start"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '';

}
return __p
};

this["JST"]["visit/v2/administration/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="control-group span4">\n        <label class="control-label required" for="status.id">Booking Status </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Reset the booking status." data-original-title="Booking Status">?</a>\n        <div class="controls">\n            <select name="status" class="api-v2">\n                ' +
((__t = ( selectOptions(App.dict.bookingStatus, {selected: obj.status ? obj.status.id : '', noSelection: {id: '', name: '[Booking Status]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n\n    <div class="control-group span4">\n        <label class="control-label required" for="invoiceStatus.id">Invoice Status </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Reset the booking invoice (receiveable) status." data-original-title="Invoice Status">?</a>\n        <div class="controls">\n            <select name="invoiceStatus" class="api-v2">\n                ' +
((__t = ( selectOptions(App.dict.invoiceStatus, {selected: obj.invoiceStatus ? obj.invoiceStatus.id : '', noSelection: {id: '', name: '[Invoice Status]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n\n    <div class="control-group span4">\n        <label class="control-label required" for="invoiceStatus.id">Payment Status </label>\n        <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Reset the booking payment (payable) status." data-original-title="Payment Status">?</a>\n        <div class="controls">\n            <select name="paymentStatus" class="api-v2">\n                ' +
((__t = ( selectOptions(App.dict.paymentStatus, {selected: obj.paymentStatus ? obj.paymentStatus.id : '', noSelection: {id: '', name: '[Invoice Status]'}}) )) == null ? '' : __t) +
'\n            </select>\n            <p class="help-block">Required field.</p>\n        </div>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["visit/v2/edit/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div id="successContainer">\n</div>\n<div id="errorContainer">\n</div>\n<!-- TODO swap IDs with classes -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#details" data-toggle="tab">Job Details</a></li>\n    <li class="secured secured-beta"><a href="#assignment" data-toggle="tab">Interpreter Assignment</a></li>\n    <!--<li><a href="#feedbackPane" data-toggle="tab">Feedback</a></li>-->\n    <li class="secured secured-comp"><a href="#notification" data-toggle="tab">Notification History</a></li>\n    <li><a href="#history" data-toggle="tab">Audit History</a></li>\n</ul> <!-- .nav-tabs -->\n\n<!-- tabs -->\n<div class="tab-content">\n    <div class="tab-pane active region-details" id="details">\n        <h1>Details</h1>\n    </div> <!-- .details -->\n    <div class="tab-pane region-assignment" id="assignment">\n        <h1>Interpreter Assignment</h1>\n    </div> <!-- .assignment -->\n    <div class="tab-pane region-notification" id="notification">\n        <h1>Notification history</h1>\n    </div> <!-- .history -->\n    <div class="tab-pane region-history" id="history">\n        <h1>Audit history</h1>\n    </div> <!-- .history -->\n</div> <!-- .tabs -->\n<button type="submit" class="widget-create btn btn-large btn-success pull-right">Save Job</button>\n';

}
return __p
};

this["JST"]["visit/v2/editdetails/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<form class="form-horizontal">\n    <fieldset>\n        <legend><strong>Job</strong>: ' +
__e( formatDate(obj.expectedStartDate, obj.timeZone) ) +
'  ' +
__e( formatTime(obj.expectedStartDate, obj.timeZone) ) +
' <a class=\'gridiFramePopup\' href=\'' +
__e( App.config.context + "/calendar/bookingCal/" + obj.superBooking.id ) +
'\' title=\'Recurring Jobs (Booking #' +
__e( obj.superBooking.id ) +
')\'><i class=\'icon-calendar\'></i> Calendar</a>\n            <span class="secured secured-cust secured-cont secured-comp pull-right widget-parent"><a href="' +
__e( App.config.context ) +
'/booking/edit/' +
__e( obj.superBooking.id) +
'">Parent Booking #' +
__e(obj.superBooking.id) +
'</a></span>\n                <div class="btn-group-wrapper align-right pull-right">\n                    <div class="btn-group">\n                        <a class="btn dropdown-toggle" data-toggle="dropdown" href="#">\n                        Job actions\n                        <span class="caret"></span>\n                        </a>\n                        <ul class="dropdown-menu">\n                            <span class="secured secured-comp">\n                                <li><a href="#" class="widget-delete"><i class="icon-trash"></i> Delete</a></li>\n                                <li class="divider"></li>\n                            </span>\n                            <li><a href="#" class="widget-clone"><i class="icon-share"></i> Create Follow-up</a></li>\n                            <li><a href="#" class="widget-repeat"><i class="icon-calendar"></i> Make Recurring</a></li>\n                            <span class="secured secured-comp">\n                                <li><a href="#" class="widget-archive-updates"><i class="icon-eye-open"></i> Archive updated fields</a></li>\n                            </span>\n                            <!-- dropdown menu links -->\n                        </ul>\n                    </div>\n                </div>\n        </legend>\n        <div class="row-fluid">\n            <div class="span4">\n\n                <div class="control-group">\n                    <label>\n                        <span class="control-label"><b>Customer</b></span>\n                        <div class="controls" style="padding-top: 5px">\n                            ' +
__e( obj.customer.name ) +
'\n                        </div>\n                    </label>\n                </div>\n\n                ';
 if (obj.siteContact) { ;
__p += '\n                <div class="control-group">\n                    <label>\n                        <span class="control-label"><b>Site Contact</b></span>\n                        <div class="controls" style="padding-top: 5px">\n                            ' +
__e( obj.siteContact ) +
'\n                        </div>\n                    </label>\n                </div>\n                ';
 } ;
__p += '\n\n                ';
 if (obj.locationNote) { ;
__p += '\n                <div class="control-group">\n                    <label>\n                        <span class="control-label"><b>Place of Appointment</b></span>\n                        <div class="controls" style="padding-top: 5px">\n                            ' +
__e( obj.locationNote ) +
'\n                        </div>\n                    </label>\n                </div>\n                ';
 } ;
__p += '\n\n                <div class="control-group">\n                    <label>\n                        <span class="control-label"><b>Location</b></span>\n                        <div class="controls" style="padding-top: 5px">\n                            ' +
__e( obj.location ? obj.location.displayLabel : "Warning: Not set" ) +
'\n                        </div>\n                    </label>\n                </div>\n\n                ';
 if (obj.subLocation) { ;
__p += '\n                <div class="control-group">\n                    <label>\n                        <span class="control-label"><b>Sublocation</b></span>\n                        <div class="controls" style="padding-top: 5px">\n                            ' +
__e( obj.location ? obj.subLocation.displayLabel : "Warning: Not set" ) +
'\n                        </div>\n                    </label>\n                </div>\n                ';
 } ;
__p += '\n\n            </div>\n            <div class="span4">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label"><b>Default Language</b></span>\n                        <div class="controls" style="padding-top: 5px">\n                            ' +
__e( obj.defaultLanguage.displayName ) +
'\n                        </div>\n                    </label>\n                </div>\n\n                <div class="control-group">\n                    <label>\n                        <span class="control-label"><b>Requestor</b></span>\n                        <div class="controls" style="padding-top: 5px">\n                            ' +
__e( obj.requestor ? obj.requestor.displayLabel : "Warning: Not set" ) +
'\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="span4">\n                <div class="model-status control-group">\n                    <label>\n                        <span class="control-label">Status</span>\n                        <div class="controls" style="padding-top: 5px">\n                            <!-- TODO, swap with widget -->\n                            ' +
((__t = ( (obj.status ? bookingStatusFormatter(obj.status.id) : bookingStatusFormatter(null)) )) == null ? '' : __t) +
'\n                        </div>\n                    </label>\n                </div>\n                <div class="model-status control-group">\n                    <label>\n                        <span class="control-label"><b>Booking Details</b></span>\n                        <div class="controls" style="padding-top: 5px">\n                            ' +
__e( obj.bookingDetails ) +
'\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div>\n        <hr/>\n        <div class="row-fluid">\n            <div class="model-startDate control-group span4">\n                <label>\n                    <span class="control-label"><span class="required">Expected Start Date</span></span>\n                    <div class="controls">\n                        <input type="text" name="expectedStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-date" value="' +
__e(obj.expectedStartDate) +
'" autocomplete="off"/>\n                    </div>\n                </label>\n            </div>\n            <div class="model-startTime control-group span4">\n                <label>\n                    <span class="control-label"><span class="required">Expected Start Time</span></span>\n                    <div class="controls">\n                        <input type="text" name="expectedStartDate" data-timezone="' +
__e(obj.timeZone) +
'" class="input-block-level format-time" value="' +
__e(obj.expectedStartDate) +
'" autocomplete="off"/>\n                    </div>\n                </label>\n            </div>\n            <div class="model-timeZone control-group span4">\n                <label>\n                    <span class="control-label"><span class="required">Time Zone</span></span>\n                    <div class="controls">\n                        <select name="timeZone" class="input-block-level">\n                            ' +
((__t = ( selectOptions(App.dict.timeZones, {selected: obj.timeZone, display:'gmtOffset'}) )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                </label>\n            </div>\n        </div>\n        <div class="row-fluid">\n            <span>\n                <div class="model-bookingDate control-group span4">\n                    <label>\n                        <span class="control-label"><span class="required">Booking Date</span></span>\n                        <div class="controls">\n                            <input type="text" name="bookingDate" class="input-block-level format-date secured secured-disabled secured-comp" value="' +
__e(obj.bookingDate) +
'" autocomplete="off"/>\n                        </div>\n                    </label>\n                </div>\n                <div class="model-bookingTime control-group span4">\n                    <label>\n                        <span class="control-label"><span class="required">Booking Time</span></span>\n                        <div class="controls">\n                            <input type="text" name="bookingDate" class="input-block-level format-time secured secured-disabled secured-comp" value="' +
__e(obj.bookingDate) +
'" autocomplete="off"/>\n                        </div>\n                    </label>\n                </div>\n            </span>\n            <div class="model-duration control-group span4">\n                <label>\n                    <span class="control-label"><span class="required">Duration</span></span>\n                    <div class="controls">\n                        <input type="text" name="expectedDurationHrs" data-start="expectedStartDate" data-end="expectedEndDate" class="input-block-level format-duration" value="' +
__e(obj.expectedDurationHrs) +
'" autocomplete="off"/>\n                    </div>\n                </label>\n            </div>\n        </div>\n        <section class="region-interpreter-visits">\n        </section>\n        <hr/>\n        <div class="row-fluid">\n            <div class="span6">\n                <div class="control-group">\n                    <label>\n                        <span class="control-label">Job Details&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any details specific to the job that might be useful to the interpreter." data-original-title="Job Details" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <textarea rows="4" name="notes" class="input-block-level wysiwyg">' +
__e( obj.notes ) +
'</textarea>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <span class="secured secured-comp secured-cont">\n                <div class="span6">\n                    <div class="control-group">\n                        <label>\n                            <span class="control-label">Job Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="The job notes are optionally entered by the interpreter when the job has completed. This information is only shared with the interpreter." data-original-title="Job Notes" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <textarea rows="4" name="visitNotes" class="input-block-level wysiwyg">' +
__e( obj.visitNotes ) +
'</textarea>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n            </span>\n        </div>\n        <div class="row-fluid">\n            <span class="secured secured-comp">\n                <div class="span6">\n                    <div class="control-group">\n                        <label>\n                            <span class="control-label">Billing Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the billing and payment. This information is for internal use only." data-original-title="Billing Notes" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <textarea rows="4" name="billingNotes" class="input-block-level wysiwyg">' +
__e( obj.billingNotes ) +
'</textarea>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n            </span>\n            <span class="secured secured-comp">\n                <div class="span6">\n                    <div class="control-group">\n                        <label>\n                            <span class="control-label">Notes about Interpreter(s)&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Enter any information relevant to the interpreter to be assigned to this job. These notes are for internal use only." data-original-title="Interpreter Notes" tabindex="-1">?</a></span>\n                            <div class="controls">\n                                <textarea rows="4" name="interpreterNotes" class="input-block-level wysiwyg">' +
__e( obj.interpreterNotes ) +
'</textarea>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n            </span>\n        </div>\n        ';
 if (obj.status && (obj.status.nameKey !== "cancelled")) { ;
__p += '\n        <!--\n        <div class="well">\n            <h3>Cancel Visit</h3>\n            <div class="row-fluid">\n                <div class="model-timeZone control-group span6">\n                    <label>\n                        <span class="control-label"><span class="required">Cancellation Reason</span></span>\n                        <div class="controls">\n                            <select name="cancellationReason" class="api-v2 input-block-level">\n                                ' +
((__t = ( selectOptions(App.dict.cancellationReasons, {noSelection: {id: '', name: '[Choose a Cancellation Reason]'}}) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="span6">\n                    <div class="control-group">\n                        <label>\n                            <span class="control-label"><span class="required">Please enter any additional information for the cancellation in this field</span></span>\n                            <div class="controls">\n                                <textarea rows="4" name="cancellationNotes" class="input-block-level"></textarea>\n                            </div>\n                        </label>\n                    </div>\n                </div>\n                <div class="control-group span6">\n                    <label>\n                        <span class="control-label"><span class="required">Do <em>Not</em> send notification email</span></span>\n                        <div class="controls">\n                            <input type="checkbox" name="cancelNoEmail"/>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <div class="control-group span6">\n                    <label>\n                        <span class="control-label"><span class="required">Billable</span></span>\n                        <div class="controls">\n                            <select name="cancelBillable" class="input-block-level">\n                                ' +
((__t = ( selectOptions(App.dict.yesNoType) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </label>\n                </div>\n                <div class="control-group span6">\n                    <label>\n                        <span class="control-label"><span class="required">Payable</span></span>\n                        <div class="controls">\n                            <select name="cancelPayable" class="input-block-level">\n                                ' +
((__t = ( selectOptions(App.dict.yesNoType) )) == null ? '' : __t) +
'\n                            </select>\n                        </div>\n                    </label>\n                </div>\n            </div>\n            <div class="row-fluid">\n                <button type="submit" class="widget-cancel btn btn-danger pull-right">Cancel Visit</button>\n            </div>\n        </div>\n        -->\n        ';
 } ;
__p += '\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["visit/v2/files/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Verification of Service Form</h4>\n\n<p>Click on the link below to view the Verification of Service form. The VoS form must be printed, signed as indicated on the form.\nOnce signed, the form must be uploaded into the system before a booking can be processed.</p>\n<p>You can print the form after clicking on the link or download it as a PDF to get an electronic copy</p>\n\n<p>\n    <ul class="unstyled">\n        <li><a id="vosForm" class="vosForm" href="javascript:void(0);"><i class="icon-eye-open"></i> Verification of Service Form</a></li>\n    </ul>\n\n    <p>Alternatively an electronic signature can be captured when the booking is closed which serves the same purposes as the verification\n    of service form.</p>\n\n    <div class="verification">\n\n    </div>\n\n</p>\n\n<h4>Miscellaneous Files</h4>\n\n<div class="row">\n    <form action="' +
__e(App.config.context) +
'/upload/file" method="post" name="fileUpload" enctype="multipart/form-data" id="fileUpload">\n        <fieldset>\n            <div class="span4">\n                <input type="hidden" name="company.id" value="' +
__e( obj.company ? obj.company.id : '' ) +
'" id="company.id">\n                <input type="hidden" name="parentEntityType" value="booking" id="parentEntityType">\n                <input type="hidden" name="parentEntityClass" value="com.ngs.id.model.Booking" id="parentEntityClass">\n                <input type="hidden" name="parentEntityId" value="' +
__e(obj.id) +
'" id="parentEntityId">\n                <input type="hidden" name="isIE" value="" id="isIE">\n\n                <div class="row">\n                    <div class="span4">\n                        <label>Select file to upload</label>\n                        <div class="input-append customfile">\n                            <input type="file" class="input-xlarge" name="theFile" id="theFile" />\n                        </div>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="span4">\n                        <label>Description</label>\n                        <textarea id="description" name="description" placeholder="Enter a short description of the file being uploaded"></textarea>\n                    </div>\n                </div>\n                <div class="row">\n                    <div class="span2">\n                        <label>Select the type of file</label>\n                        <select name="type.id" class="input-block-level api-v2">\n                            ' +
((__t = ( selectOptions(App.dict.documentType, {selected: (obj ? obj["type.id"] : ''), noSelection: {id: '', name: '[Choose a File Type]'}}) )) == null ? '' : __t) +
'\n                        </select>\n                    </div>\n                    <div class="span2">\n                        <br>\n                        <button class="btn btn-primary" type="submit" id="upload" value="upload" data-loading-text="Uploading File ...">Upload File</button>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </form>\n</div> <!-- / row -->\n\n<div class="region-documents">\n\n</div>\n';

}
return __p
};

this["JST"]["visit/v2/interpreterassignment/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<td>' +
__e( obj.id ) +
'</td>\n<td>\n    <span data-timezone="' +
__e(obj.timeZone) +
'" data-format="dddd" class="format-date">' +
__e(obj.expectedStartDate) +
'</span>\n    <span data-timezone="' +
__e(obj.timeZone) +
'" class="format-datetime">' +
__e(obj.expectedStartDate) +
'</span>\n</td>\n<td>\n    <span data-start="expectedStartDate" data-end="expectedEndDate" class="format-duration">' +
__e(obj.expectedDurationHrs) +
' Hr(s)</span>\n</td>\n<td>' +
((__t = ( (obj.status ? bookingStatusFormatter(obj.status.id) : bookingStatusFormatter(null)) )) == null ? '' : __t) +
'</td>\n<td style="vertical-align: middle;">\n    <div class="interpreter control-group">\n        <div class="controls">\n        </div>\n    </div>\n</td>\n<td>' +
__e( (obj.teamSize > 1) ? "Team Size " + obj.teamSize + " (#" + obj.visit.id + ")" : "N/A" ) +
'</td>\n';

}
return __p
};

this["JST"]["visit/v2/interpreterassignmentlist/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h4>Assign Interpreter</h4>\n<table class="table">\n    <thead>\n    <tr>\n        <th>Job ID</th>\n        <th>Date</th>\n        <th>Duration</th>\n        <th>Status</th>\n        <th>Interpreter</th>\n        <th>Team Size</th>\n    </tr>\n    </thead>\n\n    <!-- want to insert collection children, here -->\n    <tbody></tbody>\n\n    <tfoot>\n    <tr>\n        <td colspan="6">some footer information</td>\n    </tr>\n    </tfoot>\n</table>\n';

}
return __p
};

this["JST"]["visit/v2/interpretervisitnotification/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="row-fluid">\n    <div class="span4 region-job-select">\n    </div>\n    <div class="span8 region-notification-list">\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["visit/v2/interpretervisits/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h1>Interpreters</h1>\n<div class="list-container"></div>\n<form class="well model-interpreter-visit-new" style="margin-top: 20px;">\n    <fieldset>\n        <legend>\n            Add Additional Interpreter\n            <a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Optionally add an additional interpreter to this job to make this a team based job and specify if the interpreter is billable or payable. You may chose a different language for additional interpreters." data-original-title="Additional Interpreter" tabindex="-1">?</a>\n        </legend>\n        <div class="row-fluid">\n            <div class="model-language control-group span6">\n                <label>\n                    <span class="control-label"><span>Language</span></span>\n                    <div class="controls">\n                    </div>\n                </label>\n            </div>\n            <span class="secured secured-comp secured-cont">\n                <div class="model-startDate secured secured-comp control-group span3">\n                    <label>\n                        <span class="control-label"><span>Payable</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Should this interpreter be paid for this job." data-original-title="Payable" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="checkbox" name="payable" checked />\n                        </div>\n                    </label>\n                </div>\n                <div class="model-startDate control-group span3">\n                    <label>\n                        <span class="control-label"><span>Billable</span>&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Should the customer be invoiced for this job." data-original-title="Billable" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <input type="checkbox" name="billable" checked />\n                        </div>\n                    </label>\n                </div>\n            </span>\n        </div>\n        <div class="row-fluid secured secured-comp">\n            <div class="span6">\n                <div class="model-notes control-group">\n                    <label>\n                        <span class="control-label">Notes&nbsp;<a href="javascript:void(0);" class="helptext badge badge-info" rel="popover"  data-content="Add any internal notes for this interpreter / job combination e.g. \'Non-billable observer slot reserved for Natalia\'" data-original-title="Notes" tabindex="-1">?</a></span>\n                        <div class="controls">\n                            <textarea rows="4" name="notes" class="input-block-level"></textarea>\n                        </div>\n                    </label>\n                </div>\n            </div>\n        </div>\n        <a href="#" class="widget-create btn btn-success pull-right">Add Interpreter</a>\n    </fieldset>\n</form>\n';

}
return __p
};

this["JST"]["visit/v2/interpretervisitselectitemview/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="well">\n    <a class="interpreter-visit-select-item" href="#">Interpreter Job #' +
__e(obj.id) +
'</a>\n</div>\n';

}
return __p
};

this["JST"]["voice/call-request"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal" id="myModal">\n    <div class="modal-header">\n        <a class="close" data-dismiss="modal">×</a>\n        <h3>Voice Request</h3>\n    </div>\n    <div class="modal-body">\n        <p>Please select the language below, confirm the details and click on "Request" to start a voice call.</p>\n        <div class="language-container">\n            Language\n        </div>\n        <div class="customer-container">\n\n        </div>\n        <div class="client-container">\n\n        </div>\n        <div class="location-container">\n\n        </div>\n    </div>\n    <div class="modal-footer">\n        <a href="#" class="btn btn-primary call-request">Request</a>\n        <a href="#" class="btn cancel">Cancel</a>\n    </div>\n</div>';

}
return __p
};

this["JST"]["voice/call"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="call h-100">\n\n    <div class="icon-container">\n        <i class="icon-phone fs-10"></i>\n    </div>\n\n    <div class="timer light-gray">\n\n    </div>\n\n    <div class="controls">\n        <button class="toggleMute" title="Toggle mute">\n            <i class="icon-white icon-microphone"></i>\n        </button>\n\n        <button class="hang finish-icon" title="Hang up">\n            <i class="icon-red icon-phone"></i>\n        </button>\n\n        <button class="toggleChat p-relative" title="Toggle chat panel">\n            <i class="icon-white icon-comments"></i>\n            <span class="badge badge-warning unread-count" style="display: none;"></span>\n        </button>\n    </div>\n\n</div>\n';

}
return __p
};

this["JST"]["voice/main"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="voice-call-container d-flex h-100">\n\n    <div class="voice flex-3">\n        <div id="voice-container" class="h-100"></div>\n    </div>\n\n    <div id="chat-container" style="display: none;"></div>\n\n</div>\n';

}
return __p
};

this["JST"]["voice/receive-call"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal incoming-call-modal" id="myModal">\n    <div class="voice">\n        <div class="modal-body">\n\n            <div class="row-fluid my-3">\n                <div class="span12 text-center">\n                    <i class="icon-phone glowing fs-7 light-gray"></i>\n                </div>\n                <div class="incoming-call-from">Incoming voice call from</div>\n                <div class="span12 caller-name fs-2 text-center">...</div>\n            </div>\n\n            <div class="row-fluid mt-4 mb-3 text-center">\n                <div class="span12">\n\n                    <div class="span6">\n                        <button class="round-button answer" href="#">\n                            <i class="icon-phone white"></i>\n                        </button>\n                        <div class="action">Answer</div>\n                    </div>\n\n                    <div class="span6">\n                        <button class="round-button hang" href="#">\n                            <i class="icon-phone hang-icon white"></i>\n                        </button>\n                        <div class="action">Decline</div>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["voice/retrycancel"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="modal-header">\n    <a class="close cmd-widget-cancel" data-dismiss="modal">×</a>\n    <h3>Request Error - Retry or Cancel</h3>\n</div>\n<div class="modal-body">\n    <p>There was an error processing the request: ' +
__e( obj.message ) +
'</p>\n    <p>Please click on "Retry" to try again immediately or "Cancel" to close the conference and try again later.</p>\n</div>\n<div class="modal-footer">\n    <a href="#" class="btn cmd-widget-retry">Retry</a>\n    <a href="#" class="btn cmd-widget-cancel">Cancel</a>\n</div>';

}
return __p
};

this["JST"]["voice/voice-landing"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '\n<div style="text-align: center; margin: 100px;">\n    <img src="' +
__e( companyConfig.logoUri.indexOf('http') == -1 ? App.config.context + companyConfig.logoUri : companyConfig.logoUri ) +
'" alt="' +
__e( company.name ) +
'"/>\n    <br/>\n    <h3>Voice Remote Interpretation</h3>\n</div>\n';

}
return __p
};

this["JST"]["worker/availability/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<div class="availability-grid">\n\n</div>\n<div class="availability-paginator">\n\n</div>';

}
return __p
};

this["JST"]["worker/mainlayout/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<!-- nav tabs -->\n<ul class="nav nav-tabs">\n    <li class="active"><a href="#workers-tab" data-toggle="tab">Workers</a></li>\n    <li><a href="#availability-tab" data-toggle="tab">Availability</a></li>\n    <li><a href="#vri-sessions-tab" data-toggle="tab">VRI Calls</a></li>\n    <li class="secured secured-uber_admin"><a href="#workspace-statistics-tab" data-toggle="tab">Workspace</a></li>\n</ul>\n<!-- / nav tabs -->\n\n<div class="tab-content">\n\n    <div class="tab-pane active" id="workers-tab">\n\n        <div class="portlet-header">\n            <div class="row-fluid">\n                <div class="span8">\n                    Workers\n                    <br/>\n                    <label class="control-label"><input type="checkbox" id="selectAll" class="selectAll" name="selectAll"/> All workers (with current filters applied)</label>\n                </div>\n                <div class="span4">\n                    <div class="filter pull-right">\n\n                    </div>\n                    &nbsp;\n                    <div class="bulk-actions pull-right">\n\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="grid">\n\n        </div>\n        <div class="row-fluid">\n            <div class="span2">\n                <div class="export"></div>\n            </div>\n            <div class="span8">\n                <div class="paginator"></div>\n            </div>\n        </div>\n\n    </div> <!-- / workers-tab -->\n\n    <div class="tab-pane" id="availability-tab">\n\n    </div>  <!-- / availability-tab -->\n\n    <div class="tab-pane" id="vri-sessions-tab">\n\n    </div>  <!-- / vri-sessions-tab -->\n\n\n    <div class="tab-pane" id="workspace-statistics-tab">\n\n    </div>  <!-- / workspace-tab -->\n\n</div> <!-- / tab-content\n\n';

}
return __p
};

this["JST"]["worker/statistics/cumulative"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div>\n    <div class="row-fluid">\n        <div class="span6">\n            <div>\n                <strong>Period</strong>: <span class="format-datetime">' +
__e( obj.startTime ) +
'</span> - <span class="format-datetime">' +
__e( obj.endTime ) +
'</span>\n            </div>\n            <dl class="dl-horizontal">\n                <dt># Accepted:</dt><dd>' +
__e( obj.reservationsAccepted ) +
'</dd>\n                <dt># Canceled:</dt><dd>' +
__e( obj.reservationsCanceled ) +
'</dd>\n                <dt># Created:</dt><dd>' +
__e( obj.reservationsCreated ) +
'</dd>\n                <dt># Rejected:</dt><dd>' +
__e( obj.reservationsRejected ) +
'</dd>\n                <dt># Rescinded:</dt><dd>' +
__e( obj.reservationsRescinded ) +
'</dd>\n                <dt># TimedOut:</dt><dd>' +
__e( obj.reservationsTimedOut ) +
'</dd>\n                <dt># Assigned:</dt><dd>' +
__e( obj.tasksAssigned ) +
'</dd>\n            </dl>\n        </div>\n        <div class="span6">\n            <div>\n                <strong>Activity Durations (Hours)</strong>\n            </div>\n            <table class="table">\n                <thead>\n                    <tr>\n                        <th>Activity</th><th>Min</th><th>Max</th><th>Avg</th><th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    ';
 _.each(obj.activityDurations, function(activity) { ;
__p += '\n                    <tr>\n                        <td>' +
__e( activity.friendlyName ) +
'</td>\n                        <td>' +
__e( (activity.min / (60 * 60)).toFixed(2) ) +
'</td>\n                        <td>' +
__e( (activity.max / (60 * 60)).toFixed(1) ) +
'</td>\n                        <td>' +
__e( (activity.avg / (60 * 60)).toFixed(1) ) +
'</td>\n                        <td>' +
__e( (activity.total / (60 * 60)).toFixed(1) ) +
'</td>\n                    </tr>\n                    ';
 }); ;
__p += '\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["worker/statistics/realtime"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
with (obj) {
__p += '<div>\n    <div class="row-fluid">\n        <div class="span6">\n            <div>\n                <strong>Period</strong>: <span class="format-datetime">' +
__e( obj.startTime ) +
'</span> - <span class="format-datetime">' +
__e( obj.endTime ) +
'</span>\n            </div>\n            <dl class="dl-horizontal">\n                <dt># Workers:</dt><dd>' +
__e( obj.totalWorkers ) +
'</dd>\n            </dl>\n        </div>\n        <div class="span6">\n            <div>\n                <strong>Activity Durations (Hours)</strong>\n            </div>\n            <table class="table">\n                <thead>\n                    <tr>\n                        <th>Activity</th><th>Min</th><th>Max</th><th>Avg</th><th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    ';
 _.each(obj.activityDurations, function(activity) { ;
__p += '\n                    <tr>\n                        <td>' +
__e( activity.friendlyName ) +
'</td>\n                        <td>' +
__e( (activity.min / (60 * 60)).toFixed(2) ) +
'</td>\n                        <td>' +
__e( (activity.max / (60 * 60)).toFixed(1) ) +
'</td>\n                        <td>' +
__e( (activity.avg / (60 * 60)).toFixed(1) ) +
'</td>\n                        <td>' +
__e( (activity.total / (60 * 60)).toFixed(1) ) +
'</td>\n                    </tr>\n                    ';
 }); ;
__p += '\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>';

}
return __p
};

this["JST"]["worker/workspacestatistics/cumulative"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Cumulative</h3>\n<div class="row-fluid">\n    <div class="span6">\n        <div>\n            <strong>Period</strong>: <span class="format-datetime">' +
__e( obj.startTime ) +
'</span> - <span class="format-datetime">' +
__e( obj.endTime ) +
'</span>\n        </div>\n        <h4>Reservations</h4>\n        <dl class="dl-horizontal">\n            <dt># Accepted:</dt><dd>' +
__e( obj.reservationsAccepted ) +
'</dd>\n            <dt># Canceled:</dt><dd>' +
__e( obj.reservationsCanceled ) +
'</dd>\n            <dt># Created:</dt><dd>' +
__e( obj.reservationsCreated ) +
'</dd>\n            <dt># Rejected:</dt><dd>' +
__e( obj.reservationsRejected ) +
'</dd>\n            <dt># Rescinded:</dt><dd>' +
__e( obj.reservationsRescinded ) +
'</dd>\n            <dt># TimedOut:</dt><dd>' +
__e( obj.reservationsTimedOut ) +
'</dd>\n        </dl>\n        <h4>Tasks</h4>\n        <dl class="dl-horizontal">\n            <dt># Tasks TimedOut:</dt><dd>' +
__e( obj.tasksTimedOutInWorkflow ) +
'</dd>\n            <dt># Tasks Created:</dt><dd>' +
__e( obj.tasksCreated ) +
'</dd>\n            <dt># Tasks Completed:</dt><dd>' +
__e( obj.tasksCompleted ) +
'</dd>\n            <dt># Tasks Canceled:</dt><dd>' +
__e( obj.tasksCanceled ) +
'</dd>\n            <dt># Tasks Deleted:</dt><dd>' +
__e( obj.tasksDeleted ) +
'</dd>\n            <dt># Avg. Acceptance:</dt><dd>' +
__e( obj.avgTaskAcceptanceTime ) +
'</dd>\n            <dt># Tasks Moved:</dt><dd>' +
__e( obj.tasksMoved ) +
'</dd>\n        </dl>\n    </div>\n    <div class="span6">\n        <div>\n            <strong>Durations (Secs)</strong>\n        </div>\n        <table class="table">\n            <thead>\n            <tr>\n                <th>Description</th><th>Min</th><th>Max</th><th>Avg</th><th>Total</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td>Wait Durations Until Accepted (Secs)</td>\n                <td>' +
__e( obj.waitDurationUntilAccepted.min ) +
'</td>\n                <td>' +
__e( obj.waitDurationUntilAccepted.max ) +
'</td>\n                <td>' +
__e( obj.waitDurationUntilAccepted.avg ) +
'</td>\n                <td>' +
__e( obj.waitDurationUntilAccepted.total ) +
'</td>\n            </tr>\n            <tr>\n                <td>Wait Durations Until Canceled (Secs)</td>\n                <td>' +
__e( obj.waitDurationUntilCanceled.min ) +
'</td>\n                <td>' +
__e( obj.waitDurationUntilCanceled.max ) +
'</td>\n                <td>' +
__e( obj.waitDurationUntilCanceled.avg ) +
'</td>\n                <td>' +
__e( obj.waitDurationUntilCanceled.total ) +
'</td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n';

}
return __p
};

this["JST"]["worker/workspacestatistics/realtime"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h3>Realtime</h3>\n<div class="row-fluid">\n    <div class="span6">\n        <div>\n            <strong>Period</strong>: <span class="format-datetime">' +
__e( obj.startTime ) +
'</span> - <span class="format-datetime">' +
__e( obj.endTime ) +
'</span>\n        </div>\n        <dl class="dl-horizontal">\n            <dt># Total Workers:</dt><dd>' +
__e( obj.totalWorkers ) +
'</dd>\n            <dt># Total Tasks:</dt><dd>' +
__e( obj.totalTasks ) +
'</dd>\n            <dt># Longest Task Waiting SID:</dt><dd>' +
__e( obj.longestTaskWaitingSid ) +
'</dd>\n            <dt># Longest Task Waiting Age:</dt><dd>' +
__e( obj.longestTaskWaitingAge ) +
'</dd>\n        </dl>\n    </div>\n    <div class="span6">\n        <div>\n            <strong>Tasks By Status</strong>\n        </div>\n        <table class="table">\n            <thead>\n            <tr>\n                <th>Status</th><th># Tasks</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr>\n                <td>Assigned</td>\n                <td>' +
__e( obj.tasksByStatus.assigned ) +
'</td>\n            </tr>\n            <tr>\n                <td>Pending</td>\n                <td>' +
__e( obj.tasksByStatus.pending ) +
'</td>\n            </tr>\n            <tr>\n                <td>Reserved</td>\n                <td>' +
__e( obj.tasksByStatus.reserved ) +
'</td>\n            </tr>\n            <tr>\n                <td>Wrapping</td>\n                <td>' +
__e( obj.tasksByStatus.wrapping ) +
'</td>\n            </tr>\n            </tbody>\n        </table>\n\n        <div>\n            <strong>Tasks By Priority</strong>\n            <div>' +
__e( JSON.stringify(obj.tasksByPriority) ) +
'</div>\n        </div>\n    </div>\n</div>\n\n';

}
return __p
};

this["JST"]["worker/workspacestatistics/show"] = function(obj) {
obj || (obj = {});
var __t, __p = '', __e = _.escape;
with (obj) {
__p += '<h2>Workspace</h2>\n<div class="workspace-cumulative"></div>\n\n<div class="workspace-realtime"></div>\n\n<h2>Workers</h2>\n<div class="workers-cumulative"></div>\n\n<div class="workers-realtime"></div>\n\n<h2>Workflow</h2>\n<div class="workflow-cumulative">N/A - Workflow / Workspace / Task Queue are 1-1</div>\n\n<div class="workflow-realtime">N/A - Workflow / Workspace / Task Queue are 1-1</div>\n\n<h2>Task Queue</h2>\n<div class="taskqueue-cumulative">N/A - Workflow / Workspace / Task Queue are 1-1</div>\n\n<div class="taskqueue-realtime">N/A - Workflow / Workspace / Task Queue are 1-1</div>\n';

}
return __p
};